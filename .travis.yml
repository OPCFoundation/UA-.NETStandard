language: csharp
mono: 6.8.0
dotnet: 2.2.100
os:
  - linux
  - osx
sudo: false
dist: xenial
osx_image: xcode9.4.1

addons:
  apt:
    sources:
    packages:
script: 
  - echo "========== restore all .Net Core samples ============"
  - dotnet restore "UA Core Library.sln"
  - dotnet restore "UA-NetStandard.sln"
  - dotnet restore "UA Global Discovery Server.sln"
  - dotnet restore "UA Quickstart Applications.sln"
#  - dotnet restore "SampleApplications/Workshop/Aggregation/UA Aggregation.sln"
  - dotnet restore "SampleApplications/Workshop/Reference/UA Reference.sln"
  - echo "========== build all .Net Core samples ============"
  - dotnet build -c Debug /p:NoHttps=true SampleApplications/Samples/NetCoreConsoleServer/NetCoreConsoleServer.csproj
  - dotnet build -c Release /p:NoHttps=true SampleApplications/Samples/NetCoreConsoleServer/NetCoreConsoleServer.csproj
  - dotnet build -c Debug SampleApplications/Samples/NetCoreConsoleClient/NetCoreConsoleClient.csproj
  - dotnet build -c Debug SampleApplications/Samples/NetCoreComplexClient/NetCoreComplexClient.csproj
  - dotnet build -c Debug SampleApplications/Samples/NetCoreConsoleServer/NetCoreConsoleServer.csproj
  - dotnet build -c Release SampleApplications/Samples/NetCoreConsoleClient/NetCoreConsoleClient.csproj
  - dotnet build -c Release SampleApplications/Samples/NetCoreComplexClient/NetCoreComplexClient.csproj
  - dotnet build -c Release SampleApplications/Samples/NetCoreConsoleServer/NetCoreConsoleServer.csproj
#  - dotnet build -c Debug SampleApplications/Workshop/Aggregation/ConsoleAggregationServer
#  - dotnet build -c Release SampleApplications/Workshop/Aggregation/ConsoleAggregationServer
  - dotnet build -c Debug SampleApplications/Workshop/Reference/ConsoleReferenceServer/ConsoleReferenceServer.csproj
  - dotnet build -c Release SampleApplications/Workshop/Reference/ConsoleReferenceServer/ConsoleReferenceServer.csproj
  - dotnet build -c Debug SampleApplications/Samples/GDS/ConsoleServer
  - dotnet build -c Release SampleApplications/Samples/GDS/ConsoleServer
  - dotnet build -c Debug SampleApplications/Samples/GDS/ClientTest
  - dotnet build -c Release SampleApplications/Samples/GDS/ClientTest
#  disable duplicate test cases now run in Azure pipelines
#  - dotnet build -c Debug Stack/Opc.Ua.Core.Tests
#  - dotnet build -c Release Stack/Opc.Ua.Core.Tests
#  - dotnet build -c Debug SampleApplications/SDK/Opc.Ua.Client.ComplexTypes.Tests
#  - dotnet build -c Release SampleApplications/SDK/Opc.Ua.Client.ComplexTypes.Tests
#  - dotnet test --no-build -v n -c Debug --filter TestCategory="GDSRegistrationAndPull" SampleApplications/Samples/GDS/ClientTest
#  - dotnet test --no-build -v n -c Release --filter TestCategory="GDSRegistrationAndPull" SampleApplications/Samples/GDS/ClientTest
#  - dotnet test --no-build -v n -c Debug --filter TestCategory="GDSPush" SampleApplications/Samples/GDS/ClientTest
#  - dotnet test --no-build -v n -c Release --filter TestCategory="GDSPush" SampleApplications/Samples/GDS/ClientTest
#  - dotnet test --no-build -v m -c Debug --filter TestCategory!="CertificateValidator" Stack/Opc.Ua.Core.Tests
#  - dotnet test --no-build -v m -c Release --filter TestCategory!="CertificateValidator" Stack/Opc.Ua.Core.Tests
#  - dotnet test --no-build -v n -c Release --filter TestCategory="CertificateValidator" Stack/Opc.Ua.Core.Tests
#  - dotnet test --no-build -v m -c Debug SampleApplications/SDK/Opc.Ua.Client.ComplexTypes.Tests
#  - dotnet test --no-build -v m -c Release SampleApplications/SDK/Opc.Ua.Client.ComplexTypes.Tests
  - echo "========== run .Net Core samples ============"
  - cd SampleApplications/Samples/NetCoreConsoleServer/bin/Debug/netcoreapp2.0
  - dotnet NetCoreConsoleServer.dll -t 10 -a
  - cd $TRAVIS_BUILD_DIR
  - ./testclientserver.sh
  - echo "========== build all Mono samples ============"
  - msbuild /t:restore SampleApplications/Workshop/Reference/ConsoleReferenceServer/MonoReferenceServer.csproj
  - msbuild /p:configuration=Debug /t:compile,publish SampleApplications/Workshop/Reference/ConsoleReferenceServer/MonoReferenceServer.csproj
  - msbuild /p:configuration=Release /t:compile,publish SampleApplications/Workshop/Reference/ConsoleReferenceServer/MonoReferenceServer.csproj
  - msbuild /t:restore SampleApplications/Samples/NetCoreConsoleServer/MonoConsoleServer.csproj
  - msbuild /p:configuration=Debug /t:compile,publish SampleApplications/Samples/NetCoreConsoleServer/MonoConsoleServer.csproj
  - msbuild /p:configuration=Release /t:compile,publish SampleApplications/Samples/NetCoreConsoleServer/MonoConsoleServer.csproj
  - msbuild /t:restore SampleApplications/Samples/NetCoreConsoleClient/MonoConsoleClient.csproj
  - msbuild /p:configuration=Debug /t:compile,publish SampleApplications/Samples/NetCoreConsoleClient/MonoConsoleClient.csproj
  - msbuild /p:configuration=Release /t:compile,publish SampleApplications/Samples/NetCoreConsoleClient/MonoConsoleClient.csproj
  - cd SampleApplications/Samples/NetCoreConsoleServer/bin/Debug/net462
  - mono MonoConsoleServer.exe -t 10 -a
  - cd $TRAVIS_BUILD_DIR
  - ./testmonoclientserver.sh

after_script:
  - echo "========== build done ============"

after_failure:
  - cd $HOME
  - cd .local/share/OPC
  - ls -R
  - cd Logs
  - cat GlobalDiscoveryTestClient.log.txt
  - cat ServerConfigurationPushTestClient.log.txt
  - cat GlobalDiscoveryTestServer.log.txt
  - cd $TRAVIS_BUILD_DIR


