/* ========================================================================
 * Copyright (c) 2005-2016 The OPC Foundation, Inc. All rights reserved.
 *
 * OPC Foundation MIT License 1.00
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * The complete license agreement can be found here:
 * http://opcfoundation.org/License/MIT/1.00/
 * ======================================================================*/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;

namespace Opc.Ua
{
    #region DataType Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class DataTypes
    {
        /// <summary>
        /// The identifier for the BaseDataType DataType.
        /// </summary>
        public const uint BaseDataType = 24;

        /// <summary>
        /// The identifier for the Number DataType.
        /// </summary>
        public const uint Number = 26;

        /// <summary>
        /// The identifier for the Integer DataType.
        /// </summary>
        public const uint Integer = 27;

        /// <summary>
        /// The identifier for the UInteger DataType.
        /// </summary>
        public const uint UInteger = 28;

        /// <summary>
        /// The identifier for the Enumeration DataType.
        /// </summary>
        public const uint Enumeration = 29;

        /// <summary>
        /// The identifier for the Boolean DataType.
        /// </summary>
        public const uint Boolean = 1;

        /// <summary>
        /// The identifier for the SByte DataType.
        /// </summary>
        public const uint SByte = 2;

        /// <summary>
        /// The identifier for the Byte DataType.
        /// </summary>
        public const uint Byte = 3;

        /// <summary>
        /// The identifier for the Int16 DataType.
        /// </summary>
        public const uint Int16 = 4;

        /// <summary>
        /// The identifier for the UInt16 DataType.
        /// </summary>
        public const uint UInt16 = 5;

        /// <summary>
        /// The identifier for the Int32 DataType.
        /// </summary>
        public const uint Int32 = 6;

        /// <summary>
        /// The identifier for the UInt32 DataType.
        /// </summary>
        public const uint UInt32 = 7;

        /// <summary>
        /// The identifier for the Int64 DataType.
        /// </summary>
        public const uint Int64 = 8;

        /// <summary>
        /// The identifier for the UInt64 DataType.
        /// </summary>
        public const uint UInt64 = 9;

        /// <summary>
        /// The identifier for the Float DataType.
        /// </summary>
        public const uint Float = 10;

        /// <summary>
        /// The identifier for the Double DataType.
        /// </summary>
        public const uint Double = 11;

        /// <summary>
        /// The identifier for the String DataType.
        /// </summary>
        public const uint String = 12;

        /// <summary>
        /// The identifier for the DateTime DataType.
        /// </summary>
        public const uint DateTime = 13;

        /// <summary>
        /// The identifier for the Guid DataType.
        /// </summary>
        public const uint Guid = 14;

        /// <summary>
        /// The identifier for the ByteString DataType.
        /// </summary>
        public const uint ByteString = 15;

        /// <summary>
        /// The identifier for the XmlElement DataType.
        /// </summary>
        public const uint XmlElement = 16;

        /// <summary>
        /// The identifier for the NodeId DataType.
        /// </summary>
        public const uint NodeId = 17;

        /// <summary>
        /// The identifier for the ExpandedNodeId DataType.
        /// </summary>
        public const uint ExpandedNodeId = 18;

        /// <summary>
        /// The identifier for the StatusCode DataType.
        /// </summary>
        public const uint StatusCode = 19;

        /// <summary>
        /// The identifier for the QualifiedName DataType.
        /// </summary>
        public const uint QualifiedName = 20;

        /// <summary>
        /// The identifier for the LocalizedText DataType.
        /// </summary>
        public const uint LocalizedText = 21;

        /// <summary>
        /// The identifier for the Structure DataType.
        /// </summary>
        public const uint Structure = 22;

        /// <summary>
        /// The identifier for the DataValue DataType.
        /// </summary>
        public const uint DataValue = 23;

        /// <summary>
        /// The identifier for the DiagnosticInfo DataType.
        /// </summary>
        public const uint DiagnosticInfo = 25;

        /// <summary>
        /// The identifier for the Image DataType.
        /// </summary>
        public const uint Image = 30;

        /// <summary>
        /// The identifier for the Decimal128 DataType.
        /// </summary>
        public const uint Decimal128 = 121;

        /// <summary>
        /// The identifier for the NamingRuleType DataType.
        /// </summary>
        public const uint NamingRuleType = 120;

        /// <summary>
        /// The identifier for the ImageBMP DataType.
        /// </summary>
        public const uint ImageBMP = 2000;

        /// <summary>
        /// The identifier for the ImageGIF DataType.
        /// </summary>
        public const uint ImageGIF = 2001;

        /// <summary>
        /// The identifier for the ImageJPG DataType.
        /// </summary>
        public const uint ImageJPG = 2002;

        /// <summary>
        /// The identifier for the ImagePNG DataType.
        /// </summary>
        public const uint ImagePNG = 2003;

        /// <summary>
        /// The identifier for the BitFieldMaskDataType DataType.
        /// </summary>
        public const uint BitFieldMaskDataType = 11737;

        /// <summary>
        /// The identifier for the OpenFileMode DataType.
        /// </summary>
        public const uint OpenFileMode = 11939;

        /// <summary>
        /// The identifier for the TrustListMasks DataType.
        /// </summary>
        public const uint TrustListMasks = 12552;

        /// <summary>
        /// The identifier for the TrustListDataType DataType.
        /// </summary>
        public const uint TrustListDataType = 12554;

        /// <summary>
        /// The identifier for the DataTypeDefinition DataType.
        /// </summary>
        public const uint DataTypeDefinition = 14526;

        /// <summary>
        /// The identifier for the StructureType DataType.
        /// </summary>
        public const uint StructureType = 14527;

        /// <summary>
        /// The identifier for the StructureDefinition DataType.
        /// </summary>
        public const uint StructureDefinition = 14529;

        /// <summary>
        /// The identifier for the EnumDefinition DataType.
        /// </summary>
        public const uint EnumDefinition = 14530;

        /// <summary>
        /// The identifier for the StructureField DataType.
        /// </summary>
        public const uint StructureField = 14531;

        /// <summary>
        /// The identifier for the IdentityCriteriaType DataType.
        /// </summary>
        public const uint IdentityCriteriaType = 15632;

        /// <summary>
        /// The identifier for the IdentityMappingRuleType DataType.
        /// </summary>
        public const uint IdentityMappingRuleType = 15634;

        /// <summary>
        /// The identifier for the ApplicationPermissionRuleType DataType.
        /// </summary>
        public const uint ApplicationPermissionRuleType = 15635;

        /// <summary>
        /// The identifier for the ConfigurationVersionDataType DataType.
        /// </summary>
        public const uint ConfigurationVersionDataType = 14593;

        /// <summary>
        /// The identifier for the DataSetMetaDataType DataType.
        /// </summary>
        public const uint DataSetMetaDataType = 14523;

        /// <summary>
        /// The identifier for the DataSetFieldFlags DataType.
        /// </summary>
        public const uint DataSetFieldFlags = 15904;

        /// <summary>
        /// The identifier for the FieldMetaData DataType.
        /// </summary>
        public const uint FieldMetaData = 14524;

        /// <summary>
        /// The identifier for the DataTypeDescription DataType.
        /// </summary>
        public const uint DataTypeDescription = 14525;

        /// <summary>
        /// The identifier for the StructureDescription DataType.
        /// </summary>
        public const uint StructureDescription = 15487;

        /// <summary>
        /// The identifier for the EnumDescription DataType.
        /// </summary>
        public const uint EnumDescription = 15488;

        /// <summary>
        /// The identifier for the KeyValuePair DataType.
        /// </summary>
        public const uint KeyValuePair = 14533;

        /// <summary>
        /// The identifier for the DataSetContentMask DataType.
        /// </summary>
        public const uint DataSetContentMask = 15532;

        /// <summary>
        /// The identifier for the PublishedVariableDataType DataType.
        /// </summary>
        public const uint PublishedVariableDataType = 14273;

        /// <summary>
        /// The identifier for the DataConnectionDataType DataType.
        /// </summary>
        public const uint DataConnectionDataType = 14744;

        /// <summary>
        /// The identifier for the OverrideValueHandling DataType.
        /// </summary>
        public const uint OverrideValueHandling = 15874;

        /// <summary>
        /// The identifier for the PubSubState DataType.
        /// </summary>
        public const uint PubSubState = 14647;

        /// <summary>
        /// The identifier for the IdType DataType.
        /// </summary>
        public const uint IdType = 256;

        /// <summary>
        /// The identifier for the NodeClass DataType.
        /// </summary>
        public const uint NodeClass = 257;

        /// <summary>
        /// The identifier for the Node DataType.
        /// </summary>
        public const uint Node = 258;

        /// <summary>
        /// The identifier for the InstanceNode DataType.
        /// </summary>
        public const uint InstanceNode = 11879;

        /// <summary>
        /// The identifier for the TypeNode DataType.
        /// </summary>
        public const uint TypeNode = 11880;

        /// <summary>
        /// The identifier for the ObjectNode DataType.
        /// </summary>
        public const uint ObjectNode = 261;

        /// <summary>
        /// The identifier for the ObjectTypeNode DataType.
        /// </summary>
        public const uint ObjectTypeNode = 264;

        /// <summary>
        /// The identifier for the VariableNode DataType.
        /// </summary>
        public const uint VariableNode = 267;

        /// <summary>
        /// The identifier for the VariableTypeNode DataType.
        /// </summary>
        public const uint VariableTypeNode = 270;

        /// <summary>
        /// The identifier for the ReferenceTypeNode DataType.
        /// </summary>
        public const uint ReferenceTypeNode = 273;

        /// <summary>
        /// The identifier for the MethodNode DataType.
        /// </summary>
        public const uint MethodNode = 276;

        /// <summary>
        /// The identifier for the ViewNode DataType.
        /// </summary>
        public const uint ViewNode = 279;

        /// <summary>
        /// The identifier for the DataTypeNode DataType.
        /// </summary>
        public const uint DataTypeNode = 282;

        /// <summary>
        /// The identifier for the ReferenceNode DataType.
        /// </summary>
        public const uint ReferenceNode = 285;

        /// <summary>
        /// The identifier for the Argument DataType.
        /// </summary>
        public const uint Argument = 296;

        /// <summary>
        /// The identifier for the EnumValueType DataType.
        /// </summary>
        public const uint EnumValueType = 7594;

        /// <summary>
        /// The identifier for the EnumField DataType.
        /// </summary>
        public const uint EnumField = 14532;

        /// <summary>
        /// The identifier for the OptionSet DataType.
        /// </summary>
        public const uint OptionSet = 12755;

        /// <summary>
        /// The identifier for the Union DataType.
        /// </summary>
        public const uint Union = 12756;

        /// <summary>
        /// The identifier for the NormalizedString DataType.
        /// </summary>
        public const uint NormalizedString = 12877;

        /// <summary>
        /// The identifier for the DecimalString DataType.
        /// </summary>
        public const uint DecimalString = 12878;

        /// <summary>
        /// The identifier for the DurationString DataType.
        /// </summary>
        public const uint DurationString = 12879;

        /// <summary>
        /// The identifier for the TimeString DataType.
        /// </summary>
        public const uint TimeString = 12880;

        /// <summary>
        /// The identifier for the DateString DataType.
        /// </summary>
        public const uint DateString = 12881;

        /// <summary>
        /// The identifier for the Duration DataType.
        /// </summary>
        public const uint Duration = 290;

        /// <summary>
        /// The identifier for the UtcTime DataType.
        /// </summary>
        public const uint UtcTime = 294;

        /// <summary>
        /// The identifier for the LocaleId DataType.
        /// </summary>
        public const uint LocaleId = 295;

        /// <summary>
        /// The identifier for the TimeZoneDataType DataType.
        /// </summary>
        public const uint TimeZoneDataType = 8912;

        /// <summary>
        /// The identifier for the IntegerId DataType.
        /// </summary>
        public const uint IntegerId = 288;

        /// <summary>
        /// The identifier for the ApplicationType DataType.
        /// </summary>
        public const uint ApplicationType = 307;

        /// <summary>
        /// The identifier for the ApplicationDescription DataType.
        /// </summary>
        public const uint ApplicationDescription = 308;

        /// <summary>
        /// The identifier for the RequestHeader DataType.
        /// </summary>
        public const uint RequestHeader = 389;

        /// <summary>
        /// The identifier for the ResponseHeader DataType.
        /// </summary>
        public const uint ResponseHeader = 392;

        /// <summary>
        /// The identifier for the ServiceFault DataType.
        /// </summary>
        public const uint ServiceFault = 395;

        /// <summary>
        /// The identifier for the SessionLessServiceMessageType DataType.
        /// </summary>
        public const uint SessionLessServiceMessageType = 15901;

        /// <summary>
        /// The identifier for the FindServersRequest DataType.
        /// </summary>
        public const uint FindServersRequest = 420;

        /// <summary>
        /// The identifier for the FindServersResponse DataType.
        /// </summary>
        public const uint FindServersResponse = 423;

        /// <summary>
        /// The identifier for the ServerOnNetwork DataType.
        /// </summary>
        public const uint ServerOnNetwork = 12189;

        /// <summary>
        /// The identifier for the FindServersOnNetworkRequest DataType.
        /// </summary>
        public const uint FindServersOnNetworkRequest = 12190;

        /// <summary>
        /// The identifier for the FindServersOnNetworkResponse DataType.
        /// </summary>
        public const uint FindServersOnNetworkResponse = 12191;

        /// <summary>
        /// The identifier for the ApplicationInstanceCertificate DataType.
        /// </summary>
        public const uint ApplicationInstanceCertificate = 311;

        /// <summary>
        /// The identifier for the MessageSecurityMode DataType.
        /// </summary>
        public const uint MessageSecurityMode = 302;

        /// <summary>
        /// The identifier for the UserTokenType DataType.
        /// </summary>
        public const uint UserTokenType = 303;

        /// <summary>
        /// The identifier for the UserTokenPolicy DataType.
        /// </summary>
        public const uint UserTokenPolicy = 304;

        /// <summary>
        /// The identifier for the EndpointDescription DataType.
        /// </summary>
        public const uint EndpointDescription = 312;

        /// <summary>
        /// The identifier for the GetEndpointsRequest DataType.
        /// </summary>
        public const uint GetEndpointsRequest = 426;

        /// <summary>
        /// The identifier for the GetEndpointsResponse DataType.
        /// </summary>
        public const uint GetEndpointsResponse = 429;

        /// <summary>
        /// The identifier for the RegisteredServer DataType.
        /// </summary>
        public const uint RegisteredServer = 432;

        /// <summary>
        /// The identifier for the RegisterServerRequest DataType.
        /// </summary>
        public const uint RegisterServerRequest = 435;

        /// <summary>
        /// The identifier for the RegisterServerResponse DataType.
        /// </summary>
        public const uint RegisterServerResponse = 438;

        /// <summary>
        /// The identifier for the DiscoveryConfiguration DataType.
        /// </summary>
        public const uint DiscoveryConfiguration = 12890;

        /// <summary>
        /// The identifier for the MdnsDiscoveryConfiguration DataType.
        /// </summary>
        public const uint MdnsDiscoveryConfiguration = 12891;

        /// <summary>
        /// The identifier for the RegisterServer2Request DataType.
        /// </summary>
        public const uint RegisterServer2Request = 12193;

        /// <summary>
        /// The identifier for the RegisterServer2Response DataType.
        /// </summary>
        public const uint RegisterServer2Response = 12194;

        /// <summary>
        /// The identifier for the SecurityTokenRequestType DataType.
        /// </summary>
        public const uint SecurityTokenRequestType = 315;

        /// <summary>
        /// The identifier for the ChannelSecurityToken DataType.
        /// </summary>
        public const uint ChannelSecurityToken = 441;

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest DataType.
        /// </summary>
        public const uint OpenSecureChannelRequest = 444;

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse DataType.
        /// </summary>
        public const uint OpenSecureChannelResponse = 447;

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest DataType.
        /// </summary>
        public const uint CloseSecureChannelRequest = 450;

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse DataType.
        /// </summary>
        public const uint CloseSecureChannelResponse = 453;

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate DataType.
        /// </summary>
        public const uint SignedSoftwareCertificate = 344;

        /// <summary>
        /// The identifier for the SessionAuthenticationToken DataType.
        /// </summary>
        public const uint SessionAuthenticationToken = 388;

        /// <summary>
        /// The identifier for the SignatureData DataType.
        /// </summary>
        public const uint SignatureData = 456;

        /// <summary>
        /// The identifier for the CreateSessionRequest DataType.
        /// </summary>
        public const uint CreateSessionRequest = 459;

        /// <summary>
        /// The identifier for the CreateSessionResponse DataType.
        /// </summary>
        public const uint CreateSessionResponse = 462;

        /// <summary>
        /// The identifier for the UserIdentityToken DataType.
        /// </summary>
        public const uint UserIdentityToken = 316;

        /// <summary>
        /// The identifier for the AnonymousIdentityToken DataType.
        /// </summary>
        public const uint AnonymousIdentityToken = 319;

        /// <summary>
        /// The identifier for the UserNameIdentityToken DataType.
        /// </summary>
        public const uint UserNameIdentityToken = 322;

        /// <summary>
        /// The identifier for the X509IdentityToken DataType.
        /// </summary>
        public const uint X509IdentityToken = 325;

        /// <summary>
        /// The identifier for the IssuedIdentityToken DataType.
        /// </summary>
        public const uint IssuedIdentityToken = 938;

        /// <summary>
        /// The identifier for the ActivateSessionRequest DataType.
        /// </summary>
        public const uint ActivateSessionRequest = 465;

        /// <summary>
        /// The identifier for the ActivateSessionResponse DataType.
        /// </summary>
        public const uint ActivateSessionResponse = 468;

        /// <summary>
        /// The identifier for the CloseSessionRequest DataType.
        /// </summary>
        public const uint CloseSessionRequest = 471;

        /// <summary>
        /// The identifier for the CloseSessionResponse DataType.
        /// </summary>
        public const uint CloseSessionResponse = 474;

        /// <summary>
        /// The identifier for the CancelRequest DataType.
        /// </summary>
        public const uint CancelRequest = 477;

        /// <summary>
        /// The identifier for the CancelResponse DataType.
        /// </summary>
        public const uint CancelResponse = 480;

        /// <summary>
        /// The identifier for the NodeAttributesMask DataType.
        /// </summary>
        public const uint NodeAttributesMask = 348;

        /// <summary>
        /// The identifier for the NodeAttributes DataType.
        /// </summary>
        public const uint NodeAttributes = 349;

        /// <summary>
        /// The identifier for the ObjectAttributes DataType.
        /// </summary>
        public const uint ObjectAttributes = 352;

        /// <summary>
        /// The identifier for the VariableAttributes DataType.
        /// </summary>
        public const uint VariableAttributes = 355;

        /// <summary>
        /// The identifier for the MethodAttributes DataType.
        /// </summary>
        public const uint MethodAttributes = 358;

        /// <summary>
        /// The identifier for the ObjectTypeAttributes DataType.
        /// </summary>
        public const uint ObjectTypeAttributes = 361;

        /// <summary>
        /// The identifier for the VariableTypeAttributes DataType.
        /// </summary>
        public const uint VariableTypeAttributes = 364;

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes DataType.
        /// </summary>
        public const uint ReferenceTypeAttributes = 367;

        /// <summary>
        /// The identifier for the DataTypeAttributes DataType.
        /// </summary>
        public const uint DataTypeAttributes = 370;

        /// <summary>
        /// The identifier for the ViewAttributes DataType.
        /// </summary>
        public const uint ViewAttributes = 373;

        /// <summary>
        /// The identifier for the AddNodesItem DataType.
        /// </summary>
        public const uint AddNodesItem = 376;

        /// <summary>
        /// The identifier for the AddNodesResult DataType.
        /// </summary>
        public const uint AddNodesResult = 483;

        /// <summary>
        /// The identifier for the AddNodesRequest DataType.
        /// </summary>
        public const uint AddNodesRequest = 486;

        /// <summary>
        /// The identifier for the AddNodesResponse DataType.
        /// </summary>
        public const uint AddNodesResponse = 489;

        /// <summary>
        /// The identifier for the AddReferencesItem DataType.
        /// </summary>
        public const uint AddReferencesItem = 379;

        /// <summary>
        /// The identifier for the AddReferencesRequest DataType.
        /// </summary>
        public const uint AddReferencesRequest = 492;

        /// <summary>
        /// The identifier for the AddReferencesResponse DataType.
        /// </summary>
        public const uint AddReferencesResponse = 495;

        /// <summary>
        /// The identifier for the DeleteNodesItem DataType.
        /// </summary>
        public const uint DeleteNodesItem = 382;

        /// <summary>
        /// The identifier for the DeleteNodesRequest DataType.
        /// </summary>
        public const uint DeleteNodesRequest = 498;

        /// <summary>
        /// The identifier for the DeleteNodesResponse DataType.
        /// </summary>
        public const uint DeleteNodesResponse = 501;

        /// <summary>
        /// The identifier for the DeleteReferencesItem DataType.
        /// </summary>
        public const uint DeleteReferencesItem = 385;

        /// <summary>
        /// The identifier for the DeleteReferencesRequest DataType.
        /// </summary>
        public const uint DeleteReferencesRequest = 504;

        /// <summary>
        /// The identifier for the DeleteReferencesResponse DataType.
        /// </summary>
        public const uint DeleteReferencesResponse = 507;

        /// <summary>
        /// The identifier for the AttributeWriteMask DataType.
        /// </summary>
        public const uint AttributeWriteMask = 347;

        /// <summary>
        /// The identifier for the BrowseDirection DataType.
        /// </summary>
        public const uint BrowseDirection = 510;

        /// <summary>
        /// The identifier for the ViewDescription DataType.
        /// </summary>
        public const uint ViewDescription = 511;

        /// <summary>
        /// The identifier for the BrowseDescription DataType.
        /// </summary>
        public const uint BrowseDescription = 514;

        /// <summary>
        /// The identifier for the BrowseResultMask DataType.
        /// </summary>
        public const uint BrowseResultMask = 517;

        /// <summary>
        /// The identifier for the ReferenceDescription DataType.
        /// </summary>
        public const uint ReferenceDescription = 518;

        /// <summary>
        /// The identifier for the ContinuationPoint DataType.
        /// </summary>
        public const uint ContinuationPoint = 521;

        /// <summary>
        /// The identifier for the BrowseResult DataType.
        /// </summary>
        public const uint BrowseResult = 522;

        /// <summary>
        /// The identifier for the BrowseRequest DataType.
        /// </summary>
        public const uint BrowseRequest = 525;

        /// <summary>
        /// The identifier for the BrowseResponse DataType.
        /// </summary>
        public const uint BrowseResponse = 528;

        /// <summary>
        /// The identifier for the BrowseNextRequest DataType.
        /// </summary>
        public const uint BrowseNextRequest = 531;

        /// <summary>
        /// The identifier for the BrowseNextResponse DataType.
        /// </summary>
        public const uint BrowseNextResponse = 534;

        /// <summary>
        /// The identifier for the RelativePathElement DataType.
        /// </summary>
        public const uint RelativePathElement = 537;

        /// <summary>
        /// The identifier for the RelativePath DataType.
        /// </summary>
        public const uint RelativePath = 540;

        /// <summary>
        /// The identifier for the BrowsePath DataType.
        /// </summary>
        public const uint BrowsePath = 543;

        /// <summary>
        /// The identifier for the BrowsePathTarget DataType.
        /// </summary>
        public const uint BrowsePathTarget = 546;

        /// <summary>
        /// The identifier for the BrowsePathResult DataType.
        /// </summary>
        public const uint BrowsePathResult = 549;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest DataType.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsRequest = 552;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse DataType.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsResponse = 555;

        /// <summary>
        /// The identifier for the RegisterNodesRequest DataType.
        /// </summary>
        public const uint RegisterNodesRequest = 558;

        /// <summary>
        /// The identifier for the RegisterNodesResponse DataType.
        /// </summary>
        public const uint RegisterNodesResponse = 561;

        /// <summary>
        /// The identifier for the UnregisterNodesRequest DataType.
        /// </summary>
        public const uint UnregisterNodesRequest = 564;

        /// <summary>
        /// The identifier for the UnregisterNodesResponse DataType.
        /// </summary>
        public const uint UnregisterNodesResponse = 567;

        /// <summary>
        /// The identifier for the Counter DataType.
        /// </summary>
        public const uint Counter = 289;

        /// <summary>
        /// The identifier for the NumericRange DataType.
        /// </summary>
        public const uint NumericRange = 291;

        /// <summary>
        /// The identifier for the Time DataType.
        /// </summary>
        public const uint Time = 292;

        /// <summary>
        /// The identifier for the Date DataType.
        /// </summary>
        public const uint Date = 293;

        /// <summary>
        /// The identifier for the EndpointConfiguration DataType.
        /// </summary>
        public const uint EndpointConfiguration = 331;

        /// <summary>
        /// The identifier for the QueryDataDescription DataType.
        /// </summary>
        public const uint QueryDataDescription = 570;

        /// <summary>
        /// The identifier for the NodeTypeDescription DataType.
        /// </summary>
        public const uint NodeTypeDescription = 573;

        /// <summary>
        /// The identifier for the FilterOperator DataType.
        /// </summary>
        public const uint FilterOperator = 576;

        /// <summary>
        /// The identifier for the QueryDataSet DataType.
        /// </summary>
        public const uint QueryDataSet = 577;

        /// <summary>
        /// The identifier for the NodeReference DataType.
        /// </summary>
        public const uint NodeReference = 580;

        /// <summary>
        /// The identifier for the ContentFilterElement DataType.
        /// </summary>
        public const uint ContentFilterElement = 583;

        /// <summary>
        /// The identifier for the ContentFilter DataType.
        /// </summary>
        public const uint ContentFilter = 586;

        /// <summary>
        /// The identifier for the FilterOperand DataType.
        /// </summary>
        public const uint FilterOperand = 589;

        /// <summary>
        /// The identifier for the ElementOperand DataType.
        /// </summary>
        public const uint ElementOperand = 592;

        /// <summary>
        /// The identifier for the LiteralOperand DataType.
        /// </summary>
        public const uint LiteralOperand = 595;

        /// <summary>
        /// The identifier for the AttributeOperand DataType.
        /// </summary>
        public const uint AttributeOperand = 598;

        /// <summary>
        /// The identifier for the SimpleAttributeOperand DataType.
        /// </summary>
        public const uint SimpleAttributeOperand = 601;

        /// <summary>
        /// The identifier for the ContentFilterElementResult DataType.
        /// </summary>
        public const uint ContentFilterElementResult = 604;

        /// <summary>
        /// The identifier for the ContentFilterResult DataType.
        /// </summary>
        public const uint ContentFilterResult = 607;

        /// <summary>
        /// The identifier for the ParsingResult DataType.
        /// </summary>
        public const uint ParsingResult = 610;

        /// <summary>
        /// The identifier for the QueryFirstRequest DataType.
        /// </summary>
        public const uint QueryFirstRequest = 613;

        /// <summary>
        /// The identifier for the QueryFirstResponse DataType.
        /// </summary>
        public const uint QueryFirstResponse = 616;

        /// <summary>
        /// The identifier for the QueryNextRequest DataType.
        /// </summary>
        public const uint QueryNextRequest = 619;

        /// <summary>
        /// The identifier for the QueryNextResponse DataType.
        /// </summary>
        public const uint QueryNextResponse = 622;

        /// <summary>
        /// The identifier for the TimestampsToReturn DataType.
        /// </summary>
        public const uint TimestampsToReturn = 625;

        /// <summary>
        /// The identifier for the ReadValueId DataType.
        /// </summary>
        public const uint ReadValueId = 626;

        /// <summary>
        /// The identifier for the ReadRequest DataType.
        /// </summary>
        public const uint ReadRequest = 629;

        /// <summary>
        /// The identifier for the ReadResponse DataType.
        /// </summary>
        public const uint ReadResponse = 632;

        /// <summary>
        /// The identifier for the HistoryReadValueId DataType.
        /// </summary>
        public const uint HistoryReadValueId = 635;

        /// <summary>
        /// The identifier for the HistoryReadResult DataType.
        /// </summary>
        public const uint HistoryReadResult = 638;

        /// <summary>
        /// The identifier for the HistoryReadDetails DataType.
        /// </summary>
        public const uint HistoryReadDetails = 641;

        /// <summary>
        /// The identifier for the ReadEventDetails DataType.
        /// </summary>
        public const uint ReadEventDetails = 644;

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails DataType.
        /// </summary>
        public const uint ReadRawModifiedDetails = 647;

        /// <summary>
        /// The identifier for the ReadProcessedDetails DataType.
        /// </summary>
        public const uint ReadProcessedDetails = 650;

        /// <summary>
        /// The identifier for the ReadAtTimeDetails DataType.
        /// </summary>
        public const uint ReadAtTimeDetails = 653;

        /// <summary>
        /// The identifier for the HistoryData DataType.
        /// </summary>
        public const uint HistoryData = 656;

        /// <summary>
        /// The identifier for the ModificationInfo DataType.
        /// </summary>
        public const uint ModificationInfo = 11216;

        /// <summary>
        /// The identifier for the HistoryModifiedData DataType.
        /// </summary>
        public const uint HistoryModifiedData = 11217;

        /// <summary>
        /// The identifier for the HistoryEvent DataType.
        /// </summary>
        public const uint HistoryEvent = 659;

        /// <summary>
        /// The identifier for the HistoryReadRequest DataType.
        /// </summary>
        public const uint HistoryReadRequest = 662;

        /// <summary>
        /// The identifier for the HistoryReadResponse DataType.
        /// </summary>
        public const uint HistoryReadResponse = 665;

        /// <summary>
        /// The identifier for the WriteValue DataType.
        /// </summary>
        public const uint WriteValue = 668;

        /// <summary>
        /// The identifier for the WriteRequest DataType.
        /// </summary>
        public const uint WriteRequest = 671;

        /// <summary>
        /// The identifier for the WriteResponse DataType.
        /// </summary>
        public const uint WriteResponse = 674;

        /// <summary>
        /// The identifier for the HistoryUpdateDetails DataType.
        /// </summary>
        public const uint HistoryUpdateDetails = 677;

        /// <summary>
        /// The identifier for the HistoryUpdateType DataType.
        /// </summary>
        public const uint HistoryUpdateType = 11234;

        /// <summary>
        /// The identifier for the PerformUpdateType DataType.
        /// </summary>
        public const uint PerformUpdateType = 11293;

        /// <summary>
        /// The identifier for the UpdateDataDetails DataType.
        /// </summary>
        public const uint UpdateDataDetails = 680;

        /// <summary>
        /// The identifier for the UpdateStructureDataDetails DataType.
        /// </summary>
        public const uint UpdateStructureDataDetails = 11295;

        /// <summary>
        /// The identifier for the UpdateEventDetails DataType.
        /// </summary>
        public const uint UpdateEventDetails = 683;

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails DataType.
        /// </summary>
        public const uint DeleteRawModifiedDetails = 686;

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails DataType.
        /// </summary>
        public const uint DeleteAtTimeDetails = 689;

        /// <summary>
        /// The identifier for the DeleteEventDetails DataType.
        /// </summary>
        public const uint DeleteEventDetails = 692;

        /// <summary>
        /// The identifier for the HistoryUpdateResult DataType.
        /// </summary>
        public const uint HistoryUpdateResult = 695;

        /// <summary>
        /// The identifier for the HistoryUpdateRequest DataType.
        /// </summary>
        public const uint HistoryUpdateRequest = 698;

        /// <summary>
        /// The identifier for the HistoryUpdateResponse DataType.
        /// </summary>
        public const uint HistoryUpdateResponse = 701;

        /// <summary>
        /// The identifier for the CallMethodRequest DataType.
        /// </summary>
        public const uint CallMethodRequest = 704;

        /// <summary>
        /// The identifier for the CallMethodResult DataType.
        /// </summary>
        public const uint CallMethodResult = 707;

        /// <summary>
        /// The identifier for the CallRequest DataType.
        /// </summary>
        public const uint CallRequest = 710;

        /// <summary>
        /// The identifier for the CallResponse DataType.
        /// </summary>
        public const uint CallResponse = 713;

        /// <summary>
        /// The identifier for the MonitoringMode DataType.
        /// </summary>
        public const uint MonitoringMode = 716;

        /// <summary>
        /// The identifier for the DataChangeTrigger DataType.
        /// </summary>
        public const uint DataChangeTrigger = 717;

        /// <summary>
        /// The identifier for the DeadbandType DataType.
        /// </summary>
        public const uint DeadbandType = 718;

        /// <summary>
        /// The identifier for the MonitoringFilter DataType.
        /// </summary>
        public const uint MonitoringFilter = 719;

        /// <summary>
        /// The identifier for the DataChangeFilter DataType.
        /// </summary>
        public const uint DataChangeFilter = 722;

        /// <summary>
        /// The identifier for the EventFilter DataType.
        /// </summary>
        public const uint EventFilter = 725;

        /// <summary>
        /// The identifier for the AggregateConfiguration DataType.
        /// </summary>
        public const uint AggregateConfiguration = 948;

        /// <summary>
        /// The identifier for the AggregateFilter DataType.
        /// </summary>
        public const uint AggregateFilter = 728;

        /// <summary>
        /// The identifier for the MonitoringFilterResult DataType.
        /// </summary>
        public const uint MonitoringFilterResult = 731;

        /// <summary>
        /// The identifier for the EventFilterResult DataType.
        /// </summary>
        public const uint EventFilterResult = 734;

        /// <summary>
        /// The identifier for the AggregateFilterResult DataType.
        /// </summary>
        public const uint AggregateFilterResult = 737;

        /// <summary>
        /// The identifier for the MonitoringParameters DataType.
        /// </summary>
        public const uint MonitoringParameters = 740;

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest DataType.
        /// </summary>
        public const uint MonitoredItemCreateRequest = 743;

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult DataType.
        /// </summary>
        public const uint MonitoredItemCreateResult = 746;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest DataType.
        /// </summary>
        public const uint CreateMonitoredItemsRequest = 749;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse DataType.
        /// </summary>
        public const uint CreateMonitoredItemsResponse = 752;

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest DataType.
        /// </summary>
        public const uint MonitoredItemModifyRequest = 755;

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult DataType.
        /// </summary>
        public const uint MonitoredItemModifyResult = 758;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest DataType.
        /// </summary>
        public const uint ModifyMonitoredItemsRequest = 761;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse DataType.
        /// </summary>
        public const uint ModifyMonitoredItemsResponse = 764;

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest DataType.
        /// </summary>
        public const uint SetMonitoringModeRequest = 767;

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse DataType.
        /// </summary>
        public const uint SetMonitoringModeResponse = 770;

        /// <summary>
        /// The identifier for the SetTriggeringRequest DataType.
        /// </summary>
        public const uint SetTriggeringRequest = 773;

        /// <summary>
        /// The identifier for the SetTriggeringResponse DataType.
        /// </summary>
        public const uint SetTriggeringResponse = 776;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest DataType.
        /// </summary>
        public const uint DeleteMonitoredItemsRequest = 779;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse DataType.
        /// </summary>
        public const uint DeleteMonitoredItemsResponse = 782;

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest DataType.
        /// </summary>
        public const uint CreateSubscriptionRequest = 785;

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse DataType.
        /// </summary>
        public const uint CreateSubscriptionResponse = 788;

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest DataType.
        /// </summary>
        public const uint ModifySubscriptionRequest = 791;

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse DataType.
        /// </summary>
        public const uint ModifySubscriptionResponse = 794;

        /// <summary>
        /// The identifier for the SetPublishingModeRequest DataType.
        /// </summary>
        public const uint SetPublishingModeRequest = 797;

        /// <summary>
        /// The identifier for the SetPublishingModeResponse DataType.
        /// </summary>
        public const uint SetPublishingModeResponse = 800;

        /// <summary>
        /// The identifier for the NotificationMessage DataType.
        /// </summary>
        public const uint NotificationMessage = 803;

        /// <summary>
        /// The identifier for the NotificationData DataType.
        /// </summary>
        public const uint NotificationData = 945;

        /// <summary>
        /// The identifier for the DataChangeNotification DataType.
        /// </summary>
        public const uint DataChangeNotification = 809;

        /// <summary>
        /// The identifier for the MonitoredItemNotification DataType.
        /// </summary>
        public const uint MonitoredItemNotification = 806;

        /// <summary>
        /// The identifier for the EventNotificationList DataType.
        /// </summary>
        public const uint EventNotificationList = 914;

        /// <summary>
        /// The identifier for the EventFieldList DataType.
        /// </summary>
        public const uint EventFieldList = 917;

        /// <summary>
        /// The identifier for the HistoryEventFieldList DataType.
        /// </summary>
        public const uint HistoryEventFieldList = 920;

        /// <summary>
        /// The identifier for the StatusChangeNotification DataType.
        /// </summary>
        public const uint StatusChangeNotification = 818;

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement DataType.
        /// </summary>
        public const uint SubscriptionAcknowledgement = 821;

        /// <summary>
        /// The identifier for the PublishRequest DataType.
        /// </summary>
        public const uint PublishRequest = 824;

        /// <summary>
        /// The identifier for the PublishResponse DataType.
        /// </summary>
        public const uint PublishResponse = 827;

        /// <summary>
        /// The identifier for the RepublishRequest DataType.
        /// </summary>
        public const uint RepublishRequest = 830;

        /// <summary>
        /// The identifier for the RepublishResponse DataType.
        /// </summary>
        public const uint RepublishResponse = 833;

        /// <summary>
        /// The identifier for the TransferResult DataType.
        /// </summary>
        public const uint TransferResult = 836;

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest DataType.
        /// </summary>
        public const uint TransferSubscriptionsRequest = 839;

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse DataType.
        /// </summary>
        public const uint TransferSubscriptionsResponse = 842;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest DataType.
        /// </summary>
        public const uint DeleteSubscriptionsRequest = 845;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse DataType.
        /// </summary>
        public const uint DeleteSubscriptionsResponse = 848;

        /// <summary>
        /// The identifier for the BuildInfo DataType.
        /// </summary>
        public const uint BuildInfo = 338;

        /// <summary>
        /// The identifier for the RedundancySupport DataType.
        /// </summary>
        public const uint RedundancySupport = 851;

        /// <summary>
        /// The identifier for the ServerState DataType.
        /// </summary>
        public const uint ServerState = 852;

        /// <summary>
        /// The identifier for the RedundantServerDataType DataType.
        /// </summary>
        public const uint RedundantServerDataType = 853;

        /// <summary>
        /// The identifier for the EndpointUrlListDataType DataType.
        /// </summary>
        public const uint EndpointUrlListDataType = 11943;

        /// <summary>
        /// The identifier for the NetworkGroupDataType DataType.
        /// </summary>
        public const uint NetworkGroupDataType = 11944;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType DataType.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsDataType = 856;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType DataType.
        /// </summary>
        public const uint ServerDiagnosticsSummaryDataType = 859;

        /// <summary>
        /// The identifier for the ServerStatusDataType DataType.
        /// </summary>
        public const uint ServerStatusDataType = 862;

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType DataType.
        /// </summary>
        public const uint SessionDiagnosticsDataType = 865;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType DataType.
        /// </summary>
        public const uint SessionSecurityDiagnosticsDataType = 868;

        /// <summary>
        /// The identifier for the ServiceCounterDataType DataType.
        /// </summary>
        public const uint ServiceCounterDataType = 871;

        /// <summary>
        /// The identifier for the StatusResult DataType.
        /// </summary>
        public const uint StatusResult = 299;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType DataType.
        /// </summary>
        public const uint SubscriptionDiagnosticsDataType = 874;

        /// <summary>
        /// The identifier for the ModelChangeStructureVerbMask DataType.
        /// </summary>
        public const uint ModelChangeStructureVerbMask = 11941;

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType DataType.
        /// </summary>
        public const uint ModelChangeStructureDataType = 877;

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType DataType.
        /// </summary>
        public const uint SemanticChangeStructureDataType = 897;

        /// <summary>
        /// The identifier for the Range DataType.
        /// </summary>
        public const uint Range = 884;

        /// <summary>
        /// The identifier for the EUInformation DataType.
        /// </summary>
        public const uint EUInformation = 887;

        /// <summary>
        /// The identifier for the AxisScaleEnumeration DataType.
        /// </summary>
        public const uint AxisScaleEnumeration = 12077;

        /// <summary>
        /// The identifier for the ComplexNumberType DataType.
        /// </summary>
        public const uint ComplexNumberType = 12171;

        /// <summary>
        /// The identifier for the DoubleComplexNumberType DataType.
        /// </summary>
        public const uint DoubleComplexNumberType = 12172;

        /// <summary>
        /// The identifier for the AxisInformation DataType.
        /// </summary>
        public const uint AxisInformation = 12079;

        /// <summary>
        /// The identifier for the XVType DataType.
        /// </summary>
        public const uint XVType = 12080;

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType DataType.
        /// </summary>
        public const uint ProgramDiagnosticDataType = 894;

        /// <summary>
        /// The identifier for the Annotation DataType.
        /// </summary>
        public const uint Annotation = 891;

        /// <summary>
        /// The identifier for the ExceptionDeviationFormat DataType.
        /// </summary>
        public const uint ExceptionDeviationFormat = 890;
    }
    #endregion

    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Methods
    {
        /// <summary>
        /// The identifier for the ServerType_GetMonitoredItems Method.
        /// </summary>
        public const uint ServerType_GetMonitoredItems = 11489;

        /// <summary>
        /// The identifier for the ServerType_ResendData Method.
        /// </summary>
        public const uint ServerType_ResendData = 12871;

        /// <summary>
        /// The identifier for the ServerType_SetSubscriptionDurable Method.
        /// </summary>
        public const uint ServerType_SetSubscriptionDurable = 12746;

        /// <summary>
        /// The identifier for the ServerType_RequestServerStateChange Method.
        /// </summary>
        public const uint ServerType_RequestServerStateChange = 12883;

        /// <summary>
        /// The identifier for the FileType_Open Method.
        /// </summary>
        public const uint FileType_Open = 11580;

        /// <summary>
        /// The identifier for the FileType_Close Method.
        /// </summary>
        public const uint FileType_Close = 11583;

        /// <summary>
        /// The identifier for the FileType_Read Method.
        /// </summary>
        public const uint FileType_Read = 11585;

        /// <summary>
        /// The identifier for the FileType_Write Method.
        /// </summary>
        public const uint FileType_Write = 11588;

        /// <summary>
        /// The identifier for the FileType_GetPosition Method.
        /// </summary>
        public const uint FileType_GetPosition = 11590;

        /// <summary>
        /// The identifier for the FileType_SetPosition Method.
        /// </summary>
        public const uint FileType_SetPosition = 11593;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory Method.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory = 13355;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateFile Method.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateFile = 13358;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_Delete Method.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_Delete = 13361;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy Method.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy = 13363;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Open Method.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Open = 13372;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Close Method.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Close = 13375;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Read Method.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Read = 13377;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Write Method.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Write = 13380;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_GetPosition Method.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_GetPosition = 13382;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_SetPosition Method.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_SetPosition = 13385;

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateDirectory Method.
        /// </summary>
        public const uint FileDirectoryType_CreateDirectory = 13387;

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateFile Method.
        /// </summary>
        public const uint FileDirectoryType_CreateFile = 13390;

        /// <summary>
        /// The identifier for the FileDirectoryType_Delete Method.
        /// </summary>
        public const uint FileDirectoryType_Delete = 13393;

        /// <summary>
        /// The identifier for the FileDirectoryType_MoveOrCopy Method.
        /// </summary>
        public const uint FileDirectoryType_MoveOrCopy = 13395;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForRead Method.
        /// </summary>
        public const uint TemporaryFileTransferType_GenerateFileForRead = 15746;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForWrite Method.
        /// </summary>
        public const uint TemporaryFileTransferType_GenerateFileForWrite = 15749;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_CloseAndCommit Method.
        /// </summary>
        public const uint TemporaryFileTransferType_CloseAndCommit = 15751;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Reset Method.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_Reset = 15794;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_ExportNamespace Method.
        /// </summary>
        public const uint AddressSpaceFileType_ExportNamespace = 11615;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Open Method.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Open = 11629;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Close Method.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Close = 11632;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Read Method.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Read = 11634;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Write Method.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Write = 11637;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_GetPosition Method.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_GetPosition = 11639;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_SetPosition Method.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_SetPosition = 11642;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open Method.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open = 11659;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close Method.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close = 11662;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read Method.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read = 11664;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write Method.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write = 11667;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition Method.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition = 11669;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition Method.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition = 11672;

        /// <summary>
        /// The identifier for the Server_GetMonitoredItems Method.
        /// </summary>
        public const uint Server_GetMonitoredItems = 11492;

        /// <summary>
        /// The identifier for the Server_ResendData Method.
        /// </summary>
        public const uint Server_ResendData = 12873;

        /// <summary>
        /// The identifier for the Server_SetSubscriptionDurable Method.
        /// </summary>
        public const uint Server_SetSubscriptionDurable = 12749;

        /// <summary>
        /// The identifier for the Server_RequestServerStateChange Method.
        /// </summary>
        public const uint Server_RequestServerStateChange = 12886;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open Method.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open = 15196;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close Method.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close = 15199;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read Method.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read = 15201;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write Method.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write = 15204;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition Method.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition = 15206;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition Method.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition = 15209;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Reset Method.
        /// </summary>
        public const uint FileTransferStateMachineType_Reset = 15843;

        /// <summary>
        /// The identifier for the ConditionType_Disable Method.
        /// </summary>
        public const uint ConditionType_Disable = 9028;

        /// <summary>
        /// The identifier for the ConditionType_Enable Method.
        /// </summary>
        public const uint ConditionType_Enable = 9027;

        /// <summary>
        /// The identifier for the ConditionType_AddComment Method.
        /// </summary>
        public const uint ConditionType_AddComment = 9029;

        /// <summary>
        /// The identifier for the ConditionType_ConditionRefresh Method.
        /// </summary>
        public const uint ConditionType_ConditionRefresh = 3875;

        /// <summary>
        /// The identifier for the ConditionType_ConditionRefresh2 Method.
        /// </summary>
        public const uint ConditionType_ConditionRefresh2 = 12912;

        /// <summary>
        /// The identifier for the DialogConditionType_Respond Method.
        /// </summary>
        public const uint DialogConditionType_Respond = 9069;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Acknowledge Method.
        /// </summary>
        public const uint AcknowledgeableConditionType_Acknowledge = 9111;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Confirm Method.
        /// </summary>
        public const uint AcknowledgeableConditionType_Confirm = 9113;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_Unshelve = 9211;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_OneShotShelve = 9212;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_TimedShelve = 9213;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelve Method.
        /// </summary>
        public const uint ShelvedStateMachineType_Unshelve = 2947;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelve Method.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelve = 2948;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelve Method.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelve = 2949;

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint LimitAlarmType_ShelvingState_Unshelve = 9312;

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint LimitAlarmType_ShelvingState_OneShotShelve = 9313;

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint LimitAlarmType_ShelvingState_TimedShelve = 9314;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ShelvingState_Unshelve = 9449;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ShelvingState_OneShotShelve = 9450;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ShelvingState_TimedShelve = 9451;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ShelvingState_Unshelve = 10014;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve = 10015;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ShelvingState_TimedShelve = 10016;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ShelvingState_Unshelve = 10168;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve = 10169;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ShelvingState_TimedShelve = 10170;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ShelvingState_Unshelve = 9590;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ShelvingState_OneShotShelve = 9591;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ShelvingState_TimedShelve = 9592;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_Unshelve = 10476;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve = 10477;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve = 10478;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ShelvingState_Unshelve = 9872;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve = 9873;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ShelvingState_TimedShelve = 9874;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve = 10322;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve = 10323;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve = 10324;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve = 9731;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve = 9732;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve = 9733;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint DiscreteAlarmType_ShelvingState_Unshelve = 10631;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint DiscreteAlarmType_ShelvingState_OneShotShelve = 10632;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint DiscreteAlarmType_ShelvingState_TimedShelve = 10633;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint OffNormalAlarmType_ShelvingState_Unshelve = 10745;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint OffNormalAlarmType_ShelvingState_OneShotShelve = 10746;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint OffNormalAlarmType_ShelvingState_TimedShelve = 10747;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ShelvingState_Unshelve = 11844;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ShelvingState_OneShotShelve = 11845;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ShelvingState_TimedShelve = 11846;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ShelvingState_Unshelve = 13318;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ShelvingState_OneShotShelve = 13319;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ShelvingState_TimedShelve = 13320;

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public const uint TripAlarmType_ShelvingState_Unshelve = 10859;

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public const uint TripAlarmType_ShelvingState_OneShotShelve = 10860;

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public const uint TripAlarmType_ShelvingState_TimedShelve = 10861;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Start Method.
        /// </summary>
        public const uint ProgramStateMachineType_Start = 2426;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspend Method.
        /// </summary>
        public const uint ProgramStateMachineType_Suspend = 2427;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Resume Method.
        /// </summary>
        public const uint ProgramStateMachineType_Resume = 2428;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halt Method.
        /// </summary>
        public const uint ProgramStateMachineType_Halt = 2429;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Reset Method.
        /// </summary>
        public const uint ProgramStateMachineType_Reset = 2430;

        /// <summary>
        /// The identifier for the TrustListType_OpenWithMasks Method.
        /// </summary>
        public const uint TrustListType_OpenWithMasks = 12543;

        /// <summary>
        /// The identifier for the TrustListType_CloseAndUpdate Method.
        /// </summary>
        public const uint TrustListType_CloseAndUpdate = 12546;

        /// <summary>
        /// The identifier for the TrustListType_AddCertificate Method.
        /// </summary>
        public const uint TrustListType_AddCertificate = 12548;

        /// <summary>
        /// The identifier for the TrustListType_RemoveCertificate Method.
        /// </summary>
        public const uint TrustListType_RemoveCertificate = 12550;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Open Method.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Open = 13605;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Close Method.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Close = 13608;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Read Method.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Read = 13610;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Write Method.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Write = 13613;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_GetPosition Method.
        /// </summary>
        public const uint CertificateGroupType_TrustList_GetPosition = 13615;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_SetPosition Method.
        /// </summary>
        public const uint CertificateGroupType_TrustList_SetPosition = 13618;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint CertificateGroupType_TrustList_OpenWithMasks = 13621;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open = 13821;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close = 13824;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read = 13826;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write = 13829;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition = 13831;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition = 13834;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks = 13837;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open = 13855;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close = 13858;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read = 13860;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write = 13863;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition = 13865;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition = 13868;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks = 13871;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open = 13889;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close = 13892;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read = 13894;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write = 13897;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition = 13899;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition = 13902;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks = 13905;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open Method.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open = 13923;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close Method.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close = 13926;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read Method.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read = 13928;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write Method.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write = 13931;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition Method.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition = 13933;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition Method.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition = 13936;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks = 13939;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open = 13958;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close = 13961;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read = 13963;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write = 13966;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition = 13968;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition = 13971;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks = 13974;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open = 13992;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close = 13995;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read = 13997;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write = 14000;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition = 14002;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition = 14005;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks = 14008;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open = 14026;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close = 14029;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read = 14031;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write = 14034;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition = 14036;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition = 14039;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks = 14042;

        /// <summary>
        /// The identifier for the ServerConfigurationType_UpdateCertificate Method.
        /// </summary>
        public const uint ServerConfigurationType_UpdateCertificate = 12616;

        /// <summary>
        /// The identifier for the ServerConfigurationType_ApplyChanges Method.
        /// </summary>
        public const uint ServerConfigurationType_ApplyChanges = 12734;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CreateSigningRequest Method.
        /// </summary>
        public const uint ServerConfigurationType_CreateSigningRequest = 12731;

        /// <summary>
        /// The identifier for the ServerConfigurationType_GetRejectedList Method.
        /// </summary>
        public const uint ServerConfigurationType_GetRejectedList = 12775;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open = 12647;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close = 12650;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read = 12652;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write = 12655;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition = 12657;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition = 12660;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks = 12663;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate = 12666;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate = 12668;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate = 12670;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open = 14095;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close = 14098;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read = 14100;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write = 14103;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition = 14105;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition = 14108;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks = 14111;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate = 14114;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate = 14117;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate = 14119;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open = 14129;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close = 14132;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read = 14134;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write = 14137;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition = 14139;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition = 14142;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks = 14145;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate = 14148;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate = 14151;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate Method.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate = 14153;

        /// <summary>
        /// The identifier for the ServerConfiguration_UpdateCertificate Method.
        /// </summary>
        public const uint ServerConfiguration_UpdateCertificate = 13737;

        /// <summary>
        /// The identifier for the ServerConfiguration_ApplyChanges Method.
        /// </summary>
        public const uint ServerConfiguration_ApplyChanges = 12740;

        /// <summary>
        /// The identifier for the ServerConfiguration_CreateSigningRequest Method.
        /// </summary>
        public const uint ServerConfiguration_CreateSigningRequest = 12737;

        /// <summary>
        /// The identifier for the ServerConfiguration_GetRejectedList Method.
        /// </summary>
        public const uint ServerConfiguration_GetRejectedList = 12777;

        /// <summary>
        /// The identifier for the RoleType_AddIdentity Method.
        /// </summary>
        public const uint RoleType_AddIdentity = 15624;

        /// <summary>
        /// The identifier for the RoleType_RemoveIdentity Method.
        /// </summary>
        public const uint RoleType_RemoveIdentity = 15626;

        /// <summary>
        /// The identifier for the RoleType_AddApplication Method.
        /// </summary>
        public const uint RoleType_AddApplication = 15628;

        /// <summary>
        /// The identifier for the RoleType_RemoveApplication Method.
        /// </summary>
        public const uint RoleType_RemoveApplication = 15630;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityKeys Method.
        /// </summary>
        public const uint PubSubKeyServiceType_GetSecurityKeys = 15907;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityGroup Method.
        /// </summary>
        public const uint PubSubKeyServiceType_GetSecurityGroup = 15910;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_AddSecurityGroup Method.
        /// </summary>
        public const uint PubSubKeyServiceType_SecurityGroups_AddSecurityGroup = 15914;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup Method.
        /// </summary>
        public const uint PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup = 15917;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup Method.
        /// </summary>
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup = 15454;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup Method.
        /// </summary>
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup = 15457;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_AddSecurityGroup Method.
        /// </summary>
        public const uint SecurityGroupFolderType_AddSecurityGroup = 15461;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_RemoveSecurityGroup Method.
        /// </summary>
        public const uint SecurityGroupFolderType_RemoveSecurityGroup = 15464;

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_AddSecurityGroup Method.
        /// </summary>
        public const uint PublishSubscribeType_SecurityGroups_AddSecurityGroup = 15435;

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_RemoveSecurityGroup Method.
        /// </summary>
        public const uint PublishSubscribeType_SecurityGroups_RemoveSecurityGroup = 15438;

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddUadpConnection Method.
        /// </summary>
        public const uint PublishSubscribeType_AddUadpConnection = 14901;

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddBrokerConnection Method.
        /// </summary>
        public const uint PublishSubscribeType_AddBrokerConnection = 14429;

        /// <summary>
        /// The identifier for the PublishSubscribeType_RemoveConnection Method.
        /// </summary>
        public const uint PublishSubscribeType_RemoveConnection = 14432;

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityKeys Method.
        /// </summary>
        public const uint PublishSubscribe_GetSecurityKeys = 15215;

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityGroup Method.
        /// </summary>
        public const uint PublishSubscribe_GetSecurityGroup = 15440;

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_AddSecurityGroup Method.
        /// </summary>
        public const uint PublishSubscribe_SecurityGroups_AddSecurityGroup = 15444;

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_RemoveSecurityGroup Method.
        /// </summary>
        public const uint PublishSubscribe_SecurityGroups_RemoveSecurityGroup = 15447;

        /// <summary>
        /// The identifier for the PublishSubscribe_AddUadpConnection Method.
        /// </summary>
        public const uint PublishSubscribe_AddUadpConnection = 14904;

        /// <summary>
        /// The identifier for the PublishSubscribe_AddBrokerConnection Method.
        /// </summary>
        public const uint PublishSubscribe_AddBrokerConnection = 14456;

        /// <summary>
        /// The identifier for the PublishSubscribe_RemoveConnection Method.
        /// </summary>
        public const uint PublishSubscribe_RemoveConnection = 14459;

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public const uint PublishedDataSetType_ExtensionFields_AddExtensionField = 15482;

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public const uint PublishedDataSetType_ExtensionFields_RemoveExtensionField = 15485;

        /// <summary>
        /// The identifier for the ExtensionFieldsType_AddExtensionField Method.
        /// </summary>
        public const uint ExtensionFieldsType_AddExtensionField = 15491;

        /// <summary>
        /// The identifier for the ExtensionFieldsType_RemoveExtensionField Method.
        /// </summary>
        public const uint ExtensionFieldsType_RemoveExtensionField = 15494;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public const uint PublishedDataItemsType_ExtensionFields_AddExtensionField = 15504;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public const uint PublishedDataItemsType_ExtensionFields_RemoveExtensionField = 15507;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_AddVariables Method.
        /// </summary>
        public const uint PublishedDataItemsType_AddVariables = 14555;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_RemoveVariables Method.
        /// </summary>
        public const uint PublishedDataItemsType_RemoveVariables = 14558;

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public const uint PublishedEventsType_ExtensionFields_AddExtensionField = 15512;

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public const uint PublishedEventsType_ExtensionFields_RemoveExtensionField = 15515;

        /// <summary>
        /// The identifier for the PublishedEventsType_ModifyFieldSelection Method.
        /// </summary>
        public const uint PublishedEventsType_ModifyFieldSelection = 15052;

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public const uint DataSetClassType_ExtensionFields_AddExtensionField = 15522;

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public const uint DataSetClassType_ExtensionFields_RemoveExtensionField = 15525;

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems Method.
        /// </summary>
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems = 14479;

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents Method.
        /// </summary>
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents = 14482;

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet Method.
        /// </summary>
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet = 14485;

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField = 15474;

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField = 15477;

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedDataItems Method.
        /// </summary>
        public const uint DataSetFolderType_AddPublishedDataItems = 14493;

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedEvents Method.
        /// </summary>
        public const uint DataSetFolderType_AddPublishedEvents = 14496;

        /// <summary>
        /// The identifier for the DataSetFolderType_RemovePublishedDataSet Method.
        /// </summary>
        public const uint DataSetFolderType_RemovePublishedDataSet = 14499;

        /// <summary>
        /// The identifier for the PubSubConnectionType_RemoveGroup Method.
        /// </summary>
        public const uint PubSubConnectionType_RemoveGroup = 14225;

        /// <summary>
        /// The identifier for the PubSubGroupType_RemoveDataSetWriter Method.
        /// </summary>
        public const uint PubSubGroupType_RemoveDataSetWriter = 15277;

        /// <summary>
        /// The identifier for the PubSubGroupType_RemoveDataSetReader Method.
        /// </summary>
        public const uint PubSubGroupType_RemoveDataSetReader = 15292;

        /// <summary>
        /// The identifier for the DataSetReaderType_SetConnectVariables Method.
        /// </summary>
        public const uint DataSetReaderType_SetConnectVariables = 15864;

        /// <summary>
        /// The identifier for the DataSetReaderType_SetDataSetMirror Method.
        /// </summary>
        public const uint DataSetReaderType_SetDataSetMirror = 15867;

        /// <summary>
        /// The identifier for the ConnectedVariablesType_AddDataConnections Method.
        /// </summary>
        public const uint ConnectedVariablesType_AddDataConnections = 15115;

        /// <summary>
        /// The identifier for the ConnectedVariablesType_RemoveDataConnections Method.
        /// </summary>
        public const uint ConnectedVariablesType_RemoveDataConnections = 15118;

        /// <summary>
        /// The identifier for the PubSubStatusType_Enable Method.
        /// </summary>
        public const uint PubSubStatusType_Enable = 14645;

        /// <summary>
        /// The identifier for the PubSubStatusType_Disable Method.
        /// </summary>
        public const uint PubSubStatusType_Disable = 14646;

        /// <summary>
        /// The identifier for the UadpConnectionType_AddGroup Method.
        /// </summary>
        public const uint UadpConnectionType_AddGroup = 14959;

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetWriter Method.
        /// </summary>
        public const uint UadpGroupType_AddDataSetWriter = 15369;

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetReader Method.
        /// </summary>
        public const uint UadpGroupType_AddDataSetReader = 15372;

        /// <summary>
        /// The identifier for the BrokerConnectionType_AddGroup Method.
        /// </summary>
        public const uint BrokerConnectionType_AddGroup = 14367;

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetWriter Method.
        /// </summary>
        public const uint BrokerGroupType_AddDataSetWriter = 15416;

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetReader Method.
        /// </summary>
        public const uint BrokerGroupType_AddDataSetReader = 15582;

        /// <summary>
        /// The identifier for the BrokerGroupTypeAddReaderType Method.
        /// </summary>
        public const uint BrokerGroupTypeAddReaderType = 15585;
    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the DefaultBinary Object.
        /// </summary>
        public const uint DefaultBinary = 3062;

        /// <summary>
        /// The identifier for the DefaultXml Object.
        /// </summary>
        public const uint DefaultXml = 3063;

        /// <summary>
        /// The identifier for the ModellingRule_Mandatory Object.
        /// </summary>
        public const uint ModellingRule_Mandatory = 78;

        /// <summary>
        /// The identifier for the ModellingRule_Optional Object.
        /// </summary>
        public const uint ModellingRule_Optional = 80;

        /// <summary>
        /// The identifier for the ModellingRule_ExposesItsArray Object.
        /// </summary>
        public const uint ModellingRule_ExposesItsArray = 83;

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryShared Object.
        /// </summary>
        public const uint ModellingRule_MandatoryShared = 79;

        /// <summary>
        /// The identifier for the ModellingRule_OptionalPlaceholder Object.
        /// </summary>
        public const uint ModellingRule_OptionalPlaceholder = 11508;

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryPlaceholder Object.
        /// </summary>
        public const uint ModellingRule_MandatoryPlaceholder = 11510;

        /// <summary>
        /// The identifier for the RootFolder Object.
        /// </summary>
        public const uint RootFolder = 84;

        /// <summary>
        /// The identifier for the ObjectsFolder Object.
        /// </summary>
        public const uint ObjectsFolder = 85;

        /// <summary>
        /// The identifier for the TypesFolder Object.
        /// </summary>
        public const uint TypesFolder = 86;

        /// <summary>
        /// The identifier for the ViewsFolder Object.
        /// </summary>
        public const uint ViewsFolder = 87;

        /// <summary>
        /// The identifier for the ObjectTypesFolder Object.
        /// </summary>
        public const uint ObjectTypesFolder = 88;

        /// <summary>
        /// The identifier for the VariableTypesFolder Object.
        /// </summary>
        public const uint VariableTypesFolder = 89;

        /// <summary>
        /// The identifier for the DataTypesFolder Object.
        /// </summary>
        public const uint DataTypesFolder = 90;

        /// <summary>
        /// The identifier for the ReferenceTypesFolder Object.
        /// </summary>
        public const uint ReferenceTypesFolder = 91;

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem Object.
        /// </summary>
        public const uint XmlSchema_TypeSystem = 92;

        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem Object.
        /// </summary>
        public const uint OPCBinarySchema_TypeSystem = 93;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities Object.
        /// </summary>
        public const uint ServerType_ServerCapabilities = 2009;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_ModellingRules Object.
        /// </summary>
        public const uint ServerType_ServerCapabilities_ModellingRules = 3093;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_AggregateFunctions Object.
        /// </summary>
        public const uint ServerType_ServerCapabilities_AggregateFunctions = 3094;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics Object.
        /// </summary>
        public const uint ServerType_ServerDiagnostics = 2010;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_SessionsDiagnosticsSummary Object.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_SessionsDiagnosticsSummary = 3111;

        /// <summary>
        /// The identifier for the ServerType_VendorServerInfo Object.
        /// </summary>
        public const uint ServerType_VendorServerInfo = 2011;

        /// <summary>
        /// The identifier for the ServerType_ServerRedundancy Object.
        /// </summary>
        public const uint ServerType_ServerRedundancy = 2012;

        /// <summary>
        /// The identifier for the ServerType_Namespaces Object.
        /// </summary>
        public const uint ServerType_Namespaces = 11527;

        /// <summary>
        /// The identifier for the ServerType_Roles Object.
        /// </summary>
        public const uint ServerType_Roles = 15605;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_OperationLimits Object.
        /// </summary>
        public const uint ServerCapabilitiesType_OperationLimits = 11551;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_ModellingRules Object.
        /// </summary>
        public const uint ServerCapabilitiesType_ModellingRules = 2019;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_AggregateFunctions Object.
        /// </summary>
        public const uint ServerCapabilitiesType_AggregateFunctions = 2754;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SessionsDiagnosticsSummary Object.
        /// </summary>
        public const uint ServerDiagnosticsType_SessionsDiagnosticsSummary = 2744;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder Object.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder = 12097;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder Object.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder = 13354;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder Object.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder = 13366;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder = 15754;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Idle Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_Idle = 15766;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare = 15768;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer = 15770;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite = 15772;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Error Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_Error = 15774;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare = 15776;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer = 15778;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle = 15780;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite = 15782;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle = 15784;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError = 15786;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError = 15788;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError = 15790;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle Object.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle = 15792;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile Object.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile = 11624;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder Object.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder = 11646;

        /// <summary>
        /// The identifier for the EventTypesFolder Object.
        /// </summary>
        public const uint EventTypesFolder = 3048;

        /// <summary>
        /// The identifier for the Server Object.
        /// </summary>
        public const uint Server = 2253;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities Object.
        /// </summary>
        public const uint Server_ServerCapabilities = 2268;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits Object.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits = 11704;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_ModellingRules Object.
        /// </summary>
        public const uint Server_ServerCapabilities_ModellingRules = 2996;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_AggregateFunctions Object.
        /// </summary>
        public const uint Server_ServerCapabilities_AggregateFunctions = 2997;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics Object.
        /// </summary>
        public const uint Server_ServerDiagnostics = 2274;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary Object.
        /// </summary>
        public const uint Server_ServerDiagnostics_SessionsDiagnosticsSummary = 3706;

        /// <summary>
        /// The identifier for the Server_VendorServerInfo Object.
        /// </summary>
        public const uint Server_VendorServerInfo = 2295;

        /// <summary>
        /// The identifier for the Server_ServerRedundancy Object.
        /// </summary>
        public const uint Server_ServerRedundancy = 2296;

        /// <summary>
        /// The identifier for the Server_Namespaces Object.
        /// </summary>
        public const uint Server_Namespaces = 11715;

        /// <summary>
        /// The identifier for the Server_Roles Object.
        /// </summary>
        public const uint Server_Roles = 15606;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri Object.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri = 15182;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities Object.
        /// </summary>
        public const uint HistoryServerCapabilities = 11192;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_AggregateFunctions Object.
        /// </summary>
        public const uint HistoryServerCapabilities_AggregateFunctions = 11201;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Idle Object.
        /// </summary>
        public const uint FileTransferStateMachineType_Idle = 15815;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepare Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadPrepare = 15817;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransfer Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadTransfer = 15819;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWrite Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ApplyWrite = 15821;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Error Object.
        /// </summary>
        public const uint FileTransferStateMachineType_Error = 15823;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_IdleToReadPrepare Object.
        /// </summary>
        public const uint FileTransferStateMachineType_IdleToReadPrepare = 15825;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepareToReadTransfer Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadPrepareToReadTransfer = 15827;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransferToIdle Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadTransferToIdle = 15829;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_IdleToApplyWrite Object.
        /// </summary>
        public const uint FileTransferStateMachineType_IdleToApplyWrite = 15831;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWriteToIdle Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ApplyWriteToIdle = 15833;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepareToError Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadPrepareToError = 15835;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransferToError Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadTransferToError = 15837;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWriteToError Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ApplyWriteToError = 15839;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ErrorToIdle Object.
        /// </summary>
        public const uint FileTransferStateMachineType_ErrorToIdle = 15841;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState Object.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState = 9178;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_Unshelved = 2930;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelved = 2932;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelved = 2933;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToTimedShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_UnshelvedToTimedShelved = 2935;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToOneShotShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_UnshelvedToOneShotShelved = 2936;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToUnshelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelvedToUnshelved = 2940;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToOneShotShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelvedToOneShotShelved = 2942;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToUnshelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelvedToUnshelved = 2943;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToTimedShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelvedToTimedShelved = 2945;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighHigh Object.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_HighHigh = 9329;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_High Object.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_High = 9331;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_Low Object.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_Low = 9333;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowLow Object.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_LowLow = 9335;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowLowToLow Object.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_LowLowToLow = 9337;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowToLowLow Object.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_LowToLowLow = 9338;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighHighToHigh Object.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_HighHighToHigh = 9339;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighToHighHigh Object.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_HighToHighHigh = 9340;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState Object.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_LimitState = 9455;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_FinalResultData Object.
        /// </summary>
        public const uint ProgramStateMachineType_FinalResultData = 3850;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Ready Object.
        /// </summary>
        public const uint ProgramStateMachineType_Ready = 2400;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Running Object.
        /// </summary>
        public const uint ProgramStateMachineType_Running = 2402;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspended Object.
        /// </summary>
        public const uint ProgramStateMachineType_Suspended = 2404;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halted Object.
        /// </summary>
        public const uint ProgramStateMachineType_Halted = 2406;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_HaltedToReady Object.
        /// </summary>
        public const uint ProgramStateMachineType_HaltedToReady = 2408;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToRunning Object.
        /// </summary>
        public const uint ProgramStateMachineType_ReadyToRunning = 2410;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToHalted Object.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToHalted = 2412;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToReady Object.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToReady = 2414;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToSuspended Object.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToSuspended = 2416;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToRunning Object.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToRunning = 2418;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToHalted Object.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToHalted = 2420;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToReady Object.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToReady = 2422;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToHalted Object.
        /// </summary>
        public const uint ProgramStateMachineType_ReadyToHalted = 2424;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration Object.
        /// </summary>
        public const uint HistoricalDataConfigurationType_AggregateConfiguration = 3059;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateFunctions Object.
        /// </summary>
        public const uint HistoricalDataConfigurationType_AggregateFunctions = 11876;

        /// <summary>
        /// The identifier for the HAConfiguration Object.
        /// </summary>
        public const uint HAConfiguration = 11202;

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration Object.
        /// </summary>
        public const uint HAConfiguration_AggregateConfiguration = 11203;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AggregateFunctions Object.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_AggregateFunctions = 11172;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList Object.
        /// </summary>
        public const uint CertificateGroupType_TrustList = 13599;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup Object.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup = 13814;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList Object.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList = 13815;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup Object.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup = 13848;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList Object.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList = 13849;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup Object.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup = 13882;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList Object.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList = 13883;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder Object.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder = 13916;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList Object.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList = 13917;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups Object.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups = 13950;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup Object.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup = 13951;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList Object.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList = 13952;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList Object.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList = 13986;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList Object.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList = 14020;

        /// <summary>
        /// The identifier for the ServerConfiguration Object.
        /// </summary>
        public const uint ServerConfiguration = 12637;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups Object.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups = 14053;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup Object.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup = 14156;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList Object.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList = 12642;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup Object.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup = 14088;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList Object.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList = 14089;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup Object.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup = 14122;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList Object.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList = 14123;

        /// <summary>
        /// The identifier for the AggregateFunction_Interpolative Object.
        /// </summary>
        public const uint AggregateFunction_Interpolative = 2341;

        /// <summary>
        /// The identifier for the AggregateFunction_Average Object.
        /// </summary>
        public const uint AggregateFunction_Average = 2342;

        /// <summary>
        /// The identifier for the AggregateFunction_TimeAverage Object.
        /// </summary>
        public const uint AggregateFunction_TimeAverage = 2343;

        /// <summary>
        /// The identifier for the AggregateFunction_TimeAverage2 Object.
        /// </summary>
        public const uint AggregateFunction_TimeAverage2 = 11285;

        /// <summary>
        /// The identifier for the AggregateFunction_Total Object.
        /// </summary>
        public const uint AggregateFunction_Total = 2344;

        /// <summary>
        /// The identifier for the AggregateFunction_Total2 Object.
        /// </summary>
        public const uint AggregateFunction_Total2 = 11304;

        /// <summary>
        /// The identifier for the AggregateFunction_Minimum Object.
        /// </summary>
        public const uint AggregateFunction_Minimum = 2346;

        /// <summary>
        /// The identifier for the AggregateFunction_Maximum Object.
        /// </summary>
        public const uint AggregateFunction_Maximum = 2347;

        /// <summary>
        /// The identifier for the AggregateFunction_MinimumActualTime Object.
        /// </summary>
        public const uint AggregateFunction_MinimumActualTime = 2348;

        /// <summary>
        /// The identifier for the AggregateFunction_MaximumActualTime Object.
        /// </summary>
        public const uint AggregateFunction_MaximumActualTime = 2349;

        /// <summary>
        /// The identifier for the AggregateFunction_Range Object.
        /// </summary>
        public const uint AggregateFunction_Range = 2350;

        /// <summary>
        /// The identifier for the AggregateFunction_Minimum2 Object.
        /// </summary>
        public const uint AggregateFunction_Minimum2 = 11286;

        /// <summary>
        /// The identifier for the AggregateFunction_Maximum2 Object.
        /// </summary>
        public const uint AggregateFunction_Maximum2 = 11287;

        /// <summary>
        /// The identifier for the AggregateFunction_MinimumActualTime2 Object.
        /// </summary>
        public const uint AggregateFunction_MinimumActualTime2 = 11305;

        /// <summary>
        /// The identifier for the AggregateFunction_MaximumActualTime2 Object.
        /// </summary>
        public const uint AggregateFunction_MaximumActualTime2 = 11306;

        /// <summary>
        /// The identifier for the AggregateFunction_Range2 Object.
        /// </summary>
        public const uint AggregateFunction_Range2 = 11288;

        /// <summary>
        /// The identifier for the AggregateFunction_AnnotationCount Object.
        /// </summary>
        public const uint AggregateFunction_AnnotationCount = 2351;

        /// <summary>
        /// The identifier for the AggregateFunction_Count Object.
        /// </summary>
        public const uint AggregateFunction_Count = 2352;

        /// <summary>
        /// The identifier for the AggregateFunction_DurationInStateZero Object.
        /// </summary>
        public const uint AggregateFunction_DurationInStateZero = 11307;

        /// <summary>
        /// The identifier for the AggregateFunction_DurationInStateNonZero Object.
        /// </summary>
        public const uint AggregateFunction_DurationInStateNonZero = 11308;

        /// <summary>
        /// The identifier for the AggregateFunction_NumberOfTransitions Object.
        /// </summary>
        public const uint AggregateFunction_NumberOfTransitions = 2355;

        /// <summary>
        /// The identifier for the AggregateFunction_Start Object.
        /// </summary>
        public const uint AggregateFunction_Start = 2357;

        /// <summary>
        /// The identifier for the AggregateFunction_End Object.
        /// </summary>
        public const uint AggregateFunction_End = 2358;

        /// <summary>
        /// The identifier for the AggregateFunction_Delta Object.
        /// </summary>
        public const uint AggregateFunction_Delta = 2359;

        /// <summary>
        /// The identifier for the AggregateFunction_StartBound Object.
        /// </summary>
        public const uint AggregateFunction_StartBound = 11505;

        /// <summary>
        /// The identifier for the AggregateFunction_EndBound Object.
        /// </summary>
        public const uint AggregateFunction_EndBound = 11506;

        /// <summary>
        /// The identifier for the AggregateFunction_DeltaBounds Object.
        /// </summary>
        public const uint AggregateFunction_DeltaBounds = 11507;

        /// <summary>
        /// The identifier for the AggregateFunction_DurationGood Object.
        /// </summary>
        public const uint AggregateFunction_DurationGood = 2360;

        /// <summary>
        /// The identifier for the AggregateFunction_DurationBad Object.
        /// </summary>
        public const uint AggregateFunction_DurationBad = 2361;

        /// <summary>
        /// The identifier for the AggregateFunction_PercentGood Object.
        /// </summary>
        public const uint AggregateFunction_PercentGood = 2362;

        /// <summary>
        /// The identifier for the AggregateFunction_PercentBad Object.
        /// </summary>
        public const uint AggregateFunction_PercentBad = 2363;

        /// <summary>
        /// The identifier for the AggregateFunction_WorstQuality Object.
        /// </summary>
        public const uint AggregateFunction_WorstQuality = 2364;

        /// <summary>
        /// The identifier for the AggregateFunction_WorstQuality2 Object.
        /// </summary>
        public const uint AggregateFunction_WorstQuality2 = 11292;

        /// <summary>
        /// The identifier for the AggregateFunction_StandardDeviationSample Object.
        /// </summary>
        public const uint AggregateFunction_StandardDeviationSample = 11426;

        /// <summary>
        /// The identifier for the AggregateFunction_StandardDeviationPopulation Object.
        /// </summary>
        public const uint AggregateFunction_StandardDeviationPopulation = 11427;

        /// <summary>
        /// The identifier for the AggregateFunction_VarianceSample Object.
        /// </summary>
        public const uint AggregateFunction_VarianceSample = 11428;

        /// <summary>
        /// The identifier for the AggregateFunction_VariancePopulation Object.
        /// </summary>
        public const uint AggregateFunction_VariancePopulation = 11429;

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder Object.
        /// </summary>
        public const uint RoleFolderType_RoleName_Placeholder = 15608;

        /// <summary>
        /// The identifier for the Anonymous Object.
        /// </summary>
        public const uint Anonymous = 15644;

        /// <summary>
        /// The identifier for the AuthenticatedUsers Object.
        /// </summary>
        public const uint AuthenticatedUsers = 15656;

        /// <summary>
        /// The identifier for the Observer Object.
        /// </summary>
        public const uint Observer = 15668;

        /// <summary>
        /// The identifier for the Operator Object.
        /// </summary>
        public const uint Operator = 15680;

        /// <summary>
        /// The identifier for the Supervisor Object.
        /// </summary>
        public const uint Supervisor = 15692;

        /// <summary>
        /// The identifier for the SecurityAdmin Object.
        /// </summary>
        public const uint SecurityAdmin = 15704;

        /// <summary>
        /// The identifier for the ConfigureAdmin Object.
        /// </summary>
        public const uint ConfigureAdmin = 15716;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups Object.
        /// </summary>
        public const uint PubSubKeyServiceType_SecurityGroups = 15913;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder Object.
        /// </summary>
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder = 15453;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupName_Placeholder Object.
        /// </summary>
        public const uint SecurityGroupFolderType_SecurityGroupName_Placeholder = 15459;

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder Object.
        /// </summary>
        public const uint PublishSubscribeType_ConnectionName_Placeholder = 14417;

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_Status Object.
        /// </summary>
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Status = 14419;

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets Object.
        /// </summary>
        public const uint PublishSubscribeType_PublishedDataSets = 14434;

        /// <summary>
        /// The identifier for the PublishSubscribeType_Status Object.
        /// </summary>
        public const uint PublishSubscribeType_Status = 15844;

        /// <summary>
        /// The identifier for the PublishSubscribe Object.
        /// </summary>
        public const uint PublishSubscribe = 14443;

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups Object.
        /// </summary>
        public const uint PublishSubscribe_SecurityGroups = 15443;

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_Status Object.
        /// </summary>
        public const uint PublishSubscribe_ConnectionName_Placeholder_Status = 14446;

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets Object.
        /// </summary>
        public const uint PublishSubscribe_PublishedDataSets = 14461;

        /// <summary>
        /// The identifier for the PublishSubscribe_Status Object.
        /// </summary>
        public const uint PublishSubscribe_Status = 15848;

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder Object.
        /// </summary>
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder = 15222;

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Status = 15223;

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_TransportSettings = 15227;

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields Object.
        /// </summary>
        public const uint PublishedDataSetType_ExtensionFields = 15481;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Status = 15231;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_TransportSettings = 15235;

        /// <summary>
        /// The identifier for the PublishedEventsType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Status = 15239;

        /// <summary>
        /// The identifier for the PublishedEventsType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_TransportSettings = 15243;

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public const uint DataSetClassType_DataSetWriterName_Placeholder_Status = 15247;

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint DataSetClassType_DataSetWriterName_Placeholder_TransportSettings = 15251;

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder Object.
        /// </summary>
        public const uint DataSetFolderType_DataSetFolderName_Placeholder = 14478;

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder Object.
        /// </summary>
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder = 14487;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder Object.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder = 14210;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_Status Object.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_Status = 15255;

        /// <summary>
        /// The identifier for the PubSubConnectionType_Status Object.
        /// </summary>
        public const uint PubSubConnectionType_Status = 14600;

        /// <summary>
        /// The identifier for the PubSubGroupType_Status Object.
        /// </summary>
        public const uint PubSubGroupType_Status = 15265;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder Object.
        /// </summary>
        public const uint PubSubGroupType_DataSetWriterName_Placeholder = 15270;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public const uint PubSubGroupType_DataSetWriterName_Placeholder_Status = 15271;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint PubSubGroupType_DataSetWriterName_Placeholder_TransportSettings = 15275;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder Object.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder = 15279;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_Status Object.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_Status = 15280;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_TransportSettings = 15284;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet Object.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet = 15289;

        /// <summary>
        /// The identifier for the DataSetWriterType_Status Object.
        /// </summary>
        public const uint DataSetWriterType_Status = 15299;

        /// <summary>
        /// The identifier for the DataSetWriterType_TransportSettings Object.
        /// </summary>
        public const uint DataSetWriterType_TransportSettings = 15303;

        /// <summary>
        /// The identifier for the DataSetReaderType_Status Object.
        /// </summary>
        public const uint DataSetReaderType_Status = 15307;

        /// <summary>
        /// The identifier for the DataSetReaderType_TransportSettings Object.
        /// </summary>
        public const uint DataSetReaderType_TransportSettings = 15311;

        /// <summary>
        /// The identifier for the DataSetReaderType_SubscribedDataSet Object.
        /// </summary>
        public const uint DataSetReaderType_SubscribedDataSet = 15316;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_Status Object.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_Status = 15321;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public const uint UadpGroupType_DataSetWriterName_Placeholder_Status = 15342;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint UadpGroupType_DataSetWriterName_Placeholder_TransportSettings = 15346;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_Status Object.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_Status = 15351;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_TransportSettings = 15355;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet Object.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet = 15360;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_Status Object.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_Status = 15376;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public const uint BrokerGroupType_DataSetWriterName_Placeholder_Status = 15392;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint BrokerGroupType_DataSetWriterName_Placeholder_TransportSettings = 15396;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_Status Object.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_Status = 15401;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_TransportSettings Object.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_TransportSettings = 15405;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet Object.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet = 15410;

        /// <summary>
        /// The identifier for the TrustListDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TrustListDataType_Encoding_DefaultXml = 12676;

        /// <summary>
        /// The identifier for the DataTypeDefinition_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataTypeDefinition_Encoding_DefaultXml = 14797;

        /// <summary>
        /// The identifier for the StructureDefinition_Encoding_DefaultXml Object.
        /// </summary>
        public const uint StructureDefinition_Encoding_DefaultXml = 14798;

        /// <summary>
        /// The identifier for the EnumDefinition_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EnumDefinition_Encoding_DefaultXml = 14799;

        /// <summary>
        /// The identifier for the StructureField_Encoding_DefaultXml Object.
        /// </summary>
        public const uint StructureField_Encoding_DefaultXml = 14800;

        /// <summary>
        /// The identifier for the IdentityMappingRuleType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint IdentityMappingRuleType_Encoding_DefaultXml = 15728;

        /// <summary>
        /// The identifier for the ApplicationPermissionRuleType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ApplicationPermissionRuleType_Encoding_DefaultXml = 15729;

        /// <summary>
        /// The identifier for the ConfigurationVersionDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ConfigurationVersionDataType_Encoding_DefaultXml = 14803;

        /// <summary>
        /// The identifier for the DataSetMetaDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataSetMetaDataType_Encoding_DefaultXml = 14794;

        /// <summary>
        /// The identifier for the FieldMetaData_Encoding_DefaultXml Object.
        /// </summary>
        public const uint FieldMetaData_Encoding_DefaultXml = 14795;

        /// <summary>
        /// The identifier for the DataTypeDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataTypeDescription_Encoding_DefaultXml = 14796;

        /// <summary>
        /// The identifier for the StructureDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint StructureDescription_Encoding_DefaultXml = 15589;

        /// <summary>
        /// The identifier for the EnumDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EnumDescription_Encoding_DefaultXml = 15590;

        /// <summary>
        /// The identifier for the KeyValuePair_Encoding_DefaultXml Object.
        /// </summary>
        public const uint KeyValuePair_Encoding_DefaultXml = 14802;

        /// <summary>
        /// The identifier for the PublishedVariableDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint PublishedVariableDataType_Encoding_DefaultXml = 14319;

        /// <summary>
        /// The identifier for the DataConnectionDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataConnectionDataType_Encoding_DefaultXml = 14804;

        /// <summary>
        /// The identifier for the Node_Encoding_DefaultXml Object.
        /// </summary>
        public const uint Node_Encoding_DefaultXml = 259;

        /// <summary>
        /// The identifier for the InstanceNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint InstanceNode_Encoding_DefaultXml = 11887;

        /// <summary>
        /// The identifier for the TypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TypeNode_Encoding_DefaultXml = 11888;

        /// <summary>
        /// The identifier for the ObjectNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ObjectNode_Encoding_DefaultXml = 262;

        /// <summary>
        /// The identifier for the ObjectTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ObjectTypeNode_Encoding_DefaultXml = 265;

        /// <summary>
        /// The identifier for the VariableNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint VariableNode_Encoding_DefaultXml = 268;

        /// <summary>
        /// The identifier for the VariableTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint VariableTypeNode_Encoding_DefaultXml = 271;

        /// <summary>
        /// The identifier for the ReferenceTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReferenceTypeNode_Encoding_DefaultXml = 274;

        /// <summary>
        /// The identifier for the MethodNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MethodNode_Encoding_DefaultXml = 277;

        /// <summary>
        /// The identifier for the ViewNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ViewNode_Encoding_DefaultXml = 280;

        /// <summary>
        /// The identifier for the DataTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataTypeNode_Encoding_DefaultXml = 283;

        /// <summary>
        /// The identifier for the ReferenceNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReferenceNode_Encoding_DefaultXml = 286;

        /// <summary>
        /// The identifier for the Argument_Encoding_DefaultXml Object.
        /// </summary>
        public const uint Argument_Encoding_DefaultXml = 297;

        /// <summary>
        /// The identifier for the EnumValueType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EnumValueType_Encoding_DefaultXml = 7616;

        /// <summary>
        /// The identifier for the EnumField_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EnumField_Encoding_DefaultXml = 14801;

        /// <summary>
        /// The identifier for the OptionSet_Encoding_DefaultXml Object.
        /// </summary>
        public const uint OptionSet_Encoding_DefaultXml = 12757;

        /// <summary>
        /// The identifier for the Union_Encoding_DefaultXml Object.
        /// </summary>
        public const uint Union_Encoding_DefaultXml = 12758;

        /// <summary>
        /// The identifier for the TimeZoneDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TimeZoneDataType_Encoding_DefaultXml = 8913;

        /// <summary>
        /// The identifier for the ApplicationDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ApplicationDescription_Encoding_DefaultXml = 309;

        /// <summary>
        /// The identifier for the RequestHeader_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RequestHeader_Encoding_DefaultXml = 390;

        /// <summary>
        /// The identifier for the ResponseHeader_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ResponseHeader_Encoding_DefaultXml = 393;

        /// <summary>
        /// The identifier for the ServiceFault_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ServiceFault_Encoding_DefaultXml = 396;

        /// <summary>
        /// The identifier for the SessionLessServiceMessageType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SessionLessServiceMessageType_Encoding_DefaultXml = 15902;

        /// <summary>
        /// The identifier for the FindServersRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint FindServersRequest_Encoding_DefaultXml = 421;

        /// <summary>
        /// The identifier for the FindServersResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint FindServersResponse_Encoding_DefaultXml = 424;

        /// <summary>
        /// The identifier for the ServerOnNetwork_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ServerOnNetwork_Encoding_DefaultXml = 12195;

        /// <summary>
        /// The identifier for the FindServersOnNetworkRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint FindServersOnNetworkRequest_Encoding_DefaultXml = 12196;

        /// <summary>
        /// The identifier for the FindServersOnNetworkResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint FindServersOnNetworkResponse_Encoding_DefaultXml = 12197;

        /// <summary>
        /// The identifier for the UserTokenPolicy_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UserTokenPolicy_Encoding_DefaultXml = 305;

        /// <summary>
        /// The identifier for the EndpointDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EndpointDescription_Encoding_DefaultXml = 313;

        /// <summary>
        /// The identifier for the GetEndpointsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint GetEndpointsRequest_Encoding_DefaultXml = 427;

        /// <summary>
        /// The identifier for the GetEndpointsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint GetEndpointsResponse_Encoding_DefaultXml = 430;

        /// <summary>
        /// The identifier for the RegisteredServer_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisteredServer_Encoding_DefaultXml = 433;

        /// <summary>
        /// The identifier for the RegisterServerRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterServerRequest_Encoding_DefaultXml = 436;

        /// <summary>
        /// The identifier for the RegisterServerResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterServerResponse_Encoding_DefaultXml = 439;

        /// <summary>
        /// The identifier for the DiscoveryConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DiscoveryConfiguration_Encoding_DefaultXml = 12892;

        /// <summary>
        /// The identifier for the MdnsDiscoveryConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MdnsDiscoveryConfiguration_Encoding_DefaultXml = 12893;

        /// <summary>
        /// The identifier for the RegisterServer2Request_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterServer2Request_Encoding_DefaultXml = 12199;

        /// <summary>
        /// The identifier for the RegisterServer2Response_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterServer2Response_Encoding_DefaultXml = 12200;

        /// <summary>
        /// The identifier for the ChannelSecurityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ChannelSecurityToken_Encoding_DefaultXml = 442;

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint OpenSecureChannelRequest_Encoding_DefaultXml = 445;

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint OpenSecureChannelResponse_Encoding_DefaultXml = 448;

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CloseSecureChannelRequest_Encoding_DefaultXml = 451;

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CloseSecureChannelResponse_Encoding_DefaultXml = 454;

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SignedSoftwareCertificate_Encoding_DefaultXml = 345;

        /// <summary>
        /// The identifier for the SignatureData_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SignatureData_Encoding_DefaultXml = 457;

        /// <summary>
        /// The identifier for the CreateSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateSessionRequest_Encoding_DefaultXml = 460;

        /// <summary>
        /// The identifier for the CreateSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateSessionResponse_Encoding_DefaultXml = 463;

        /// <summary>
        /// The identifier for the UserIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UserIdentityToken_Encoding_DefaultXml = 317;

        /// <summary>
        /// The identifier for the AnonymousIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AnonymousIdentityToken_Encoding_DefaultXml = 320;

        /// <summary>
        /// The identifier for the UserNameIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UserNameIdentityToken_Encoding_DefaultXml = 323;

        /// <summary>
        /// The identifier for the X509IdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint X509IdentityToken_Encoding_DefaultXml = 326;

        /// <summary>
        /// The identifier for the IssuedIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint IssuedIdentityToken_Encoding_DefaultXml = 939;

        /// <summary>
        /// The identifier for the ActivateSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ActivateSessionRequest_Encoding_DefaultXml = 466;

        /// <summary>
        /// The identifier for the ActivateSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ActivateSessionResponse_Encoding_DefaultXml = 469;

        /// <summary>
        /// The identifier for the CloseSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CloseSessionRequest_Encoding_DefaultXml = 472;

        /// <summary>
        /// The identifier for the CloseSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CloseSessionResponse_Encoding_DefaultXml = 475;

        /// <summary>
        /// The identifier for the CancelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CancelRequest_Encoding_DefaultXml = 478;

        /// <summary>
        /// The identifier for the CancelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CancelResponse_Encoding_DefaultXml = 481;

        /// <summary>
        /// The identifier for the NodeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NodeAttributes_Encoding_DefaultXml = 350;

        /// <summary>
        /// The identifier for the ObjectAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ObjectAttributes_Encoding_DefaultXml = 353;

        /// <summary>
        /// The identifier for the VariableAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint VariableAttributes_Encoding_DefaultXml = 356;

        /// <summary>
        /// The identifier for the MethodAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MethodAttributes_Encoding_DefaultXml = 359;

        /// <summary>
        /// The identifier for the ObjectTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ObjectTypeAttributes_Encoding_DefaultXml = 362;

        /// <summary>
        /// The identifier for the VariableTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint VariableTypeAttributes_Encoding_DefaultXml = 365;

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReferenceTypeAttributes_Encoding_DefaultXml = 368;

        /// <summary>
        /// The identifier for the DataTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataTypeAttributes_Encoding_DefaultXml = 371;

        /// <summary>
        /// The identifier for the ViewAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ViewAttributes_Encoding_DefaultXml = 374;

        /// <summary>
        /// The identifier for the AddNodesItem_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddNodesItem_Encoding_DefaultXml = 377;

        /// <summary>
        /// The identifier for the AddNodesResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddNodesResult_Encoding_DefaultXml = 484;

        /// <summary>
        /// The identifier for the AddNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddNodesRequest_Encoding_DefaultXml = 487;

        /// <summary>
        /// The identifier for the AddNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddNodesResponse_Encoding_DefaultXml = 490;

        /// <summary>
        /// The identifier for the AddReferencesItem_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddReferencesItem_Encoding_DefaultXml = 380;

        /// <summary>
        /// The identifier for the AddReferencesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddReferencesRequest_Encoding_DefaultXml = 493;

        /// <summary>
        /// The identifier for the AddReferencesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddReferencesResponse_Encoding_DefaultXml = 496;

        /// <summary>
        /// The identifier for the DeleteNodesItem_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteNodesItem_Encoding_DefaultXml = 383;

        /// <summary>
        /// The identifier for the DeleteNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteNodesRequest_Encoding_DefaultXml = 499;

        /// <summary>
        /// The identifier for the DeleteNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteNodesResponse_Encoding_DefaultXml = 502;

        /// <summary>
        /// The identifier for the DeleteReferencesItem_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteReferencesItem_Encoding_DefaultXml = 386;

        /// <summary>
        /// The identifier for the DeleteReferencesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteReferencesRequest_Encoding_DefaultXml = 505;

        /// <summary>
        /// The identifier for the DeleteReferencesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteReferencesResponse_Encoding_DefaultXml = 508;

        /// <summary>
        /// The identifier for the ViewDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ViewDescription_Encoding_DefaultXml = 512;

        /// <summary>
        /// The identifier for the BrowseDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseDescription_Encoding_DefaultXml = 515;

        /// <summary>
        /// The identifier for the ReferenceDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReferenceDescription_Encoding_DefaultXml = 519;

        /// <summary>
        /// The identifier for the BrowseResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseResult_Encoding_DefaultXml = 523;

        /// <summary>
        /// The identifier for the BrowseRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseRequest_Encoding_DefaultXml = 526;

        /// <summary>
        /// The identifier for the BrowseResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseResponse_Encoding_DefaultXml = 529;

        /// <summary>
        /// The identifier for the BrowseNextRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseNextRequest_Encoding_DefaultXml = 532;

        /// <summary>
        /// The identifier for the BrowseNextResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseNextResponse_Encoding_DefaultXml = 535;

        /// <summary>
        /// The identifier for the RelativePathElement_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RelativePathElement_Encoding_DefaultXml = 538;

        /// <summary>
        /// The identifier for the RelativePath_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RelativePath_Encoding_DefaultXml = 541;

        /// <summary>
        /// The identifier for the BrowsePath_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowsePath_Encoding_DefaultXml = 544;

        /// <summary>
        /// The identifier for the BrowsePathTarget_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowsePathTarget_Encoding_DefaultXml = 547;

        /// <summary>
        /// The identifier for the BrowsePathResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowsePathResult_Encoding_DefaultXml = 550;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml = 553;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml = 556;

        /// <summary>
        /// The identifier for the RegisterNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterNodesRequest_Encoding_DefaultXml = 559;

        /// <summary>
        /// The identifier for the RegisterNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterNodesResponse_Encoding_DefaultXml = 562;

        /// <summary>
        /// The identifier for the UnregisterNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UnregisterNodesRequest_Encoding_DefaultXml = 565;

        /// <summary>
        /// The identifier for the UnregisterNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UnregisterNodesResponse_Encoding_DefaultXml = 568;

        /// <summary>
        /// The identifier for the EndpointConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EndpointConfiguration_Encoding_DefaultXml = 332;

        /// <summary>
        /// The identifier for the QueryDataDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryDataDescription_Encoding_DefaultXml = 571;

        /// <summary>
        /// The identifier for the NodeTypeDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NodeTypeDescription_Encoding_DefaultXml = 574;

        /// <summary>
        /// The identifier for the QueryDataSet_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryDataSet_Encoding_DefaultXml = 578;

        /// <summary>
        /// The identifier for the NodeReference_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NodeReference_Encoding_DefaultXml = 581;

        /// <summary>
        /// The identifier for the ContentFilterElement_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ContentFilterElement_Encoding_DefaultXml = 584;

        /// <summary>
        /// The identifier for the ContentFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ContentFilter_Encoding_DefaultXml = 587;

        /// <summary>
        /// The identifier for the FilterOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint FilterOperand_Encoding_DefaultXml = 590;

        /// <summary>
        /// The identifier for the ElementOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ElementOperand_Encoding_DefaultXml = 593;

        /// <summary>
        /// The identifier for the LiteralOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint LiteralOperand_Encoding_DefaultXml = 596;

        /// <summary>
        /// The identifier for the AttributeOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AttributeOperand_Encoding_DefaultXml = 599;

        /// <summary>
        /// The identifier for the SimpleAttributeOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SimpleAttributeOperand_Encoding_DefaultXml = 602;

        /// <summary>
        /// The identifier for the ContentFilterElementResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ContentFilterElementResult_Encoding_DefaultXml = 605;

        /// <summary>
        /// The identifier for the ContentFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ContentFilterResult_Encoding_DefaultXml = 608;

        /// <summary>
        /// The identifier for the ParsingResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ParsingResult_Encoding_DefaultXml = 611;

        /// <summary>
        /// The identifier for the QueryFirstRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryFirstRequest_Encoding_DefaultXml = 614;

        /// <summary>
        /// The identifier for the QueryFirstResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryFirstResponse_Encoding_DefaultXml = 617;

        /// <summary>
        /// The identifier for the QueryNextRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryNextRequest_Encoding_DefaultXml = 620;

        /// <summary>
        /// The identifier for the QueryNextResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryNextResponse_Encoding_DefaultXml = 623;

        /// <summary>
        /// The identifier for the ReadValueId_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadValueId_Encoding_DefaultXml = 627;

        /// <summary>
        /// The identifier for the ReadRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadRequest_Encoding_DefaultXml = 630;

        /// <summary>
        /// The identifier for the ReadResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadResponse_Encoding_DefaultXml = 633;

        /// <summary>
        /// The identifier for the HistoryReadValueId_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadValueId_Encoding_DefaultXml = 636;

        /// <summary>
        /// The identifier for the HistoryReadResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadResult_Encoding_DefaultXml = 639;

        /// <summary>
        /// The identifier for the HistoryReadDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadDetails_Encoding_DefaultXml = 642;

        /// <summary>
        /// The identifier for the ReadEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadEventDetails_Encoding_DefaultXml = 645;

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadRawModifiedDetails_Encoding_DefaultXml = 648;

        /// <summary>
        /// The identifier for the ReadProcessedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadProcessedDetails_Encoding_DefaultXml = 651;

        /// <summary>
        /// The identifier for the ReadAtTimeDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadAtTimeDetails_Encoding_DefaultXml = 654;

        /// <summary>
        /// The identifier for the HistoryData_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryData_Encoding_DefaultXml = 657;

        /// <summary>
        /// The identifier for the ModificationInfo_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModificationInfo_Encoding_DefaultXml = 11218;

        /// <summary>
        /// The identifier for the HistoryModifiedData_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryModifiedData_Encoding_DefaultXml = 11219;

        /// <summary>
        /// The identifier for the HistoryEvent_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryEvent_Encoding_DefaultXml = 660;

        /// <summary>
        /// The identifier for the HistoryReadRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadRequest_Encoding_DefaultXml = 663;

        /// <summary>
        /// The identifier for the HistoryReadResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadResponse_Encoding_DefaultXml = 666;

        /// <summary>
        /// The identifier for the WriteValue_Encoding_DefaultXml Object.
        /// </summary>
        public const uint WriteValue_Encoding_DefaultXml = 669;

        /// <summary>
        /// The identifier for the WriteRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint WriteRequest_Encoding_DefaultXml = 672;

        /// <summary>
        /// The identifier for the WriteResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint WriteResponse_Encoding_DefaultXml = 675;

        /// <summary>
        /// The identifier for the HistoryUpdateDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryUpdateDetails_Encoding_DefaultXml = 678;

        /// <summary>
        /// The identifier for the UpdateDataDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UpdateDataDetails_Encoding_DefaultXml = 681;

        /// <summary>
        /// The identifier for the UpdateStructureDataDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UpdateStructureDataDetails_Encoding_DefaultXml = 11296;

        /// <summary>
        /// The identifier for the UpdateEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UpdateEventDetails_Encoding_DefaultXml = 684;

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteRawModifiedDetails_Encoding_DefaultXml = 687;

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteAtTimeDetails_Encoding_DefaultXml = 690;

        /// <summary>
        /// The identifier for the DeleteEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteEventDetails_Encoding_DefaultXml = 693;

        /// <summary>
        /// The identifier for the HistoryUpdateResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryUpdateResult_Encoding_DefaultXml = 696;

        /// <summary>
        /// The identifier for the HistoryUpdateRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryUpdateRequest_Encoding_DefaultXml = 699;

        /// <summary>
        /// The identifier for the HistoryUpdateResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryUpdateResponse_Encoding_DefaultXml = 702;

        /// <summary>
        /// The identifier for the CallMethodRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CallMethodRequest_Encoding_DefaultXml = 705;

        /// <summary>
        /// The identifier for the CallMethodResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CallMethodResult_Encoding_DefaultXml = 708;

        /// <summary>
        /// The identifier for the CallRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CallRequest_Encoding_DefaultXml = 711;

        /// <summary>
        /// The identifier for the CallResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CallResponse_Encoding_DefaultXml = 714;

        /// <summary>
        /// The identifier for the MonitoringFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoringFilter_Encoding_DefaultXml = 720;

        /// <summary>
        /// The identifier for the DataChangeFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataChangeFilter_Encoding_DefaultXml = 723;

        /// <summary>
        /// The identifier for the EventFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EventFilter_Encoding_DefaultXml = 726;

        /// <summary>
        /// The identifier for the AggregateConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AggregateConfiguration_Encoding_DefaultXml = 949;

        /// <summary>
        /// The identifier for the AggregateFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AggregateFilter_Encoding_DefaultXml = 729;

        /// <summary>
        /// The identifier for the MonitoringFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoringFilterResult_Encoding_DefaultXml = 732;

        /// <summary>
        /// The identifier for the EventFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EventFilterResult_Encoding_DefaultXml = 735;

        /// <summary>
        /// The identifier for the AggregateFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AggregateFilterResult_Encoding_DefaultXml = 738;

        /// <summary>
        /// The identifier for the MonitoringParameters_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoringParameters_Encoding_DefaultXml = 741;

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemCreateRequest_Encoding_DefaultXml = 744;

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemCreateResult_Encoding_DefaultXml = 747;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateMonitoredItemsRequest_Encoding_DefaultXml = 750;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateMonitoredItemsResponse_Encoding_DefaultXml = 753;

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemModifyRequest_Encoding_DefaultXml = 756;

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemModifyResult_Encoding_DefaultXml = 759;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModifyMonitoredItemsRequest_Encoding_DefaultXml = 762;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModifyMonitoredItemsResponse_Encoding_DefaultXml = 765;

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetMonitoringModeRequest_Encoding_DefaultXml = 768;

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetMonitoringModeResponse_Encoding_DefaultXml = 771;

        /// <summary>
        /// The identifier for the SetTriggeringRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetTriggeringRequest_Encoding_DefaultXml = 774;

        /// <summary>
        /// The identifier for the SetTriggeringResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetTriggeringResponse_Encoding_DefaultXml = 777;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteMonitoredItemsRequest_Encoding_DefaultXml = 780;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteMonitoredItemsResponse_Encoding_DefaultXml = 783;

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateSubscriptionRequest_Encoding_DefaultXml = 786;

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateSubscriptionResponse_Encoding_DefaultXml = 789;

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModifySubscriptionRequest_Encoding_DefaultXml = 792;

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModifySubscriptionResponse_Encoding_DefaultXml = 795;

        /// <summary>
        /// The identifier for the SetPublishingModeRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetPublishingModeRequest_Encoding_DefaultXml = 798;

        /// <summary>
        /// The identifier for the SetPublishingModeResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetPublishingModeResponse_Encoding_DefaultXml = 801;

        /// <summary>
        /// The identifier for the NotificationMessage_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NotificationMessage_Encoding_DefaultXml = 804;

        /// <summary>
        /// The identifier for the NotificationData_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NotificationData_Encoding_DefaultXml = 946;

        /// <summary>
        /// The identifier for the DataChangeNotification_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataChangeNotification_Encoding_DefaultXml = 810;

        /// <summary>
        /// The identifier for the MonitoredItemNotification_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemNotification_Encoding_DefaultXml = 807;

        /// <summary>
        /// The identifier for the EventNotificationList_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EventNotificationList_Encoding_DefaultXml = 915;

        /// <summary>
        /// The identifier for the EventFieldList_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EventFieldList_Encoding_DefaultXml = 918;

        /// <summary>
        /// The identifier for the HistoryEventFieldList_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryEventFieldList_Encoding_DefaultXml = 921;

        /// <summary>
        /// The identifier for the StatusChangeNotification_Encoding_DefaultXml Object.
        /// </summary>
        public const uint StatusChangeNotification_Encoding_DefaultXml = 819;

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SubscriptionAcknowledgement_Encoding_DefaultXml = 822;

        /// <summary>
        /// The identifier for the PublishRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint PublishRequest_Encoding_DefaultXml = 825;

        /// <summary>
        /// The identifier for the PublishResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint PublishResponse_Encoding_DefaultXml = 828;

        /// <summary>
        /// The identifier for the RepublishRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RepublishRequest_Encoding_DefaultXml = 831;

        /// <summary>
        /// The identifier for the RepublishResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RepublishResponse_Encoding_DefaultXml = 834;

        /// <summary>
        /// The identifier for the TransferResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TransferResult_Encoding_DefaultXml = 837;

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TransferSubscriptionsRequest_Encoding_DefaultXml = 840;

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TransferSubscriptionsResponse_Encoding_DefaultXml = 843;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteSubscriptionsRequest_Encoding_DefaultXml = 846;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteSubscriptionsResponse_Encoding_DefaultXml = 849;

        /// <summary>
        /// The identifier for the BuildInfo_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BuildInfo_Encoding_DefaultXml = 339;

        /// <summary>
        /// The identifier for the RedundantServerDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RedundantServerDataType_Encoding_DefaultXml = 854;

        /// <summary>
        /// The identifier for the EndpointUrlListDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EndpointUrlListDataType_Encoding_DefaultXml = 11949;

        /// <summary>
        /// The identifier for the NetworkGroupDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NetworkGroupDataType_Encoding_DefaultXml = 11950;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml = 857;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ServerDiagnosticsSummaryDataType_Encoding_DefaultXml = 860;

        /// <summary>
        /// The identifier for the ServerStatusDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ServerStatusDataType_Encoding_DefaultXml = 863;

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SessionDiagnosticsDataType_Encoding_DefaultXml = 866;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SessionSecurityDiagnosticsDataType_Encoding_DefaultXml = 869;

        /// <summary>
        /// The identifier for the ServiceCounterDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ServiceCounterDataType_Encoding_DefaultXml = 872;

        /// <summary>
        /// The identifier for the StatusResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint StatusResult_Encoding_DefaultXml = 300;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SubscriptionDiagnosticsDataType_Encoding_DefaultXml = 875;

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModelChangeStructureDataType_Encoding_DefaultXml = 878;

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SemanticChangeStructureDataType_Encoding_DefaultXml = 898;

        /// <summary>
        /// The identifier for the Range_Encoding_DefaultXml Object.
        /// </summary>
        public const uint Range_Encoding_DefaultXml = 885;

        /// <summary>
        /// The identifier for the EUInformation_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EUInformation_Encoding_DefaultXml = 888;

        /// <summary>
        /// The identifier for the ComplexNumberType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ComplexNumberType_Encoding_DefaultXml = 12173;

        /// <summary>
        /// The identifier for the DoubleComplexNumberType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DoubleComplexNumberType_Encoding_DefaultXml = 12174;

        /// <summary>
        /// The identifier for the AxisInformation_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AxisInformation_Encoding_DefaultXml = 12081;

        /// <summary>
        /// The identifier for the XVType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint XVType_Encoding_DefaultXml = 12082;

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ProgramDiagnosticDataType_Encoding_DefaultXml = 895;

        /// <summary>
        /// The identifier for the Annotation_Encoding_DefaultXml Object.
        /// </summary>
        public const uint Annotation_Encoding_DefaultXml = 892;

        /// <summary>
        /// The identifier for the TrustListDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TrustListDataType_Encoding_DefaultBinary = 12680;

        /// <summary>
        /// The identifier for the DataTypeDefinition_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataTypeDefinition_Encoding_DefaultBinary = 14841;

        /// <summary>
        /// The identifier for the StructureDefinition_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint StructureDefinition_Encoding_DefaultBinary = 14842;

        /// <summary>
        /// The identifier for the EnumDefinition_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EnumDefinition_Encoding_DefaultBinary = 14843;

        /// <summary>
        /// The identifier for the StructureField_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint StructureField_Encoding_DefaultBinary = 14844;

        /// <summary>
        /// The identifier for the IdentityMappingRuleType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint IdentityMappingRuleType_Encoding_DefaultBinary = 15736;

        /// <summary>
        /// The identifier for the ApplicationPermissionRuleType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ApplicationPermissionRuleType_Encoding_DefaultBinary = 15737;

        /// <summary>
        /// The identifier for the ConfigurationVersionDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ConfigurationVersionDataType_Encoding_DefaultBinary = 14847;

        /// <summary>
        /// The identifier for the DataSetMetaDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataSetMetaDataType_Encoding_DefaultBinary = 14838;

        /// <summary>
        /// The identifier for the FieldMetaData_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint FieldMetaData_Encoding_DefaultBinary = 14839;

        /// <summary>
        /// The identifier for the DataTypeDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataTypeDescription_Encoding_DefaultBinary = 14840;

        /// <summary>
        /// The identifier for the StructureDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint StructureDescription_Encoding_DefaultBinary = 15597;

        /// <summary>
        /// The identifier for the EnumDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EnumDescription_Encoding_DefaultBinary = 15598;

        /// <summary>
        /// The identifier for the KeyValuePair_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint KeyValuePair_Encoding_DefaultBinary = 14846;

        /// <summary>
        /// The identifier for the PublishedVariableDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint PublishedVariableDataType_Encoding_DefaultBinary = 14323;

        /// <summary>
        /// The identifier for the DataConnectionDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataConnectionDataType_Encoding_DefaultBinary = 14848;

        /// <summary>
        /// The identifier for the Node_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint Node_Encoding_DefaultBinary = 260;

        /// <summary>
        /// The identifier for the InstanceNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint InstanceNode_Encoding_DefaultBinary = 11889;

        /// <summary>
        /// The identifier for the TypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TypeNode_Encoding_DefaultBinary = 11890;

        /// <summary>
        /// The identifier for the ObjectNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ObjectNode_Encoding_DefaultBinary = 263;

        /// <summary>
        /// The identifier for the ObjectTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ObjectTypeNode_Encoding_DefaultBinary = 266;

        /// <summary>
        /// The identifier for the VariableNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint VariableNode_Encoding_DefaultBinary = 269;

        /// <summary>
        /// The identifier for the VariableTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint VariableTypeNode_Encoding_DefaultBinary = 272;

        /// <summary>
        /// The identifier for the ReferenceTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReferenceTypeNode_Encoding_DefaultBinary = 275;

        /// <summary>
        /// The identifier for the MethodNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MethodNode_Encoding_DefaultBinary = 278;

        /// <summary>
        /// The identifier for the ViewNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ViewNode_Encoding_DefaultBinary = 281;

        /// <summary>
        /// The identifier for the DataTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataTypeNode_Encoding_DefaultBinary = 284;

        /// <summary>
        /// The identifier for the ReferenceNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReferenceNode_Encoding_DefaultBinary = 287;

        /// <summary>
        /// The identifier for the Argument_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint Argument_Encoding_DefaultBinary = 298;

        /// <summary>
        /// The identifier for the EnumValueType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EnumValueType_Encoding_DefaultBinary = 8251;

        /// <summary>
        /// The identifier for the EnumField_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EnumField_Encoding_DefaultBinary = 14845;

        /// <summary>
        /// The identifier for the OptionSet_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint OptionSet_Encoding_DefaultBinary = 12765;

        /// <summary>
        /// The identifier for the Union_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint Union_Encoding_DefaultBinary = 12766;

        /// <summary>
        /// The identifier for the TimeZoneDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TimeZoneDataType_Encoding_DefaultBinary = 8917;

        /// <summary>
        /// The identifier for the ApplicationDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ApplicationDescription_Encoding_DefaultBinary = 310;

        /// <summary>
        /// The identifier for the RequestHeader_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RequestHeader_Encoding_DefaultBinary = 391;

        /// <summary>
        /// The identifier for the ResponseHeader_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ResponseHeader_Encoding_DefaultBinary = 394;

        /// <summary>
        /// The identifier for the ServiceFault_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ServiceFault_Encoding_DefaultBinary = 397;

        /// <summary>
        /// The identifier for the SessionLessServiceMessageType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SessionLessServiceMessageType_Encoding_DefaultBinary = 15903;

        /// <summary>
        /// The identifier for the FindServersRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint FindServersRequest_Encoding_DefaultBinary = 422;

        /// <summary>
        /// The identifier for the FindServersResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint FindServersResponse_Encoding_DefaultBinary = 425;

        /// <summary>
        /// The identifier for the ServerOnNetwork_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ServerOnNetwork_Encoding_DefaultBinary = 12207;

        /// <summary>
        /// The identifier for the FindServersOnNetworkRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint FindServersOnNetworkRequest_Encoding_DefaultBinary = 12208;

        /// <summary>
        /// The identifier for the FindServersOnNetworkResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint FindServersOnNetworkResponse_Encoding_DefaultBinary = 12209;

        /// <summary>
        /// The identifier for the UserTokenPolicy_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UserTokenPolicy_Encoding_DefaultBinary = 306;

        /// <summary>
        /// The identifier for the EndpointDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EndpointDescription_Encoding_DefaultBinary = 314;

        /// <summary>
        /// The identifier for the GetEndpointsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint GetEndpointsRequest_Encoding_DefaultBinary = 428;

        /// <summary>
        /// The identifier for the GetEndpointsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint GetEndpointsResponse_Encoding_DefaultBinary = 431;

        /// <summary>
        /// The identifier for the RegisteredServer_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisteredServer_Encoding_DefaultBinary = 434;

        /// <summary>
        /// The identifier for the RegisterServerRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterServerRequest_Encoding_DefaultBinary = 437;

        /// <summary>
        /// The identifier for the RegisterServerResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterServerResponse_Encoding_DefaultBinary = 440;

        /// <summary>
        /// The identifier for the DiscoveryConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DiscoveryConfiguration_Encoding_DefaultBinary = 12900;

        /// <summary>
        /// The identifier for the MdnsDiscoveryConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MdnsDiscoveryConfiguration_Encoding_DefaultBinary = 12901;

        /// <summary>
        /// The identifier for the RegisterServer2Request_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterServer2Request_Encoding_DefaultBinary = 12211;

        /// <summary>
        /// The identifier for the RegisterServer2Response_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterServer2Response_Encoding_DefaultBinary = 12212;

        /// <summary>
        /// The identifier for the ChannelSecurityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ChannelSecurityToken_Encoding_DefaultBinary = 443;

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint OpenSecureChannelRequest_Encoding_DefaultBinary = 446;

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint OpenSecureChannelResponse_Encoding_DefaultBinary = 449;

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CloseSecureChannelRequest_Encoding_DefaultBinary = 452;

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CloseSecureChannelResponse_Encoding_DefaultBinary = 455;

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SignedSoftwareCertificate_Encoding_DefaultBinary = 346;

        /// <summary>
        /// The identifier for the SignatureData_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SignatureData_Encoding_DefaultBinary = 458;

        /// <summary>
        /// The identifier for the CreateSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateSessionRequest_Encoding_DefaultBinary = 461;

        /// <summary>
        /// The identifier for the CreateSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateSessionResponse_Encoding_DefaultBinary = 464;

        /// <summary>
        /// The identifier for the UserIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UserIdentityToken_Encoding_DefaultBinary = 318;

        /// <summary>
        /// The identifier for the AnonymousIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AnonymousIdentityToken_Encoding_DefaultBinary = 321;

        /// <summary>
        /// The identifier for the UserNameIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UserNameIdentityToken_Encoding_DefaultBinary = 324;

        /// <summary>
        /// The identifier for the X509IdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint X509IdentityToken_Encoding_DefaultBinary = 327;

        /// <summary>
        /// The identifier for the IssuedIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint IssuedIdentityToken_Encoding_DefaultBinary = 940;

        /// <summary>
        /// The identifier for the ActivateSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ActivateSessionRequest_Encoding_DefaultBinary = 467;

        /// <summary>
        /// The identifier for the ActivateSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ActivateSessionResponse_Encoding_DefaultBinary = 470;

        /// <summary>
        /// The identifier for the CloseSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CloseSessionRequest_Encoding_DefaultBinary = 473;

        /// <summary>
        /// The identifier for the CloseSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CloseSessionResponse_Encoding_DefaultBinary = 476;

        /// <summary>
        /// The identifier for the CancelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CancelRequest_Encoding_DefaultBinary = 479;

        /// <summary>
        /// The identifier for the CancelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CancelResponse_Encoding_DefaultBinary = 482;

        /// <summary>
        /// The identifier for the NodeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NodeAttributes_Encoding_DefaultBinary = 351;

        /// <summary>
        /// The identifier for the ObjectAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ObjectAttributes_Encoding_DefaultBinary = 354;

        /// <summary>
        /// The identifier for the VariableAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint VariableAttributes_Encoding_DefaultBinary = 357;

        /// <summary>
        /// The identifier for the MethodAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MethodAttributes_Encoding_DefaultBinary = 360;

        /// <summary>
        /// The identifier for the ObjectTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ObjectTypeAttributes_Encoding_DefaultBinary = 363;

        /// <summary>
        /// The identifier for the VariableTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint VariableTypeAttributes_Encoding_DefaultBinary = 366;

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReferenceTypeAttributes_Encoding_DefaultBinary = 369;

        /// <summary>
        /// The identifier for the DataTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataTypeAttributes_Encoding_DefaultBinary = 372;

        /// <summary>
        /// The identifier for the ViewAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ViewAttributes_Encoding_DefaultBinary = 375;

        /// <summary>
        /// The identifier for the AddNodesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddNodesItem_Encoding_DefaultBinary = 378;

        /// <summary>
        /// The identifier for the AddNodesResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddNodesResult_Encoding_DefaultBinary = 485;

        /// <summary>
        /// The identifier for the AddNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddNodesRequest_Encoding_DefaultBinary = 488;

        /// <summary>
        /// The identifier for the AddNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddNodesResponse_Encoding_DefaultBinary = 491;

        /// <summary>
        /// The identifier for the AddReferencesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddReferencesItem_Encoding_DefaultBinary = 381;

        /// <summary>
        /// The identifier for the AddReferencesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddReferencesRequest_Encoding_DefaultBinary = 494;

        /// <summary>
        /// The identifier for the AddReferencesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddReferencesResponse_Encoding_DefaultBinary = 497;

        /// <summary>
        /// The identifier for the DeleteNodesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteNodesItem_Encoding_DefaultBinary = 384;

        /// <summary>
        /// The identifier for the DeleteNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteNodesRequest_Encoding_DefaultBinary = 500;

        /// <summary>
        /// The identifier for the DeleteNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteNodesResponse_Encoding_DefaultBinary = 503;

        /// <summary>
        /// The identifier for the DeleteReferencesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteReferencesItem_Encoding_DefaultBinary = 387;

        /// <summary>
        /// The identifier for the DeleteReferencesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteReferencesRequest_Encoding_DefaultBinary = 506;

        /// <summary>
        /// The identifier for the DeleteReferencesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteReferencesResponse_Encoding_DefaultBinary = 509;

        /// <summary>
        /// The identifier for the ViewDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ViewDescription_Encoding_DefaultBinary = 513;

        /// <summary>
        /// The identifier for the BrowseDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseDescription_Encoding_DefaultBinary = 516;

        /// <summary>
        /// The identifier for the ReferenceDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReferenceDescription_Encoding_DefaultBinary = 520;

        /// <summary>
        /// The identifier for the BrowseResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseResult_Encoding_DefaultBinary = 524;

        /// <summary>
        /// The identifier for the BrowseRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseRequest_Encoding_DefaultBinary = 527;

        /// <summary>
        /// The identifier for the BrowseResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseResponse_Encoding_DefaultBinary = 530;

        /// <summary>
        /// The identifier for the BrowseNextRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseNextRequest_Encoding_DefaultBinary = 533;

        /// <summary>
        /// The identifier for the BrowseNextResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseNextResponse_Encoding_DefaultBinary = 536;

        /// <summary>
        /// The identifier for the RelativePathElement_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RelativePathElement_Encoding_DefaultBinary = 539;

        /// <summary>
        /// The identifier for the RelativePath_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RelativePath_Encoding_DefaultBinary = 542;

        /// <summary>
        /// The identifier for the BrowsePath_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowsePath_Encoding_DefaultBinary = 545;

        /// <summary>
        /// The identifier for the BrowsePathTarget_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowsePathTarget_Encoding_DefaultBinary = 548;

        /// <summary>
        /// The identifier for the BrowsePathResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowsePathResult_Encoding_DefaultBinary = 551;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary = 554;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary = 557;

        /// <summary>
        /// The identifier for the RegisterNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterNodesRequest_Encoding_DefaultBinary = 560;

        /// <summary>
        /// The identifier for the RegisterNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterNodesResponse_Encoding_DefaultBinary = 563;

        /// <summary>
        /// The identifier for the UnregisterNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UnregisterNodesRequest_Encoding_DefaultBinary = 566;

        /// <summary>
        /// The identifier for the UnregisterNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UnregisterNodesResponse_Encoding_DefaultBinary = 569;

        /// <summary>
        /// The identifier for the EndpointConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EndpointConfiguration_Encoding_DefaultBinary = 333;

        /// <summary>
        /// The identifier for the QueryDataDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryDataDescription_Encoding_DefaultBinary = 572;

        /// <summary>
        /// The identifier for the NodeTypeDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NodeTypeDescription_Encoding_DefaultBinary = 575;

        /// <summary>
        /// The identifier for the QueryDataSet_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryDataSet_Encoding_DefaultBinary = 579;

        /// <summary>
        /// The identifier for the NodeReference_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NodeReference_Encoding_DefaultBinary = 582;

        /// <summary>
        /// The identifier for the ContentFilterElement_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ContentFilterElement_Encoding_DefaultBinary = 585;

        /// <summary>
        /// The identifier for the ContentFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ContentFilter_Encoding_DefaultBinary = 588;

        /// <summary>
        /// The identifier for the FilterOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint FilterOperand_Encoding_DefaultBinary = 591;

        /// <summary>
        /// The identifier for the ElementOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ElementOperand_Encoding_DefaultBinary = 594;

        /// <summary>
        /// The identifier for the LiteralOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint LiteralOperand_Encoding_DefaultBinary = 597;

        /// <summary>
        /// The identifier for the AttributeOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AttributeOperand_Encoding_DefaultBinary = 600;

        /// <summary>
        /// The identifier for the SimpleAttributeOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SimpleAttributeOperand_Encoding_DefaultBinary = 603;

        /// <summary>
        /// The identifier for the ContentFilterElementResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ContentFilterElementResult_Encoding_DefaultBinary = 606;

        /// <summary>
        /// The identifier for the ContentFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ContentFilterResult_Encoding_DefaultBinary = 609;

        /// <summary>
        /// The identifier for the ParsingResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ParsingResult_Encoding_DefaultBinary = 612;

        /// <summary>
        /// The identifier for the QueryFirstRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryFirstRequest_Encoding_DefaultBinary = 615;

        /// <summary>
        /// The identifier for the QueryFirstResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryFirstResponse_Encoding_DefaultBinary = 618;

        /// <summary>
        /// The identifier for the QueryNextRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryNextRequest_Encoding_DefaultBinary = 621;

        /// <summary>
        /// The identifier for the QueryNextResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryNextResponse_Encoding_DefaultBinary = 624;

        /// <summary>
        /// The identifier for the ReadValueId_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadValueId_Encoding_DefaultBinary = 628;

        /// <summary>
        /// The identifier for the ReadRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadRequest_Encoding_DefaultBinary = 631;

        /// <summary>
        /// The identifier for the ReadResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadResponse_Encoding_DefaultBinary = 634;

        /// <summary>
        /// The identifier for the HistoryReadValueId_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadValueId_Encoding_DefaultBinary = 637;

        /// <summary>
        /// The identifier for the HistoryReadResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadResult_Encoding_DefaultBinary = 640;

        /// <summary>
        /// The identifier for the HistoryReadDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadDetails_Encoding_DefaultBinary = 643;

        /// <summary>
        /// The identifier for the ReadEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadEventDetails_Encoding_DefaultBinary = 646;

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadRawModifiedDetails_Encoding_DefaultBinary = 649;

        /// <summary>
        /// The identifier for the ReadProcessedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadProcessedDetails_Encoding_DefaultBinary = 652;

        /// <summary>
        /// The identifier for the ReadAtTimeDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadAtTimeDetails_Encoding_DefaultBinary = 655;

        /// <summary>
        /// The identifier for the HistoryData_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryData_Encoding_DefaultBinary = 658;

        /// <summary>
        /// The identifier for the ModificationInfo_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModificationInfo_Encoding_DefaultBinary = 11226;

        /// <summary>
        /// The identifier for the HistoryModifiedData_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryModifiedData_Encoding_DefaultBinary = 11227;

        /// <summary>
        /// The identifier for the HistoryEvent_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryEvent_Encoding_DefaultBinary = 661;

        /// <summary>
        /// The identifier for the HistoryReadRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadRequest_Encoding_DefaultBinary = 664;

        /// <summary>
        /// The identifier for the HistoryReadResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadResponse_Encoding_DefaultBinary = 667;

        /// <summary>
        /// The identifier for the WriteValue_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint WriteValue_Encoding_DefaultBinary = 670;

        /// <summary>
        /// The identifier for the WriteRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint WriteRequest_Encoding_DefaultBinary = 673;

        /// <summary>
        /// The identifier for the WriteResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint WriteResponse_Encoding_DefaultBinary = 676;

        /// <summary>
        /// The identifier for the HistoryUpdateDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryUpdateDetails_Encoding_DefaultBinary = 679;

        /// <summary>
        /// The identifier for the UpdateDataDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UpdateDataDetails_Encoding_DefaultBinary = 682;

        /// <summary>
        /// The identifier for the UpdateStructureDataDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UpdateStructureDataDetails_Encoding_DefaultBinary = 11300;

        /// <summary>
        /// The identifier for the UpdateEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UpdateEventDetails_Encoding_DefaultBinary = 685;

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteRawModifiedDetails_Encoding_DefaultBinary = 688;

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteAtTimeDetails_Encoding_DefaultBinary = 691;

        /// <summary>
        /// The identifier for the DeleteEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteEventDetails_Encoding_DefaultBinary = 694;

        /// <summary>
        /// The identifier for the HistoryUpdateResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryUpdateResult_Encoding_DefaultBinary = 697;

        /// <summary>
        /// The identifier for the HistoryUpdateRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryUpdateRequest_Encoding_DefaultBinary = 700;

        /// <summary>
        /// The identifier for the HistoryUpdateResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryUpdateResponse_Encoding_DefaultBinary = 703;

        /// <summary>
        /// The identifier for the CallMethodRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CallMethodRequest_Encoding_DefaultBinary = 706;

        /// <summary>
        /// The identifier for the CallMethodResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CallMethodResult_Encoding_DefaultBinary = 709;

        /// <summary>
        /// The identifier for the CallRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CallRequest_Encoding_DefaultBinary = 712;

        /// <summary>
        /// The identifier for the CallResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CallResponse_Encoding_DefaultBinary = 715;

        /// <summary>
        /// The identifier for the MonitoringFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoringFilter_Encoding_DefaultBinary = 721;

        /// <summary>
        /// The identifier for the DataChangeFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataChangeFilter_Encoding_DefaultBinary = 724;

        /// <summary>
        /// The identifier for the EventFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EventFilter_Encoding_DefaultBinary = 727;

        /// <summary>
        /// The identifier for the AggregateConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AggregateConfiguration_Encoding_DefaultBinary = 950;

        /// <summary>
        /// The identifier for the AggregateFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AggregateFilter_Encoding_DefaultBinary = 730;

        /// <summary>
        /// The identifier for the MonitoringFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoringFilterResult_Encoding_DefaultBinary = 733;

        /// <summary>
        /// The identifier for the EventFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EventFilterResult_Encoding_DefaultBinary = 736;

        /// <summary>
        /// The identifier for the AggregateFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AggregateFilterResult_Encoding_DefaultBinary = 739;

        /// <summary>
        /// The identifier for the MonitoringParameters_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoringParameters_Encoding_DefaultBinary = 742;

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemCreateRequest_Encoding_DefaultBinary = 745;

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemCreateResult_Encoding_DefaultBinary = 748;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateMonitoredItemsRequest_Encoding_DefaultBinary = 751;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateMonitoredItemsResponse_Encoding_DefaultBinary = 754;

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemModifyRequest_Encoding_DefaultBinary = 757;

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemModifyResult_Encoding_DefaultBinary = 760;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModifyMonitoredItemsRequest_Encoding_DefaultBinary = 763;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModifyMonitoredItemsResponse_Encoding_DefaultBinary = 766;

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetMonitoringModeRequest_Encoding_DefaultBinary = 769;

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetMonitoringModeResponse_Encoding_DefaultBinary = 772;

        /// <summary>
        /// The identifier for the SetTriggeringRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetTriggeringRequest_Encoding_DefaultBinary = 775;

        /// <summary>
        /// The identifier for the SetTriggeringResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetTriggeringResponse_Encoding_DefaultBinary = 778;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteMonitoredItemsRequest_Encoding_DefaultBinary = 781;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteMonitoredItemsResponse_Encoding_DefaultBinary = 784;

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateSubscriptionRequest_Encoding_DefaultBinary = 787;

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateSubscriptionResponse_Encoding_DefaultBinary = 790;

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModifySubscriptionRequest_Encoding_DefaultBinary = 793;

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModifySubscriptionResponse_Encoding_DefaultBinary = 796;

        /// <summary>
        /// The identifier for the SetPublishingModeRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetPublishingModeRequest_Encoding_DefaultBinary = 799;

        /// <summary>
        /// The identifier for the SetPublishingModeResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetPublishingModeResponse_Encoding_DefaultBinary = 802;

        /// <summary>
        /// The identifier for the NotificationMessage_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NotificationMessage_Encoding_DefaultBinary = 805;

        /// <summary>
        /// The identifier for the NotificationData_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NotificationData_Encoding_DefaultBinary = 947;

        /// <summary>
        /// The identifier for the DataChangeNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataChangeNotification_Encoding_DefaultBinary = 811;

        /// <summary>
        /// The identifier for the MonitoredItemNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemNotification_Encoding_DefaultBinary = 808;

        /// <summary>
        /// The identifier for the EventNotificationList_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EventNotificationList_Encoding_DefaultBinary = 916;

        /// <summary>
        /// The identifier for the EventFieldList_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EventFieldList_Encoding_DefaultBinary = 919;

        /// <summary>
        /// The identifier for the HistoryEventFieldList_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryEventFieldList_Encoding_DefaultBinary = 922;

        /// <summary>
        /// The identifier for the StatusChangeNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint StatusChangeNotification_Encoding_DefaultBinary = 820;

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SubscriptionAcknowledgement_Encoding_DefaultBinary = 823;

        /// <summary>
        /// The identifier for the PublishRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint PublishRequest_Encoding_DefaultBinary = 826;

        /// <summary>
        /// The identifier for the PublishResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint PublishResponse_Encoding_DefaultBinary = 829;

        /// <summary>
        /// The identifier for the RepublishRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RepublishRequest_Encoding_DefaultBinary = 832;

        /// <summary>
        /// The identifier for the RepublishResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RepublishResponse_Encoding_DefaultBinary = 835;

        /// <summary>
        /// The identifier for the TransferResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TransferResult_Encoding_DefaultBinary = 838;

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TransferSubscriptionsRequest_Encoding_DefaultBinary = 841;

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TransferSubscriptionsResponse_Encoding_DefaultBinary = 844;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteSubscriptionsRequest_Encoding_DefaultBinary = 847;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteSubscriptionsResponse_Encoding_DefaultBinary = 850;

        /// <summary>
        /// The identifier for the BuildInfo_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BuildInfo_Encoding_DefaultBinary = 340;

        /// <summary>
        /// The identifier for the RedundantServerDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RedundantServerDataType_Encoding_DefaultBinary = 855;

        /// <summary>
        /// The identifier for the EndpointUrlListDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EndpointUrlListDataType_Encoding_DefaultBinary = 11957;

        /// <summary>
        /// The identifier for the NetworkGroupDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NetworkGroupDataType_Encoding_DefaultBinary = 11958;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary = 858;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary = 861;

        /// <summary>
        /// The identifier for the ServerStatusDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ServerStatusDataType_Encoding_DefaultBinary = 864;

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SessionDiagnosticsDataType_Encoding_DefaultBinary = 867;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary = 870;

        /// <summary>
        /// The identifier for the ServiceCounterDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ServiceCounterDataType_Encoding_DefaultBinary = 873;

        /// <summary>
        /// The identifier for the StatusResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint StatusResult_Encoding_DefaultBinary = 301;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SubscriptionDiagnosticsDataType_Encoding_DefaultBinary = 876;

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModelChangeStructureDataType_Encoding_DefaultBinary = 879;

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SemanticChangeStructureDataType_Encoding_DefaultBinary = 899;

        /// <summary>
        /// The identifier for the Range_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint Range_Encoding_DefaultBinary = 886;

        /// <summary>
        /// The identifier for the EUInformation_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EUInformation_Encoding_DefaultBinary = 889;

        /// <summary>
        /// The identifier for the ComplexNumberType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ComplexNumberType_Encoding_DefaultBinary = 12181;

        /// <summary>
        /// The identifier for the DoubleComplexNumberType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DoubleComplexNumberType_Encoding_DefaultBinary = 12182;

        /// <summary>
        /// The identifier for the AxisInformation_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AxisInformation_Encoding_DefaultBinary = 12089;

        /// <summary>
        /// The identifier for the XVType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint XVType_Encoding_DefaultBinary = 12090;

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ProgramDiagnosticDataType_Encoding_DefaultBinary = 896;

        /// <summary>
        /// The identifier for the Annotation_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint Annotation_Encoding_DefaultBinary = 893;
    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectTypes
    {
        /// <summary>
        /// The identifier for the BaseObjectType ObjectType.
        /// </summary>
        public const uint BaseObjectType = 58;

        /// <summary>
        /// The identifier for the FolderType ObjectType.
        /// </summary>
        public const uint FolderType = 61;

        /// <summary>
        /// The identifier for the DataTypeSystemType ObjectType.
        /// </summary>
        public const uint DataTypeSystemType = 75;

        /// <summary>
        /// The identifier for the DataTypeEncodingType ObjectType.
        /// </summary>
        public const uint DataTypeEncodingType = 76;

        /// <summary>
        /// The identifier for the ModellingRuleType ObjectType.
        /// </summary>
        public const uint ModellingRuleType = 77;

        /// <summary>
        /// The identifier for the ServerType ObjectType.
        /// </summary>
        public const uint ServerType = 2004;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType ObjectType.
        /// </summary>
        public const uint ServerCapabilitiesType = 2013;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType ObjectType.
        /// </summary>
        public const uint ServerDiagnosticsType = 2020;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType ObjectType.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType = 2026;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType ObjectType.
        /// </summary>
        public const uint SessionDiagnosticsObjectType = 2029;

        /// <summary>
        /// The identifier for the VendorServerInfoType ObjectType.
        /// </summary>
        public const uint VendorServerInfoType = 2033;

        /// <summary>
        /// The identifier for the ServerRedundancyType ObjectType.
        /// </summary>
        public const uint ServerRedundancyType = 2034;

        /// <summary>
        /// The identifier for the TransparentRedundancyType ObjectType.
        /// </summary>
        public const uint TransparentRedundancyType = 2036;

        /// <summary>
        /// The identifier for the NonTransparentRedundancyType ObjectType.
        /// </summary>
        public const uint NonTransparentRedundancyType = 2039;

        /// <summary>
        /// The identifier for the NonTransparentNetworkRedundancyType ObjectType.
        /// </summary>
        public const uint NonTransparentNetworkRedundancyType = 11945;

        /// <summary>
        /// The identifier for the OperationLimitsType ObjectType.
        /// </summary>
        public const uint OperationLimitsType = 11564;

        /// <summary>
        /// The identifier for the FileType ObjectType.
        /// </summary>
        public const uint FileType = 11575;

        /// <summary>
        /// The identifier for the FileDirectoryType ObjectType.
        /// </summary>
        public const uint FileDirectoryType = 13353;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType ObjectType.
        /// </summary>
        public const uint TemporaryFileTransferType = 15744;

        /// <summary>
        /// The identifier for the AddressSpaceFileType ObjectType.
        /// </summary>
        public const uint AddressSpaceFileType = 11595;

        /// <summary>
        /// The identifier for the NamespaceMetadataType ObjectType.
        /// </summary>
        public const uint NamespaceMetadataType = 11616;

        /// <summary>
        /// The identifier for the NamespacesType ObjectType.
        /// </summary>
        public const uint NamespacesType = 11645;

        /// <summary>
        /// The identifier for the BaseEventType ObjectType.
        /// </summary>
        public const uint BaseEventType = 2041;

        /// <summary>
        /// The identifier for the AuditEventType ObjectType.
        /// </summary>
        public const uint AuditEventType = 2052;

        /// <summary>
        /// The identifier for the AuditSecurityEventType ObjectType.
        /// </summary>
        public const uint AuditSecurityEventType = 2058;

        /// <summary>
        /// The identifier for the AuditChannelEventType ObjectType.
        /// </summary>
        public const uint AuditChannelEventType = 2059;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType ObjectType.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType = 2060;

        /// <summary>
        /// The identifier for the AuditSessionEventType ObjectType.
        /// </summary>
        public const uint AuditSessionEventType = 2069;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType ObjectType.
        /// </summary>
        public const uint AuditCreateSessionEventType = 2071;

        /// <summary>
        /// The identifier for the AuditUrlMismatchEventType ObjectType.
        /// </summary>
        public const uint AuditUrlMismatchEventType = 2748;

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType ObjectType.
        /// </summary>
        public const uint AuditActivateSessionEventType = 2075;

        /// <summary>
        /// The identifier for the AuditCancelEventType ObjectType.
        /// </summary>
        public const uint AuditCancelEventType = 2078;

        /// <summary>
        /// The identifier for the AuditCertificateEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateEventType = 2080;

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateDataMismatchEventType = 2082;

        /// <summary>
        /// The identifier for the AuditCertificateExpiredEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateExpiredEventType = 2085;

        /// <summary>
        /// The identifier for the AuditCertificateInvalidEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateInvalidEventType = 2086;

        /// <summary>
        /// The identifier for the AuditCertificateUntrustedEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateUntrustedEventType = 2087;

        /// <summary>
        /// The identifier for the AuditCertificateRevokedEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateRevokedEventType = 2088;

        /// <summary>
        /// The identifier for the AuditCertificateMismatchEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateMismatchEventType = 2089;

        /// <summary>
        /// The identifier for the AuditNodeManagementEventType ObjectType.
        /// </summary>
        public const uint AuditNodeManagementEventType = 2090;

        /// <summary>
        /// The identifier for the AuditAddNodesEventType ObjectType.
        /// </summary>
        public const uint AuditAddNodesEventType = 2091;

        /// <summary>
        /// The identifier for the AuditDeleteNodesEventType ObjectType.
        /// </summary>
        public const uint AuditDeleteNodesEventType = 2093;

        /// <summary>
        /// The identifier for the AuditAddReferencesEventType ObjectType.
        /// </summary>
        public const uint AuditAddReferencesEventType = 2095;

        /// <summary>
        /// The identifier for the AuditDeleteReferencesEventType ObjectType.
        /// </summary>
        public const uint AuditDeleteReferencesEventType = 2097;

        /// <summary>
        /// The identifier for the AuditUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditUpdateEventType = 2099;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditWriteUpdateEventType = 2100;

        /// <summary>
        /// The identifier for the AuditHistoryUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryUpdateEventType = 2104;

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType ObjectType.
        /// </summary>
        public const uint AuditUpdateMethodEventType = 2127;

        /// <summary>
        /// The identifier for the SystemEventType ObjectType.
        /// </summary>
        public const uint SystemEventType = 2130;

        /// <summary>
        /// The identifier for the DeviceFailureEventType ObjectType.
        /// </summary>
        public const uint DeviceFailureEventType = 2131;

        /// <summary>
        /// The identifier for the SystemStatusChangeEventType ObjectType.
        /// </summary>
        public const uint SystemStatusChangeEventType = 11446;

        /// <summary>
        /// The identifier for the BaseModelChangeEventType ObjectType.
        /// </summary>
        public const uint BaseModelChangeEventType = 2132;

        /// <summary>
        /// The identifier for the GeneralModelChangeEventType ObjectType.
        /// </summary>
        public const uint GeneralModelChangeEventType = 2133;

        /// <summary>
        /// The identifier for the SemanticChangeEventType ObjectType.
        /// </summary>
        public const uint SemanticChangeEventType = 2738;

        /// <summary>
        /// The identifier for the EventQueueOverflowEventType ObjectType.
        /// </summary>
        public const uint EventQueueOverflowEventType = 3035;

        /// <summary>
        /// The identifier for the ProgressEventType ObjectType.
        /// </summary>
        public const uint ProgressEventType = 11436;

        /// <summary>
        /// The identifier for the AggregateFunctionType ObjectType.
        /// </summary>
        public const uint AggregateFunctionType = 2340;

        /// <summary>
        /// The identifier for the StateMachineType ObjectType.
        /// </summary>
        public const uint StateMachineType = 2299;

        /// <summary>
        /// The identifier for the FiniteStateMachineType ObjectType.
        /// </summary>
        public const uint FiniteStateMachineType = 2771;

        /// <summary>
        /// The identifier for the StateType ObjectType.
        /// </summary>
        public const uint StateType = 2307;

        /// <summary>
        /// The identifier for the InitialStateType ObjectType.
        /// </summary>
        public const uint InitialStateType = 2309;

        /// <summary>
        /// The identifier for the TransitionType ObjectType.
        /// </summary>
        public const uint TransitionType = 2310;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType ObjectType.
        /// </summary>
        public const uint FileTransferStateMachineType = 15803;

        /// <summary>
        /// The identifier for the TransitionEventType ObjectType.
        /// </summary>
        public const uint TransitionEventType = 2311;

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType ObjectType.
        /// </summary>
        public const uint AuditUpdateStateEventType = 2315;

        /// <summary>
        /// The identifier for the ConditionType ObjectType.
        /// </summary>
        public const uint ConditionType = 2782;

        /// <summary>
        /// The identifier for the DialogConditionType ObjectType.
        /// </summary>
        public const uint DialogConditionType = 2830;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType ObjectType.
        /// </summary>
        public const uint AcknowledgeableConditionType = 2881;

        /// <summary>
        /// The identifier for the AlarmConditionType ObjectType.
        /// </summary>
        public const uint AlarmConditionType = 2915;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType ObjectType.
        /// </summary>
        public const uint ShelvedStateMachineType = 2929;

        /// <summary>
        /// The identifier for the LimitAlarmType ObjectType.
        /// </summary>
        public const uint LimitAlarmType = 2955;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType ObjectType.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType = 9318;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType ObjectType.
        /// </summary>
        public const uint ExclusiveLimitAlarmType = 9341;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType ObjectType.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType = 9906;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType ObjectType.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType = 10060;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType ObjectType.
        /// </summary>
        public const uint ExclusiveLevelAlarmType = 9482;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType ObjectType.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType = 10368;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType ObjectType.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType = 9764;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType ObjectType.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType = 10214;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType ObjectType.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType = 9623;

        /// <summary>
        /// The identifier for the DiscreteAlarmType ObjectType.
        /// </summary>
        public const uint DiscreteAlarmType = 10523;

        /// <summary>
        /// The identifier for the OffNormalAlarmType ObjectType.
        /// </summary>
        public const uint OffNormalAlarmType = 10637;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType ObjectType.
        /// </summary>
        public const uint SystemOffNormalAlarmType = 11753;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType ObjectType.
        /// </summary>
        public const uint CertificateExpirationAlarmType = 13225;

        /// <summary>
        /// The identifier for the TripAlarmType ObjectType.
        /// </summary>
        public const uint TripAlarmType = 10751;

        /// <summary>
        /// The identifier for the BaseConditionClassType ObjectType.
        /// </summary>
        public const uint BaseConditionClassType = 11163;

        /// <summary>
        /// The identifier for the ProcessConditionClassType ObjectType.
        /// </summary>
        public const uint ProcessConditionClassType = 11164;

        /// <summary>
        /// The identifier for the MaintenanceConditionClassType ObjectType.
        /// </summary>
        public const uint MaintenanceConditionClassType = 11165;

        /// <summary>
        /// The identifier for the SystemConditionClassType ObjectType.
        /// </summary>
        public const uint SystemConditionClassType = 11166;

        /// <summary>
        /// The identifier for the AuditConditionEventType ObjectType.
        /// </summary>
        public const uint AuditConditionEventType = 2790;

        /// <summary>
        /// The identifier for the AuditConditionEnableEventType ObjectType.
        /// </summary>
        public const uint AuditConditionEnableEventType = 2803;

        /// <summary>
        /// The identifier for the AuditConditionCommentEventType ObjectType.
        /// </summary>
        public const uint AuditConditionCommentEventType = 2829;

        /// <summary>
        /// The identifier for the AuditConditionRespondEventType ObjectType.
        /// </summary>
        public const uint AuditConditionRespondEventType = 8927;

        /// <summary>
        /// The identifier for the AuditConditionAcknowledgeEventType ObjectType.
        /// </summary>
        public const uint AuditConditionAcknowledgeEventType = 8944;

        /// <summary>
        /// The identifier for the AuditConditionConfirmEventType ObjectType.
        /// </summary>
        public const uint AuditConditionConfirmEventType = 8961;

        /// <summary>
        /// The identifier for the AuditConditionShelvingEventType ObjectType.
        /// </summary>
        public const uint AuditConditionShelvingEventType = 11093;

        /// <summary>
        /// The identifier for the RefreshStartEventType ObjectType.
        /// </summary>
        public const uint RefreshStartEventType = 2787;

        /// <summary>
        /// The identifier for the RefreshEndEventType ObjectType.
        /// </summary>
        public const uint RefreshEndEventType = 2788;

        /// <summary>
        /// The identifier for the RefreshRequiredEventType ObjectType.
        /// </summary>
        public const uint RefreshRequiredEventType = 2789;

        /// <summary>
        /// The identifier for the ProgramStateMachineType ObjectType.
        /// </summary>
        public const uint ProgramStateMachineType = 2391;

        /// <summary>
        /// The identifier for the ProgramTransitionEventType ObjectType.
        /// </summary>
        public const uint ProgramTransitionEventType = 2378;

        /// <summary>
        /// The identifier for the AuditProgramTransitionEventType ObjectType.
        /// </summary>
        public const uint AuditProgramTransitionEventType = 11856;

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType ObjectType.
        /// </summary>
        public const uint ProgramTransitionAuditEventType = 3806;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType ObjectType.
        /// </summary>
        public const uint HistoricalDataConfigurationType = 2318;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType ObjectType.
        /// </summary>
        public const uint HistoryServerCapabilitiesType = 2330;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType = 2999;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType = 3006;

        /// <summary>
        /// The identifier for the AuditHistoryDeleteEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryDeleteEventType = 3012;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType = 3014;

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryAtTimeDeleteEventType = 3019;

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryEventDeleteEventType = 3022;

        /// <summary>
        /// The identifier for the TrustListType ObjectType.
        /// </summary>
        public const uint TrustListType = 12522;

        /// <summary>
        /// The identifier for the CertificateGroupType ObjectType.
        /// </summary>
        public const uint CertificateGroupType = 12555;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType ObjectType.
        /// </summary>
        public const uint CertificateGroupFolderType = 13813;

        /// <summary>
        /// The identifier for the CertificateType ObjectType.
        /// </summary>
        public const uint CertificateType = 12556;

        /// <summary>
        /// The identifier for the ApplicationCertificateType ObjectType.
        /// </summary>
        public const uint ApplicationCertificateType = 12557;

        /// <summary>
        /// The identifier for the HttpsCertificateType ObjectType.
        /// </summary>
        public const uint HttpsCertificateType = 12558;

        /// <summary>
        /// The identifier for the RsaMinApplicationCertificateType ObjectType.
        /// </summary>
        public const uint RsaMinApplicationCertificateType = 12559;

        /// <summary>
        /// The identifier for the RsaSha256ApplicationCertificateType ObjectType.
        /// </summary>
        public const uint RsaSha256ApplicationCertificateType = 12560;

        /// <summary>
        /// The identifier for the TrustListUpdatedAuditEventType ObjectType.
        /// </summary>
        public const uint TrustListUpdatedAuditEventType = 12561;

        /// <summary>
        /// The identifier for the ServerConfigurationType ObjectType.
        /// </summary>
        public const uint ServerConfigurationType = 12581;

        /// <summary>
        /// The identifier for the CertificateUpdatedAuditEventType ObjectType.
        /// </summary>
        public const uint CertificateUpdatedAuditEventType = 12620;

        /// <summary>
        /// The identifier for the AggregateConfigurationType ObjectType.
        /// </summary>
        public const uint AggregateConfigurationType = 11187;

        /// <summary>
        /// The identifier for the RoleFolderType ObjectType.
        /// </summary>
        public const uint RoleFolderType = 15607;

        /// <summary>
        /// The identifier for the RoleType ObjectType.
        /// </summary>
        public const uint RoleType = 15620;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType ObjectType.
        /// </summary>
        public const uint PubSubKeyServiceType = 15906;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType ObjectType.
        /// </summary>
        public const uint SecurityGroupFolderType = 15452;

        /// <summary>
        /// The identifier for the SecurityGroupType ObjectType.
        /// </summary>
        public const uint SecurityGroupType = 15471;

        /// <summary>
        /// The identifier for the PublishSubscribeType ObjectType.
        /// </summary>
        public const uint PublishSubscribeType = 14416;

        /// <summary>
        /// The identifier for the PublishedDataSetType ObjectType.
        /// </summary>
        public const uint PublishedDataSetType = 14509;

        /// <summary>
        /// The identifier for the ExtensionFieldsType ObjectType.
        /// </summary>
        public const uint ExtensionFieldsType = 15489;

        /// <summary>
        /// The identifier for the PublishedDataItemsType ObjectType.
        /// </summary>
        public const uint PublishedDataItemsType = 14534;

        /// <summary>
        /// The identifier for the PublishedEventsType ObjectType.
        /// </summary>
        public const uint PublishedEventsType = 14572;

        /// <summary>
        /// The identifier for the DataSetClassType ObjectType.
        /// </summary>
        public const uint DataSetClassType = 15056;

        /// <summary>
        /// The identifier for the DataSetFolderType ObjectType.
        /// </summary>
        public const uint DataSetFolderType = 14477;

        /// <summary>
        /// The identifier for the PubSubConnectionType ObjectType.
        /// </summary>
        public const uint PubSubConnectionType = 14209;

        /// <summary>
        /// The identifier for the PubSubGroupType ObjectType.
        /// </summary>
        public const uint PubSubGroupType = 14232;

        /// <summary>
        /// The identifier for the DataSetWriterType ObjectType.
        /// </summary>
        public const uint DataSetWriterType = 15298;

        /// <summary>
        /// The identifier for the DataSetWriterTransportType ObjectType.
        /// </summary>
        public const uint DataSetWriterTransportType = 15305;

        /// <summary>
        /// The identifier for the DataSetReaderType ObjectType.
        /// </summary>
        public const uint DataSetReaderType = 15306;

        /// <summary>
        /// The identifier for the DataSetReaderTransportType ObjectType.
        /// </summary>
        public const uint DataSetReaderTransportType = 15319;

        /// <summary>
        /// The identifier for the SubscribedDataSetType ObjectType.
        /// </summary>
        public const uint SubscribedDataSetType = 15108;

        /// <summary>
        /// The identifier for the ConnectedVariablesType ObjectType.
        /// </summary>
        public const uint ConnectedVariablesType = 15111;

        /// <summary>
        /// The identifier for the SubscribedDataSetMirrorType ObjectType.
        /// </summary>
        public const uint SubscribedDataSetMirrorType = 15127;

        /// <summary>
        /// The identifier for the PubSubStatusType ObjectType.
        /// </summary>
        public const uint PubSubStatusType = 14643;

        /// <summary>
        /// The identifier for the PubSubStatusEventType ObjectType.
        /// </summary>
        public const uint PubSubStatusEventType = 15535;

        /// <summary>
        /// The identifier for the PubSubTransportLimitsExceedEventType ObjectType.
        /// </summary>
        public const uint PubSubTransportLimitsExceedEventType = 15548;

        /// <summary>
        /// The identifier for the PubSubCommunicationFailureEventType ObjectType.
        /// </summary>
        public const uint PubSubCommunicationFailureEventType = 15563;

        /// <summary>
        /// The identifier for the UadpConnectionType ObjectType.
        /// </summary>
        public const uint UadpConnectionType = 14943;

        /// <summary>
        /// The identifier for the UadpGroupType ObjectType.
        /// </summary>
        public const uint UadpGroupType = 14967;

        /// <summary>
        /// The identifier for the UadpWriterTransportType ObjectType.
        /// </summary>
        public const uint UadpWriterTransportType = 15011;

        /// <summary>
        /// The identifier for the UadpReaderTransportType ObjectType.
        /// </summary>
        public const uint UadpReaderTransportType = 15154;

        /// <summary>
        /// The identifier for the BrokerConnectionType ObjectType.
        /// </summary>
        public const uint BrokerConnectionType = 14354;

        /// <summary>
        /// The identifier for the BrokerGroupType ObjectType.
        /// </summary>
        public const uint BrokerGroupType = 14761;

        /// <summary>
        /// The identifier for the BrokerWriterTransportType ObjectType.
        /// </summary>
        public const uint BrokerWriterTransportType = 15043;

        /// <summary>
        /// The identifier for the BrokerReaderTransportType ObjectType.
        /// </summary>
        public const uint BrokerReaderTransportType = 15178;
    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ReferenceTypes
    {
        /// <summary>
        /// The identifier for the References ReferenceType.
        /// </summary>
        public const uint References = 31;

        /// <summary>
        /// The identifier for the NonHierarchicalReferences ReferenceType.
        /// </summary>
        public const uint NonHierarchicalReferences = 32;

        /// <summary>
        /// The identifier for the HierarchicalReferences ReferenceType.
        /// </summary>
        public const uint HierarchicalReferences = 33;

        /// <summary>
        /// The identifier for the HasChild ReferenceType.
        /// </summary>
        public const uint HasChild = 34;

        /// <summary>
        /// The identifier for the Organizes ReferenceType.
        /// </summary>
        public const uint Organizes = 35;

        /// <summary>
        /// The identifier for the HasEventSource ReferenceType.
        /// </summary>
        public const uint HasEventSource = 36;

        /// <summary>
        /// The identifier for the HasModellingRule ReferenceType.
        /// </summary>
        public const uint HasModellingRule = 37;

        /// <summary>
        /// The identifier for the HasEncoding ReferenceType.
        /// </summary>
        public const uint HasEncoding = 38;

        /// <summary>
        /// The identifier for the HasDescription ReferenceType.
        /// </summary>
        public const uint HasDescription = 39;

        /// <summary>
        /// The identifier for the HasTypeDefinition ReferenceType.
        /// </summary>
        public const uint HasTypeDefinition = 40;

        /// <summary>
        /// The identifier for the GeneratesEvent ReferenceType.
        /// </summary>
        public const uint GeneratesEvent = 41;

        /// <summary>
        /// The identifier for the AlwaysGeneratesEvent ReferenceType.
        /// </summary>
        public const uint AlwaysGeneratesEvent = 3065;

        /// <summary>
        /// The identifier for the Aggregates ReferenceType.
        /// </summary>
        public const uint Aggregates = 44;

        /// <summary>
        /// The identifier for the HasSubtype ReferenceType.
        /// </summary>
        public const uint HasSubtype = 45;

        /// <summary>
        /// The identifier for the HasProperty ReferenceType.
        /// </summary>
        public const uint HasProperty = 46;

        /// <summary>
        /// The identifier for the HasComponent ReferenceType.
        /// </summary>
        public const uint HasComponent = 47;

        /// <summary>
        /// The identifier for the HasNotifier ReferenceType.
        /// </summary>
        public const uint HasNotifier = 48;

        /// <summary>
        /// The identifier for the HasOrderedComponent ReferenceType.
        /// </summary>
        public const uint HasOrderedComponent = 49;

        /// <summary>
        /// The identifier for the FromState ReferenceType.
        /// </summary>
        public const uint FromState = 51;

        /// <summary>
        /// The identifier for the ToState ReferenceType.
        /// </summary>
        public const uint ToState = 52;

        /// <summary>
        /// The identifier for the HasCause ReferenceType.
        /// </summary>
        public const uint HasCause = 53;

        /// <summary>
        /// The identifier for the HasEffect ReferenceType.
        /// </summary>
        public const uint HasEffect = 54;

        /// <summary>
        /// The identifier for the HasSubStateMachine ReferenceType.
        /// </summary>
        public const uint HasSubStateMachine = 117;

        /// <summary>
        /// The identifier for the HasHistoricalConfiguration ReferenceType.
        /// </summary>
        public const uint HasHistoricalConfiguration = 56;

        /// <summary>
        /// The identifier for the HasTrueSubState ReferenceType.
        /// </summary>
        public const uint HasTrueSubState = 9004;

        /// <summary>
        /// The identifier for the HasFalseSubState ReferenceType.
        /// </summary>
        public const uint HasFalseSubState = 9005;

        /// <summary>
        /// The identifier for the HasCondition ReferenceType.
        /// </summary>
        public const uint HasCondition = 9006;

        /// <summary>
        /// The identifier for the HasPubSubConnection ReferenceType.
        /// </summary>
        public const uint HasPubSubConnection = 14476;

        /// <summary>
        /// The identifier for the DataSetToWriter ReferenceType.
        /// </summary>
        public const uint DataSetToWriter = 14936;

        /// <summary>
        /// The identifier for the HasDataSetWriter ReferenceType.
        /// </summary>
        public const uint HasDataSetWriter = 15296;

        /// <summary>
        /// The identifier for the HasDataSetReader ReferenceType.
        /// </summary>
        public const uint HasDataSetReader = 15297;
    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the DataTypeDescriptionType_DataTypeVersion Variable.
        /// </summary>
        public const uint DataTypeDescriptionType_DataTypeVersion = 104;

        /// <summary>
        /// The identifier for the DataTypeDescriptionType_DictionaryFragment Variable.
        /// </summary>
        public const uint DataTypeDescriptionType_DictionaryFragment = 105;

        /// <summary>
        /// The identifier for the DataTypeDictionaryType_DataTypeVersion Variable.
        /// </summary>
        public const uint DataTypeDictionaryType_DataTypeVersion = 106;

        /// <summary>
        /// The identifier for the DataTypeDictionaryType_NamespaceUri Variable.
        /// </summary>
        public const uint DataTypeDictionaryType_NamespaceUri = 107;

        /// <summary>
        /// The identifier for the NamingRuleType_EnumValues Variable.
        /// </summary>
        public const uint NamingRuleType_EnumValues = 12169;

        /// <summary>
        /// The identifier for the ModellingRuleType_NamingRule Variable.
        /// </summary>
        public const uint ModellingRuleType_NamingRule = 111;

        /// <summary>
        /// The identifier for the ModellingRule_Mandatory_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_Mandatory_NamingRule = 112;

        /// <summary>
        /// The identifier for the ModellingRule_Optional_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_Optional_NamingRule = 113;

        /// <summary>
        /// The identifier for the ModellingRule_ExposesItsArray_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_ExposesItsArray_NamingRule = 114;

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryShared_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_MandatoryShared_NamingRule = 116;

        /// <summary>
        /// The identifier for the ModellingRule_OptionalPlaceholder_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_OptionalPlaceholder_NamingRule = 11509;

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryPlaceholder_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_MandatoryPlaceholder_NamingRule = 11511;

        /// <summary>
        /// The identifier for the NodeVersion Variable.
        /// </summary>
        public const uint NodeVersion = 3068;

        /// <summary>
        /// The identifier for the ViewVersion Variable.
        /// </summary>
        public const uint ViewVersion = 12170;

        /// <summary>
        /// The identifier for the Icon Variable.
        /// </summary>
        public const uint Icon = 3067;

        /// <summary>
        /// The identifier for the LocalTime Variable.
        /// </summary>
        public const uint LocalTime = 3069;

        /// <summary>
        /// The identifier for the AllowNulls Variable.
        /// </summary>
        public const uint AllowNulls = 3070;

        /// <summary>
        /// The identifier for the ValueAsText Variable.
        /// </summary>
        public const uint ValueAsText = 11433;

        /// <summary>
        /// The identifier for the MaxStringLength Variable.
        /// </summary>
        public const uint MaxStringLength = 11498;

        /// <summary>
        /// The identifier for the MaxByteStringLength Variable.
        /// </summary>
        public const uint MaxByteStringLength = 12908;

        /// <summary>
        /// The identifier for the MaxArrayLength Variable.
        /// </summary>
        public const uint MaxArrayLength = 11512;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint EngineeringUnits = 11513;

        /// <summary>
        /// The identifier for the EnumStrings Variable.
        /// </summary>
        public const uint EnumStrings = 11432;

        /// <summary>
        /// The identifier for the EnumValues Variable.
        /// </summary>
        public const uint EnumValues = 3071;

        /// <summary>
        /// The identifier for the OptionSetValues Variable.
        /// </summary>
        public const uint OptionSetValues = 12745;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint InputArguments = 3072;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint OutputArguments = 3073;

        /// <summary>
        /// The identifier for the ServerType_ServerArray Variable.
        /// </summary>
        public const uint ServerType_ServerArray = 2005;

        /// <summary>
        /// The identifier for the ServerType_NamespaceArray Variable.
        /// </summary>
        public const uint ServerType_NamespaceArray = 2006;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus Variable.
        /// </summary>
        public const uint ServerType_ServerStatus = 2007;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_StartTime Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_StartTime = 3074;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_CurrentTime Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_CurrentTime = 3075;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_State Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_State = 3076;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_BuildInfo = 3077;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_ProductUri Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_BuildInfo_ProductUri = 3078;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_ManufacturerName Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_BuildInfo_ManufacturerName = 3079;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_ProductName Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_BuildInfo_ProductName = 3080;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_SoftwareVersion Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_BuildInfo_SoftwareVersion = 3081;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_BuildNumber Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_BuildInfo_BuildNumber = 3082;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_BuildDate Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_BuildInfo_BuildDate = 3083;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_SecondsTillShutdown Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_SecondsTillShutdown = 3084;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_ShutdownReason Variable.
        /// </summary>
        public const uint ServerType_ServerStatus_ShutdownReason = 3085;

        /// <summary>
        /// The identifier for the ServerType_ServiceLevel Variable.
        /// </summary>
        public const uint ServerType_ServiceLevel = 2008;

        /// <summary>
        /// The identifier for the ServerType_Auditing Variable.
        /// </summary>
        public const uint ServerType_Auditing = 2742;

        /// <summary>
        /// The identifier for the ServerType_EstimatedReturnTime Variable.
        /// </summary>
        public const uint ServerType_EstimatedReturnTime = 12882;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_ServerProfileArray Variable.
        /// </summary>
        public const uint ServerType_ServerCapabilities_ServerProfileArray = 3086;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_LocaleIdArray Variable.
        /// </summary>
        public const uint ServerType_ServerCapabilities_LocaleIdArray = 3087;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_MinSupportedSampleRate Variable.
        /// </summary>
        public const uint ServerType_ServerCapabilities_MinSupportedSampleRate = 3088;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public const uint ServerType_ServerCapabilities_MaxBrowseContinuationPoints = 3089;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_MaxQueryContinuationPoints Variable.
        /// </summary>
        public const uint ServerType_ServerCapabilities_MaxQueryContinuationPoints = 3090;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public const uint ServerType_ServerCapabilities_MaxHistoryContinuationPoints = 3091;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_SoftwareCertificates Variable.
        /// </summary>
        public const uint ServerType_ServerCapabilities_SoftwareCertificates = 3092;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary = 3095;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = 3096;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = 3097;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = 3098;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = 3099;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = 3100;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = 3101;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = 3102;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = 3104;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = 3105;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = 3106;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = 3107;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = 3108;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray = 3110;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = 3112;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = 3113;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_EnabledFlag Variable.
        /// </summary>
        public const uint ServerType_ServerDiagnostics_EnabledFlag = 3114;

        /// <summary>
        /// The identifier for the ServerType_ServerRedundancy_RedundancySupport Variable.
        /// </summary>
        public const uint ServerType_ServerRedundancy_RedundancySupport = 3115;

        /// <summary>
        /// The identifier for the ServerType_GetMonitoredItems_InputArguments Variable.
        /// </summary>
        public const uint ServerType_GetMonitoredItems_InputArguments = 11490;

        /// <summary>
        /// The identifier for the ServerType_GetMonitoredItems_OutputArguments Variable.
        /// </summary>
        public const uint ServerType_GetMonitoredItems_OutputArguments = 11491;

        /// <summary>
        /// The identifier for the ServerType_ResendData_InputArguments Variable.
        /// </summary>
        public const uint ServerType_ResendData_InputArguments = 12872;

        /// <summary>
        /// The identifier for the ServerType_SetSubscriptionDurable_InputArguments Variable.
        /// </summary>
        public const uint ServerType_SetSubscriptionDurable_InputArguments = 12747;

        /// <summary>
        /// The identifier for the ServerType_SetSubscriptionDurable_OutputArguments Variable.
        /// </summary>
        public const uint ServerType_SetSubscriptionDurable_OutputArguments = 12748;

        /// <summary>
        /// The identifier for the ServerType_RequestServerStateChange_InputArguments Variable.
        /// </summary>
        public const uint ServerType_RequestServerStateChange_InputArguments = 12884;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_ServerProfileArray Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_ServerProfileArray = 2014;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_LocaleIdArray Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_LocaleIdArray = 2016;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MinSupportedSampleRate Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MinSupportedSampleRate = 2017;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MaxBrowseContinuationPoints = 2732;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxQueryContinuationPoints Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MaxQueryContinuationPoints = 2733;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MaxHistoryContinuationPoints = 2734;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_SoftwareCertificates Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_SoftwareCertificates = 3049;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxArrayLength Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MaxArrayLength = 11549;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxStringLength Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MaxStringLength = 11550;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxByteStringLength Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MaxByteStringLength = 12910;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_VendorCapability_Placeholder Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_VendorCapability_Placeholder = 11562;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary = 2021;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount = 3116;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount = 3117;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount = 3118;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount = 3119;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount = 3120;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount = 3121;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount = 3122;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount = 3124;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount = 3125;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount = 3126;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = 3127;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount = 3128;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SamplingIntervalDiagnosticsArray Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_SamplingIntervalDiagnosticsArray = 2022;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_SubscriptionDiagnosticsArray = 2023;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray = 3129;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = 3130;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_EnabledFlag Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_EnabledFlag = 2025;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_SessionDiagnosticsArray Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_SessionDiagnosticsArray = 2027;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray = 2028;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics = 12098;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId = 12099;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName = 12100;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription = 12101;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri = 12102;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl = 12103;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds = 12104;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout = 12105;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize = 12106;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime = 12107;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime = 12108;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount = 12109;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount = 12110;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue = 12111;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount = 12112;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount = 12113;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount = 12114;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount = 12115;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount = 12116;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount = 12117;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount = 12118;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount = 12119;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount = 12120;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount = 12121;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount = 12122;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount = 12123;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount = 12124;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount = 12125;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount = 12126;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount = 12127;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount = 12128;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount = 12129;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount = 12130;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount = 12131;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount = 12132;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount = 12133;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount = 12134;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount = 12135;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount = 12136;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = 12137;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount = 12138;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount = 12139;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount = 12140;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount = 12141;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics = 12142;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId = 12143;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession = 12144;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory = 12145;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism = 12146;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding = 12147;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol = 12148;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode = 12149;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri = 12150;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate = 12151;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray = 12152;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics = 2030;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SessionId Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SessionId = 3131;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SessionName Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SessionName = 3132;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription = 3133;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri = 3134;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl = 3135;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds = 3136;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout = 3137;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize = 3138;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime = 3139;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime = 3140;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount = 3141;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount = 3142;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue = 3143;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount = 8898;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount = 11891;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount = 3151;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount = 3152;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount = 3153;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount = 3154;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CallCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CallCount = 3155;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount = 3156;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount = 3157;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount = 3158;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount = 3159;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount = 3160;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount = 3161;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount = 3162;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount = 3163;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount = 3164;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount = 3165;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount = 3166;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount = 3167;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount = 3168;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount = 3169;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount = 3170;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount = 3171;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount = 3172;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount = 3173;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = 3174;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount = 3175;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount = 3176;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount = 3177;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount = 3178;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics = 2031;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId = 3179;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession = 3180;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory = 3181;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism = 3182;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding = 3183;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol = 3184;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode = 3185;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri = 3186;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate = 3187;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray = 2032;

        /// <summary>
        /// The identifier for the ServerRedundancyType_RedundancySupport Variable.
        /// </summary>
        public const uint ServerRedundancyType_RedundancySupport = 2035;

        /// <summary>
        /// The identifier for the TransparentRedundancyType_CurrentServerId Variable.
        /// </summary>
        public const uint TransparentRedundancyType_CurrentServerId = 2037;

        /// <summary>
        /// The identifier for the TransparentRedundancyType_RedundantServerArray Variable.
        /// </summary>
        public const uint TransparentRedundancyType_RedundantServerArray = 2038;

        /// <summary>
        /// The identifier for the NonTransparentRedundancyType_ServerUriArray Variable.
        /// </summary>
        public const uint NonTransparentRedundancyType_ServerUriArray = 2040;

        /// <summary>
        /// The identifier for the NonTransparentNetworkRedundancyType_ServerNetworkGroups Variable.
        /// </summary>
        public const uint NonTransparentNetworkRedundancyType_ServerNetworkGroups = 11948;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerRead Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerRead = 11565;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerHistoryReadData Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerHistoryReadData = 12161;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerHistoryReadEvents Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerHistoryReadEvents = 12162;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerWrite Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerWrite = 11567;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerHistoryUpdateData Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerHistoryUpdateData = 12163;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerHistoryUpdateEvents Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerHistoryUpdateEvents = 12164;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerMethodCall Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerMethodCall = 11569;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerBrowse Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerBrowse = 11570;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerRegisterNodes Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerRegisterNodes = 11571;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds = 11572;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerNodeManagement Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxNodesPerNodeManagement = 11573;

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxMonitoredItemsPerCall Variable.
        /// </summary>
        public const uint OperationLimitsType_MaxMonitoredItemsPerCall = 11574;

        /// <summary>
        /// The identifier for the FileType_Size Variable.
        /// </summary>
        public const uint FileType_Size = 11576;

        /// <summary>
        /// The identifier for the FileType_Writable Variable.
        /// </summary>
        public const uint FileType_Writable = 12686;

        /// <summary>
        /// The identifier for the FileType_UserWritable Variable.
        /// </summary>
        public const uint FileType_UserWritable = 12687;

        /// <summary>
        /// The identifier for the FileType_OpenCount Variable.
        /// </summary>
        public const uint FileType_OpenCount = 11579;

        /// <summary>
        /// The identifier for the FileType_MimeType Variable.
        /// </summary>
        public const uint FileType_MimeType = 13341;

        /// <summary>
        /// The identifier for the FileType_Open_InputArguments Variable.
        /// </summary>
        public const uint FileType_Open_InputArguments = 11581;

        /// <summary>
        /// The identifier for the FileType_Open_OutputArguments Variable.
        /// </summary>
        public const uint FileType_Open_OutputArguments = 11582;

        /// <summary>
        /// The identifier for the FileType_Close_InputArguments Variable.
        /// </summary>
        public const uint FileType_Close_InputArguments = 11584;

        /// <summary>
        /// The identifier for the FileType_Read_InputArguments Variable.
        /// </summary>
        public const uint FileType_Read_InputArguments = 11586;

        /// <summary>
        /// The identifier for the FileType_Read_OutputArguments Variable.
        /// </summary>
        public const uint FileType_Read_OutputArguments = 11587;

        /// <summary>
        /// The identifier for the FileType_Write_InputArguments Variable.
        /// </summary>
        public const uint FileType_Write_InputArguments = 11589;

        /// <summary>
        /// The identifier for the FileType_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint FileType_GetPosition_InputArguments = 11591;

        /// <summary>
        /// The identifier for the FileType_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint FileType_GetPosition_OutputArguments = 11592;

        /// <summary>
        /// The identifier for the FileType_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint FileType_SetPosition_InputArguments = 11594;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments = 13356;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments = 13357;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments = 13359;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments = 13360;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_Delete_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_Delete_InputArguments = 13362;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments = 13364;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments = 13365;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Size Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Size = 13367;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Writable Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Writable = 13368;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_UserWritable Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_UserWritable = 13369;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_OpenCount Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_OpenCount = 13370;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Open_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Open_InputArguments = 13373;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Open_OutputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Open_OutputArguments = 13374;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Close_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Close_InputArguments = 13376;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Read_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Read_InputArguments = 13378;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Read_OutputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Read_OutputArguments = 13379;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Write_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_Write_InputArguments = 13381;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments = 13383;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments = 13384;

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments = 13386;

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateDirectory_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_CreateDirectory_InputArguments = 13388;

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateDirectory_OutputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_CreateDirectory_OutputArguments = 13389;

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateFile_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_CreateFile_InputArguments = 13391;

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateFile_OutputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_CreateFile_OutputArguments = 13392;

        /// <summary>
        /// The identifier for the FileDirectoryType_Delete_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_Delete_InputArguments = 13394;

        /// <summary>
        /// The identifier for the FileDirectoryType_MoveOrCopy_InputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_MoveOrCopy_InputArguments = 13396;

        /// <summary>
        /// The identifier for the FileDirectoryType_MoveOrCopy_OutputArguments Variable.
        /// </summary>
        public const uint FileDirectoryType_MoveOrCopy_OutputArguments = 13397;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_ClientProcessingTimeout Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_ClientProcessingTimeout = 15745;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_GenerateFileForRead_InputArguments = 15747;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_GenerateFileForRead_OutputArguments = 15748;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_GenerateFileForWrite_OutputArguments = 15750;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_CloseAndCommit_InputArguments = 15752;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_CloseAndCommit_OutputArguments = 15753;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_CurrentState Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_CurrentState = 15755;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id = 15756;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id = 15761;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Idle_StateNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_Idle_StateNumber = 15767;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare_StateNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare_StateNumber = 15769;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer_StateNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer_StateNumber = 15771;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite_StateNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite_StateNumber = 15773;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Error_StateNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_Error_StateNumber = 15775;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare_TransitionNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare_TransitionNumber = 15777;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer_TransitionNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer_TransitionNumber = 15779;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle_TransitionNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle_TransitionNumber = 15781;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite_TransitionNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite_TransitionNumber = 15783;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle_TransitionNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle_TransitionNumber = 15785;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError_TransitionNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError_TransitionNumber = 15787;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError_TransitionNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError_TransitionNumber = 15789;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError_TransitionNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError_TransitionNumber = 15791;

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle_TransitionNumber Variable.
        /// </summary>
        public const uint TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle_TransitionNumber = 15793;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Open_InputArguments Variable.
        /// </summary>
        public const uint AddressSpaceFileType_Open_InputArguments = 11601;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Open_OutputArguments Variable.
        /// </summary>
        public const uint AddressSpaceFileType_Open_OutputArguments = 11602;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Close_InputArguments Variable.
        /// </summary>
        public const uint AddressSpaceFileType_Close_InputArguments = 11604;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Read_InputArguments Variable.
        /// </summary>
        public const uint AddressSpaceFileType_Read_InputArguments = 11606;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Read_OutputArguments Variable.
        /// </summary>
        public const uint AddressSpaceFileType_Read_OutputArguments = 11607;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Write_InputArguments Variable.
        /// </summary>
        public const uint AddressSpaceFileType_Write_InputArguments = 11609;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint AddressSpaceFileType_GetPosition_InputArguments = 11611;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint AddressSpaceFileType_GetPosition_OutputArguments = 11612;

        /// <summary>
        /// The identifier for the AddressSpaceFileType_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint AddressSpaceFileType_SetPosition_InputArguments = 11614;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceUri Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceUri = 11617;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceVersion Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceVersion = 11618;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespacePublicationDate Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespacePublicationDate = 11619;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_IsNamespaceSubset Variable.
        /// </summary>
        public const uint NamespaceMetadataType_IsNamespaceSubset = 11620;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_StaticNodeIdTypes Variable.
        /// </summary>
        public const uint NamespaceMetadataType_StaticNodeIdTypes = 11621;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_StaticNumericNodeIdRange Variable.
        /// </summary>
        public const uint NamespaceMetadataType_StaticNumericNodeIdRange = 11622;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_StaticStringNodeIdPattern Variable.
        /// </summary>
        public const uint NamespaceMetadataType_StaticStringNodeIdPattern = 11623;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Size Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Size = 11625;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Writable Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Writable = 12690;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_UserWritable Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_UserWritable = 12691;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_OpenCount Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_OpenCount = 11628;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Open_InputArguments Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Open_InputArguments = 11630;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Open_OutputArguments Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Open_OutputArguments = 11631;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Close_InputArguments Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Close_InputArguments = 11633;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Read_InputArguments Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Read_InputArguments = 11635;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Read_OutputArguments Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Read_OutputArguments = 11636;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Write_InputArguments Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_Write_InputArguments = 11638;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments = 11640;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments = 11641;

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments = 11643;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri = 11647;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion = 11648;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate = 11649;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset = 11650;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes = 11651;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange = 11652;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern = 11653;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size = 11655;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable = 12692;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable = 12693;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount = 11658;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments = 11660;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments = 11661;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments = 11663;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments = 11665;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments = 11666;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments = 11668;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments = 11670;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments = 11671;

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments = 11673;

        /// <summary>
        /// The identifier for the BaseEventType_EventId Variable.
        /// </summary>
        public const uint BaseEventType_EventId = 2042;

        /// <summary>
        /// The identifier for the BaseEventType_EventType Variable.
        /// </summary>
        public const uint BaseEventType_EventType = 2043;

        /// <summary>
        /// The identifier for the BaseEventType_SourceNode Variable.
        /// </summary>
        public const uint BaseEventType_SourceNode = 2044;

        /// <summary>
        /// The identifier for the BaseEventType_SourceName Variable.
        /// </summary>
        public const uint BaseEventType_SourceName = 2045;

        /// <summary>
        /// The identifier for the BaseEventType_Time Variable.
        /// </summary>
        public const uint BaseEventType_Time = 2046;

        /// <summary>
        /// The identifier for the BaseEventType_ReceiveTime Variable.
        /// </summary>
        public const uint BaseEventType_ReceiveTime = 2047;

        /// <summary>
        /// The identifier for the BaseEventType_LocalTime Variable.
        /// </summary>
        public const uint BaseEventType_LocalTime = 3190;

        /// <summary>
        /// The identifier for the BaseEventType_Message Variable.
        /// </summary>
        public const uint BaseEventType_Message = 2050;

        /// <summary>
        /// The identifier for the BaseEventType_Severity Variable.
        /// </summary>
        public const uint BaseEventType_Severity = 2051;

        /// <summary>
        /// The identifier for the AuditEventType_ActionTimeStamp Variable.
        /// </summary>
        public const uint AuditEventType_ActionTimeStamp = 2053;

        /// <summary>
        /// The identifier for the AuditEventType_Status Variable.
        /// </summary>
        public const uint AuditEventType_Status = 2054;

        /// <summary>
        /// The identifier for the AuditEventType_ServerId Variable.
        /// </summary>
        public const uint AuditEventType_ServerId = 2055;

        /// <summary>
        /// The identifier for the AuditEventType_ClientAuditEntryId Variable.
        /// </summary>
        public const uint AuditEventType_ClientAuditEntryId = 2056;

        /// <summary>
        /// The identifier for the AuditEventType_ClientUserId Variable.
        /// </summary>
        public const uint AuditEventType_ClientUserId = 2057;

        /// <summary>
        /// The identifier for the AuditChannelEventType_SecureChannelId Variable.
        /// </summary>
        public const uint AuditChannelEventType_SecureChannelId = 2745;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_ClientCertificate Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_ClientCertificate = 2061;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_ClientCertificateThumbprint Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_ClientCertificateThumbprint = 2746;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_RequestType Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_RequestType = 2062;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_SecurityPolicyUri Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_SecurityPolicyUri = 2063;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_SecurityMode Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_SecurityMode = 2065;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_RequestedLifetime Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_RequestedLifetime = 2066;

        /// <summary>
        /// The identifier for the AuditSessionEventType_SessionId Variable.
        /// </summary>
        public const uint AuditSessionEventType_SessionId = 2070;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_SecureChannelId Variable.
        /// </summary>
        public const uint AuditCreateSessionEventType_SecureChannelId = 2072;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_ClientCertificate Variable.
        /// </summary>
        public const uint AuditCreateSessionEventType_ClientCertificate = 2073;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_ClientCertificateThumbprint Variable.
        /// </summary>
        public const uint AuditCreateSessionEventType_ClientCertificateThumbprint = 2747;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_RevisedSessionTimeout Variable.
        /// </summary>
        public const uint AuditCreateSessionEventType_RevisedSessionTimeout = 2074;

        /// <summary>
        /// The identifier for the AuditUrlMismatchEventType_EndpointUrl Variable.
        /// </summary>
        public const uint AuditUrlMismatchEventType_EndpointUrl = 2749;

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_ClientSoftwareCertificates Variable.
        /// </summary>
        public const uint AuditActivateSessionEventType_ClientSoftwareCertificates = 2076;

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_UserIdentityToken Variable.
        /// </summary>
        public const uint AuditActivateSessionEventType_UserIdentityToken = 2077;

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_SecureChannelId Variable.
        /// </summary>
        public const uint AuditActivateSessionEventType_SecureChannelId = 11485;

        /// <summary>
        /// The identifier for the AuditCancelEventType_RequestHandle Variable.
        /// </summary>
        public const uint AuditCancelEventType_RequestHandle = 2079;

        /// <summary>
        /// The identifier for the AuditCertificateEventType_Certificate Variable.
        /// </summary>
        public const uint AuditCertificateEventType_Certificate = 2081;

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType_InvalidHostname Variable.
        /// </summary>
        public const uint AuditCertificateDataMismatchEventType_InvalidHostname = 2083;

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType_InvalidUri Variable.
        /// </summary>
        public const uint AuditCertificateDataMismatchEventType_InvalidUri = 2084;

        /// <summary>
        /// The identifier for the AuditAddNodesEventType_NodesToAdd Variable.
        /// </summary>
        public const uint AuditAddNodesEventType_NodesToAdd = 2092;

        /// <summary>
        /// The identifier for the AuditDeleteNodesEventType_NodesToDelete Variable.
        /// </summary>
        public const uint AuditDeleteNodesEventType_NodesToDelete = 2094;

        /// <summary>
        /// The identifier for the AuditAddReferencesEventType_ReferencesToAdd Variable.
        /// </summary>
        public const uint AuditAddReferencesEventType_ReferencesToAdd = 2096;

        /// <summary>
        /// The identifier for the AuditDeleteReferencesEventType_ReferencesToDelete Variable.
        /// </summary>
        public const uint AuditDeleteReferencesEventType_ReferencesToDelete = 2098;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_AttributeId Variable.
        /// </summary>
        public const uint AuditWriteUpdateEventType_AttributeId = 2750;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_IndexRange Variable.
        /// </summary>
        public const uint AuditWriteUpdateEventType_IndexRange = 2101;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_OldValue Variable.
        /// </summary>
        public const uint AuditWriteUpdateEventType_OldValue = 2102;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_NewValue Variable.
        /// </summary>
        public const uint AuditWriteUpdateEventType_NewValue = 2103;

        /// <summary>
        /// The identifier for the AuditHistoryUpdateEventType_ParameterDataTypeId Variable.
        /// </summary>
        public const uint AuditHistoryUpdateEventType_ParameterDataTypeId = 2751;

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType_MethodId Variable.
        /// </summary>
        public const uint AuditUpdateMethodEventType_MethodId = 2128;

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType_InputArguments Variable.
        /// </summary>
        public const uint AuditUpdateMethodEventType_InputArguments = 2129;

        /// <summary>
        /// The identifier for the SystemStatusChangeEventType_SystemState Variable.
        /// </summary>
        public const uint SystemStatusChangeEventType_SystemState = 11696;

        /// <summary>
        /// The identifier for the GeneralModelChangeEventType_Changes Variable.
        /// </summary>
        public const uint GeneralModelChangeEventType_Changes = 2134;

        /// <summary>
        /// The identifier for the SemanticChangeEventType_Changes Variable.
        /// </summary>
        public const uint SemanticChangeEventType_Changes = 2739;

        /// <summary>
        /// The identifier for the ProgressEventType_Context Variable.
        /// </summary>
        public const uint ProgressEventType_Context = 12502;

        /// <summary>
        /// The identifier for the ProgressEventType_Progress Variable.
        /// </summary>
        public const uint ProgressEventType_Progress = 12503;

        /// <summary>
        /// The identifier for the ServerStatusType_StartTime Variable.
        /// </summary>
        public const uint ServerStatusType_StartTime = 2139;

        /// <summary>
        /// The identifier for the ServerStatusType_CurrentTime Variable.
        /// </summary>
        public const uint ServerStatusType_CurrentTime = 2140;

        /// <summary>
        /// The identifier for the ServerStatusType_State Variable.
        /// </summary>
        public const uint ServerStatusType_State = 2141;

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo Variable.
        /// </summary>
        public const uint ServerStatusType_BuildInfo = 2142;

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_ProductUri Variable.
        /// </summary>
        public const uint ServerStatusType_BuildInfo_ProductUri = 3698;

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_ManufacturerName Variable.
        /// </summary>
        public const uint ServerStatusType_BuildInfo_ManufacturerName = 3699;

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_ProductName Variable.
        /// </summary>
        public const uint ServerStatusType_BuildInfo_ProductName = 3700;

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_SoftwareVersion Variable.
        /// </summary>
        public const uint ServerStatusType_BuildInfo_SoftwareVersion = 3701;

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_BuildNumber Variable.
        /// </summary>
        public const uint ServerStatusType_BuildInfo_BuildNumber = 3702;

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_BuildDate Variable.
        /// </summary>
        public const uint ServerStatusType_BuildInfo_BuildDate = 3703;

        /// <summary>
        /// The identifier for the ServerStatusType_SecondsTillShutdown Variable.
        /// </summary>
        public const uint ServerStatusType_SecondsTillShutdown = 2752;

        /// <summary>
        /// The identifier for the ServerStatusType_ShutdownReason Variable.
        /// </summary>
        public const uint ServerStatusType_ShutdownReason = 2753;

        /// <summary>
        /// The identifier for the BuildInfoType_ProductUri Variable.
        /// </summary>
        public const uint BuildInfoType_ProductUri = 3052;

        /// <summary>
        /// The identifier for the BuildInfoType_ManufacturerName Variable.
        /// </summary>
        public const uint BuildInfoType_ManufacturerName = 3053;

        /// <summary>
        /// The identifier for the BuildInfoType_ProductName Variable.
        /// </summary>
        public const uint BuildInfoType_ProductName = 3054;

        /// <summary>
        /// The identifier for the BuildInfoType_SoftwareVersion Variable.
        /// </summary>
        public const uint BuildInfoType_SoftwareVersion = 3055;

        /// <summary>
        /// The identifier for the BuildInfoType_BuildNumber Variable.
        /// </summary>
        public const uint BuildInfoType_BuildNumber = 3056;

        /// <summary>
        /// The identifier for the BuildInfoType_BuildDate Variable.
        /// </summary>
        public const uint BuildInfoType_BuildDate = 3057;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_ServerViewCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_ServerViewCount = 2151;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CurrentSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_CurrentSessionCount = 2152;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CumulatedSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_CumulatedSessionCount = 2153;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SecurityRejectedSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_SecurityRejectedSessionCount = 2154;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_RejectedSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_RejectedSessionCount = 2155;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SessionTimeoutCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_SessionTimeoutCount = 2156;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SessionAbortCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_SessionAbortCount = 2157;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_PublishingIntervalCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_PublishingIntervalCount = 2159;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CurrentSubscriptionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_CurrentSubscriptionCount = 2160;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CumulatedSubscriptionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_CumulatedSubscriptionCount = 2161;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount = 2162;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_RejectedRequestsCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_RejectedRequestsCount = 2163;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics = 12779;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval = 12780;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount = 12781;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount = 12782;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount = 12783;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_SamplingInterval Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType_SamplingInterval = 2166;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount = 11697;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount = 11698;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount = 11699;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics = 12784;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId = 12785;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId = 12786;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority = 12787;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval = 12788;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount = 12789;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount = 12790;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish = 12791;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled = 12792;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount = 12793;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount = 12794;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount = 12795;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount = 12796;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount = 12797;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount = 12798;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount = 12799;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount = 12800;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount = 12801;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount = 12802;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount = 12803;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount = 12804;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount = 12805;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount = 12806;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount = 12807;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount = 12808;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount = 12809;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount = 12810;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount = 12811;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount = 12812;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount = 12813;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber = 12814;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverFlowCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverFlowCount = 12815;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_SessionId Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_SessionId = 2173;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_SubscriptionId Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_SubscriptionId = 2174;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_Priority Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_Priority = 2175;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishingInterval Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_PublishingInterval = 2176;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxKeepAliveCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MaxKeepAliveCount = 2177;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxLifetimeCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MaxLifetimeCount = 8888;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxNotificationsPerPublish Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MaxNotificationsPerPublish = 2179;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishingEnabled Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_PublishingEnabled = 2180;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_ModifyCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_ModifyCount = 2181;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EnableCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_EnableCount = 2182;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DisableCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_DisableCount = 2183;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_RepublishRequestCount = 2184;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishMessageRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_RepublishMessageRequestCount = 2185;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishMessageCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_RepublishMessageCount = 2186;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_TransferRequestCount = 2187;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferredToAltClientCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_TransferredToAltClientCount = 2188;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferredToSameClientCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_TransferredToSameClientCount = 2189;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_PublishRequestCount = 2190;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DataChangeNotificationsCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_DataChangeNotificationsCount = 2191;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EventNotificationsCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_EventNotificationsCount = 2998;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_NotificationsCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_NotificationsCount = 2193;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_LatePublishRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_LatePublishRequestCount = 8889;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_CurrentKeepAliveCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_CurrentKeepAliveCount = 8890;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_CurrentLifetimeCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_CurrentLifetimeCount = 8891;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_UnacknowledgedMessageCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_UnacknowledgedMessageCount = 8892;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DiscardedMessageCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_DiscardedMessageCount = 8893;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MonitoredItemCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MonitoredItemCount = 8894;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DisabledMonitoredItemCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_DisabledMonitoredItemCount = 8895;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MonitoringQueueOverflowCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MonitoringQueueOverflowCount = 8896;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_NextSequenceNumber Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_NextSequenceNumber = 8897;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EventQueueOverFlowCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_EventQueueOverFlowCount = 8902;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics = 12816;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SessionId Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SessionId = 12817;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SessionName Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SessionName = 12818;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription = 12819;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri = 12820;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl = 12821;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds = 12822;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout = 12823;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize = 12824;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime = 12825;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime = 12826;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount = 12827;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount = 12828;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue = 12829;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount = 12830;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount = 12831;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount = 12832;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount = 12833;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount = 12834;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount = 12835;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CallCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CallCount = 12836;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount = 12837;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount = 12838;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount = 12839;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount = 12840;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount = 12841;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount = 12842;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount = 12843;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount = 12844;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount = 12845;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount = 12846;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount = 12847;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount = 12848;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount = 12849;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount = 12850;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount = 12851;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount = 12852;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount = 12853;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount = 12854;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = 12855;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount = 12856;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount = 12857;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount = 12858;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount = 12859;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SessionId Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SessionId = 2198;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SessionName Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SessionName = 2199;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientDescription Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ClientDescription = 2200;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ServerUri Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ServerUri = 2201;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_EndpointUrl Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_EndpointUrl = 2202;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_LocaleIds Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_LocaleIds = 2203;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ActualSessionTimeout Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ActualSessionTimeout = 2204;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_MaxResponseMessageSize Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_MaxResponseMessageSize = 3050;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientConnectionTime Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ClientConnectionTime = 2205;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientLastContactTime Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ClientLastContactTime = 2206;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CurrentSubscriptionsCount = 2207;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CurrentMonitoredItemsCount = 2208;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue = 2209;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TotalRequestCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_TotalRequestCount = 8900;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_UnauthorizedRequestCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_UnauthorizedRequestCount = 11892;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ReadCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ReadCount = 2217;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_HistoryReadCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_HistoryReadCount = 2218;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_WriteCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_WriteCount = 2219;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_HistoryUpdateCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_HistoryUpdateCount = 2220;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CallCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CallCount = 2221;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CreateMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CreateMonitoredItemsCount = 2222;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ModifyMonitoredItemsCount = 2223;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetMonitoringModeCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SetMonitoringModeCount = 2224;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetTriggeringCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SetTriggeringCount = 2225;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_DeleteMonitoredItemsCount = 2226;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CreateSubscriptionCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CreateSubscriptionCount = 2227;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ModifySubscriptionCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ModifySubscriptionCount = 2228;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetPublishingModeCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SetPublishingModeCount = 2229;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_PublishCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_PublishCount = 2230;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_RepublishCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_RepublishCount = 2231;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TransferSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_TransferSubscriptionsCount = 2232;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_DeleteSubscriptionsCount = 2233;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_AddNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_AddNodesCount = 2234;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_AddReferencesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_AddReferencesCount = 2235;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_DeleteNodesCount = 2236;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteReferencesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_DeleteReferencesCount = 2237;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_BrowseCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_BrowseCount = 2238;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_BrowseNextCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_BrowseNextCount = 2239;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount = 2240;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_QueryFirstCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_QueryFirstCount = 2241;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_QueryNextCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_QueryNextCount = 2242;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_RegisterNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_RegisterNodesCount = 2730;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_UnregisterNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_UnregisterNodesCount = 2731;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics = 12860;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId = 12861;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession = 12862;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory = 12863;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism = 12864;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding = 12865;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol = 12866;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode = 12867;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri = 12868;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate = 12869;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SessionId Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_SessionId = 2245;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientUserIdOfSession Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_ClientUserIdOfSession = 2246;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientUserIdHistory Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_ClientUserIdHistory = 2247;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_AuthenticationMechanism Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_AuthenticationMechanism = 2248;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_Encoding Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_Encoding = 2249;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_TransportProtocol Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_TransportProtocol = 2250;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SecurityMode Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_SecurityMode = 2251;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SecurityPolicyUri Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_SecurityPolicyUri = 2252;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientCertificate Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_ClientCertificate = 3058;

        /// <summary>
        /// The identifier for the OptionSetType_OptionSetValues Variable.
        /// </summary>
        public const uint OptionSetType_OptionSetValues = 11488;

        /// <summary>
        /// The identifier for the OptionSetType_BitMask Variable.
        /// </summary>
        public const uint OptionSetType_BitMask = 11701;

        /// <summary>
        /// The identifier for the Server_ServerArray Variable.
        /// </summary>
        public const uint Server_ServerArray = 2254;

        /// <summary>
        /// The identifier for the Server_NamespaceArray Variable.
        /// </summary>
        public const uint Server_NamespaceArray = 2255;

        /// <summary>
        /// The identifier for the Server_ServerStatus Variable.
        /// </summary>
        public const uint Server_ServerStatus = 2256;

        /// <summary>
        /// The identifier for the Server_ServerStatus_StartTime Variable.
        /// </summary>
        public const uint Server_ServerStatus_StartTime = 2257;

        /// <summary>
        /// The identifier for the Server_ServerStatus_CurrentTime Variable.
        /// </summary>
        public const uint Server_ServerStatus_CurrentTime = 2258;

        /// <summary>
        /// The identifier for the Server_ServerStatus_State Variable.
        /// </summary>
        public const uint Server_ServerStatus_State = 2259;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo = 2260;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ProductUri Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_ProductUri = 2262;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ManufacturerName Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_ManufacturerName = 2263;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ProductName Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_ProductName = 2261;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_SoftwareVersion Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_SoftwareVersion = 2264;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_BuildNumber Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_BuildNumber = 2265;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_BuildDate Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_BuildDate = 2266;

        /// <summary>
        /// The identifier for the Server_ServerStatus_SecondsTillShutdown Variable.
        /// </summary>
        public const uint Server_ServerStatus_SecondsTillShutdown = 2992;

        /// <summary>
        /// The identifier for the Server_ServerStatus_ShutdownReason Variable.
        /// </summary>
        public const uint Server_ServerStatus_ShutdownReason = 2993;

        /// <summary>
        /// The identifier for the Server_ServiceLevel Variable.
        /// </summary>
        public const uint Server_ServiceLevel = 2267;

        /// <summary>
        /// The identifier for the Server_Auditing Variable.
        /// </summary>
        public const uint Server_Auditing = 2994;

        /// <summary>
        /// The identifier for the Server_EstimatedReturnTime Variable.
        /// </summary>
        public const uint Server_EstimatedReturnTime = 12885;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_ServerProfileArray Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_ServerProfileArray = 2269;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_LocaleIdArray Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_LocaleIdArray = 2271;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MinSupportedSampleRate Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MinSupportedSampleRate = 2272;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MaxBrowseContinuationPoints = 2735;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxQueryContinuationPoints Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MaxQueryContinuationPoints = 2736;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MaxHistoryContinuationPoints = 2737;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_SoftwareCertificates Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_SoftwareCertificates = 3704;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxArrayLength Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MaxArrayLength = 11702;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxStringLength Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MaxStringLength = 11703;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxByteStringLength Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MaxByteStringLength = 12911;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerRead Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerRead = 11705;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData = 12165;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents = 12166;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite = 11707;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData = 12167;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents = 12168;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall = 11709;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse = 11710;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes = 11711;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds = 11712;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement = 11713;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall = 11714;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary = 2275;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = 2276;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = 2277;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = 2278;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = 2279;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = 3705;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = 2281;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = 2282;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = 2284;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = 2285;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = 2286;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = 2287;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = 2288;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray = 2289;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_SubscriptionDiagnosticsArray = 2290;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = 3707;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = 3708;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_EnabledFlag Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_EnabledFlag = 2294;

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_RedundancySupport Variable.
        /// </summary>
        public const uint Server_ServerRedundancy_RedundancySupport = 3709;

        /// <summary>
        /// The identifier for the Server_GetMonitoredItems_InputArguments Variable.
        /// </summary>
        public const uint Server_GetMonitoredItems_InputArguments = 11493;

        /// <summary>
        /// The identifier for the Server_GetMonitoredItems_OutputArguments Variable.
        /// </summary>
        public const uint Server_GetMonitoredItems_OutputArguments = 11494;

        /// <summary>
        /// The identifier for the Server_ResendData_InputArguments Variable.
        /// </summary>
        public const uint Server_ResendData_InputArguments = 12874;

        /// <summary>
        /// The identifier for the Server_SetSubscriptionDurable_InputArguments Variable.
        /// </summary>
        public const uint Server_SetSubscriptionDurable_InputArguments = 12750;

        /// <summary>
        /// The identifier for the Server_SetSubscriptionDurable_OutputArguments Variable.
        /// </summary>
        public const uint Server_SetSubscriptionDurable_OutputArguments = 12751;

        /// <summary>
        /// The identifier for the Server_RequestServerStateChange_InputArguments Variable.
        /// </summary>
        public const uint Server_RequestServerStateChange_InputArguments = 12887;

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_CurrentServerId Variable.
        /// </summary>
        public const uint Server_ServerRedundancy_CurrentServerId = 11312;

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_RedundantServerArray Variable.
        /// </summary>
        public const uint Server_ServerRedundancy_RedundantServerArray = 11313;

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_ServerUriArray Variable.
        /// </summary>
        public const uint Server_ServerRedundancy_ServerUriArray = 11314;

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_ServerNetworkGroups Variable.
        /// </summary>
        public const uint Server_ServerRedundancy_ServerNetworkGroups = 14415;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceUri Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceUri = 15183;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceVersion Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceVersion = 15184;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespacePublicationDate Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespacePublicationDate = 15185;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_IsNamespaceSubset Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_IsNamespaceSubset = 15186;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_StaticNodeIdTypes Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_StaticNodeIdTypes = 15187;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_StaticNumericNodeIdRange Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_StaticNumericNodeIdRange = 15188;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_StaticStringNodeIdPattern Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_StaticStringNodeIdPattern = 15189;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Size Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Size = 15191;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Writable Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Writable = 15192;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_UserWritable Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_UserWritable = 15193;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_OpenCount Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_OpenCount = 15194;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_InputArguments Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_InputArguments = 15197;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_OutputArguments Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_OutputArguments = 15198;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close_InputArguments Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close_InputArguments = 15200;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_InputArguments Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_InputArguments = 15202;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_OutputArguments Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_OutputArguments = 15203;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write_InputArguments Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write_InputArguments = 15205;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_InputArguments = 15207;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_OutputArguments = 15208;

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition_InputArguments = 15210;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_AccessHistoryDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_AccessHistoryDataCapability = 11193;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_AccessHistoryEventsCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_AccessHistoryEventsCapability = 11242;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_MaxReturnDataValues Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_MaxReturnDataValues = 11273;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_MaxReturnEventValues Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_MaxReturnEventValues = 11274;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_InsertDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_InsertDataCapability = 11196;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_ReplaceDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_ReplaceDataCapability = 11197;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_UpdateDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_UpdateDataCapability = 11198;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_DeleteRawCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_DeleteRawCapability = 11199;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_DeleteAtTimeCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_DeleteAtTimeCapability = 11200;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_InsertEventCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_InsertEventCapability = 11281;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_ReplaceEventCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_ReplaceEventCapability = 11282;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_UpdateEventCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_UpdateEventCapability = 11283;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_DeleteEventCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_DeleteEventCapability = 11502;

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_InsertAnnotationCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilities_InsertAnnotationCapability = 11275;

        /// <summary>
        /// The identifier for the StateMachineType_CurrentState Variable.
        /// </summary>
        public const uint StateMachineType_CurrentState = 2769;

        /// <summary>
        /// The identifier for the StateMachineType_CurrentState_Id Variable.
        /// </summary>
        public const uint StateMachineType_CurrentState_Id = 3720;

        /// <summary>
        /// The identifier for the StateMachineType_LastTransition Variable.
        /// </summary>
        public const uint StateMachineType_LastTransition = 2770;

        /// <summary>
        /// The identifier for the StateMachineType_LastTransition_Id Variable.
        /// </summary>
        public const uint StateMachineType_LastTransition_Id = 3724;

        /// <summary>
        /// The identifier for the StateVariableType_Id Variable.
        /// </summary>
        public const uint StateVariableType_Id = 2756;

        /// <summary>
        /// The identifier for the StateVariableType_Name Variable.
        /// </summary>
        public const uint StateVariableType_Name = 2757;

        /// <summary>
        /// The identifier for the StateVariableType_Number Variable.
        /// </summary>
        public const uint StateVariableType_Number = 2758;

        /// <summary>
        /// The identifier for the StateVariableType_EffectiveDisplayName Variable.
        /// </summary>
        public const uint StateVariableType_EffectiveDisplayName = 2759;

        /// <summary>
        /// The identifier for the TransitionVariableType_Id Variable.
        /// </summary>
        public const uint TransitionVariableType_Id = 2763;

        /// <summary>
        /// The identifier for the TransitionVariableType_Name Variable.
        /// </summary>
        public const uint TransitionVariableType_Name = 2764;

        /// <summary>
        /// The identifier for the TransitionVariableType_Number Variable.
        /// </summary>
        public const uint TransitionVariableType_Number = 2765;

        /// <summary>
        /// The identifier for the TransitionVariableType_TransitionTime Variable.
        /// </summary>
        public const uint TransitionVariableType_TransitionTime = 2766;

        /// <summary>
        /// The identifier for the TransitionVariableType_EffectiveTransitionTime Variable.
        /// </summary>
        public const uint TransitionVariableType_EffectiveTransitionTime = 11456;

        /// <summary>
        /// The identifier for the FiniteStateMachineType_CurrentState Variable.
        /// </summary>
        public const uint FiniteStateMachineType_CurrentState = 2772;

        /// <summary>
        /// The identifier for the FiniteStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public const uint FiniteStateMachineType_CurrentState_Id = 3728;

        /// <summary>
        /// The identifier for the FiniteStateMachineType_LastTransition Variable.
        /// </summary>
        public const uint FiniteStateMachineType_LastTransition = 2773;

        /// <summary>
        /// The identifier for the FiniteStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public const uint FiniteStateMachineType_LastTransition_Id = 3732;

        /// <summary>
        /// The identifier for the FiniteStateVariableType_Id Variable.
        /// </summary>
        public const uint FiniteStateVariableType_Id = 2761;

        /// <summary>
        /// The identifier for the FiniteTransitionVariableType_Id Variable.
        /// </summary>
        public const uint FiniteTransitionVariableType_Id = 2768;

        /// <summary>
        /// The identifier for the StateType_StateNumber Variable.
        /// </summary>
        public const uint StateType_StateNumber = 2308;

        /// <summary>
        /// The identifier for the TransitionType_TransitionNumber Variable.
        /// </summary>
        public const uint TransitionType_TransitionNumber = 2312;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_CurrentState_Id = 15805;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_LastTransition_Id = 15810;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Idle_StateNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_Idle_StateNumber = 15816;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepare_StateNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadPrepare_StateNumber = 15818;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransfer_StateNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadTransfer_StateNumber = 15820;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWrite_StateNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ApplyWrite_StateNumber = 15822;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Error_StateNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_Error_StateNumber = 15824;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber = 15826;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber = 15828;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber = 15830;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber = 15832;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber = 15834;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepareToError_TransitionNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadPrepareToError_TransitionNumber = 15836;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransferToError_TransitionNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ReadTransferToError_TransitionNumber = 15838;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWriteToError_TransitionNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ApplyWriteToError_TransitionNumber = 15840;

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ErrorToIdle_TransitionNumber Variable.
        /// </summary>
        public const uint FileTransferStateMachineType_ErrorToIdle_TransitionNumber = 15842;

        /// <summary>
        /// The identifier for the TransitionEventType_Transition Variable.
        /// </summary>
        public const uint TransitionEventType_Transition = 2774;

        /// <summary>
        /// The identifier for the TransitionEventType_Transition_Id Variable.
        /// </summary>
        public const uint TransitionEventType_Transition_Id = 3754;

        /// <summary>
        /// The identifier for the TransitionEventType_FromState Variable.
        /// </summary>
        public const uint TransitionEventType_FromState = 2775;

        /// <summary>
        /// The identifier for the TransitionEventType_FromState_Id Variable.
        /// </summary>
        public const uint TransitionEventType_FromState_Id = 3746;

        /// <summary>
        /// The identifier for the TransitionEventType_ToState Variable.
        /// </summary>
        public const uint TransitionEventType_ToState = 2776;

        /// <summary>
        /// The identifier for the TransitionEventType_ToState_Id Variable.
        /// </summary>
        public const uint TransitionEventType_ToState_Id = 3750;

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType_OldStateId Variable.
        /// </summary>
        public const uint AuditUpdateStateEventType_OldStateId = 2777;

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType_NewStateId Variable.
        /// </summary>
        public const uint AuditUpdateStateEventType_NewStateId = 2778;

        /// <summary>
        /// The identifier for the OpenFileMode_EnumValues Variable.
        /// </summary>
        public const uint OpenFileMode_EnumValues = 11940;

        /// <summary>
        /// The identifier for the DataItemType_Definition Variable.
        /// </summary>
        public const uint DataItemType_Definition = 2366;

        /// <summary>
        /// The identifier for the DataItemType_ValuePrecision Variable.
        /// </summary>
        public const uint DataItemType_ValuePrecision = 2367;

        /// <summary>
        /// The identifier for the AnalogItemType_InstrumentRange Variable.
        /// </summary>
        public const uint AnalogItemType_InstrumentRange = 2370;

        /// <summary>
        /// The identifier for the AnalogItemType_EURange Variable.
        /// </summary>
        public const uint AnalogItemType_EURange = 2369;

        /// <summary>
        /// The identifier for the AnalogItemType_EngineeringUnits Variable.
        /// </summary>
        public const uint AnalogItemType_EngineeringUnits = 2371;

        /// <summary>
        /// The identifier for the TwoStateDiscreteType_FalseState Variable.
        /// </summary>
        public const uint TwoStateDiscreteType_FalseState = 2374;

        /// <summary>
        /// The identifier for the TwoStateDiscreteType_TrueState Variable.
        /// </summary>
        public const uint TwoStateDiscreteType_TrueState = 2375;

        /// <summary>
        /// The identifier for the MultiStateDiscreteType_EnumStrings Variable.
        /// </summary>
        public const uint MultiStateDiscreteType_EnumStrings = 2377;

        /// <summary>
        /// The identifier for the MultiStateValueDiscreteType_EnumValues Variable.
        /// </summary>
        public const uint MultiStateValueDiscreteType_EnumValues = 11241;

        /// <summary>
        /// The identifier for the MultiStateValueDiscreteType_ValueAsText Variable.
        /// </summary>
        public const uint MultiStateValueDiscreteType_ValueAsText = 11461;

        /// <summary>
        /// The identifier for the ArrayItemType_InstrumentRange Variable.
        /// </summary>
        public const uint ArrayItemType_InstrumentRange = 12024;

        /// <summary>
        /// The identifier for the ArrayItemType_EURange Variable.
        /// </summary>
        public const uint ArrayItemType_EURange = 12025;

        /// <summary>
        /// The identifier for the ArrayItemType_EngineeringUnits Variable.
        /// </summary>
        public const uint ArrayItemType_EngineeringUnits = 12026;

        /// <summary>
        /// The identifier for the ArrayItemType_Title Variable.
        /// </summary>
        public const uint ArrayItemType_Title = 12027;

        /// <summary>
        /// The identifier for the ArrayItemType_AxisScaleType Variable.
        /// </summary>
        public const uint ArrayItemType_AxisScaleType = 12028;

        /// <summary>
        /// The identifier for the YArrayItemType_XAxisDefinition Variable.
        /// </summary>
        public const uint YArrayItemType_XAxisDefinition = 12037;

        /// <summary>
        /// The identifier for the XYArrayItemType_XAxisDefinition Variable.
        /// </summary>
        public const uint XYArrayItemType_XAxisDefinition = 12046;

        /// <summary>
        /// The identifier for the ImageItemType_XAxisDefinition Variable.
        /// </summary>
        public const uint ImageItemType_XAxisDefinition = 12055;

        /// <summary>
        /// The identifier for the ImageItemType_YAxisDefinition Variable.
        /// </summary>
        public const uint ImageItemType_YAxisDefinition = 12056;

        /// <summary>
        /// The identifier for the CubeItemType_XAxisDefinition Variable.
        /// </summary>
        public const uint CubeItemType_XAxisDefinition = 12065;

        /// <summary>
        /// The identifier for the CubeItemType_YAxisDefinition Variable.
        /// </summary>
        public const uint CubeItemType_YAxisDefinition = 12066;

        /// <summary>
        /// The identifier for the CubeItemType_ZAxisDefinition Variable.
        /// </summary>
        public const uint CubeItemType_ZAxisDefinition = 12067;

        /// <summary>
        /// The identifier for the NDimensionArrayItemType_AxisDefinition Variable.
        /// </summary>
        public const uint NDimensionArrayItemType_AxisDefinition = 12076;

        /// <summary>
        /// The identifier for the TwoStateVariableType_Id Variable.
        /// </summary>
        public const uint TwoStateVariableType_Id = 8996;

        /// <summary>
        /// The identifier for the TwoStateVariableType_TransitionTime Variable.
        /// </summary>
        public const uint TwoStateVariableType_TransitionTime = 9000;

        /// <summary>
        /// The identifier for the TwoStateVariableType_EffectiveTransitionTime Variable.
        /// </summary>
        public const uint TwoStateVariableType_EffectiveTransitionTime = 9001;

        /// <summary>
        /// The identifier for the TwoStateVariableType_TrueState Variable.
        /// </summary>
        public const uint TwoStateVariableType_TrueState = 11110;

        /// <summary>
        /// The identifier for the TwoStateVariableType_FalseState Variable.
        /// </summary>
        public const uint TwoStateVariableType_FalseState = 11111;

        /// <summary>
        /// The identifier for the ConditionVariableType_SourceTimestamp Variable.
        /// </summary>
        public const uint ConditionVariableType_SourceTimestamp = 9003;

        /// <summary>
        /// The identifier for the ConditionType_ConditionClassId Variable.
        /// </summary>
        public const uint ConditionType_ConditionClassId = 11112;

        /// <summary>
        /// The identifier for the ConditionType_ConditionClassName Variable.
        /// </summary>
        public const uint ConditionType_ConditionClassName = 11113;

        /// <summary>
        /// The identifier for the ConditionType_ConditionName Variable.
        /// </summary>
        public const uint ConditionType_ConditionName = 9009;

        /// <summary>
        /// The identifier for the ConditionType_BranchId Variable.
        /// </summary>
        public const uint ConditionType_BranchId = 9010;

        /// <summary>
        /// The identifier for the ConditionType_Retain Variable.
        /// </summary>
        public const uint ConditionType_Retain = 3874;

        /// <summary>
        /// The identifier for the ConditionType_EnabledState Variable.
        /// </summary>
        public const uint ConditionType_EnabledState = 9011;

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_Id Variable.
        /// </summary>
        public const uint ConditionType_EnabledState_Id = 9012;

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_EffectiveDisplayName Variable.
        /// </summary>
        public const uint ConditionType_EnabledState_EffectiveDisplayName = 9015;

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_TransitionTime Variable.
        /// </summary>
        public const uint ConditionType_EnabledState_TransitionTime = 9016;

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_EffectiveTransitionTime Variable.
        /// </summary>
        public const uint ConditionType_EnabledState_EffectiveTransitionTime = 9017;

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_TrueState Variable.
        /// </summary>
        public const uint ConditionType_EnabledState_TrueState = 9018;

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_FalseState Variable.
        /// </summary>
        public const uint ConditionType_EnabledState_FalseState = 9019;

        /// <summary>
        /// The identifier for the ConditionType_Quality Variable.
        /// </summary>
        public const uint ConditionType_Quality = 9020;

        /// <summary>
        /// The identifier for the ConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint ConditionType_Quality_SourceTimestamp = 9021;

        /// <summary>
        /// The identifier for the ConditionType_LastSeverity Variable.
        /// </summary>
        public const uint ConditionType_LastSeverity = 9022;

        /// <summary>
        /// The identifier for the ConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint ConditionType_LastSeverity_SourceTimestamp = 9023;

        /// <summary>
        /// The identifier for the ConditionType_Comment Variable.
        /// </summary>
        public const uint ConditionType_Comment = 9024;

        /// <summary>
        /// The identifier for the ConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint ConditionType_Comment_SourceTimestamp = 9025;

        /// <summary>
        /// The identifier for the ConditionType_ClientUserId Variable.
        /// </summary>
        public const uint ConditionType_ClientUserId = 9026;

        /// <summary>
        /// The identifier for the ConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint ConditionType_AddComment_InputArguments = 9030;

        /// <summary>
        /// The identifier for the ConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint ConditionType_ConditionRefresh_InputArguments = 3876;

        /// <summary>
        /// The identifier for the ConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint ConditionType_ConditionRefresh2_InputArguments = 12913;

        /// <summary>
        /// The identifier for the DialogConditionType_EnabledState Variable.
        /// </summary>
        public const uint DialogConditionType_EnabledState = 9035;

        /// <summary>
        /// The identifier for the DialogConditionType_EnabledState_Id Variable.
        /// </summary>
        public const uint DialogConditionType_EnabledState_Id = 9036;

        /// <summary>
        /// The identifier for the DialogConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint DialogConditionType_Quality_SourceTimestamp = 9045;

        /// <summary>
        /// The identifier for the DialogConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint DialogConditionType_LastSeverity_SourceTimestamp = 9047;

        /// <summary>
        /// The identifier for the DialogConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint DialogConditionType_Comment_SourceTimestamp = 9049;

        /// <summary>
        /// The identifier for the DialogConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint DialogConditionType_AddComment_InputArguments = 9054;

        /// <summary>
        /// The identifier for the DialogConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint DialogConditionType_ConditionRefresh_InputArguments = 4199;

        /// <summary>
        /// The identifier for the DialogConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint DialogConditionType_ConditionRefresh2_InputArguments = 12917;

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState Variable.
        /// </summary>
        public const uint DialogConditionType_DialogState = 9055;

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState_Id Variable.
        /// </summary>
        public const uint DialogConditionType_DialogState_Id = 9056;

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState_TransitionTime Variable.
        /// </summary>
        public const uint DialogConditionType_DialogState_TransitionTime = 9060;

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState_TrueState Variable.
        /// </summary>
        public const uint DialogConditionType_DialogState_TrueState = 9062;

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState_FalseState Variable.
        /// </summary>
        public const uint DialogConditionType_DialogState_FalseState = 9063;

        /// <summary>
        /// The identifier for the DialogConditionType_Prompt Variable.
        /// </summary>
        public const uint DialogConditionType_Prompt = 2831;

        /// <summary>
        /// The identifier for the DialogConditionType_ResponseOptionSet Variable.
        /// </summary>
        public const uint DialogConditionType_ResponseOptionSet = 9064;

        /// <summary>
        /// The identifier for the DialogConditionType_DefaultResponse Variable.
        /// </summary>
        public const uint DialogConditionType_DefaultResponse = 9065;

        /// <summary>
        /// The identifier for the DialogConditionType_OkResponse Variable.
        /// </summary>
        public const uint DialogConditionType_OkResponse = 9066;

        /// <summary>
        /// The identifier for the DialogConditionType_CancelResponse Variable.
        /// </summary>
        public const uint DialogConditionType_CancelResponse = 9067;

        /// <summary>
        /// The identifier for the DialogConditionType_LastResponse Variable.
        /// </summary>
        public const uint DialogConditionType_LastResponse = 9068;

        /// <summary>
        /// The identifier for the DialogConditionType_Respond_InputArguments Variable.
        /// </summary>
        public const uint DialogConditionType_Respond_InputArguments = 9070;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_EnabledState Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_EnabledState = 9073;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_EnabledState_Id Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_EnabledState_Id = 9074;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_Quality_SourceTimestamp = 9083;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_LastSeverity_SourceTimestamp = 9085;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_Comment_SourceTimestamp = 9087;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_AddComment_InputArguments = 9092;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConditionRefresh_InputArguments = 5124;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConditionRefresh2_InputArguments = 12919;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_AckedState = 9093;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState_Id Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_AckedState_Id = 9094;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState_TransitionTime Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_AckedState_TransitionTime = 9098;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState_TrueState Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_AckedState_TrueState = 9100;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState_FalseState Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_AckedState_FalseState = 9101;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConfirmedState = 9102;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConfirmedState_Id = 9103;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState_TransitionTime Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConfirmedState_TransitionTime = 9107;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState_TrueState Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConfirmedState_TrueState = 9109;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState_FalseState Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConfirmedState_FalseState = 9110;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_Acknowledge_InputArguments = 9112;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_Confirm_InputArguments = 9114;

        /// <summary>
        /// The identifier for the AlarmConditionType_EnabledState Variable.
        /// </summary>
        public const uint AlarmConditionType_EnabledState = 9118;

        /// <summary>
        /// The identifier for the AlarmConditionType_EnabledState_Id Variable.
        /// </summary>
        public const uint AlarmConditionType_EnabledState_Id = 9119;

        /// <summary>
        /// The identifier for the AlarmConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint AlarmConditionType_Quality_SourceTimestamp = 9128;

        /// <summary>
        /// The identifier for the AlarmConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint AlarmConditionType_LastSeverity_SourceTimestamp = 9130;

        /// <summary>
        /// The identifier for the AlarmConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint AlarmConditionType_Comment_SourceTimestamp = 9132;

        /// <summary>
        /// The identifier for the AlarmConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint AlarmConditionType_AddComment_InputArguments = 9137;

        /// <summary>
        /// The identifier for the AlarmConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint AlarmConditionType_ConditionRefresh_InputArguments = 5551;

        /// <summary>
        /// The identifier for the AlarmConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint AlarmConditionType_ConditionRefresh2_InputArguments = 12985;

        /// <summary>
        /// The identifier for the AlarmConditionType_AckedState_Id Variable.
        /// </summary>
        public const uint AlarmConditionType_AckedState_Id = 9139;

        /// <summary>
        /// The identifier for the AlarmConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint AlarmConditionType_ConfirmedState_Id = 9148;

        /// <summary>
        /// The identifier for the AlarmConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint AlarmConditionType_Acknowledge_InputArguments = 9157;

        /// <summary>
        /// The identifier for the AlarmConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint AlarmConditionType_Confirm_InputArguments = 9159;

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState Variable.
        /// </summary>
        public const uint AlarmConditionType_ActiveState = 9160;

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_Id Variable.
        /// </summary>
        public const uint AlarmConditionType_ActiveState_Id = 9161;

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_EffectiveDisplayName Variable.
        /// </summary>
        public const uint AlarmConditionType_ActiveState_EffectiveDisplayName = 9164;

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_TransitionTime Variable.
        /// </summary>
        public const uint AlarmConditionType_ActiveState_TransitionTime = 9165;

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_EffectiveTransitionTime Variable.
        /// </summary>
        public const uint AlarmConditionType_ActiveState_EffectiveTransitionTime = 9166;

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_TrueState Variable.
        /// </summary>
        public const uint AlarmConditionType_ActiveState_TrueState = 9167;

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_FalseState Variable.
        /// </summary>
        public const uint AlarmConditionType_ActiveState_FalseState = 9168;

        /// <summary>
        /// The identifier for the AlarmConditionType_InputNode Variable.
        /// </summary>
        public const uint AlarmConditionType_InputNode = 11120;

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState Variable.
        /// </summary>
        public const uint AlarmConditionType_SuppressedState = 9169;

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState_Id Variable.
        /// </summary>
        public const uint AlarmConditionType_SuppressedState_Id = 9170;

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState_TransitionTime Variable.
        /// </summary>
        public const uint AlarmConditionType_SuppressedState_TransitionTime = 9174;

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState_TrueState Variable.
        /// </summary>
        public const uint AlarmConditionType_SuppressedState_TrueState = 9176;

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState_FalseState Variable.
        /// </summary>
        public const uint AlarmConditionType_SuppressedState_FalseState = 9177;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_CurrentState = 9179;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_CurrentState_Id = 9180;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_LastTransition Variable.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_LastTransition = 9184;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_LastTransition_Id = 9185;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_LastTransition_TransitionTime Variable.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_LastTransition_TransitionTime = 9188;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_UnshelveTime = 9189;

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint AlarmConditionType_ShelvingState_TimedShelve_InputArguments = 9214;

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedOrShelved Variable.
        /// </summary>
        public const uint AlarmConditionType_SuppressedOrShelved = 9215;

        /// <summary>
        /// The identifier for the AlarmConditionType_MaxTimeShelved Variable.
        /// </summary>
        public const uint AlarmConditionType_MaxTimeShelved = 9216;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_CurrentState_Id = 6089;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_LastTransition_Id = 6094;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelveTime Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_UnshelveTime = 9115;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelved_StateNumber Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_Unshelved_StateNumber = 6098;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelved_StateNumber Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelved_StateNumber = 6100;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelved_StateNumber Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelved_StateNumber = 6101;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber = 11322;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber = 11323;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber = 11324;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber = 11325;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber = 11326;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber = 11327;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelve_InputArguments = 2991;

        /// <summary>
        /// The identifier for the LimitAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint LimitAlarmType_EnabledState_Id = 9220;

        /// <summary>
        /// The identifier for the LimitAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint LimitAlarmType_Quality_SourceTimestamp = 9229;

        /// <summary>
        /// The identifier for the LimitAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint LimitAlarmType_LastSeverity_SourceTimestamp = 9231;

        /// <summary>
        /// The identifier for the LimitAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint LimitAlarmType_Comment_SourceTimestamp = 9233;

        /// <summary>
        /// The identifier for the LimitAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint LimitAlarmType_AddComment_InputArguments = 9238;

        /// <summary>
        /// The identifier for the LimitAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint LimitAlarmType_ConditionRefresh_InputArguments = 6127;

        /// <summary>
        /// The identifier for the LimitAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint LimitAlarmType_ConditionRefresh2_InputArguments = 12987;

        /// <summary>
        /// The identifier for the LimitAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint LimitAlarmType_AckedState_Id = 9240;

        /// <summary>
        /// The identifier for the LimitAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint LimitAlarmType_ConfirmedState_Id = 9249;

        /// <summary>
        /// The identifier for the LimitAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint LimitAlarmType_Acknowledge_InputArguments = 9258;

        /// <summary>
        /// The identifier for the LimitAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint LimitAlarmType_Confirm_InputArguments = 9260;

        /// <summary>
        /// The identifier for the LimitAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint LimitAlarmType_ActiveState_Id = 9262;

        /// <summary>
        /// The identifier for the LimitAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint LimitAlarmType_SuppressedState_Id = 9271;

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint LimitAlarmType_ShelvingState_CurrentState = 9280;

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint LimitAlarmType_ShelvingState_CurrentState_Id = 9281;

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint LimitAlarmType_ShelvingState_LastTransition_Id = 9286;

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint LimitAlarmType_ShelvingState_UnshelveTime = 9290;

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint LimitAlarmType_ShelvingState_TimedShelve_InputArguments = 9315;

        /// <summary>
        /// The identifier for the LimitAlarmType_HighHighLimit Variable.
        /// </summary>
        public const uint LimitAlarmType_HighHighLimit = 11124;

        /// <summary>
        /// The identifier for the LimitAlarmType_HighLimit Variable.
        /// </summary>
        public const uint LimitAlarmType_HighLimit = 11125;

        /// <summary>
        /// The identifier for the LimitAlarmType_LowLimit Variable.
        /// </summary>
        public const uint LimitAlarmType_LowLimit = 11126;

        /// <summary>
        /// The identifier for the LimitAlarmType_LowLowLimit Variable.
        /// </summary>
        public const uint LimitAlarmType_LowLowLimit = 11127;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_CurrentState_Id = 9320;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_LastTransition_Id = 9325;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighHigh_StateNumber Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_HighHigh_StateNumber = 9330;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_High_StateNumber Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_High_StateNumber = 9332;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_Low_StateNumber Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_Low_StateNumber = 9334;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowLow_StateNumber Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_LowLow_StateNumber = 9336;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber = 11340;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber = 11341;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber = 11342;

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber Variable.
        /// </summary>
        public const uint ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber = 11343;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_EnabledState_Id = 9355;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_Quality_SourceTimestamp = 9364;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp = 9366;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_Comment_SourceTimestamp = 9368;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_AddComment_InputArguments = 9373;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ConditionRefresh_InputArguments = 9375;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments = 12989;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_AckedState_Id = 9377;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ConfirmedState_Id = 9386;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_Acknowledge_InputArguments = 9395;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_Confirm_InputArguments = 9397;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ActiveState Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ActiveState = 9398;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ActiveState_Id = 9399;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_SuppressedState_Id = 9408;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ShelvingState_CurrentState = 9417;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id = 9418;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id = 9423;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ShelvingState_UnshelveTime = 9427;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments = 9452;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_CurrentState Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_LimitState_CurrentState = 9456;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_CurrentState_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_LimitState_CurrentState_Id = 9457;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_LastTransition Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_LimitState_LastTransition = 9461;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_LastTransition_Id Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_LimitState_LastTransition_Id = 9462;

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime Variable.
        /// </summary>
        public const uint ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime = 9465;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_EnabledState_Id = 9920;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_Quality_SourceTimestamp = 9929;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp = 9931;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_Comment_SourceTimestamp = 9933;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_AddComment_InputArguments = 9938;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments = 9940;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments = 12991;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_AckedState_Id = 9942;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ConfirmedState_Id = 9951;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_Acknowledge_InputArguments = 9960;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_Confirm_InputArguments = 9962;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ActiveState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ActiveState = 9963;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ActiveState_Id = 9964;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_SuppressedState_Id = 9973;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ShelvingState_CurrentState = 9982;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id = 9983;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id = 9988;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime = 9992;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments = 10017;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighHighState = 10020;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighHighState_Id = 10021;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState_TransitionTime Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighHighState_TransitionTime = 10025;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState_TrueState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighHighState_TrueState = 10027;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState_FalseState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighHighState_FalseState = 10028;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighState = 10029;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighState_Id = 10030;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState_TransitionTime Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighState_TransitionTime = 10034;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState_TrueState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighState_TrueState = 10036;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState_FalseState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_HighState_FalseState = 10037;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowState = 10038;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowState_Id = 10039;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState_TransitionTime Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowState_TransitionTime = 10043;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState_TrueState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowState_TrueState = 10045;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState_FalseState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowState_FalseState = 10046;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowLowState = 10047;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowLowState_Id = 10048;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState_TransitionTime Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowLowState_TransitionTime = 10052;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState_TrueState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowLowState_TrueState = 10054;

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState_FalseState Variable.
        /// </summary>
        public const uint NonExclusiveLimitAlarmType_LowLowState_FalseState = 10055;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_EnabledState_Id = 10074;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_Quality_SourceTimestamp = 10083;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp = 10085;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_Comment_SourceTimestamp = 10087;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_AddComment_InputArguments = 10092;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments = 10094;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments = 12993;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_AckedState_Id = 10096;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ConfirmedState_Id = 10105;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_Acknowledge_InputArguments = 10114;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_Confirm_InputArguments = 10116;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ActiveState_Id = 10118;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_SuppressedState_Id = 10127;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ShelvingState_CurrentState = 10136;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id = 10137;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id = 10142;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime = 10146;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments = 10171;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_HighHighState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_HighHighState_Id = 10175;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_HighState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_HighState_Id = 10184;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_LowState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_LowState_Id = 10193;

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_LowLowState_Id Variable.
        /// </summary>
        public const uint NonExclusiveLevelAlarmType_LowLowState_Id = 10202;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_EnabledState_Id = 9496;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_Quality_SourceTimestamp = 9505;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp = 9507;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_Comment_SourceTimestamp = 9509;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_AddComment_InputArguments = 9514;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ConditionRefresh_InputArguments = 9516;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments = 12995;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_AckedState_Id = 9518;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ConfirmedState_Id = 9527;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_Acknowledge_InputArguments = 9536;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_Confirm_InputArguments = 9538;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ActiveState_Id = 9540;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_SuppressedState_Id = 9549;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ShelvingState_CurrentState = 9558;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id = 9559;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id = 9564;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ShelvingState_UnshelveTime = 9568;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments = 9593;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_LimitState_CurrentState Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_LimitState_CurrentState = 9597;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_LimitState_CurrentState_Id Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_LimitState_CurrentState_Id = 9598;

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_LimitState_LastTransition_Id Variable.
        /// </summary>
        public const uint ExclusiveLevelAlarmType_LimitState_LastTransition_Id = 9603;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_EnabledState_Id = 10382;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_Quality_SourceTimestamp = 10391;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp = 10393;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_Comment_SourceTimestamp = 10395;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_AddComment_InputArguments = 10400;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments = 10402;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments = 12997;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_AckedState_Id = 10404;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ConfirmedState_Id = 10413;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_Acknowledge_InputArguments = 10422;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_Confirm_InputArguments = 10424;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ActiveState_Id = 10426;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_SuppressedState_Id = 10435;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_CurrentState = 10444;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id = 10445;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id = 10450;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime = 10454;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments = 10479;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_HighHighState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_HighHighState_Id = 10483;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_HighState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_HighState_Id = 10492;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_LowState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_LowState_Id = 10501;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_LowLowState_Id Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_LowLowState_Id = 10510;

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_SetpointNode Variable.
        /// </summary>
        public const uint NonExclusiveDeviationAlarmType_SetpointNode = 10522;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_EnabledState_Id = 9778;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_Quality_SourceTimestamp = 9787;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp = 9789;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_Comment_SourceTimestamp = 9791;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_AddComment_InputArguments = 9796;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments = 9798;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments = 12999;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_AckedState_Id = 9800;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ConfirmedState_Id = 9809;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_Acknowledge_InputArguments = 9818;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_Confirm_InputArguments = 9820;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ActiveState_Id = 9822;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_SuppressedState_Id = 9831;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ShelvingState_CurrentState = 9840;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id = 9841;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id = 9846;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime = 9850;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments = 9875;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_LimitState_CurrentState Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_LimitState_CurrentState = 9879;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_LimitState_CurrentState_Id Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_LimitState_CurrentState_Id = 9880;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_LimitState_LastTransition_Id Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_LimitState_LastTransition_Id = 9885;

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_SetpointNode Variable.
        /// </summary>
        public const uint ExclusiveDeviationAlarmType_SetpointNode = 9905;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_EnabledState_Id = 10228;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp = 10237;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp = 10239;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp = 10241;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments = 10246;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments = 10248;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments = 13001;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_AckedState_Id = 10250;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id = 10259;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments = 10268;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments = 10270;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ActiveState_Id = 10272;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_SuppressedState_Id = 10281;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState = 10290;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id = 10291;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id = 10296;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime = 10300;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments = 10325;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_HighHighState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_HighHighState_Id = 10329;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_HighState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_HighState_Id = 10338;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_LowState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_LowState_Id = 10347;

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_LowLowState_Id Variable.
        /// </summary>
        public const uint NonExclusiveRateOfChangeAlarmType_LowLowState_Id = 10356;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_EnabledState_Id = 9637;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp = 9646;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp = 9648;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp = 9650;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_AddComment_InputArguments = 9655;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments = 9657;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments = 13003;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_AckedState_Id = 9659;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ConfirmedState_Id = 9668;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments = 9677;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_Confirm_InputArguments = 9679;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ActiveState_Id = 9681;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_SuppressedState_Id = 9690;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState = 9699;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id = 9700;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id = 9705;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime = 9709;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments = 9734;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_LimitState_CurrentState Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_LimitState_CurrentState = 9738;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id = 9739;

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id Variable.
        /// </summary>
        public const uint ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id = 9744;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint DiscreteAlarmType_EnabledState_Id = 10537;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint DiscreteAlarmType_Quality_SourceTimestamp = 10546;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint DiscreteAlarmType_LastSeverity_SourceTimestamp = 10548;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint DiscreteAlarmType_Comment_SourceTimestamp = 10550;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint DiscreteAlarmType_AddComment_InputArguments = 10555;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint DiscreteAlarmType_ConditionRefresh_InputArguments = 10557;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint DiscreteAlarmType_ConditionRefresh2_InputArguments = 13005;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint DiscreteAlarmType_AckedState_Id = 10559;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint DiscreteAlarmType_ConfirmedState_Id = 10568;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint DiscreteAlarmType_Acknowledge_InputArguments = 10577;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint DiscreteAlarmType_Confirm_InputArguments = 10579;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint DiscreteAlarmType_ActiveState_Id = 10581;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint DiscreteAlarmType_SuppressedState_Id = 10590;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint DiscreteAlarmType_ShelvingState_CurrentState = 10599;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint DiscreteAlarmType_ShelvingState_CurrentState_Id = 10600;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint DiscreteAlarmType_ShelvingState_LastTransition_Id = 10605;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint DiscreteAlarmType_ShelvingState_UnshelveTime = 10609;

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments = 10634;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint OffNormalAlarmType_EnabledState_Id = 10651;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint OffNormalAlarmType_Quality_SourceTimestamp = 10660;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint OffNormalAlarmType_LastSeverity_SourceTimestamp = 10662;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint OffNormalAlarmType_Comment_SourceTimestamp = 10664;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint OffNormalAlarmType_AddComment_InputArguments = 10669;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint OffNormalAlarmType_ConditionRefresh_InputArguments = 10671;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint OffNormalAlarmType_ConditionRefresh2_InputArguments = 13007;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint OffNormalAlarmType_AckedState_Id = 10673;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint OffNormalAlarmType_ConfirmedState_Id = 10682;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint OffNormalAlarmType_Acknowledge_InputArguments = 10691;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint OffNormalAlarmType_Confirm_InputArguments = 10693;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint OffNormalAlarmType_ActiveState_Id = 10695;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint OffNormalAlarmType_SuppressedState_Id = 10704;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint OffNormalAlarmType_ShelvingState_CurrentState = 10713;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint OffNormalAlarmType_ShelvingState_CurrentState_Id = 10714;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint OffNormalAlarmType_ShelvingState_LastTransition_Id = 10719;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint OffNormalAlarmType_ShelvingState_UnshelveTime = 10723;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments = 10748;

        /// <summary>
        /// The identifier for the OffNormalAlarmType_NormalState Variable.
        /// </summary>
        public const uint OffNormalAlarmType_NormalState = 11158;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_EnabledState_Id = 11769;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_Quality_SourceTimestamp = 11778;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_LastSeverity_SourceTimestamp = 11780;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_Comment_SourceTimestamp = 11782;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_AddComment_InputArguments = 11787;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ConditionRefresh_InputArguments = 11789;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ConditionRefresh2_InputArguments = 13009;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_AckedState_Id = 11791;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ConfirmedState_Id = 11800;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_Acknowledge_InputArguments = 11809;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_Confirm_InputArguments = 11811;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ActiveState_Id = 11813;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_SuppressedState_Id = 11823;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ShelvingState_CurrentState = 11832;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ShelvingState_CurrentState_Id = 11833;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ShelvingState_LastTransition_Id = 11838;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ShelvingState_UnshelveTime = 11843;

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments = 11847;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_EnabledState_Id = 13241;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_Quality_SourceTimestamp = 13250;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_LastSeverity_SourceTimestamp = 13252;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_Comment_SourceTimestamp = 13254;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_AddComment_InputArguments = 13259;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ConditionRefresh_InputArguments = 13261;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ConditionRefresh2_InputArguments = 13263;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_AckedState_Id = 13265;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ConfirmedState_Id = 13274;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_Acknowledge_InputArguments = 13283;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_Confirm_InputArguments = 13285;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ActiveState_Id = 13287;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_SuppressedState_Id = 13297;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ShelvingState_CurrentState = 13306;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ShelvingState_CurrentState_Id = 13307;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ShelvingState_LastTransition_Id = 13312;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ShelvingState_UnshelveTime = 13317;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments = 13321;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ExpirationDate Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ExpirationDate = 13325;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ExpirationLimit Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_ExpirationLimit = 14900;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_CertificateType Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_CertificateType = 13326;

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Certificate Variable.
        /// </summary>
        public const uint CertificateExpirationAlarmType_Certificate = 13327;

        /// <summary>
        /// The identifier for the TripAlarmType_EnabledState_Id Variable.
        /// </summary>
        public const uint TripAlarmType_EnabledState_Id = 10765;

        /// <summary>
        /// The identifier for the TripAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint TripAlarmType_Quality_SourceTimestamp = 10774;

        /// <summary>
        /// The identifier for the TripAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint TripAlarmType_LastSeverity_SourceTimestamp = 10776;

        /// <summary>
        /// The identifier for the TripAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint TripAlarmType_Comment_SourceTimestamp = 10778;

        /// <summary>
        /// The identifier for the TripAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint TripAlarmType_AddComment_InputArguments = 10783;

        /// <summary>
        /// The identifier for the TripAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint TripAlarmType_ConditionRefresh_InputArguments = 10785;

        /// <summary>
        /// The identifier for the TripAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint TripAlarmType_ConditionRefresh2_InputArguments = 13011;

        /// <summary>
        /// The identifier for the TripAlarmType_AckedState_Id Variable.
        /// </summary>
        public const uint TripAlarmType_AckedState_Id = 10787;

        /// <summary>
        /// The identifier for the TripAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint TripAlarmType_ConfirmedState_Id = 10796;

        /// <summary>
        /// The identifier for the TripAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint TripAlarmType_Acknowledge_InputArguments = 10805;

        /// <summary>
        /// The identifier for the TripAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint TripAlarmType_Confirm_InputArguments = 10807;

        /// <summary>
        /// The identifier for the TripAlarmType_ActiveState_Id Variable.
        /// </summary>
        public const uint TripAlarmType_ActiveState_Id = 10809;

        /// <summary>
        /// The identifier for the TripAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public const uint TripAlarmType_SuppressedState_Id = 10818;

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public const uint TripAlarmType_ShelvingState_CurrentState = 10827;

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public const uint TripAlarmType_ShelvingState_CurrentState_Id = 10828;

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public const uint TripAlarmType_ShelvingState_LastTransition_Id = 10833;

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public const uint TripAlarmType_ShelvingState_UnshelveTime = 10837;

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint TripAlarmType_ShelvingState_TimedShelve_InputArguments = 10862;

        /// <summary>
        /// The identifier for the AuditConditionCommentEventType_EventId Variable.
        /// </summary>
        public const uint AuditConditionCommentEventType_EventId = 4170;

        /// <summary>
        /// The identifier for the AuditConditionCommentEventType_Comment Variable.
        /// </summary>
        public const uint AuditConditionCommentEventType_Comment = 11851;

        /// <summary>
        /// The identifier for the AuditConditionRespondEventType_SelectedResponse Variable.
        /// </summary>
        public const uint AuditConditionRespondEventType_SelectedResponse = 11852;

        /// <summary>
        /// The identifier for the AuditConditionAcknowledgeEventType_EventId Variable.
        /// </summary>
        public const uint AuditConditionAcknowledgeEventType_EventId = 8945;

        /// <summary>
        /// The identifier for the AuditConditionAcknowledgeEventType_Comment Variable.
        /// </summary>
        public const uint AuditConditionAcknowledgeEventType_Comment = 11853;

        /// <summary>
        /// The identifier for the AuditConditionConfirmEventType_EventId Variable.
        /// </summary>
        public const uint AuditConditionConfirmEventType_EventId = 8962;

        /// <summary>
        /// The identifier for the AuditConditionConfirmEventType_Comment Variable.
        /// </summary>
        public const uint AuditConditionConfirmEventType_Comment = 11854;

        /// <summary>
        /// The identifier for the AuditConditionShelvingEventType_ShelvingTime Variable.
        /// </summary>
        public const uint AuditConditionShelvingEventType_ShelvingTime = 11855;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState Variable.
        /// </summary>
        public const uint ProgramStateMachineType_CurrentState = 3830;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public const uint ProgramStateMachineType_CurrentState_Id = 3831;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState_Number Variable.
        /// </summary>
        public const uint ProgramStateMachineType_CurrentState_Number = 3833;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition Variable.
        /// </summary>
        public const uint ProgramStateMachineType_LastTransition = 3835;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public const uint ProgramStateMachineType_LastTransition_Id = 3836;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_Number Variable.
        /// </summary>
        public const uint ProgramStateMachineType_LastTransition_Number = 3838;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_TransitionTime Variable.
        /// </summary>
        public const uint ProgramStateMachineType_LastTransition_TransitionTime = 3839;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Creatable Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Creatable = 2392;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Deletable Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Deletable = 2393;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_AutoDelete Variable.
        /// </summary>
        public const uint ProgramStateMachineType_AutoDelete = 2394;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RecycleCount Variable.
        /// </summary>
        public const uint ProgramStateMachineType_RecycleCount = 2395;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_InstanceCount Variable.
        /// </summary>
        public const uint ProgramStateMachineType_InstanceCount = 2396;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_MaxInstanceCount Variable.
        /// </summary>
        public const uint ProgramStateMachineType_MaxInstanceCount = 2397;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_MaxRecycleCount Variable.
        /// </summary>
        public const uint ProgramStateMachineType_MaxRecycleCount = 2398;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics = 2399;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_CreateSessionId Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_CreateSessionId = 3840;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_CreateClientName Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_CreateClientName = 3841;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime = 3842;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime = 3843;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodCall Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_LastMethodCall = 3844;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId = 3845;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments = 3846;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments = 3847;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime = 3848;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus = 3849;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Ready_StateNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Ready_StateNumber = 2401;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Running_StateNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Running_StateNumber = 2403;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspended_StateNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Suspended_StateNumber = 2405;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halted_StateNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Halted_StateNumber = 2407;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_HaltedToReady_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_HaltedToReady_TransitionNumber = 2409;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToRunning_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ReadyToRunning_TransitionNumber = 2411;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToHalted_TransitionNumber = 2413;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToReady_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToReady_TransitionNumber = 2415;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToSuspended_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToSuspended_TransitionNumber = 2417;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToRunning_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToRunning_TransitionNumber = 2419;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToHalted_TransitionNumber = 2421;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToReady_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToReady_TransitionNumber = 2423;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ReadyToHalted_TransitionNumber = 2425;

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_Transition_Id Variable.
        /// </summary>
        public const uint ProgramTransitionEventType_Transition_Id = 3802;

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_FromState_Id Variable.
        /// </summary>
        public const uint ProgramTransitionEventType_FromState_Id = 3792;

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_ToState_Id Variable.
        /// </summary>
        public const uint ProgramTransitionEventType_ToState_Id = 3797;

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_IntermediateResult Variable.
        /// </summary>
        public const uint ProgramTransitionEventType_IntermediateResult = 2379;

        /// <summary>
        /// The identifier for the AuditProgramTransitionEventType_TransitionNumber Variable.
        /// </summary>
        public const uint AuditProgramTransitionEventType_TransitionNumber = 11875;

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType_Transition Variable.
        /// </summary>
        public const uint ProgramTransitionAuditEventType_Transition = 3825;

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType_Transition_Id Variable.
        /// </summary>
        public const uint ProgramTransitionAuditEventType_Transition_Id = 3826;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_CreateSessionId Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_CreateSessionId = 2381;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_CreateClientName Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_CreateClientName = 2382;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_InvocationCreationTime Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_InvocationCreationTime = 2383;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastTransitionTime Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastTransitionTime = 2384;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodCall Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodCall = 2385;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodSessionId Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodSessionId = 2386;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodInputArguments Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodInputArguments = 2387;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodOutputArguments Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodOutputArguments = 2388;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodCallTime Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodCallTime = 2389;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodReturnStatus Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodReturnStatus = 2390;

        /// <summary>
        /// The identifier for the Annotations Variable.
        /// </summary>
        public const uint Annotations = 11214;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad = 11168;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad = 11169;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood = 11170;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation = 11171;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_Stepped Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_Stepped = 2323;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_Definition Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_Definition = 2324;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_MaxTimeInterval Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_MaxTimeInterval = 2325;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_MinTimeInterval Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_MinTimeInterval = 2326;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_ExceptionDeviation Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_ExceptionDeviation = 2327;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_ExceptionDeviationFormat Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_ExceptionDeviationFormat = 2328;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_StartOfArchive Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_StartOfArchive = 11499;

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_StartOfOnlineArchive Variable.
        /// </summary>
        public const uint HistoricalDataConfigurationType_StartOfOnlineArchive = 11500;

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration_TreatUncertainAsBad Variable.
        /// </summary>
        public const uint HAConfiguration_AggregateConfiguration_TreatUncertainAsBad = 11204;

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration_PercentDataBad Variable.
        /// </summary>
        public const uint HAConfiguration_AggregateConfiguration_PercentDataBad = 11205;

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration_PercentDataGood Variable.
        /// </summary>
        public const uint HAConfiguration_AggregateConfiguration_PercentDataGood = 11206;

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation Variable.
        /// </summary>
        public const uint HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation = 11207;

        /// <summary>
        /// The identifier for the HAConfiguration_Stepped Variable.
        /// </summary>
        public const uint HAConfiguration_Stepped = 11208;

        /// <summary>
        /// The identifier for the HistoricalEventFilter Variable.
        /// </summary>
        public const uint HistoricalEventFilter = 11215;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AccessHistoryDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_AccessHistoryDataCapability = 2331;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AccessHistoryEventsCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_AccessHistoryEventsCapability = 2332;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_MaxReturnDataValues Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_MaxReturnDataValues = 11268;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_MaxReturnEventValues Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_MaxReturnEventValues = 11269;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_InsertDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_InsertDataCapability = 2334;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_ReplaceDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_ReplaceDataCapability = 2335;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_UpdateDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_UpdateDataCapability = 2336;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteRawCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_DeleteRawCapability = 2337;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteAtTimeCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_DeleteAtTimeCapability = 2338;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_InsertEventCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_InsertEventCapability = 11278;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_ReplaceEventCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_ReplaceEventCapability = 11279;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_UpdateEventCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_UpdateEventCapability = 11280;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteEventCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_DeleteEventCapability = 11501;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_InsertAnnotationCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_InsertAnnotationCapability = 11270;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_UpdatedNode Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_UpdatedNode = 3025;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_PerformInsertReplace Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_PerformInsertReplace = 3028;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_Filter Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_Filter = 3003;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_NewValues Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_NewValues = 3029;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_OldValues = 3030;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_UpdatedNode Variable.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType_UpdatedNode = 3026;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_PerformInsertReplace Variable.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType_PerformInsertReplace = 3031;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_NewValues Variable.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType_NewValues = 3032;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType_OldValues = 3033;

        /// <summary>
        /// The identifier for the AuditHistoryDeleteEventType_UpdatedNode Variable.
        /// </summary>
        public const uint AuditHistoryDeleteEventType_UpdatedNode = 3027;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_IsDeleteModified Variable.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType_IsDeleteModified = 3015;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_StartTime Variable.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType_StartTime = 3016;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_EndTime Variable.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType_EndTime = 3017;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType_OldValues = 3034;

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType_ReqTimes Variable.
        /// </summary>
        public const uint AuditHistoryAtTimeDeleteEventType_ReqTimes = 3020;

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryAtTimeDeleteEventType_OldValues = 3021;

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType_EventIds Variable.
        /// </summary>
        public const uint AuditHistoryEventDeleteEventType_EventIds = 3023;

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryEventDeleteEventType_OldValues = 3024;

        /// <summary>
        /// The identifier for the TrustListType_Open_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_Open_InputArguments = 12528;

        /// <summary>
        /// The identifier for the TrustListType_Open_OutputArguments Variable.
        /// </summary>
        public const uint TrustListType_Open_OutputArguments = 12529;

        /// <summary>
        /// The identifier for the TrustListType_Close_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_Close_InputArguments = 12531;

        /// <summary>
        /// The identifier for the TrustListType_Read_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_Read_InputArguments = 12533;

        /// <summary>
        /// The identifier for the TrustListType_Read_OutputArguments Variable.
        /// </summary>
        public const uint TrustListType_Read_OutputArguments = 12534;

        /// <summary>
        /// The identifier for the TrustListType_Write_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_Write_InputArguments = 12536;

        /// <summary>
        /// The identifier for the TrustListType_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_GetPosition_InputArguments = 12538;

        /// <summary>
        /// The identifier for the TrustListType_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint TrustListType_GetPosition_OutputArguments = 12539;

        /// <summary>
        /// The identifier for the TrustListType_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_SetPosition_InputArguments = 12541;

        /// <summary>
        /// The identifier for the TrustListType_LastUpdateTime Variable.
        /// </summary>
        public const uint TrustListType_LastUpdateTime = 12542;

        /// <summary>
        /// The identifier for the TrustListType_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_OpenWithMasks_InputArguments = 12544;

        /// <summary>
        /// The identifier for the TrustListType_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint TrustListType_OpenWithMasks_OutputArguments = 12545;

        /// <summary>
        /// The identifier for the TrustListType_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_CloseAndUpdate_InputArguments = 12705;

        /// <summary>
        /// The identifier for the TrustListType_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint TrustListType_CloseAndUpdate_OutputArguments = 12547;

        /// <summary>
        /// The identifier for the TrustListType_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_AddCertificate_InputArguments = 12549;

        /// <summary>
        /// The identifier for the TrustListType_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint TrustListType_RemoveCertificate_InputArguments = 12551;

        /// <summary>
        /// The identifier for the TrustListMasks_EnumValues Variable.
        /// </summary>
        public const uint TrustListMasks_EnumValues = 12553;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Size Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Size = 13600;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Writable Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Writable = 13601;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_UserWritable Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_UserWritable = 13602;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_OpenCount Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_OpenCount = 13603;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Open_InputArguments = 13606;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Open_OutputArguments = 13607;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Close_InputArguments = 13609;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Read_InputArguments = 13611;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Read_OutputArguments = 13612;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_Write_InputArguments = 13614;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_GetPosition_InputArguments = 13616;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_GetPosition_OutputArguments = 13617;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_SetPosition_InputArguments = 13619;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_LastUpdateTime = 13620;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_OpenWithMasks_InputArguments = 13622;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_OpenWithMasks_OutputArguments = 13623;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_CloseAndUpdate_InputArguments = 13625;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments = 13626;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_AddCertificate_InputArguments = 13628;

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupType_TrustList_RemoveCertificate_InputArguments = 13630;

        /// <summary>
        /// The identifier for the CertificateGroupType_CertificateTypes Variable.
        /// </summary>
        public const uint CertificateGroupType_CertificateTypes = 13631;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size = 13816;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable = 13817;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable = 13818;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount = 13819;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments = 13822;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments = 13823;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments = 13825;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments = 13827;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments = 13828;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments = 13830;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = 13832;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = 13833;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = 13835;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime = 13836;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = 13838;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = 13839;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = 13841;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = 13842;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = 13844;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = 13846;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes = 13847;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size = 13850;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable = 13851;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable = 13852;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount = 13853;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments = 13856;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments = 13857;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments = 13859;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments = 13861;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments = 13862;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments = 13864;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = 13866;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = 13867;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = 13869;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime = 13870;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = 13872;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = 13873;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = 13875;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = 13876;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = 13878;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = 13880;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes = 13881;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size = 13884;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable = 13885;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable = 13886;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount = 13887;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments = 13890;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments = 13891;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments = 13893;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments = 13895;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments = 13896;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments = 13898;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = 13900;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = 13901;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = 13903;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime = 13904;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = 13906;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = 13907;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = 13909;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = 13910;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = 13912;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = 13914;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes = 13915;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size = 13918;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable = 13919;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable = 13920;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount = 13921;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments = 13924;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments = 13925;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments = 13927;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments = 13929;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments = 13930;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments = 13932;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments = 13934;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments = 13935;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments = 13937;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime = 13938;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments = 13940;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments = 13941;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments = 13943;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments = 13944;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments = 13946;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments = 13948;

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes Variable.
        /// </summary>
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes = 13949;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size = 13953;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable = 13954;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable = 13955;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount = 13956;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments = 13959;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments = 13960;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments = 13962;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments = 13964;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments = 13965;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments = 13967;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = 13969;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = 13970;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = 13972;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime = 13973;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = 13975;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = 13976;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = 13978;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = 13979;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = 13981;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = 13983;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes = 13984;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size = 13987;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable = 13988;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable = 13989;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount = 13990;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments = 13993;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments = 13994;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments = 13996;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments = 13998;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments = 13999;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments = 14001;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = 14003;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = 14004;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = 14006;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime = 14007;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = 14009;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = 14010;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = 14012;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = 14013;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = 14015;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = 14017;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes = 14018;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size = 14021;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable = 14022;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable = 14023;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount = 14024;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments = 14027;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments = 14028;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments = 14030;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments = 14032;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments = 14033;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments = 14035;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = 14037;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = 14038;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = 14040;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime = 14041;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = 14043;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = 14044;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = 14046;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = 14047;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = 14049;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = 14051;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes Variable.
        /// </summary>
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes = 14052;

        /// <summary>
        /// The identifier for the ServerConfigurationType_ServerCapabilities Variable.
        /// </summary>
        public const uint ServerConfigurationType_ServerCapabilities = 12708;

        /// <summary>
        /// The identifier for the ServerConfigurationType_SupportedPrivateKeyFormats Variable.
        /// </summary>
        public const uint ServerConfigurationType_SupportedPrivateKeyFormats = 12583;

        /// <summary>
        /// The identifier for the ServerConfigurationType_MaxTrustListSize Variable.
        /// </summary>
        public const uint ServerConfigurationType_MaxTrustListSize = 12584;

        /// <summary>
        /// The identifier for the ServerConfigurationType_MulticastDnsEnabled Variable.
        /// </summary>
        public const uint ServerConfigurationType_MulticastDnsEnabled = 12585;

        /// <summary>
        /// The identifier for the ServerConfigurationType_UpdateCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_UpdateCertificate_InputArguments = 12617;

        /// <summary>
        /// The identifier for the ServerConfigurationType_UpdateCertificate_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_UpdateCertificate_OutputArguments = 12618;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CreateSigningRequest_InputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CreateSigningRequest_InputArguments = 12732;

        /// <summary>
        /// The identifier for the ServerConfigurationType_CreateSigningRequest_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_CreateSigningRequest_OutputArguments = 12733;

        /// <summary>
        /// The identifier for the ServerConfigurationType_GetRejectedList_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfigurationType_GetRejectedList_OutputArguments = 12776;

        /// <summary>
        /// The identifier for the CertificateUpdatedAuditEventType_CertificateGroup Variable.
        /// </summary>
        public const uint CertificateUpdatedAuditEventType_CertificateGroup = 13735;

        /// <summary>
        /// The identifier for the CertificateUpdatedAuditEventType_CertificateType Variable.
        /// </summary>
        public const uint CertificateUpdatedAuditEventType_CertificateType = 13736;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size = 12643;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable = 14157;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable = 14158;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount = 12646;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments = 12648;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments = 12649;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments = 12651;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments = 12653;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments = 12654;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments = 12656;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = 12658;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = 12659;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = 12661;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime = 12662;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = 12664;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = 12665;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = 14160;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = 12667;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = 12669;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = 12671;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes = 14161;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size = 14090;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable = 14091;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable = 14092;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount = 14093;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments = 14096;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments = 14097;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments = 14099;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments = 14101;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments = 14102;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments = 14104;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = 14106;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = 14107;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = 14109;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime = 14110;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = 14112;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = 14113;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = 14115;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = 14116;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = 14118;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = 14120;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes = 14121;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size = 14124;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable = 14125;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable = 14126;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount = 14127;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments = 14130;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments = 14131;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments = 14133;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments = 14135;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments = 14136;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments = 14138;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = 14140;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = 14141;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = 14143;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime = 14144;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = 14146;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = 14147;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = 14149;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = 14150;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = 14152;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = 14154;

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes Variable.
        /// </summary>
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes = 14155;

        /// <summary>
        /// The identifier for the ServerConfiguration_ServerCapabilities Variable.
        /// </summary>
        public const uint ServerConfiguration_ServerCapabilities = 12710;

        /// <summary>
        /// The identifier for the ServerConfiguration_SupportedPrivateKeyFormats Variable.
        /// </summary>
        public const uint ServerConfiguration_SupportedPrivateKeyFormats = 12639;

        /// <summary>
        /// The identifier for the ServerConfiguration_MaxTrustListSize Variable.
        /// </summary>
        public const uint ServerConfiguration_MaxTrustListSize = 12640;

        /// <summary>
        /// The identifier for the ServerConfiguration_MulticastDnsEnabled Variable.
        /// </summary>
        public const uint ServerConfiguration_MulticastDnsEnabled = 12641;

        /// <summary>
        /// The identifier for the ServerConfiguration_UpdateCertificate_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_UpdateCertificate_InputArguments = 13738;

        /// <summary>
        /// The identifier for the ServerConfiguration_UpdateCertificate_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_UpdateCertificate_OutputArguments = 13739;

        /// <summary>
        /// The identifier for the ServerConfiguration_CreateSigningRequest_InputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CreateSigningRequest_InputArguments = 12738;

        /// <summary>
        /// The identifier for the ServerConfiguration_CreateSigningRequest_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_CreateSigningRequest_OutputArguments = 12739;

        /// <summary>
        /// The identifier for the ServerConfiguration_GetRejectedList_OutputArguments Variable.
        /// </summary>
        public const uint ServerConfiguration_GetRejectedList_OutputArguments = 12778;

        /// <summary>
        /// The identifier for the AggregateConfigurationType_TreatUncertainAsBad Variable.
        /// </summary>
        public const uint AggregateConfigurationType_TreatUncertainAsBad = 11188;

        /// <summary>
        /// The identifier for the AggregateConfigurationType_PercentDataBad Variable.
        /// </summary>
        public const uint AggregateConfigurationType_PercentDataBad = 11189;

        /// <summary>
        /// The identifier for the AggregateConfigurationType_PercentDataGood Variable.
        /// </summary>
        public const uint AggregateConfigurationType_PercentDataGood = 11190;

        /// <summary>
        /// The identifier for the AggregateConfigurationType_UseSlopedExtrapolation Variable.
        /// </summary>
        public const uint AggregateConfigurationType_UseSlopedExtrapolation = 11191;

        /// <summary>
        /// The identifier for the StructureType_EnumStrings Variable.
        /// </summary>
        public const uint StructureType_EnumStrings = 14528;

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_Identities Variable.
        /// </summary>
        public const uint RoleFolderType_RoleName_Placeholder_Identities = 15609;

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_AddIdentity_InputArguments Variable.
        /// </summary>
        public const uint RoleFolderType_RoleName_Placeholder_AddIdentity_InputArguments = 15613;

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public const uint RoleFolderType_RoleName_Placeholder_RemoveIdentity_InputArguments = 15615;

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_AddApplication_InputArguments Variable.
        /// </summary>
        public const uint RoleFolderType_RoleName_Placeholder_AddApplication_InputArguments = 15617;

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_RemoveApplication_InputArguments Variable.
        /// </summary>
        public const uint RoleFolderType_RoleName_Placeholder_RemoveApplication_InputArguments = 15619;

        /// <summary>
        /// The identifier for the RoleType_Identities Variable.
        /// </summary>
        public const uint RoleType_Identities = 15621;

        /// <summary>
        /// The identifier for the RoleType_Applications Variable.
        /// </summary>
        public const uint RoleType_Applications = 15622;

        /// <summary>
        /// The identifier for the RoleType_Endpoints Variable.
        /// </summary>
        public const uint RoleType_Endpoints = 15623;

        /// <summary>
        /// The identifier for the RoleType_AddIdentity_InputArguments Variable.
        /// </summary>
        public const uint RoleType_AddIdentity_InputArguments = 15625;

        /// <summary>
        /// The identifier for the RoleType_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public const uint RoleType_RemoveIdentity_InputArguments = 15627;

        /// <summary>
        /// The identifier for the RoleType_AddApplication_InputArguments Variable.
        /// </summary>
        public const uint RoleType_AddApplication_InputArguments = 15629;

        /// <summary>
        /// The identifier for the RoleType_RemoveApplication_InputArguments Variable.
        /// </summary>
        public const uint RoleType_RemoveApplication_InputArguments = 15631;

        /// <summary>
        /// The identifier for the IdentityCriteriaType_EnumValues Variable.
        /// </summary>
        public const uint IdentityCriteriaType_EnumValues = 15633;

        /// <summary>
        /// The identifier for the Anonymous_Identities Variable.
        /// </summary>
        public const uint Anonymous_Identities = 15645;

        /// <summary>
        /// The identifier for the Anonymous_AddIdentity_InputArguments Variable.
        /// </summary>
        public const uint Anonymous_AddIdentity_InputArguments = 15649;

        /// <summary>
        /// The identifier for the Anonymous_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public const uint Anonymous_RemoveIdentity_InputArguments = 15651;

        /// <summary>
        /// The identifier for the Anonymous_AddApplication_InputArguments Variable.
        /// </summary>
        public const uint Anonymous_AddApplication_InputArguments = 15653;

        /// <summary>
        /// The identifier for the Anonymous_RemoveApplication_InputArguments Variable.
        /// </summary>
        public const uint Anonymous_RemoveApplication_InputArguments = 15655;

        /// <summary>
        /// The identifier for the AuthenticatedUsers_Identities Variable.
        /// </summary>
        public const uint AuthenticatedUsers_Identities = 15657;

        /// <summary>
        /// The identifier for the AuthenticatedUsers_AddIdentity_InputArguments Variable.
        /// </summary>
        public const uint AuthenticatedUsers_AddIdentity_InputArguments = 15661;

        /// <summary>
        /// The identifier for the AuthenticatedUsers_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public const uint AuthenticatedUsers_RemoveIdentity_InputArguments = 15663;

        /// <summary>
        /// The identifier for the AuthenticatedUsers_AddApplication_InputArguments Variable.
        /// </summary>
        public const uint AuthenticatedUsers_AddApplication_InputArguments = 15665;

        /// <summary>
        /// The identifier for the AuthenticatedUsers_RemoveApplication_InputArguments Variable.
        /// </summary>
        public const uint AuthenticatedUsers_RemoveApplication_InputArguments = 15667;

        /// <summary>
        /// The identifier for the Observer_Identities Variable.
        /// </summary>
        public const uint Observer_Identities = 15669;

        /// <summary>
        /// The identifier for the Observer_AddIdentity_InputArguments Variable.
        /// </summary>
        public const uint Observer_AddIdentity_InputArguments = 15673;

        /// <summary>
        /// The identifier for the Observer_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public const uint Observer_RemoveIdentity_InputArguments = 15675;

        /// <summary>
        /// The identifier for the Observer_AddApplication_InputArguments Variable.
        /// </summary>
        public const uint Observer_AddApplication_InputArguments = 15677;

        /// <summary>
        /// The identifier for the Observer_RemoveApplication_InputArguments Variable.
        /// </summary>
        public const uint Observer_RemoveApplication_InputArguments = 15679;

        /// <summary>
        /// The identifier for the Operator_Identities Variable.
        /// </summary>
        public const uint Operator_Identities = 15681;

        /// <summary>
        /// The identifier for the Operator_AddIdentity_InputArguments Variable.
        /// </summary>
        public const uint Operator_AddIdentity_InputArguments = 15685;

        /// <summary>
        /// The identifier for the Operator_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public const uint Operator_RemoveIdentity_InputArguments = 15687;

        /// <summary>
        /// The identifier for the Operator_AddApplication_InputArguments Variable.
        /// </summary>
        public const uint Operator_AddApplication_InputArguments = 15689;

        /// <summary>
        /// The identifier for the Operator_RemoveApplication_InputArguments Variable.
        /// </summary>
        public const uint Operator_RemoveApplication_InputArguments = 15691;

        /// <summary>
        /// The identifier for the Supervisor_Identities Variable.
        /// </summary>
        public const uint Supervisor_Identities = 15693;

        /// <summary>
        /// The identifier for the Supervisor_AddIdentity_InputArguments Variable.
        /// </summary>
        public const uint Supervisor_AddIdentity_InputArguments = 15697;

        /// <summary>
        /// The identifier for the Supervisor_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public const uint Supervisor_RemoveIdentity_InputArguments = 15699;

        /// <summary>
        /// The identifier for the Supervisor_AddApplication_InputArguments Variable.
        /// </summary>
        public const uint Supervisor_AddApplication_InputArguments = 15701;

        /// <summary>
        /// The identifier for the Supervisor_RemoveApplication_InputArguments Variable.
        /// </summary>
        public const uint Supervisor_RemoveApplication_InputArguments = 15703;

        /// <summary>
        /// The identifier for the SecurityAdmin_Identities Variable.
        /// </summary>
        public const uint SecurityAdmin_Identities = 15705;

        /// <summary>
        /// The identifier for the SecurityAdmin_AddIdentity_InputArguments Variable.
        /// </summary>
        public const uint SecurityAdmin_AddIdentity_InputArguments = 15709;

        /// <summary>
        /// The identifier for the SecurityAdmin_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public const uint SecurityAdmin_RemoveIdentity_InputArguments = 15711;

        /// <summary>
        /// The identifier for the SecurityAdmin_AddApplication_InputArguments Variable.
        /// </summary>
        public const uint SecurityAdmin_AddApplication_InputArguments = 15713;

        /// <summary>
        /// The identifier for the SecurityAdmin_RemoveApplication_InputArguments Variable.
        /// </summary>
        public const uint SecurityAdmin_RemoveApplication_InputArguments = 15715;

        /// <summary>
        /// The identifier for the ConfigureAdmin_Identities Variable.
        /// </summary>
        public const uint ConfigureAdmin_Identities = 15717;

        /// <summary>
        /// The identifier for the ConfigureAdmin_AddIdentity_InputArguments Variable.
        /// </summary>
        public const uint ConfigureAdmin_AddIdentity_InputArguments = 15721;

        /// <summary>
        /// The identifier for the ConfigureAdmin_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public const uint ConfigureAdmin_RemoveIdentity_InputArguments = 15723;

        /// <summary>
        /// The identifier for the ConfigureAdmin_AddApplication_InputArguments Variable.
        /// </summary>
        public const uint ConfigureAdmin_AddApplication_InputArguments = 15725;

        /// <summary>
        /// The identifier for the ConfigureAdmin_RemoveApplication_InputArguments Variable.
        /// </summary>
        public const uint ConfigureAdmin_RemoveApplication_InputArguments = 15727;

        /// <summary>
        /// The identifier for the DataSetFieldFlags_EnumValues Variable.
        /// </summary>
        public const uint DataSetFieldFlags_EnumValues = 15905;

        /// <summary>
        /// The identifier for the DataSetContentMask_EnumValues Variable.
        /// </summary>
        public const uint DataSetContentMask_EnumValues = 15533;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityKeys_InputArguments Variable.
        /// </summary>
        public const uint PubSubKeyServiceType_GetSecurityKeys_InputArguments = 15908;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityKeys_OutputArguments Variable.
        /// </summary>
        public const uint PubSubKeyServiceType_GetSecurityKeys_OutputArguments = 15909;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint PubSubKeyServiceType_GetSecurityGroup_InputArguments = 15911;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityGroup_OutputArguments Variable.
        /// </summary>
        public const uint PubSubKeyServiceType_GetSecurityGroup_OutputArguments = 15912;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_InputArguments = 15915;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public const uint PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_OutputArguments = 15916;

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup_InputArguments = 15918;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_InputArguments = 15455;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_OutputArguments = 15456;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup_InputArguments = 15458;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public const uint SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityGroupId = 15460;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint SecurityGroupFolderType_AddSecurityGroup_InputArguments = 15462;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public const uint SecurityGroupFolderType_AddSecurityGroup_OutputArguments = 15463;

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint SecurityGroupFolderType_RemoveSecurityGroup_InputArguments = 15465;

        /// <summary>
        /// The identifier for the SecurityGroupType_SecurityGroupId Variable.
        /// </summary>
        public const uint SecurityGroupType_SecurityGroupId = 15472;

        /// <summary>
        /// The identifier for the PublishSubscribeType_GetSecurityKeys_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_GetSecurityKeys_InputArguments = 15213;

        /// <summary>
        /// The identifier for the PublishSubscribeType_GetSecurityKeys_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_GetSecurityKeys_OutputArguments = 15214;

        /// <summary>
        /// The identifier for the PublishSubscribeType_GetSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_GetSecurityGroup_InputArguments = 15432;

        /// <summary>
        /// The identifier for the PublishSubscribeType_GetSecurityGroup_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_GetSecurityGroup_OutputArguments = 15433;

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_SecurityGroups_AddSecurityGroup_InputArguments = 15436;

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_SecurityGroups_AddSecurityGroup_OutputArguments = 15437;

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_SecurityGroups_RemoveSecurityGroup_InputArguments = 15439;

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_PublisherId Variable.
        /// </summary>
        public const uint PublishSubscribeType_ConnectionName_Placeholder_PublisherId = 14418;

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_Address Variable.
        /// </summary>
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Address = 14423;

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Status_State = 14420;

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_RemoveGroup_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_ConnectionName_Placeholder_RemoveGroup_InputArguments = 14425;

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddUadpConnection_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_AddUadpConnection_InputArguments = 14902;

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddUadpConnection_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_AddUadpConnection_OutputArguments = 14903;

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddBrokerConnection_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_AddBrokerConnection_InputArguments = 14430;

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddBrokerConnection_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_AddBrokerConnection_OutputArguments = 14431;

        /// <summary>
        /// The identifier for the PublishSubscribeType_RemoveConnection_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_RemoveConnection_InputArguments = 14433;

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_InputArguments = 14436;

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_OutputArguments = 14437;

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_AddPublishedEvents_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedEvents_InputArguments = 14439;

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_AddPublishedEvents_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedEvents_OutputArguments = 14440;

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_RemovePublishedDataSet_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribeType_PublishedDataSets_RemovePublishedDataSet_InputArguments = 14442;

        /// <summary>
        /// The identifier for the PublishSubscribeType_Status_State Variable.
        /// </summary>
        public const uint PublishSubscribeType_Status_State = 15845;

        /// <summary>
        /// The identifier for the PublishSubscribeType_DefaultPublisherId Variable.
        /// </summary>
        public const uint PublishSubscribeType_DefaultPublisherId = 15919;

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityKeys_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_GetSecurityKeys_InputArguments = 15216;

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityKeys_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_GetSecurityKeys_OutputArguments = 15217;

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_GetSecurityGroup_InputArguments = 15441;

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityGroup_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_GetSecurityGroup_OutputArguments = 15442;

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_SecurityGroups_AddSecurityGroup_InputArguments = 15445;

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_SecurityGroups_AddSecurityGroup_OutputArguments = 15446;

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_SecurityGroups_RemoveSecurityGroup_InputArguments = 15448;

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_PublisherId Variable.
        /// </summary>
        public const uint PublishSubscribe_ConnectionName_Placeholder_PublisherId = 14445;

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_Address Variable.
        /// </summary>
        public const uint PublishSubscribe_ConnectionName_Placeholder_Address = 14450;

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint PublishSubscribe_ConnectionName_Placeholder_Status_State = 14447;

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_RemoveGroup_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_ConnectionName_Placeholder_RemoveGroup_InputArguments = 14452;

        /// <summary>
        /// The identifier for the PublishSubscribe_AddUadpConnection_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_AddUadpConnection_InputArguments = 14905;

        /// <summary>
        /// The identifier for the PublishSubscribe_AddUadpConnection_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_AddUadpConnection_OutputArguments = 14906;

        /// <summary>
        /// The identifier for the PublishSubscribe_AddBrokerConnection_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_AddBrokerConnection_InputArguments = 14457;

        /// <summary>
        /// The identifier for the PublishSubscribe_AddBrokerConnection_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_AddBrokerConnection_OutputArguments = 14458;

        /// <summary>
        /// The identifier for the PublishSubscribe_RemoveConnection_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_RemoveConnection_InputArguments = 14460;

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_AddPublishedDataItems_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedDataItems_InputArguments = 14463;

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_AddPublishedDataItems_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedDataItems_OutputArguments = 14464;

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_AddPublishedEvents_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedEvents_InputArguments = 14466;

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_AddPublishedEvents_OutputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedEvents_OutputArguments = 14467;

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_RemovePublishedDataSet_InputArguments Variable.
        /// </summary>
        public const uint PublishSubscribe_PublishedDataSets_RemovePublishedDataSet_InputArguments = 14469;

        /// <summary>
        /// The identifier for the PublishSubscribe_Status_State Variable.
        /// </summary>
        public const uint PublishSubscribe_Status_State = 15849;

        /// <summary>
        /// The identifier for the PublishSubscribe_DefaultPublisherId Variable.
        /// </summary>
        public const uint PublishSubscribe_DefaultPublisherId = 15920;

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Status_State = 15224;

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_DataSetContentMask = 15480;

        /// <summary>
        /// The identifier for the PublishedDataSetType_ConfigurationVersion Variable.
        /// </summary>
        public const uint PublishedDataSetType_ConfigurationVersion = 14519;

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetMetaData Variable.
        /// </summary>
        public const uint PublishedDataSetType_DataSetMetaData = 15229;

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public const uint PublishedDataSetType_ExtensionFields_AddExtensionField_InputArguments = 15483;

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public const uint PublishedDataSetType_ExtensionFields_AddExtensionField_OutputArguments = 15484;

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public const uint PublishedDataSetType_ExtensionFields_RemoveExtensionField_InputArguments = 15486;

        /// <summary>
        /// The identifier for the ExtensionFieldsType_ExtensionFieldName_Placeholder Variable.
        /// </summary>
        public const uint ExtensionFieldsType_ExtensionFieldName_Placeholder = 15490;

        /// <summary>
        /// The identifier for the ExtensionFieldsType_AddExtensionField_InputArguments Variable.
        /// </summary>
        public const uint ExtensionFieldsType_AddExtensionField_InputArguments = 15492;

        /// <summary>
        /// The identifier for the ExtensionFieldsType_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public const uint ExtensionFieldsType_AddExtensionField_OutputArguments = 15493;

        /// <summary>
        /// The identifier for the ExtensionFieldsType_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public const uint ExtensionFieldsType_RemoveExtensionField_InputArguments = 15495;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Status_State = 15232;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetContentMask = 15502;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public const uint PublishedDataItemsType_ExtensionFields_AddExtensionField_InputArguments = 15505;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public const uint PublishedDataItemsType_ExtensionFields_AddExtensionField_OutputArguments = 15506;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public const uint PublishedDataItemsType_ExtensionFields_RemoveExtensionField_InputArguments = 15508;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_PublishedData Variable.
        /// </summary>
        public const uint PublishedDataItemsType_PublishedData = 14548;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_AddVariables_InputArguments Variable.
        /// </summary>
        public const uint PublishedDataItemsType_AddVariables_InputArguments = 14556;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_AddVariables_OutputArguments Variable.
        /// </summary>
        public const uint PublishedDataItemsType_AddVariables_OutputArguments = 14557;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_RemoveVariables_InputArguments Variable.
        /// </summary>
        public const uint PublishedDataItemsType_RemoveVariables_InputArguments = 14559;

        /// <summary>
        /// The identifier for the PublishedDataItemsType_RemoveVariables_OutputArguments Variable.
        /// </summary>
        public const uint PublishedDataItemsType_RemoveVariables_OutputArguments = 14560;

        /// <summary>
        /// The identifier for the PublishedEventsType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Status_State = 15240;

        /// <summary>
        /// The identifier for the PublishedEventsType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_DataSetContentMask = 15510;

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public const uint PublishedEventsType_ExtensionFields_AddExtensionField_InputArguments = 15513;

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public const uint PublishedEventsType_ExtensionFields_AddExtensionField_OutputArguments = 15514;

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public const uint PublishedEventsType_ExtensionFields_RemoveExtensionField_InputArguments = 15516;

        /// <summary>
        /// The identifier for the PublishedEventsType_EventNotifier Variable.
        /// </summary>
        public const uint PublishedEventsType_EventNotifier = 14586;

        /// <summary>
        /// The identifier for the PublishedEventsType_SelectedFields Variable.
        /// </summary>
        public const uint PublishedEventsType_SelectedFields = 14587;

        /// <summary>
        /// The identifier for the PublishedEventsType_Filter Variable.
        /// </summary>
        public const uint PublishedEventsType_Filter = 14588;

        /// <summary>
        /// The identifier for the PublishedEventsType_ModifyFieldSelection_InputArguments Variable.
        /// </summary>
        public const uint PublishedEventsType_ModifyFieldSelection_InputArguments = 15053;

        /// <summary>
        /// The identifier for the PublishedEventsType_ModifyFieldSelection_OutputArguments Variable.
        /// </summary>
        public const uint PublishedEventsType_ModifyFieldSelection_OutputArguments = 15517;

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint DataSetClassType_DataSetWriterName_Placeholder_Status_State = 15248;

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public const uint DataSetClassType_DataSetWriterName_Placeholder_DataSetContentMask = 15520;

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public const uint DataSetClassType_ExtensionFields_AddExtensionField_InputArguments = 15523;

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public const uint DataSetClassType_ExtensionFields_AddExtensionField_OutputArguments = 15524;

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public const uint DataSetClassType_ExtensionFields_RemoveExtensionField_InputArguments = 15526;

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetClassId Variable.
        /// </summary>
        public const uint DataSetClassType_DataSetClassId = 15072;

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_InputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_InputArguments = 14480;

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_OutputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_OutputArguments = 14481;

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_InputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_InputArguments = 14483;

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_OutputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_OutputArguments = 14484;

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet_InputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet_InputArguments = 14486;

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ConfigurationVersion Variable.
        /// </summary>
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ConfigurationVersion = 14489;

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_DataSetMetaData Variable.
        /// </summary>
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_DataSetMetaData = 15221;

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_InputArguments = 15475;

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_OutputArguments = 15476;

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField_InputArguments = 15478;

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedDataItems_InputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_AddPublishedDataItems_InputArguments = 14494;

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedDataItems_OutputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_AddPublishedDataItems_OutputArguments = 14495;

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedEvents_InputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_AddPublishedEvents_InputArguments = 14497;

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedEvents_OutputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_AddPublishedEvents_OutputArguments = 14498;

        /// <summary>
        /// The identifier for the DataSetFolderType_RemovePublishedDataSet_InputArguments Variable.
        /// </summary>
        public const uint DataSetFolderType_RemovePublishedDataSet_InputArguments = 14500;

        /// <summary>
        /// The identifier for the PubSubConnectionType_PublisherId Variable.
        /// </summary>
        public const uint PubSubConnectionType_PublisherId = 14595;

        /// <summary>
        /// The identifier for the PubSubConnectionType_Address Variable.
        /// </summary>
        public const uint PubSubConnectionType_Address = 14221;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_PublishingInterval Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_PublishingInterval = 15073;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_KeepAliveTime Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_KeepAliveTime = 15074;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_EncodingMimeType Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_EncodingMimeType = 15254;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_Priority Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_Priority = 15852;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_LocaleIds Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_LocaleIds = 15921;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_SecurityMode Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_SecurityMode = 15922;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_SecurityGroupId = 15923;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_Status_State = 15256;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments = 15261;

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public const uint PubSubConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments = 15263;

        /// <summary>
        /// The identifier for the PubSubConnectionType_Status_State Variable.
        /// </summary>
        public const uint PubSubConnectionType_Status_State = 14601;

        /// <summary>
        /// The identifier for the PubSubConnectionType_RemoveGroup_InputArguments Variable.
        /// </summary>
        public const uint PubSubConnectionType_RemoveGroup_InputArguments = 14226;

        /// <summary>
        /// The identifier for the PubSubGroupType_PublishingInterval Variable.
        /// </summary>
        public const uint PubSubGroupType_PublishingInterval = 15079;

        /// <summary>
        /// The identifier for the PubSubGroupType_KeepAliveTime Variable.
        /// </summary>
        public const uint PubSubGroupType_KeepAliveTime = 15080;

        /// <summary>
        /// The identifier for the PubSubGroupType_EncodingMimeType Variable.
        /// </summary>
        public const uint PubSubGroupType_EncodingMimeType = 15264;

        /// <summary>
        /// The identifier for the PubSubGroupType_Priority Variable.
        /// </summary>
        public const uint PubSubGroupType_Priority = 15854;

        /// <summary>
        /// The identifier for the PubSubGroupType_LocaleIds Variable.
        /// </summary>
        public const uint PubSubGroupType_LocaleIds = 15925;

        /// <summary>
        /// The identifier for the PubSubGroupType_SecurityMode Variable.
        /// </summary>
        public const uint PubSubGroupType_SecurityMode = 15926;

        /// <summary>
        /// The identifier for the PubSubGroupType_SecurityGroupId Variable.
        /// </summary>
        public const uint PubSubGroupType_SecurityGroupId = 15927;

        /// <summary>
        /// The identifier for the PubSubGroupType_SecurityKeyServices Variable.
        /// </summary>
        public const uint PubSubGroupType_SecurityKeyServices = 15928;

        /// <summary>
        /// The identifier for the PubSubGroupType_Status_State Variable.
        /// </summary>
        public const uint PubSubGroupType_Status_State = 15266;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetWriterName_Placeholder_Status_State = 15272;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetWriterName_Placeholder_DataSetContentMask = 15528;

        /// <summary>
        /// The identifier for the PubSubGroupType_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public const uint PubSubGroupType_RemoveDataSetWriter_InputArguments = 15278;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_Status_State = 15281;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SecurityMode Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_SecurityMode = 15929;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_SecurityGroupId = 15930;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData = 15290;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout = 15291;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments = 15858;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments = 15859;

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments Variable.
        /// </summary>
        public const uint PubSubGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments = 15861;

        /// <summary>
        /// The identifier for the PubSubGroupType_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public const uint PubSubGroupType_RemoveDataSetReader_InputArguments = 15293;

        /// <summary>
        /// The identifier for the DataSetWriterType_Status_State Variable.
        /// </summary>
        public const uint DataSetWriterType_Status_State = 15300;

        /// <summary>
        /// The identifier for the DataSetWriterType_DataSetContentMask Variable.
        /// </summary>
        public const uint DataSetWriterType_DataSetContentMask = 15530;

        /// <summary>
        /// The identifier for the DataSetWriterTransportType_KeyFrameCount Variable.
        /// </summary>
        public const uint DataSetWriterTransportType_KeyFrameCount = 15531;

        /// <summary>
        /// The identifier for the DataSetReaderType_Status_State Variable.
        /// </summary>
        public const uint DataSetReaderType_Status_State = 15308;

        /// <summary>
        /// The identifier for the DataSetReaderType_SecurityMode Variable.
        /// </summary>
        public const uint DataSetReaderType_SecurityMode = 15932;

        /// <summary>
        /// The identifier for the DataSetReaderType_SecurityGroupId Variable.
        /// </summary>
        public const uint DataSetReaderType_SecurityGroupId = 15933;

        /// <summary>
        /// The identifier for the DataSetReaderType_SecurityKeyServices Variable.
        /// </summary>
        public const uint DataSetReaderType_SecurityKeyServices = 15934;

        /// <summary>
        /// The identifier for the DataSetReaderType_SubscribedDataSet_DataSetMetaData Variable.
        /// </summary>
        public const uint DataSetReaderType_SubscribedDataSet_DataSetMetaData = 15317;

        /// <summary>
        /// The identifier for the DataSetReaderType_SubscribedDataSet_MessageReceiveTimeout Variable.
        /// </summary>
        public const uint DataSetReaderType_SubscribedDataSet_MessageReceiveTimeout = 15318;

        /// <summary>
        /// The identifier for the DataSetReaderType_SetConnectVariables_InputArguments Variable.
        /// </summary>
        public const uint DataSetReaderType_SetConnectVariables_InputArguments = 15865;

        /// <summary>
        /// The identifier for the DataSetReaderType_SetConnectVariables_OutputArguments Variable.
        /// </summary>
        public const uint DataSetReaderType_SetConnectVariables_OutputArguments = 15866;

        /// <summary>
        /// The identifier for the DataSetReaderType_SetDataSetMirror_InputArguments Variable.
        /// </summary>
        public const uint DataSetReaderType_SetDataSetMirror_InputArguments = 15868;

        /// <summary>
        /// The identifier for the SubscribedDataSetType_DataSetMetaData Variable.
        /// </summary>
        public const uint SubscribedDataSetType_DataSetMetaData = 15109;

        /// <summary>
        /// The identifier for the SubscribedDataSetType_MessageReceiveTimeout Variable.
        /// </summary>
        public const uint SubscribedDataSetType_MessageReceiveTimeout = 15110;

        /// <summary>
        /// The identifier for the ConnectedVariablesType_ConnectedVariables Variable.
        /// </summary>
        public const uint ConnectedVariablesType_ConnectedVariables = 15114;

        /// <summary>
        /// The identifier for the ConnectedVariablesType_AddDataConnections_InputArguments Variable.
        /// </summary>
        public const uint ConnectedVariablesType_AddDataConnections_InputArguments = 15116;

        /// <summary>
        /// The identifier for the ConnectedVariablesType_AddDataConnections_OutputArguments Variable.
        /// </summary>
        public const uint ConnectedVariablesType_AddDataConnections_OutputArguments = 15117;

        /// <summary>
        /// The identifier for the ConnectedVariablesType_RemoveDataConnections_InputArguments Variable.
        /// </summary>
        public const uint ConnectedVariablesType_RemoveDataConnections_InputArguments = 15119;

        /// <summary>
        /// The identifier for the ConnectedVariablesType_RemoveDataConnections_OutputArguments Variable.
        /// </summary>
        public const uint ConnectedVariablesType_RemoveDataConnections_OutputArguments = 15120;

        /// <summary>
        /// The identifier for the OverrideValueHandling_EnumStrings Variable.
        /// </summary>
        public const uint OverrideValueHandling_EnumStrings = 15875;

        /// <summary>
        /// The identifier for the SubscribedDataSetMirrorType_ParentNode Variable.
        /// </summary>
        public const uint SubscribedDataSetMirrorType_ParentNode = 15534;

        /// <summary>
        /// The identifier for the PubSubStatusType_State Variable.
        /// </summary>
        public const uint PubSubStatusType_State = 14644;

        /// <summary>
        /// The identifier for the PubSubState_EnumStrings Variable.
        /// </summary>
        public const uint PubSubState_EnumStrings = 14648;

        /// <summary>
        /// The identifier for the PubSubStatusEventType_ConnectionId Variable.
        /// </summary>
        public const uint PubSubStatusEventType_ConnectionId = 15545;

        /// <summary>
        /// The identifier for the PubSubStatusEventType_GroupId Variable.
        /// </summary>
        public const uint PubSubStatusEventType_GroupId = 15546;

        /// <summary>
        /// The identifier for the PubSubStatusEventType_State Variable.
        /// </summary>
        public const uint PubSubStatusEventType_State = 15547;

        /// <summary>
        /// The identifier for the PubSubTransportLimitsExceedEventType_Actual Variable.
        /// </summary>
        public const uint PubSubTransportLimitsExceedEventType_Actual = 15561;

        /// <summary>
        /// The identifier for the PubSubTransportLimitsExceedEventType_Maximum Variable.
        /// </summary>
        public const uint PubSubTransportLimitsExceedEventType_Maximum = 15562;

        /// <summary>
        /// The identifier for the PubSubCommunicationFailureEventType_Error Variable.
        /// </summary>
        public const uint PubSubCommunicationFailureEventType_Error = 15576;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_PublishingInterval Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_PublishingInterval = 15130;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_KeepAliveTime Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_KeepAliveTime = 15131;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_EncodingMimeType Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_EncodingMimeType = 15320;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_Priority Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_Priority = 15876;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_LocaleIds Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_LocaleIds = 15935;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_SecurityMode Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_SecurityMode = 15936;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_SecurityGroupId = 15937;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_Status_State = 15322;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments = 15327;

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public const uint UadpConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments = 15329;

        /// <summary>
        /// The identifier for the UadpConnectionType_Status_State Variable.
        /// </summary>
        public const uint UadpConnectionType_Status_State = 14951;

        /// <summary>
        /// The identifier for the UadpConnectionType_RemoveGroup_InputArguments Variable.
        /// </summary>
        public const uint UadpConnectionType_RemoveGroup_InputArguments = 14956;

        /// <summary>
        /// The identifier for the UadpConnectionType_NetworkInterface Variable.
        /// </summary>
        public const uint UadpConnectionType_NetworkInterface = 15330;

        /// <summary>
        /// The identifier for the UadpConnectionType_NetworkInterface_EnumStrings Variable.
        /// </summary>
        public const uint UadpConnectionType_NetworkInterface_EnumStrings = 15333;

        /// <summary>
        /// The identifier for the UadpConnectionType_TimeToLive Variable.
        /// </summary>
        public const uint UadpConnectionType_TimeToLive = 15334;

        /// <summary>
        /// The identifier for the UadpConnectionType_AddGroup_InputArguments Variable.
        /// </summary>
        public const uint UadpConnectionType_AddGroup_InputArguments = 14960;

        /// <summary>
        /// The identifier for the UadpConnectionType_AddGroup_OutputArguments Variable.
        /// </summary>
        public const uint UadpConnectionType_AddGroup_OutputArguments = 14961;

        /// <summary>
        /// The identifier for the UadpGroupType_Status_State Variable.
        /// </summary>
        public const uint UadpGroupType_Status_State = 15337;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetWriterName_Placeholder_Status_State = 15343;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetWriterName_Placeholder_DataSetContentMask = 15578;

        /// <summary>
        /// The identifier for the UadpGroupType_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public const uint UadpGroupType_RemoveDataSetWriter_InputArguments = 15349;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_Status_State = 15352;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SecurityMode Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_SecurityMode = 15943;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_SecurityGroupId = 15944;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData = 15361;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout = 15362;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments = 15881;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments = 15882;

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments Variable.
        /// </summary>
        public const uint UadpGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments = 15884;

        /// <summary>
        /// The identifier for the UadpGroupType_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public const uint UadpGroupType_RemoveDataSetReader_InputArguments = 15364;

        /// <summary>
        /// The identifier for the UadpGroupType_MaxNetworkMessageSize Variable.
        /// </summary>
        public const uint UadpGroupType_MaxNetworkMessageSize = 15365;

        /// <summary>
        /// The identifier for the UadpGroupType_SamplingOffset Variable.
        /// </summary>
        public const uint UadpGroupType_SamplingOffset = 15366;

        /// <summary>
        /// The identifier for the UadpGroupType_PublishingOffset Variable.
        /// </summary>
        public const uint UadpGroupType_PublishingOffset = 15151;

        /// <summary>
        /// The identifier for the UadpGroupType_MessageRepeatCount Variable.
        /// </summary>
        public const uint UadpGroupType_MessageRepeatCount = 15152;

        /// <summary>
        /// The identifier for the UadpGroupType_MessageRepeatDelay Variable.
        /// </summary>
        public const uint UadpGroupType_MessageRepeatDelay = 15153;

        /// <summary>
        /// The identifier for the UadpGroupType_UadpStreamAddress Variable.
        /// </summary>
        public const uint UadpGroupType_UadpStreamAddress = 15368;

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetWriter_InputArguments Variable.
        /// </summary>
        public const uint UadpGroupType_AddDataSetWriter_InputArguments = 15370;

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetWriter_OutputArguments Variable.
        /// </summary>
        public const uint UadpGroupType_AddDataSetWriter_OutputArguments = 15371;

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetReader_InputArguments Variable.
        /// </summary>
        public const uint UadpGroupType_AddDataSetReader_InputArguments = 15373;

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetReader_OutputArguments Variable.
        /// </summary>
        public const uint UadpGroupType_AddDataSetReader_OutputArguments = 15374;

        /// <summary>
        /// The identifier for the UadpWriterTransportType_DataSetWriterId Variable.
        /// </summary>
        public const uint UadpWriterTransportType_DataSetWriterId = 15012;

        /// <summary>
        /// The identifier for the UadpReaderTransportType_PublisherId Variable.
        /// </summary>
        public const uint UadpReaderTransportType_PublisherId = 15155;

        /// <summary>
        /// The identifier for the UadpReaderTransportType_DataSetWriterId Variable.
        /// </summary>
        public const uint UadpReaderTransportType_DataSetWriterId = 15156;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_PublishingInterval Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_PublishingInterval = 15157;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_KeepAliveTime Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_KeepAliveTime = 15158;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_EncodingMimeType Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_EncodingMimeType = 15375;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_Priority Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_Priority = 15885;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_LocaleIds Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_LocaleIds = 15946;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_SecurityMode Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_SecurityMode = 15947;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_SecurityGroupId = 15948;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_Status_State = 15377;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments = 15382;

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public const uint BrokerConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments = 15384;

        /// <summary>
        /// The identifier for the BrokerConnectionType_Status_State Variable.
        /// </summary>
        public const uint BrokerConnectionType_Status_State = 14751;

        /// <summary>
        /// The identifier for the BrokerConnectionType_RemoveGroup_InputArguments Variable.
        /// </summary>
        public const uint BrokerConnectionType_RemoveGroup_InputArguments = 14371;

        /// <summary>
        /// The identifier for the BrokerConnectionType_AddGroup_InputArguments Variable.
        /// </summary>
        public const uint BrokerConnectionType_AddGroup_InputArguments = 14368;

        /// <summary>
        /// The identifier for the BrokerConnectionType_AddGroup_OutputArguments Variable.
        /// </summary>
        public const uint BrokerConnectionType_AddGroup_OutputArguments = 14369;

        /// <summary>
        /// The identifier for the BrokerGroupType_Status_State Variable.
        /// </summary>
        public const uint BrokerGroupType_Status_State = 15387;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetWriterName_Placeholder_Status_State = 15393;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetWriterName_Placeholder_DataSetContentMask = 15581;

        /// <summary>
        /// The identifier for the BrokerGroupType_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public const uint BrokerGroupType_RemoveDataSetWriter_InputArguments = 15399;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_Status_State Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_Status_State = 15402;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SecurityMode Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_SecurityMode = 15954;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_SecurityGroupId = 15955;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData = 15411;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout = 15412;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments = 15897;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments = 15898;

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments Variable.
        /// </summary>
        public const uint BrokerGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments = 15900;

        /// <summary>
        /// The identifier for the BrokerGroupType_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public const uint BrokerGroupType_RemoveDataSetReader_InputArguments = 15414;

        /// <summary>
        /// The identifier for the BrokerGroupType_QueueName Variable.
        /// </summary>
        public const uint BrokerGroupType_QueueName = 15415;

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetWriter_InputArguments Variable.
        /// </summary>
        public const uint BrokerGroupType_AddDataSetWriter_InputArguments = 15417;

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetWriter_OutputArguments Variable.
        /// </summary>
        public const uint BrokerGroupType_AddDataSetWriter_OutputArguments = 15418;

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetReader_InputArguments Variable.
        /// </summary>
        public const uint BrokerGroupType_AddDataSetReader_InputArguments = 15583;

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetReader_OutputArguments Variable.
        /// </summary>
        public const uint BrokerGroupType_AddDataSetReader_OutputArguments = 15584;

        /// <summary>
        /// The identifier for the BrokerGroupTypeAddReaderType_InputArguments Variable.
        /// </summary>
        public const uint BrokerGroupTypeAddReaderType_InputArguments = 15586;

        /// <summary>
        /// The identifier for the BrokerGroupTypeAddReaderType_OutputArguments Variable.
        /// </summary>
        public const uint BrokerGroupTypeAddReaderType_OutputArguments = 15587;

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_QueueName Variable.
        /// </summary>
        public const uint BrokerWriterTransportType_QueueName = 15419;

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_MetaDataQueueName Variable.
        /// </summary>
        public const uint BrokerWriterTransportType_MetaDataQueueName = 15420;

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_MetaDataUpdateTime Variable.
        /// </summary>
        public const uint BrokerWriterTransportType_MetaDataUpdateTime = 15046;

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_DataSetWriterId Variable.
        /// </summary>
        public const uint BrokerWriterTransportType_DataSetWriterId = 15047;

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_MaxMessageSize Variable.
        /// </summary>
        public const uint BrokerWriterTransportType_MaxMessageSize = 15048;

        /// <summary>
        /// The identifier for the BrokerReaderTransportType_QueueName Variable.
        /// </summary>
        public const uint BrokerReaderTransportType_QueueName = 15421;

        /// <summary>
        /// The identifier for the BrokerReaderTransportType_MetaDataQueueName Variable.
        /// </summary>
        public const uint BrokerReaderTransportType_MetaDataQueueName = 15422;

        /// <summary>
        /// The identifier for the BrokerReaderTransportType_DataSetWriterId Variable.
        /// </summary>
        public const uint BrokerReaderTransportType_DataSetWriterId = 15181;

        /// <summary>
        /// The identifier for the IdType_EnumStrings Variable.
        /// </summary>
        public const uint IdType_EnumStrings = 7591;

        /// <summary>
        /// The identifier for the NodeClass_EnumValues Variable.
        /// </summary>
        public const uint NodeClass_EnumValues = 11878;

        /// <summary>
        /// The identifier for the ApplicationType_EnumStrings Variable.
        /// </summary>
        public const uint ApplicationType_EnumStrings = 7597;

        /// <summary>
        /// The identifier for the MessageSecurityMode_EnumStrings Variable.
        /// </summary>
        public const uint MessageSecurityMode_EnumStrings = 7595;

        /// <summary>
        /// The identifier for the UserTokenType_EnumStrings Variable.
        /// </summary>
        public const uint UserTokenType_EnumStrings = 7596;

        /// <summary>
        /// The identifier for the SecurityTokenRequestType_EnumStrings Variable.
        /// </summary>
        public const uint SecurityTokenRequestType_EnumStrings = 7598;

        /// <summary>
        /// The identifier for the NodeAttributesMask_EnumValues Variable.
        /// </summary>
        public const uint NodeAttributesMask_EnumValues = 11881;

        /// <summary>
        /// The identifier for the AttributeWriteMask_EnumValues Variable.
        /// </summary>
        public const uint AttributeWriteMask_EnumValues = 11882;

        /// <summary>
        /// The identifier for the BrowseDirection_EnumStrings Variable.
        /// </summary>
        public const uint BrowseDirection_EnumStrings = 7603;

        /// <summary>
        /// The identifier for the BrowseResultMask_EnumValues Variable.
        /// </summary>
        public const uint BrowseResultMask_EnumValues = 11883;

        /// <summary>
        /// The identifier for the FilterOperator_EnumStrings Variable.
        /// </summary>
        public const uint FilterOperator_EnumStrings = 7605;

        /// <summary>
        /// The identifier for the TimestampsToReturn_EnumStrings Variable.
        /// </summary>
        public const uint TimestampsToReturn_EnumStrings = 7606;

        /// <summary>
        /// The identifier for the HistoryUpdateType_EnumValues Variable.
        /// </summary>
        public const uint HistoryUpdateType_EnumValues = 11884;

        /// <summary>
        /// The identifier for the PerformUpdateType_EnumValues Variable.
        /// </summary>
        public const uint PerformUpdateType_EnumValues = 11885;

        /// <summary>
        /// The identifier for the MonitoringMode_EnumStrings Variable.
        /// </summary>
        public const uint MonitoringMode_EnumStrings = 7608;

        /// <summary>
        /// The identifier for the DataChangeTrigger_EnumStrings Variable.
        /// </summary>
        public const uint DataChangeTrigger_EnumStrings = 7609;

        /// <summary>
        /// The identifier for the DeadbandType_EnumStrings Variable.
        /// </summary>
        public const uint DeadbandType_EnumStrings = 7610;

        /// <summary>
        /// The identifier for the RedundancySupport_EnumStrings Variable.
        /// </summary>
        public const uint RedundancySupport_EnumStrings = 7611;

        /// <summary>
        /// The identifier for the ServerState_EnumStrings Variable.
        /// </summary>
        public const uint ServerState_EnumStrings = 7612;

        /// <summary>
        /// The identifier for the ModelChangeStructureVerbMask_EnumValues Variable.
        /// </summary>
        public const uint ModelChangeStructureVerbMask_EnumValues = 11942;

        /// <summary>
        /// The identifier for the AxisScaleEnumeration_EnumStrings Variable.
        /// </summary>
        public const uint AxisScaleEnumeration_EnumStrings = 12078;

        /// <summary>
        /// The identifier for the ExceptionDeviationFormat_EnumStrings Variable.
        /// </summary>
        public const uint ExceptionDeviationFormat_EnumStrings = 7614;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema = 8252;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NamespaceUri Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_NamespaceUri = 8254;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TrustListDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TrustListDataType = 12677;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataTypeDefinition Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DataTypeDefinition = 14814;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StructureDefinition Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_StructureDefinition = 14817;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumDefinition Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EnumDefinition = 14820;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StructureField Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_StructureField = 14823;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_IdentityMappingRuleType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_IdentityMappingRuleType = 15730;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ApplicationPermissionRuleType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ApplicationPermissionRuleType = 15733;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ConfigurationVersionDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ConfigurationVersionDataType = 14832;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataSetMetaDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DataSetMetaDataType = 14805;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FieldMetaData Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_FieldMetaData = 14808;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataTypeDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DataTypeDescription = 14811;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StructureDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_StructureDescription = 15591;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EnumDescription = 15594;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_KeyValuePair Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_KeyValuePair = 14829;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_PublishedVariableDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_PublishedVariableDataType = 14320;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataConnectionDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DataConnectionDataType = 14835;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Argument Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_Argument = 8285;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumValueType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EnumValueType = 8291;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumField Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EnumField = 14826;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_OptionSet Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_OptionSet = 12759;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Union Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_Union = 12762;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TimeZoneDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TimeZoneDataType = 8918;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ApplicationDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ApplicationDescription = 8300;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerOnNetwork Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ServerOnNetwork = 12201;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserTokenPolicy Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UserTokenPolicy = 8297;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EndpointDescription = 8303;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisteredServer Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RegisteredServer = 8417;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DiscoveryConfiguration Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DiscoveryConfiguration = 12894;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MdnsDiscoveryConfiguration Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MdnsDiscoveryConfiguration = 12897;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SignedSoftwareCertificate Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SignedSoftwareCertificate = 8333;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UserIdentityToken = 8306;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AnonymousIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AnonymousIdentityToken = 8309;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserNameIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UserNameIdentityToken = 8312;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_X509IdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_X509IdentityToken = 8315;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_IssuedIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_IssuedIdentityToken = 8318;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesItem Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AddNodesItem = 8363;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddReferencesItem Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AddReferencesItem = 8366;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteNodesItem Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteNodesItem = 8369;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteReferencesItem Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteReferencesItem = 8372;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RelativePathElement Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RelativePathElement = 12712;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RelativePath Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RelativePath = 12715;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointConfiguration Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EndpointConfiguration = 8321;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilterElement Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ContentFilterElement = 8564;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilter Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ContentFilter = 8567;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FilterOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_FilterOperand = 8570;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ElementOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ElementOperand = 8573;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_LiteralOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_LiteralOperand = 8576;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AttributeOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AttributeOperand = 8579;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SimpleAttributeOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SimpleAttributeOperand = 8582;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryEvent Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryEvent = 8639;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoringFilter Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MonitoringFilter = 8702;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventFilter Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EventFilter = 8708;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AggregateConfiguration Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AggregateConfiguration = 8711;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryEventFieldList Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryEventFieldList = 8807;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BuildInfo Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BuildInfo = 8327;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RedundantServerDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RedundantServerDataType = 8843;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointUrlListDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EndpointUrlListDataType = 11951;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NetworkGroupDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_NetworkGroupDataType = 11954;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType = 8846;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType = 8849;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerStatusDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ServerStatusDataType = 8852;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SessionDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SessionDiagnosticsDataType = 8855;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType = 8858;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServiceCounterDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ServiceCounterDataType = 8861;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StatusResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_StatusResult = 8294;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SubscriptionDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SubscriptionDiagnosticsDataType = 8864;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModelChangeStructureDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ModelChangeStructureDataType = 8867;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SemanticChangeStructureDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SemanticChangeStructureDataType = 8870;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Range Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_Range = 8873;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EUInformation Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EUInformation = 8876;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ComplexNumberType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ComplexNumberType = 12175;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DoubleComplexNumberType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DoubleComplexNumberType = 12178;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AxisInformation Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AxisInformation = 12083;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_XVType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_XVType = 12086;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ProgramDiagnosticDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ProgramDiagnosticDataType = 8882;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Annotation Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_Annotation = 8879;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema = 7617;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NamespaceUri Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_NamespaceUri = 7619;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TrustListDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TrustListDataType = 12681;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataTypeDefinition Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DataTypeDefinition = 14858;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StructureDefinition Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_StructureDefinition = 14861;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumDefinition Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EnumDefinition = 14864;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StructureField Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_StructureField = 14867;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_IdentityMappingRuleType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_IdentityMappingRuleType = 15738;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ApplicationPermissionRuleType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ApplicationPermissionRuleType = 15741;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ConfigurationVersionDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ConfigurationVersionDataType = 14876;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataSetMetaDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DataSetMetaDataType = 14849;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FieldMetaData Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_FieldMetaData = 14852;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataTypeDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DataTypeDescription = 14855;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StructureDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_StructureDescription = 15599;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EnumDescription = 15602;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_KeyValuePair Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_KeyValuePair = 14873;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_PublishedVariableDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_PublishedVariableDataType = 14324;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataConnectionDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DataConnectionDataType = 14879;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Argument Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_Argument = 7650;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumValueType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EnumValueType = 7656;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumField Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EnumField = 14870;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_OptionSet Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_OptionSet = 12767;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Union Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_Union = 12770;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TimeZoneDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TimeZoneDataType = 8914;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ApplicationDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ApplicationDescription = 7665;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerOnNetwork Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ServerOnNetwork = 12213;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserTokenPolicy Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UserTokenPolicy = 7662;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EndpointDescription = 7668;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisteredServer Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RegisteredServer = 7782;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DiscoveryConfiguration Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DiscoveryConfiguration = 12902;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MdnsDiscoveryConfiguration Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MdnsDiscoveryConfiguration = 12905;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SignedSoftwareCertificate Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SignedSoftwareCertificate = 7698;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UserIdentityToken = 7671;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AnonymousIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AnonymousIdentityToken = 7674;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserNameIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UserNameIdentityToken = 7677;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_X509IdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_X509IdentityToken = 7680;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_IssuedIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_IssuedIdentityToken = 7683;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesItem Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AddNodesItem = 7728;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddReferencesItem Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AddReferencesItem = 7731;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteNodesItem Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteNodesItem = 7734;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteReferencesItem Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteReferencesItem = 7737;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RelativePathElement Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RelativePathElement = 12718;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RelativePath Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RelativePath = 12721;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointConfiguration Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EndpointConfiguration = 7686;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilterElement Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ContentFilterElement = 7929;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilter Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ContentFilter = 7932;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FilterOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_FilterOperand = 7935;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ElementOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ElementOperand = 7938;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_LiteralOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_LiteralOperand = 7941;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AttributeOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AttributeOperand = 7944;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SimpleAttributeOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SimpleAttributeOperand = 7947;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryEvent Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryEvent = 8004;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoringFilter Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MonitoringFilter = 8067;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventFilter Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EventFilter = 8073;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AggregateConfiguration Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AggregateConfiguration = 8076;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryEventFieldList Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryEventFieldList = 8172;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BuildInfo Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BuildInfo = 7692;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RedundantServerDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RedundantServerDataType = 8208;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointUrlListDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EndpointUrlListDataType = 11959;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NetworkGroupDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_NetworkGroupDataType = 11962;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType = 8211;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType = 8214;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerStatusDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ServerStatusDataType = 8217;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SessionDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SessionDiagnosticsDataType = 8220;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType = 8223;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServiceCounterDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ServiceCounterDataType = 8226;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StatusResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_StatusResult = 7659;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SubscriptionDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SubscriptionDiagnosticsDataType = 8229;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModelChangeStructureDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ModelChangeStructureDataType = 8232;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SemanticChangeStructureDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SemanticChangeStructureDataType = 8235;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Range Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_Range = 8238;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EUInformation Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EUInformation = 8241;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ComplexNumberType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ComplexNumberType = 12183;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DoubleComplexNumberType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DoubleComplexNumberType = 12186;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AxisInformation Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AxisInformation = 12091;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_XVType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_XVType = 12094;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ProgramDiagnosticDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ProgramDiagnosticDataType = 8247;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Annotation Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_Annotation = 8244;
    }
    #endregion

    #region VariableType Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableTypes
    {
        /// <summary>
        /// The identifier for the BaseVariableType VariableType.
        /// </summary>
        public const uint BaseVariableType = 62;

        /// <summary>
        /// The identifier for the BaseDataVariableType VariableType.
        /// </summary>
        public const uint BaseDataVariableType = 63;

        /// <summary>
        /// The identifier for the PropertyType VariableType.
        /// </summary>
        public const uint PropertyType = 68;

        /// <summary>
        /// The identifier for the DataTypeDescriptionType VariableType.
        /// </summary>
        public const uint DataTypeDescriptionType = 69;

        /// <summary>
        /// The identifier for the DataTypeDictionaryType VariableType.
        /// </summary>
        public const uint DataTypeDictionaryType = 72;

        /// <summary>
        /// The identifier for the ServerVendorCapabilityType VariableType.
        /// </summary>
        public const uint ServerVendorCapabilityType = 2137;

        /// <summary>
        /// The identifier for the ServerStatusType VariableType.
        /// </summary>
        public const uint ServerStatusType = 2138;

        /// <summary>
        /// The identifier for the BuildInfoType VariableType.
        /// </summary>
        public const uint BuildInfoType = 3051;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType VariableType.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType = 2150;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType VariableType.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsArrayType = 2164;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType VariableType.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType = 2165;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType VariableType.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType = 2171;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType VariableType.
        /// </summary>
        public const uint SubscriptionDiagnosticsType = 2172;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType VariableType.
        /// </summary>
        public const uint SessionDiagnosticsArrayType = 2196;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType VariableType.
        /// </summary>
        public const uint SessionDiagnosticsVariableType = 2197;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType VariableType.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType = 2243;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType VariableType.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType = 2244;

        /// <summary>
        /// The identifier for the OptionSetType VariableType.
        /// </summary>
        public const uint OptionSetType = 11487;

        /// <summary>
        /// The identifier for the StateVariableType VariableType.
        /// </summary>
        public const uint StateVariableType = 2755;

        /// <summary>
        /// The identifier for the TransitionVariableType VariableType.
        /// </summary>
        public const uint TransitionVariableType = 2762;

        /// <summary>
        /// The identifier for the FiniteStateVariableType VariableType.
        /// </summary>
        public const uint FiniteStateVariableType = 2760;

        /// <summary>
        /// The identifier for the FiniteTransitionVariableType VariableType.
        /// </summary>
        public const uint FiniteTransitionVariableType = 2767;

        /// <summary>
        /// The identifier for the DataItemType VariableType.
        /// </summary>
        public const uint DataItemType = 2365;

        /// <summary>
        /// The identifier for the AnalogItemType VariableType.
        /// </summary>
        public const uint AnalogItemType = 2368;

        /// <summary>
        /// The identifier for the DiscreteItemType VariableType.
        /// </summary>
        public const uint DiscreteItemType = 2372;

        /// <summary>
        /// The identifier for the TwoStateDiscreteType VariableType.
        /// </summary>
        public const uint TwoStateDiscreteType = 2373;

        /// <summary>
        /// The identifier for the MultiStateDiscreteType VariableType.
        /// </summary>
        public const uint MultiStateDiscreteType = 2376;

        /// <summary>
        /// The identifier for the MultiStateValueDiscreteType VariableType.
        /// </summary>
        public const uint MultiStateValueDiscreteType = 11238;

        /// <summary>
        /// The identifier for the ArrayItemType VariableType.
        /// </summary>
        public const uint ArrayItemType = 12021;

        /// <summary>
        /// The identifier for the YArrayItemType VariableType.
        /// </summary>
        public const uint YArrayItemType = 12029;

        /// <summary>
        /// The identifier for the XYArrayItemType VariableType.
        /// </summary>
        public const uint XYArrayItemType = 12038;

        /// <summary>
        /// The identifier for the ImageItemType VariableType.
        /// </summary>
        public const uint ImageItemType = 12047;

        /// <summary>
        /// The identifier for the CubeItemType VariableType.
        /// </summary>
        public const uint CubeItemType = 12057;

        /// <summary>
        /// The identifier for the NDimensionArrayItemType VariableType.
        /// </summary>
        public const uint NDimensionArrayItemType = 12068;

        /// <summary>
        /// The identifier for the TwoStateVariableType VariableType.
        /// </summary>
        public const uint TwoStateVariableType = 8995;

        /// <summary>
        /// The identifier for the ConditionVariableType VariableType.
        /// </summary>
        public const uint ConditionVariableType = 9002;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType VariableType.
        /// </summary>
        public const uint ProgramDiagnosticType = 2380;
    }
    #endregion

    #region DataType Node Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class DataTypeIds
    {
        /// <summary>
        /// The identifier for the BaseDataType DataType.
        /// </summary>
        public static readonly NodeId BaseDataType = new NodeId(Opc.Ua.DataTypes.BaseDataType);

        /// <summary>
        /// The identifier for the Number DataType.
        /// </summary>
        public static readonly NodeId Number = new NodeId(Opc.Ua.DataTypes.Number);

        /// <summary>
        /// The identifier for the Integer DataType.
        /// </summary>
        public static readonly NodeId Integer = new NodeId(Opc.Ua.DataTypes.Integer);

        /// <summary>
        /// The identifier for the UInteger DataType.
        /// </summary>
        public static readonly NodeId UInteger = new NodeId(Opc.Ua.DataTypes.UInteger);

        /// <summary>
        /// The identifier for the Enumeration DataType.
        /// </summary>
        public static readonly NodeId Enumeration = new NodeId(Opc.Ua.DataTypes.Enumeration);

        /// <summary>
        /// The identifier for the Boolean DataType.
        /// </summary>
        public static readonly NodeId Boolean = new NodeId(Opc.Ua.DataTypes.Boolean);

        /// <summary>
        /// The identifier for the SByte DataType.
        /// </summary>
        public static readonly NodeId SByte = new NodeId(Opc.Ua.DataTypes.SByte);

        /// <summary>
        /// The identifier for the Byte DataType.
        /// </summary>
        public static readonly NodeId Byte = new NodeId(Opc.Ua.DataTypes.Byte);

        /// <summary>
        /// The identifier for the Int16 DataType.
        /// </summary>
        public static readonly NodeId Int16 = new NodeId(Opc.Ua.DataTypes.Int16);

        /// <summary>
        /// The identifier for the UInt16 DataType.
        /// </summary>
        public static readonly NodeId UInt16 = new NodeId(Opc.Ua.DataTypes.UInt16);

        /// <summary>
        /// The identifier for the Int32 DataType.
        /// </summary>
        public static readonly NodeId Int32 = new NodeId(Opc.Ua.DataTypes.Int32);

        /// <summary>
        /// The identifier for the UInt32 DataType.
        /// </summary>
        public static readonly NodeId UInt32 = new NodeId(Opc.Ua.DataTypes.UInt32);

        /// <summary>
        /// The identifier for the Int64 DataType.
        /// </summary>
        public static readonly NodeId Int64 = new NodeId(Opc.Ua.DataTypes.Int64);

        /// <summary>
        /// The identifier for the UInt64 DataType.
        /// </summary>
        public static readonly NodeId UInt64 = new NodeId(Opc.Ua.DataTypes.UInt64);

        /// <summary>
        /// The identifier for the Float DataType.
        /// </summary>
        public static readonly NodeId Float = new NodeId(Opc.Ua.DataTypes.Float);

        /// <summary>
        /// The identifier for the Double DataType.
        /// </summary>
        public static readonly NodeId Double = new NodeId(Opc.Ua.DataTypes.Double);

        /// <summary>
        /// The identifier for the String DataType.
        /// </summary>
        public static readonly NodeId String = new NodeId(Opc.Ua.DataTypes.String);

        /// <summary>
        /// The identifier for the DateTime DataType.
        /// </summary>
        public static readonly NodeId DateTime = new NodeId(Opc.Ua.DataTypes.DateTime);

        /// <summary>
        /// The identifier for the Guid DataType.
        /// </summary>
        public static readonly NodeId Guid = new NodeId(Opc.Ua.DataTypes.Guid);

        /// <summary>
        /// The identifier for the ByteString DataType.
        /// </summary>
        public static readonly NodeId ByteString = new NodeId(Opc.Ua.DataTypes.ByteString);

        /// <summary>
        /// The identifier for the XmlElement DataType.
        /// </summary>
        public static readonly NodeId XmlElement = new NodeId(Opc.Ua.DataTypes.XmlElement);

        /// <summary>
        /// The identifier for the NodeId DataType.
        /// </summary>
        public static readonly NodeId NodeId = new NodeId(Opc.Ua.DataTypes.NodeId);

        /// <summary>
        /// The identifier for the ExpandedNodeId DataType.
        /// </summary>
        public static readonly NodeId ExpandedNodeId = new NodeId(Opc.Ua.DataTypes.ExpandedNodeId);

        /// <summary>
        /// The identifier for the StatusCode DataType.
        /// </summary>
        public static readonly NodeId StatusCode = new NodeId(Opc.Ua.DataTypes.StatusCode);

        /// <summary>
        /// The identifier for the QualifiedName DataType.
        /// </summary>
        public static readonly NodeId QualifiedName = new NodeId(Opc.Ua.DataTypes.QualifiedName);

        /// <summary>
        /// The identifier for the LocalizedText DataType.
        /// </summary>
        public static readonly NodeId LocalizedText = new NodeId(Opc.Ua.DataTypes.LocalizedText);

        /// <summary>
        /// The identifier for the Structure DataType.
        /// </summary>
        public static readonly NodeId Structure = new NodeId(Opc.Ua.DataTypes.Structure);

        /// <summary>
        /// The identifier for the DataValue DataType.
        /// </summary>
        public static readonly NodeId DataValue = new NodeId(Opc.Ua.DataTypes.DataValue);

        /// <summary>
        /// The identifier for the DiagnosticInfo DataType.
        /// </summary>
        public static readonly NodeId DiagnosticInfo = new NodeId(Opc.Ua.DataTypes.DiagnosticInfo);

        /// <summary>
        /// The identifier for the Image DataType.
        /// </summary>
        public static readonly NodeId Image = new NodeId(Opc.Ua.DataTypes.Image);

        /// <summary>
        /// The identifier for the Decimal128 DataType.
        /// </summary>
        public static readonly NodeId Decimal128 = new NodeId(Opc.Ua.DataTypes.Decimal128);

        /// <summary>
        /// The identifier for the NamingRuleType DataType.
        /// </summary>
        public static readonly NodeId NamingRuleType = new NodeId(Opc.Ua.DataTypes.NamingRuleType);

        /// <summary>
        /// The identifier for the ImageBMP DataType.
        /// </summary>
        public static readonly NodeId ImageBMP = new NodeId(Opc.Ua.DataTypes.ImageBMP);

        /// <summary>
        /// The identifier for the ImageGIF DataType.
        /// </summary>
        public static readonly NodeId ImageGIF = new NodeId(Opc.Ua.DataTypes.ImageGIF);

        /// <summary>
        /// The identifier for the ImageJPG DataType.
        /// </summary>
        public static readonly NodeId ImageJPG = new NodeId(Opc.Ua.DataTypes.ImageJPG);

        /// <summary>
        /// The identifier for the ImagePNG DataType.
        /// </summary>
        public static readonly NodeId ImagePNG = new NodeId(Opc.Ua.DataTypes.ImagePNG);

        /// <summary>
        /// The identifier for the BitFieldMaskDataType DataType.
        /// </summary>
        public static readonly NodeId BitFieldMaskDataType = new NodeId(Opc.Ua.DataTypes.BitFieldMaskDataType);

        /// <summary>
        /// The identifier for the OpenFileMode DataType.
        /// </summary>
        public static readonly NodeId OpenFileMode = new NodeId(Opc.Ua.DataTypes.OpenFileMode);

        /// <summary>
        /// The identifier for the TrustListMasks DataType.
        /// </summary>
        public static readonly NodeId TrustListMasks = new NodeId(Opc.Ua.DataTypes.TrustListMasks);

        /// <summary>
        /// The identifier for the TrustListDataType DataType.
        /// </summary>
        public static readonly NodeId TrustListDataType = new NodeId(Opc.Ua.DataTypes.TrustListDataType);

        /// <summary>
        /// The identifier for the DataTypeDefinition DataType.
        /// </summary>
        public static readonly NodeId DataTypeDefinition = new NodeId(Opc.Ua.DataTypes.DataTypeDefinition);

        /// <summary>
        /// The identifier for the StructureType DataType.
        /// </summary>
        public static readonly NodeId StructureType = new NodeId(Opc.Ua.DataTypes.StructureType);

        /// <summary>
        /// The identifier for the StructureDefinition DataType.
        /// </summary>
        public static readonly NodeId StructureDefinition = new NodeId(Opc.Ua.DataTypes.StructureDefinition);

        /// <summary>
        /// The identifier for the EnumDefinition DataType.
        /// </summary>
        public static readonly NodeId EnumDefinition = new NodeId(Opc.Ua.DataTypes.EnumDefinition);

        /// <summary>
        /// The identifier for the StructureField DataType.
        /// </summary>
        public static readonly NodeId StructureField = new NodeId(Opc.Ua.DataTypes.StructureField);

        /// <summary>
        /// The identifier for the IdentityCriteriaType DataType.
        /// </summary>
        public static readonly NodeId IdentityCriteriaType = new NodeId(Opc.Ua.DataTypes.IdentityCriteriaType);

        /// <summary>
        /// The identifier for the IdentityMappingRuleType DataType.
        /// </summary>
        public static readonly NodeId IdentityMappingRuleType = new NodeId(Opc.Ua.DataTypes.IdentityMappingRuleType);

        /// <summary>
        /// The identifier for the ApplicationPermissionRuleType DataType.
        /// </summary>
        public static readonly NodeId ApplicationPermissionRuleType = new NodeId(Opc.Ua.DataTypes.ApplicationPermissionRuleType);

        /// <summary>
        /// The identifier for the ConfigurationVersionDataType DataType.
        /// </summary>
        public static readonly NodeId ConfigurationVersionDataType = new NodeId(Opc.Ua.DataTypes.ConfigurationVersionDataType);

        /// <summary>
        /// The identifier for the DataSetMetaDataType DataType.
        /// </summary>
        public static readonly NodeId DataSetMetaDataType = new NodeId(Opc.Ua.DataTypes.DataSetMetaDataType);

        /// <summary>
        /// The identifier for the DataSetFieldFlags DataType.
        /// </summary>
        public static readonly NodeId DataSetFieldFlags = new NodeId(Opc.Ua.DataTypes.DataSetFieldFlags);

        /// <summary>
        /// The identifier for the FieldMetaData DataType.
        /// </summary>
        public static readonly NodeId FieldMetaData = new NodeId(Opc.Ua.DataTypes.FieldMetaData);

        /// <summary>
        /// The identifier for the DataTypeDescription DataType.
        /// </summary>
        public static readonly NodeId DataTypeDescription = new NodeId(Opc.Ua.DataTypes.DataTypeDescription);

        /// <summary>
        /// The identifier for the StructureDescription DataType.
        /// </summary>
        public static readonly NodeId StructureDescription = new NodeId(Opc.Ua.DataTypes.StructureDescription);

        /// <summary>
        /// The identifier for the EnumDescription DataType.
        /// </summary>
        public static readonly NodeId EnumDescription = new NodeId(Opc.Ua.DataTypes.EnumDescription);

        /// <summary>
        /// The identifier for the KeyValuePair DataType.
        /// </summary>
        public static readonly NodeId KeyValuePair = new NodeId(Opc.Ua.DataTypes.KeyValuePair);

        /// <summary>
        /// The identifier for the DataSetContentMask DataType.
        /// </summary>
        public static readonly NodeId DataSetContentMask = new NodeId(Opc.Ua.DataTypes.DataSetContentMask);

        /// <summary>
        /// The identifier for the PublishedVariableDataType DataType.
        /// </summary>
        public static readonly NodeId PublishedVariableDataType = new NodeId(Opc.Ua.DataTypes.PublishedVariableDataType);

        /// <summary>
        /// The identifier for the DataConnectionDataType DataType.
        /// </summary>
        public static readonly NodeId DataConnectionDataType = new NodeId(Opc.Ua.DataTypes.DataConnectionDataType);

        /// <summary>
        /// The identifier for the OverrideValueHandling DataType.
        /// </summary>
        public static readonly NodeId OverrideValueHandling = new NodeId(Opc.Ua.DataTypes.OverrideValueHandling);

        /// <summary>
        /// The identifier for the PubSubState DataType.
        /// </summary>
        public static readonly NodeId PubSubState = new NodeId(Opc.Ua.DataTypes.PubSubState);

        /// <summary>
        /// The identifier for the IdType DataType.
        /// </summary>
        public static readonly NodeId IdType = new NodeId(Opc.Ua.DataTypes.IdType);

        /// <summary>
        /// The identifier for the NodeClass DataType.
        /// </summary>
        public static readonly NodeId NodeClass = new NodeId(Opc.Ua.DataTypes.NodeClass);

        /// <summary>
        /// The identifier for the Node DataType.
        /// </summary>
        public static readonly NodeId Node = new NodeId(Opc.Ua.DataTypes.Node);

        /// <summary>
        /// The identifier for the InstanceNode DataType.
        /// </summary>
        public static readonly NodeId InstanceNode = new NodeId(Opc.Ua.DataTypes.InstanceNode);

        /// <summary>
        /// The identifier for the TypeNode DataType.
        /// </summary>
        public static readonly NodeId TypeNode = new NodeId(Opc.Ua.DataTypes.TypeNode);

        /// <summary>
        /// The identifier for the ObjectNode DataType.
        /// </summary>
        public static readonly NodeId ObjectNode = new NodeId(Opc.Ua.DataTypes.ObjectNode);

        /// <summary>
        /// The identifier for the ObjectTypeNode DataType.
        /// </summary>
        public static readonly NodeId ObjectTypeNode = new NodeId(Opc.Ua.DataTypes.ObjectTypeNode);

        /// <summary>
        /// The identifier for the VariableNode DataType.
        /// </summary>
        public static readonly NodeId VariableNode = new NodeId(Opc.Ua.DataTypes.VariableNode);

        /// <summary>
        /// The identifier for the VariableTypeNode DataType.
        /// </summary>
        public static readonly NodeId VariableTypeNode = new NodeId(Opc.Ua.DataTypes.VariableTypeNode);

        /// <summary>
        /// The identifier for the ReferenceTypeNode DataType.
        /// </summary>
        public static readonly NodeId ReferenceTypeNode = new NodeId(Opc.Ua.DataTypes.ReferenceTypeNode);

        /// <summary>
        /// The identifier for the MethodNode DataType.
        /// </summary>
        public static readonly NodeId MethodNode = new NodeId(Opc.Ua.DataTypes.MethodNode);

        /// <summary>
        /// The identifier for the ViewNode DataType.
        /// </summary>
        public static readonly NodeId ViewNode = new NodeId(Opc.Ua.DataTypes.ViewNode);

        /// <summary>
        /// The identifier for the DataTypeNode DataType.
        /// </summary>
        public static readonly NodeId DataTypeNode = new NodeId(Opc.Ua.DataTypes.DataTypeNode);

        /// <summary>
        /// The identifier for the ReferenceNode DataType.
        /// </summary>
        public static readonly NodeId ReferenceNode = new NodeId(Opc.Ua.DataTypes.ReferenceNode);

        /// <summary>
        /// The identifier for the Argument DataType.
        /// </summary>
        public static readonly NodeId Argument = new NodeId(Opc.Ua.DataTypes.Argument);

        /// <summary>
        /// The identifier for the EnumValueType DataType.
        /// </summary>
        public static readonly NodeId EnumValueType = new NodeId(Opc.Ua.DataTypes.EnumValueType);

        /// <summary>
        /// The identifier for the EnumField DataType.
        /// </summary>
        public static readonly NodeId EnumField = new NodeId(Opc.Ua.DataTypes.EnumField);

        /// <summary>
        /// The identifier for the OptionSet DataType.
        /// </summary>
        public static readonly NodeId OptionSet = new NodeId(Opc.Ua.DataTypes.OptionSet);

        /// <summary>
        /// The identifier for the Union DataType.
        /// </summary>
        public static readonly NodeId Union = new NodeId(Opc.Ua.DataTypes.Union);

        /// <summary>
        /// The identifier for the NormalizedString DataType.
        /// </summary>
        public static readonly NodeId NormalizedString = new NodeId(Opc.Ua.DataTypes.NormalizedString);

        /// <summary>
        /// The identifier for the DecimalString DataType.
        /// </summary>
        public static readonly NodeId DecimalString = new NodeId(Opc.Ua.DataTypes.DecimalString);

        /// <summary>
        /// The identifier for the DurationString DataType.
        /// </summary>
        public static readonly NodeId DurationString = new NodeId(Opc.Ua.DataTypes.DurationString);

        /// <summary>
        /// The identifier for the TimeString DataType.
        /// </summary>
        public static readonly NodeId TimeString = new NodeId(Opc.Ua.DataTypes.TimeString);

        /// <summary>
        /// The identifier for the DateString DataType.
        /// </summary>
        public static readonly NodeId DateString = new NodeId(Opc.Ua.DataTypes.DateString);

        /// <summary>
        /// The identifier for the Duration DataType.
        /// </summary>
        public static readonly NodeId Duration = new NodeId(Opc.Ua.DataTypes.Duration);

        /// <summary>
        /// The identifier for the UtcTime DataType.
        /// </summary>
        public static readonly NodeId UtcTime = new NodeId(Opc.Ua.DataTypes.UtcTime);

        /// <summary>
        /// The identifier for the LocaleId DataType.
        /// </summary>
        public static readonly NodeId LocaleId = new NodeId(Opc.Ua.DataTypes.LocaleId);

        /// <summary>
        /// The identifier for the TimeZoneDataType DataType.
        /// </summary>
        public static readonly NodeId TimeZoneDataType = new NodeId(Opc.Ua.DataTypes.TimeZoneDataType);

        /// <summary>
        /// The identifier for the IntegerId DataType.
        /// </summary>
        public static readonly NodeId IntegerId = new NodeId(Opc.Ua.DataTypes.IntegerId);

        /// <summary>
        /// The identifier for the ApplicationType DataType.
        /// </summary>
        public static readonly NodeId ApplicationType = new NodeId(Opc.Ua.DataTypes.ApplicationType);

        /// <summary>
        /// The identifier for the ApplicationDescription DataType.
        /// </summary>
        public static readonly NodeId ApplicationDescription = new NodeId(Opc.Ua.DataTypes.ApplicationDescription);

        /// <summary>
        /// The identifier for the RequestHeader DataType.
        /// </summary>
        public static readonly NodeId RequestHeader = new NodeId(Opc.Ua.DataTypes.RequestHeader);

        /// <summary>
        /// The identifier for the ResponseHeader DataType.
        /// </summary>
        public static readonly NodeId ResponseHeader = new NodeId(Opc.Ua.DataTypes.ResponseHeader);

        /// <summary>
        /// The identifier for the ServiceFault DataType.
        /// </summary>
        public static readonly NodeId ServiceFault = new NodeId(Opc.Ua.DataTypes.ServiceFault);

        /// <summary>
        /// The identifier for the SessionLessServiceMessageType DataType.
        /// </summary>
        public static readonly NodeId SessionLessServiceMessageType = new NodeId(Opc.Ua.DataTypes.SessionLessServiceMessageType);

        /// <summary>
        /// The identifier for the FindServersRequest DataType.
        /// </summary>
        public static readonly NodeId FindServersRequest = new NodeId(Opc.Ua.DataTypes.FindServersRequest);

        /// <summary>
        /// The identifier for the FindServersResponse DataType.
        /// </summary>
        public static readonly NodeId FindServersResponse = new NodeId(Opc.Ua.DataTypes.FindServersResponse);

        /// <summary>
        /// The identifier for the ServerOnNetwork DataType.
        /// </summary>
        public static readonly NodeId ServerOnNetwork = new NodeId(Opc.Ua.DataTypes.ServerOnNetwork);

        /// <summary>
        /// The identifier for the FindServersOnNetworkRequest DataType.
        /// </summary>
        public static readonly NodeId FindServersOnNetworkRequest = new NodeId(Opc.Ua.DataTypes.FindServersOnNetworkRequest);

        /// <summary>
        /// The identifier for the FindServersOnNetworkResponse DataType.
        /// </summary>
        public static readonly NodeId FindServersOnNetworkResponse = new NodeId(Opc.Ua.DataTypes.FindServersOnNetworkResponse);

        /// <summary>
        /// The identifier for the ApplicationInstanceCertificate DataType.
        /// </summary>
        public static readonly NodeId ApplicationInstanceCertificate = new NodeId(Opc.Ua.DataTypes.ApplicationInstanceCertificate);

        /// <summary>
        /// The identifier for the MessageSecurityMode DataType.
        /// </summary>
        public static readonly NodeId MessageSecurityMode = new NodeId(Opc.Ua.DataTypes.MessageSecurityMode);

        /// <summary>
        /// The identifier for the UserTokenType DataType.
        /// </summary>
        public static readonly NodeId UserTokenType = new NodeId(Opc.Ua.DataTypes.UserTokenType);

        /// <summary>
        /// The identifier for the UserTokenPolicy DataType.
        /// </summary>
        public static readonly NodeId UserTokenPolicy = new NodeId(Opc.Ua.DataTypes.UserTokenPolicy);

        /// <summary>
        /// The identifier for the EndpointDescription DataType.
        /// </summary>
        public static readonly NodeId EndpointDescription = new NodeId(Opc.Ua.DataTypes.EndpointDescription);

        /// <summary>
        /// The identifier for the GetEndpointsRequest DataType.
        /// </summary>
        public static readonly NodeId GetEndpointsRequest = new NodeId(Opc.Ua.DataTypes.GetEndpointsRequest);

        /// <summary>
        /// The identifier for the GetEndpointsResponse DataType.
        /// </summary>
        public static readonly NodeId GetEndpointsResponse = new NodeId(Opc.Ua.DataTypes.GetEndpointsResponse);

        /// <summary>
        /// The identifier for the RegisteredServer DataType.
        /// </summary>
        public static readonly NodeId RegisteredServer = new NodeId(Opc.Ua.DataTypes.RegisteredServer);

        /// <summary>
        /// The identifier for the RegisterServerRequest DataType.
        /// </summary>
        public static readonly NodeId RegisterServerRequest = new NodeId(Opc.Ua.DataTypes.RegisterServerRequest);

        /// <summary>
        /// The identifier for the RegisterServerResponse DataType.
        /// </summary>
        public static readonly NodeId RegisterServerResponse = new NodeId(Opc.Ua.DataTypes.RegisterServerResponse);

        /// <summary>
        /// The identifier for the DiscoveryConfiguration DataType.
        /// </summary>
        public static readonly NodeId DiscoveryConfiguration = new NodeId(Opc.Ua.DataTypes.DiscoveryConfiguration);

        /// <summary>
        /// The identifier for the MdnsDiscoveryConfiguration DataType.
        /// </summary>
        public static readonly NodeId MdnsDiscoveryConfiguration = new NodeId(Opc.Ua.DataTypes.MdnsDiscoveryConfiguration);

        /// <summary>
        /// The identifier for the RegisterServer2Request DataType.
        /// </summary>
        public static readonly NodeId RegisterServer2Request = new NodeId(Opc.Ua.DataTypes.RegisterServer2Request);

        /// <summary>
        /// The identifier for the RegisterServer2Response DataType.
        /// </summary>
        public static readonly NodeId RegisterServer2Response = new NodeId(Opc.Ua.DataTypes.RegisterServer2Response);

        /// <summary>
        /// The identifier for the SecurityTokenRequestType DataType.
        /// </summary>
        public static readonly NodeId SecurityTokenRequestType = new NodeId(Opc.Ua.DataTypes.SecurityTokenRequestType);

        /// <summary>
        /// The identifier for the ChannelSecurityToken DataType.
        /// </summary>
        public static readonly NodeId ChannelSecurityToken = new NodeId(Opc.Ua.DataTypes.ChannelSecurityToken);

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest DataType.
        /// </summary>
        public static readonly NodeId OpenSecureChannelRequest = new NodeId(Opc.Ua.DataTypes.OpenSecureChannelRequest);

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse DataType.
        /// </summary>
        public static readonly NodeId OpenSecureChannelResponse = new NodeId(Opc.Ua.DataTypes.OpenSecureChannelResponse);

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest DataType.
        /// </summary>
        public static readonly NodeId CloseSecureChannelRequest = new NodeId(Opc.Ua.DataTypes.CloseSecureChannelRequest);

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse DataType.
        /// </summary>
        public static readonly NodeId CloseSecureChannelResponse = new NodeId(Opc.Ua.DataTypes.CloseSecureChannelResponse);

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate DataType.
        /// </summary>
        public static readonly NodeId SignedSoftwareCertificate = new NodeId(Opc.Ua.DataTypes.SignedSoftwareCertificate);

        /// <summary>
        /// The identifier for the SessionAuthenticationToken DataType.
        /// </summary>
        public static readonly NodeId SessionAuthenticationToken = new NodeId(Opc.Ua.DataTypes.SessionAuthenticationToken);

        /// <summary>
        /// The identifier for the SignatureData DataType.
        /// </summary>
        public static readonly NodeId SignatureData = new NodeId(Opc.Ua.DataTypes.SignatureData);

        /// <summary>
        /// The identifier for the CreateSessionRequest DataType.
        /// </summary>
        public static readonly NodeId CreateSessionRequest = new NodeId(Opc.Ua.DataTypes.CreateSessionRequest);

        /// <summary>
        /// The identifier for the CreateSessionResponse DataType.
        /// </summary>
        public static readonly NodeId CreateSessionResponse = new NodeId(Opc.Ua.DataTypes.CreateSessionResponse);

        /// <summary>
        /// The identifier for the UserIdentityToken DataType.
        /// </summary>
        public static readonly NodeId UserIdentityToken = new NodeId(Opc.Ua.DataTypes.UserIdentityToken);

        /// <summary>
        /// The identifier for the AnonymousIdentityToken DataType.
        /// </summary>
        public static readonly NodeId AnonymousIdentityToken = new NodeId(Opc.Ua.DataTypes.AnonymousIdentityToken);

        /// <summary>
        /// The identifier for the UserNameIdentityToken DataType.
        /// </summary>
        public static readonly NodeId UserNameIdentityToken = new NodeId(Opc.Ua.DataTypes.UserNameIdentityToken);

        /// <summary>
        /// The identifier for the X509IdentityToken DataType.
        /// </summary>
        public static readonly NodeId X509IdentityToken = new NodeId(Opc.Ua.DataTypes.X509IdentityToken);

        /// <summary>
        /// The identifier for the IssuedIdentityToken DataType.
        /// </summary>
        public static readonly NodeId IssuedIdentityToken = new NodeId(Opc.Ua.DataTypes.IssuedIdentityToken);

        /// <summary>
        /// The identifier for the ActivateSessionRequest DataType.
        /// </summary>
        public static readonly NodeId ActivateSessionRequest = new NodeId(Opc.Ua.DataTypes.ActivateSessionRequest);

        /// <summary>
        /// The identifier for the ActivateSessionResponse DataType.
        /// </summary>
        public static readonly NodeId ActivateSessionResponse = new NodeId(Opc.Ua.DataTypes.ActivateSessionResponse);

        /// <summary>
        /// The identifier for the CloseSessionRequest DataType.
        /// </summary>
        public static readonly NodeId CloseSessionRequest = new NodeId(Opc.Ua.DataTypes.CloseSessionRequest);

        /// <summary>
        /// The identifier for the CloseSessionResponse DataType.
        /// </summary>
        public static readonly NodeId CloseSessionResponse = new NodeId(Opc.Ua.DataTypes.CloseSessionResponse);

        /// <summary>
        /// The identifier for the CancelRequest DataType.
        /// </summary>
        public static readonly NodeId CancelRequest = new NodeId(Opc.Ua.DataTypes.CancelRequest);

        /// <summary>
        /// The identifier for the CancelResponse DataType.
        /// </summary>
        public static readonly NodeId CancelResponse = new NodeId(Opc.Ua.DataTypes.CancelResponse);

        /// <summary>
        /// The identifier for the NodeAttributesMask DataType.
        /// </summary>
        public static readonly NodeId NodeAttributesMask = new NodeId(Opc.Ua.DataTypes.NodeAttributesMask);

        /// <summary>
        /// The identifier for the NodeAttributes DataType.
        /// </summary>
        public static readonly NodeId NodeAttributes = new NodeId(Opc.Ua.DataTypes.NodeAttributes);

        /// <summary>
        /// The identifier for the ObjectAttributes DataType.
        /// </summary>
        public static readonly NodeId ObjectAttributes = new NodeId(Opc.Ua.DataTypes.ObjectAttributes);

        /// <summary>
        /// The identifier for the VariableAttributes DataType.
        /// </summary>
        public static readonly NodeId VariableAttributes = new NodeId(Opc.Ua.DataTypes.VariableAttributes);

        /// <summary>
        /// The identifier for the MethodAttributes DataType.
        /// </summary>
        public static readonly NodeId MethodAttributes = new NodeId(Opc.Ua.DataTypes.MethodAttributes);

        /// <summary>
        /// The identifier for the ObjectTypeAttributes DataType.
        /// </summary>
        public static readonly NodeId ObjectTypeAttributes = new NodeId(Opc.Ua.DataTypes.ObjectTypeAttributes);

        /// <summary>
        /// The identifier for the VariableTypeAttributes DataType.
        /// </summary>
        public static readonly NodeId VariableTypeAttributes = new NodeId(Opc.Ua.DataTypes.VariableTypeAttributes);

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes DataType.
        /// </summary>
        public static readonly NodeId ReferenceTypeAttributes = new NodeId(Opc.Ua.DataTypes.ReferenceTypeAttributes);

        /// <summary>
        /// The identifier for the DataTypeAttributes DataType.
        /// </summary>
        public static readonly NodeId DataTypeAttributes = new NodeId(Opc.Ua.DataTypes.DataTypeAttributes);

        /// <summary>
        /// The identifier for the ViewAttributes DataType.
        /// </summary>
        public static readonly NodeId ViewAttributes = new NodeId(Opc.Ua.DataTypes.ViewAttributes);

        /// <summary>
        /// The identifier for the AddNodesItem DataType.
        /// </summary>
        public static readonly NodeId AddNodesItem = new NodeId(Opc.Ua.DataTypes.AddNodesItem);

        /// <summary>
        /// The identifier for the AddNodesResult DataType.
        /// </summary>
        public static readonly NodeId AddNodesResult = new NodeId(Opc.Ua.DataTypes.AddNodesResult);

        /// <summary>
        /// The identifier for the AddNodesRequest DataType.
        /// </summary>
        public static readonly NodeId AddNodesRequest = new NodeId(Opc.Ua.DataTypes.AddNodesRequest);

        /// <summary>
        /// The identifier for the AddNodesResponse DataType.
        /// </summary>
        public static readonly NodeId AddNodesResponse = new NodeId(Opc.Ua.DataTypes.AddNodesResponse);

        /// <summary>
        /// The identifier for the AddReferencesItem DataType.
        /// </summary>
        public static readonly NodeId AddReferencesItem = new NodeId(Opc.Ua.DataTypes.AddReferencesItem);

        /// <summary>
        /// The identifier for the AddReferencesRequest DataType.
        /// </summary>
        public static readonly NodeId AddReferencesRequest = new NodeId(Opc.Ua.DataTypes.AddReferencesRequest);

        /// <summary>
        /// The identifier for the AddReferencesResponse DataType.
        /// </summary>
        public static readonly NodeId AddReferencesResponse = new NodeId(Opc.Ua.DataTypes.AddReferencesResponse);

        /// <summary>
        /// The identifier for the DeleteNodesItem DataType.
        /// </summary>
        public static readonly NodeId DeleteNodesItem = new NodeId(Opc.Ua.DataTypes.DeleteNodesItem);

        /// <summary>
        /// The identifier for the DeleteNodesRequest DataType.
        /// </summary>
        public static readonly NodeId DeleteNodesRequest = new NodeId(Opc.Ua.DataTypes.DeleteNodesRequest);

        /// <summary>
        /// The identifier for the DeleteNodesResponse DataType.
        /// </summary>
        public static readonly NodeId DeleteNodesResponse = new NodeId(Opc.Ua.DataTypes.DeleteNodesResponse);

        /// <summary>
        /// The identifier for the DeleteReferencesItem DataType.
        /// </summary>
        public static readonly NodeId DeleteReferencesItem = new NodeId(Opc.Ua.DataTypes.DeleteReferencesItem);

        /// <summary>
        /// The identifier for the DeleteReferencesRequest DataType.
        /// </summary>
        public static readonly NodeId DeleteReferencesRequest = new NodeId(Opc.Ua.DataTypes.DeleteReferencesRequest);

        /// <summary>
        /// The identifier for the DeleteReferencesResponse DataType.
        /// </summary>
        public static readonly NodeId DeleteReferencesResponse = new NodeId(Opc.Ua.DataTypes.DeleteReferencesResponse);

        /// <summary>
        /// The identifier for the AttributeWriteMask DataType.
        /// </summary>
        public static readonly NodeId AttributeWriteMask = new NodeId(Opc.Ua.DataTypes.AttributeWriteMask);

        /// <summary>
        /// The identifier for the BrowseDirection DataType.
        /// </summary>
        public static readonly NodeId BrowseDirection = new NodeId(Opc.Ua.DataTypes.BrowseDirection);

        /// <summary>
        /// The identifier for the ViewDescription DataType.
        /// </summary>
        public static readonly NodeId ViewDescription = new NodeId(Opc.Ua.DataTypes.ViewDescription);

        /// <summary>
        /// The identifier for the BrowseDescription DataType.
        /// </summary>
        public static readonly NodeId BrowseDescription = new NodeId(Opc.Ua.DataTypes.BrowseDescription);

        /// <summary>
        /// The identifier for the BrowseResultMask DataType.
        /// </summary>
        public static readonly NodeId BrowseResultMask = new NodeId(Opc.Ua.DataTypes.BrowseResultMask);

        /// <summary>
        /// The identifier for the ReferenceDescription DataType.
        /// </summary>
        public static readonly NodeId ReferenceDescription = new NodeId(Opc.Ua.DataTypes.ReferenceDescription);

        /// <summary>
        /// The identifier for the ContinuationPoint DataType.
        /// </summary>
        public static readonly NodeId ContinuationPoint = new NodeId(Opc.Ua.DataTypes.ContinuationPoint);

        /// <summary>
        /// The identifier for the BrowseResult DataType.
        /// </summary>
        public static readonly NodeId BrowseResult = new NodeId(Opc.Ua.DataTypes.BrowseResult);

        /// <summary>
        /// The identifier for the BrowseRequest DataType.
        /// </summary>
        public static readonly NodeId BrowseRequest = new NodeId(Opc.Ua.DataTypes.BrowseRequest);

        /// <summary>
        /// The identifier for the BrowseResponse DataType.
        /// </summary>
        public static readonly NodeId BrowseResponse = new NodeId(Opc.Ua.DataTypes.BrowseResponse);

        /// <summary>
        /// The identifier for the BrowseNextRequest DataType.
        /// </summary>
        public static readonly NodeId BrowseNextRequest = new NodeId(Opc.Ua.DataTypes.BrowseNextRequest);

        /// <summary>
        /// The identifier for the BrowseNextResponse DataType.
        /// </summary>
        public static readonly NodeId BrowseNextResponse = new NodeId(Opc.Ua.DataTypes.BrowseNextResponse);

        /// <summary>
        /// The identifier for the RelativePathElement DataType.
        /// </summary>
        public static readonly NodeId RelativePathElement = new NodeId(Opc.Ua.DataTypes.RelativePathElement);

        /// <summary>
        /// The identifier for the RelativePath DataType.
        /// </summary>
        public static readonly NodeId RelativePath = new NodeId(Opc.Ua.DataTypes.RelativePath);

        /// <summary>
        /// The identifier for the BrowsePath DataType.
        /// </summary>
        public static readonly NodeId BrowsePath = new NodeId(Opc.Ua.DataTypes.BrowsePath);

        /// <summary>
        /// The identifier for the BrowsePathTarget DataType.
        /// </summary>
        public static readonly NodeId BrowsePathTarget = new NodeId(Opc.Ua.DataTypes.BrowsePathTarget);

        /// <summary>
        /// The identifier for the BrowsePathResult DataType.
        /// </summary>
        public static readonly NodeId BrowsePathResult = new NodeId(Opc.Ua.DataTypes.BrowsePathResult);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest DataType.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest = new NodeId(Opc.Ua.DataTypes.TranslateBrowsePathsToNodeIdsRequest);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse DataType.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse = new NodeId(Opc.Ua.DataTypes.TranslateBrowsePathsToNodeIdsResponse);

        /// <summary>
        /// The identifier for the RegisterNodesRequest DataType.
        /// </summary>
        public static readonly NodeId RegisterNodesRequest = new NodeId(Opc.Ua.DataTypes.RegisterNodesRequest);

        /// <summary>
        /// The identifier for the RegisterNodesResponse DataType.
        /// </summary>
        public static readonly NodeId RegisterNodesResponse = new NodeId(Opc.Ua.DataTypes.RegisterNodesResponse);

        /// <summary>
        /// The identifier for the UnregisterNodesRequest DataType.
        /// </summary>
        public static readonly NodeId UnregisterNodesRequest = new NodeId(Opc.Ua.DataTypes.UnregisterNodesRequest);

        /// <summary>
        /// The identifier for the UnregisterNodesResponse DataType.
        /// </summary>
        public static readonly NodeId UnregisterNodesResponse = new NodeId(Opc.Ua.DataTypes.UnregisterNodesResponse);

        /// <summary>
        /// The identifier for the Counter DataType.
        /// </summary>
        public static readonly NodeId Counter = new NodeId(Opc.Ua.DataTypes.Counter);

        /// <summary>
        /// The identifier for the NumericRange DataType.
        /// </summary>
        public static readonly NodeId NumericRange = new NodeId(Opc.Ua.DataTypes.NumericRange);

        /// <summary>
        /// The identifier for the Time DataType.
        /// </summary>
        public static readonly NodeId Time = new NodeId(Opc.Ua.DataTypes.Time);

        /// <summary>
        /// The identifier for the Date DataType.
        /// </summary>
        public static readonly NodeId Date = new NodeId(Opc.Ua.DataTypes.Date);

        /// <summary>
        /// The identifier for the EndpointConfiguration DataType.
        /// </summary>
        public static readonly NodeId EndpointConfiguration = new NodeId(Opc.Ua.DataTypes.EndpointConfiguration);

        /// <summary>
        /// The identifier for the QueryDataDescription DataType.
        /// </summary>
        public static readonly NodeId QueryDataDescription = new NodeId(Opc.Ua.DataTypes.QueryDataDescription);

        /// <summary>
        /// The identifier for the NodeTypeDescription DataType.
        /// </summary>
        public static readonly NodeId NodeTypeDescription = new NodeId(Opc.Ua.DataTypes.NodeTypeDescription);

        /// <summary>
        /// The identifier for the FilterOperator DataType.
        /// </summary>
        public static readonly NodeId FilterOperator = new NodeId(Opc.Ua.DataTypes.FilterOperator);

        /// <summary>
        /// The identifier for the QueryDataSet DataType.
        /// </summary>
        public static readonly NodeId QueryDataSet = new NodeId(Opc.Ua.DataTypes.QueryDataSet);

        /// <summary>
        /// The identifier for the NodeReference DataType.
        /// </summary>
        public static readonly NodeId NodeReference = new NodeId(Opc.Ua.DataTypes.NodeReference);

        /// <summary>
        /// The identifier for the ContentFilterElement DataType.
        /// </summary>
        public static readonly NodeId ContentFilterElement = new NodeId(Opc.Ua.DataTypes.ContentFilterElement);

        /// <summary>
        /// The identifier for the ContentFilter DataType.
        /// </summary>
        public static readonly NodeId ContentFilter = new NodeId(Opc.Ua.DataTypes.ContentFilter);

        /// <summary>
        /// The identifier for the FilterOperand DataType.
        /// </summary>
        public static readonly NodeId FilterOperand = new NodeId(Opc.Ua.DataTypes.FilterOperand);

        /// <summary>
        /// The identifier for the ElementOperand DataType.
        /// </summary>
        public static readonly NodeId ElementOperand = new NodeId(Opc.Ua.DataTypes.ElementOperand);

        /// <summary>
        /// The identifier for the LiteralOperand DataType.
        /// </summary>
        public static readonly NodeId LiteralOperand = new NodeId(Opc.Ua.DataTypes.LiteralOperand);

        /// <summary>
        /// The identifier for the AttributeOperand DataType.
        /// </summary>
        public static readonly NodeId AttributeOperand = new NodeId(Opc.Ua.DataTypes.AttributeOperand);

        /// <summary>
        /// The identifier for the SimpleAttributeOperand DataType.
        /// </summary>
        public static readonly NodeId SimpleAttributeOperand = new NodeId(Opc.Ua.DataTypes.SimpleAttributeOperand);

        /// <summary>
        /// The identifier for the ContentFilterElementResult DataType.
        /// </summary>
        public static readonly NodeId ContentFilterElementResult = new NodeId(Opc.Ua.DataTypes.ContentFilterElementResult);

        /// <summary>
        /// The identifier for the ContentFilterResult DataType.
        /// </summary>
        public static readonly NodeId ContentFilterResult = new NodeId(Opc.Ua.DataTypes.ContentFilterResult);

        /// <summary>
        /// The identifier for the ParsingResult DataType.
        /// </summary>
        public static readonly NodeId ParsingResult = new NodeId(Opc.Ua.DataTypes.ParsingResult);

        /// <summary>
        /// The identifier for the QueryFirstRequest DataType.
        /// </summary>
        public static readonly NodeId QueryFirstRequest = new NodeId(Opc.Ua.DataTypes.QueryFirstRequest);

        /// <summary>
        /// The identifier for the QueryFirstResponse DataType.
        /// </summary>
        public static readonly NodeId QueryFirstResponse = new NodeId(Opc.Ua.DataTypes.QueryFirstResponse);

        /// <summary>
        /// The identifier for the QueryNextRequest DataType.
        /// </summary>
        public static readonly NodeId QueryNextRequest = new NodeId(Opc.Ua.DataTypes.QueryNextRequest);

        /// <summary>
        /// The identifier for the QueryNextResponse DataType.
        /// </summary>
        public static readonly NodeId QueryNextResponse = new NodeId(Opc.Ua.DataTypes.QueryNextResponse);

        /// <summary>
        /// The identifier for the TimestampsToReturn DataType.
        /// </summary>
        public static readonly NodeId TimestampsToReturn = new NodeId(Opc.Ua.DataTypes.TimestampsToReturn);

        /// <summary>
        /// The identifier for the ReadValueId DataType.
        /// </summary>
        public static readonly NodeId ReadValueId = new NodeId(Opc.Ua.DataTypes.ReadValueId);

        /// <summary>
        /// The identifier for the ReadRequest DataType.
        /// </summary>
        public static readonly NodeId ReadRequest = new NodeId(Opc.Ua.DataTypes.ReadRequest);

        /// <summary>
        /// The identifier for the ReadResponse DataType.
        /// </summary>
        public static readonly NodeId ReadResponse = new NodeId(Opc.Ua.DataTypes.ReadResponse);

        /// <summary>
        /// The identifier for the HistoryReadValueId DataType.
        /// </summary>
        public static readonly NodeId HistoryReadValueId = new NodeId(Opc.Ua.DataTypes.HistoryReadValueId);

        /// <summary>
        /// The identifier for the HistoryReadResult DataType.
        /// </summary>
        public static readonly NodeId HistoryReadResult = new NodeId(Opc.Ua.DataTypes.HistoryReadResult);

        /// <summary>
        /// The identifier for the HistoryReadDetails DataType.
        /// </summary>
        public static readonly NodeId HistoryReadDetails = new NodeId(Opc.Ua.DataTypes.HistoryReadDetails);

        /// <summary>
        /// The identifier for the ReadEventDetails DataType.
        /// </summary>
        public static readonly NodeId ReadEventDetails = new NodeId(Opc.Ua.DataTypes.ReadEventDetails);

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails DataType.
        /// </summary>
        public static readonly NodeId ReadRawModifiedDetails = new NodeId(Opc.Ua.DataTypes.ReadRawModifiedDetails);

        /// <summary>
        /// The identifier for the ReadProcessedDetails DataType.
        /// </summary>
        public static readonly NodeId ReadProcessedDetails = new NodeId(Opc.Ua.DataTypes.ReadProcessedDetails);

        /// <summary>
        /// The identifier for the ReadAtTimeDetails DataType.
        /// </summary>
        public static readonly NodeId ReadAtTimeDetails = new NodeId(Opc.Ua.DataTypes.ReadAtTimeDetails);

        /// <summary>
        /// The identifier for the HistoryData DataType.
        /// </summary>
        public static readonly NodeId HistoryData = new NodeId(Opc.Ua.DataTypes.HistoryData);

        /// <summary>
        /// The identifier for the ModificationInfo DataType.
        /// </summary>
        public static readonly NodeId ModificationInfo = new NodeId(Opc.Ua.DataTypes.ModificationInfo);

        /// <summary>
        /// The identifier for the HistoryModifiedData DataType.
        /// </summary>
        public static readonly NodeId HistoryModifiedData = new NodeId(Opc.Ua.DataTypes.HistoryModifiedData);

        /// <summary>
        /// The identifier for the HistoryEvent DataType.
        /// </summary>
        public static readonly NodeId HistoryEvent = new NodeId(Opc.Ua.DataTypes.HistoryEvent);

        /// <summary>
        /// The identifier for the HistoryReadRequest DataType.
        /// </summary>
        public static readonly NodeId HistoryReadRequest = new NodeId(Opc.Ua.DataTypes.HistoryReadRequest);

        /// <summary>
        /// The identifier for the HistoryReadResponse DataType.
        /// </summary>
        public static readonly NodeId HistoryReadResponse = new NodeId(Opc.Ua.DataTypes.HistoryReadResponse);

        /// <summary>
        /// The identifier for the WriteValue DataType.
        /// </summary>
        public static readonly NodeId WriteValue = new NodeId(Opc.Ua.DataTypes.WriteValue);

        /// <summary>
        /// The identifier for the WriteRequest DataType.
        /// </summary>
        public static readonly NodeId WriteRequest = new NodeId(Opc.Ua.DataTypes.WriteRequest);

        /// <summary>
        /// The identifier for the WriteResponse DataType.
        /// </summary>
        public static readonly NodeId WriteResponse = new NodeId(Opc.Ua.DataTypes.WriteResponse);

        /// <summary>
        /// The identifier for the HistoryUpdateDetails DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateDetails = new NodeId(Opc.Ua.DataTypes.HistoryUpdateDetails);

        /// <summary>
        /// The identifier for the HistoryUpdateType DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateType = new NodeId(Opc.Ua.DataTypes.HistoryUpdateType);

        /// <summary>
        /// The identifier for the PerformUpdateType DataType.
        /// </summary>
        public static readonly NodeId PerformUpdateType = new NodeId(Opc.Ua.DataTypes.PerformUpdateType);

        /// <summary>
        /// The identifier for the UpdateDataDetails DataType.
        /// </summary>
        public static readonly NodeId UpdateDataDetails = new NodeId(Opc.Ua.DataTypes.UpdateDataDetails);

        /// <summary>
        /// The identifier for the UpdateStructureDataDetails DataType.
        /// </summary>
        public static readonly NodeId UpdateStructureDataDetails = new NodeId(Opc.Ua.DataTypes.UpdateStructureDataDetails);

        /// <summary>
        /// The identifier for the UpdateEventDetails DataType.
        /// </summary>
        public static readonly NodeId UpdateEventDetails = new NodeId(Opc.Ua.DataTypes.UpdateEventDetails);

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails DataType.
        /// </summary>
        public static readonly NodeId DeleteRawModifiedDetails = new NodeId(Opc.Ua.DataTypes.DeleteRawModifiedDetails);

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails DataType.
        /// </summary>
        public static readonly NodeId DeleteAtTimeDetails = new NodeId(Opc.Ua.DataTypes.DeleteAtTimeDetails);

        /// <summary>
        /// The identifier for the DeleteEventDetails DataType.
        /// </summary>
        public static readonly NodeId DeleteEventDetails = new NodeId(Opc.Ua.DataTypes.DeleteEventDetails);

        /// <summary>
        /// The identifier for the HistoryUpdateResult DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateResult = new NodeId(Opc.Ua.DataTypes.HistoryUpdateResult);

        /// <summary>
        /// The identifier for the HistoryUpdateRequest DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateRequest = new NodeId(Opc.Ua.DataTypes.HistoryUpdateRequest);

        /// <summary>
        /// The identifier for the HistoryUpdateResponse DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateResponse = new NodeId(Opc.Ua.DataTypes.HistoryUpdateResponse);

        /// <summary>
        /// The identifier for the CallMethodRequest DataType.
        /// </summary>
        public static readonly NodeId CallMethodRequest = new NodeId(Opc.Ua.DataTypes.CallMethodRequest);

        /// <summary>
        /// The identifier for the CallMethodResult DataType.
        /// </summary>
        public static readonly NodeId CallMethodResult = new NodeId(Opc.Ua.DataTypes.CallMethodResult);

        /// <summary>
        /// The identifier for the CallRequest DataType.
        /// </summary>
        public static readonly NodeId CallRequest = new NodeId(Opc.Ua.DataTypes.CallRequest);

        /// <summary>
        /// The identifier for the CallResponse DataType.
        /// </summary>
        public static readonly NodeId CallResponse = new NodeId(Opc.Ua.DataTypes.CallResponse);

        /// <summary>
        /// The identifier for the MonitoringMode DataType.
        /// </summary>
        public static readonly NodeId MonitoringMode = new NodeId(Opc.Ua.DataTypes.MonitoringMode);

        /// <summary>
        /// The identifier for the DataChangeTrigger DataType.
        /// </summary>
        public static readonly NodeId DataChangeTrigger = new NodeId(Opc.Ua.DataTypes.DataChangeTrigger);

        /// <summary>
        /// The identifier for the DeadbandType DataType.
        /// </summary>
        public static readonly NodeId DeadbandType = new NodeId(Opc.Ua.DataTypes.DeadbandType);

        /// <summary>
        /// The identifier for the MonitoringFilter DataType.
        /// </summary>
        public static readonly NodeId MonitoringFilter = new NodeId(Opc.Ua.DataTypes.MonitoringFilter);

        /// <summary>
        /// The identifier for the DataChangeFilter DataType.
        /// </summary>
        public static readonly NodeId DataChangeFilter = new NodeId(Opc.Ua.DataTypes.DataChangeFilter);

        /// <summary>
        /// The identifier for the EventFilter DataType.
        /// </summary>
        public static readonly NodeId EventFilter = new NodeId(Opc.Ua.DataTypes.EventFilter);

        /// <summary>
        /// The identifier for the AggregateConfiguration DataType.
        /// </summary>
        public static readonly NodeId AggregateConfiguration = new NodeId(Opc.Ua.DataTypes.AggregateConfiguration);

        /// <summary>
        /// The identifier for the AggregateFilter DataType.
        /// </summary>
        public static readonly NodeId AggregateFilter = new NodeId(Opc.Ua.DataTypes.AggregateFilter);

        /// <summary>
        /// The identifier for the MonitoringFilterResult DataType.
        /// </summary>
        public static readonly NodeId MonitoringFilterResult = new NodeId(Opc.Ua.DataTypes.MonitoringFilterResult);

        /// <summary>
        /// The identifier for the EventFilterResult DataType.
        /// </summary>
        public static readonly NodeId EventFilterResult = new NodeId(Opc.Ua.DataTypes.EventFilterResult);

        /// <summary>
        /// The identifier for the AggregateFilterResult DataType.
        /// </summary>
        public static readonly NodeId AggregateFilterResult = new NodeId(Opc.Ua.DataTypes.AggregateFilterResult);

        /// <summary>
        /// The identifier for the MonitoringParameters DataType.
        /// </summary>
        public static readonly NodeId MonitoringParameters = new NodeId(Opc.Ua.DataTypes.MonitoringParameters);

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateRequest = new NodeId(Opc.Ua.DataTypes.MonitoredItemCreateRequest);

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateResult = new NodeId(Opc.Ua.DataTypes.MonitoredItemCreateResult);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest DataType.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsRequest = new NodeId(Opc.Ua.DataTypes.CreateMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse DataType.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsResponse = new NodeId(Opc.Ua.DataTypes.CreateMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyRequest = new NodeId(Opc.Ua.DataTypes.MonitoredItemModifyRequest);

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyResult = new NodeId(Opc.Ua.DataTypes.MonitoredItemModifyResult);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest DataType.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsRequest = new NodeId(Opc.Ua.DataTypes.ModifyMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse DataType.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsResponse = new NodeId(Opc.Ua.DataTypes.ModifyMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest DataType.
        /// </summary>
        public static readonly NodeId SetMonitoringModeRequest = new NodeId(Opc.Ua.DataTypes.SetMonitoringModeRequest);

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse DataType.
        /// </summary>
        public static readonly NodeId SetMonitoringModeResponse = new NodeId(Opc.Ua.DataTypes.SetMonitoringModeResponse);

        /// <summary>
        /// The identifier for the SetTriggeringRequest DataType.
        /// </summary>
        public static readonly NodeId SetTriggeringRequest = new NodeId(Opc.Ua.DataTypes.SetTriggeringRequest);

        /// <summary>
        /// The identifier for the SetTriggeringResponse DataType.
        /// </summary>
        public static readonly NodeId SetTriggeringResponse = new NodeId(Opc.Ua.DataTypes.SetTriggeringResponse);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest DataType.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsRequest = new NodeId(Opc.Ua.DataTypes.DeleteMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse DataType.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsResponse = new NodeId(Opc.Ua.DataTypes.DeleteMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest DataType.
        /// </summary>
        public static readonly NodeId CreateSubscriptionRequest = new NodeId(Opc.Ua.DataTypes.CreateSubscriptionRequest);

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse DataType.
        /// </summary>
        public static readonly NodeId CreateSubscriptionResponse = new NodeId(Opc.Ua.DataTypes.CreateSubscriptionResponse);

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest DataType.
        /// </summary>
        public static readonly NodeId ModifySubscriptionRequest = new NodeId(Opc.Ua.DataTypes.ModifySubscriptionRequest);

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse DataType.
        /// </summary>
        public static readonly NodeId ModifySubscriptionResponse = new NodeId(Opc.Ua.DataTypes.ModifySubscriptionResponse);

        /// <summary>
        /// The identifier for the SetPublishingModeRequest DataType.
        /// </summary>
        public static readonly NodeId SetPublishingModeRequest = new NodeId(Opc.Ua.DataTypes.SetPublishingModeRequest);

        /// <summary>
        /// The identifier for the SetPublishingModeResponse DataType.
        /// </summary>
        public static readonly NodeId SetPublishingModeResponse = new NodeId(Opc.Ua.DataTypes.SetPublishingModeResponse);

        /// <summary>
        /// The identifier for the NotificationMessage DataType.
        /// </summary>
        public static readonly NodeId NotificationMessage = new NodeId(Opc.Ua.DataTypes.NotificationMessage);

        /// <summary>
        /// The identifier for the NotificationData DataType.
        /// </summary>
        public static readonly NodeId NotificationData = new NodeId(Opc.Ua.DataTypes.NotificationData);

        /// <summary>
        /// The identifier for the DataChangeNotification DataType.
        /// </summary>
        public static readonly NodeId DataChangeNotification = new NodeId(Opc.Ua.DataTypes.DataChangeNotification);

        /// <summary>
        /// The identifier for the MonitoredItemNotification DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemNotification = new NodeId(Opc.Ua.DataTypes.MonitoredItemNotification);

        /// <summary>
        /// The identifier for the EventNotificationList DataType.
        /// </summary>
        public static readonly NodeId EventNotificationList = new NodeId(Opc.Ua.DataTypes.EventNotificationList);

        /// <summary>
        /// The identifier for the EventFieldList DataType.
        /// </summary>
        public static readonly NodeId EventFieldList = new NodeId(Opc.Ua.DataTypes.EventFieldList);

        /// <summary>
        /// The identifier for the HistoryEventFieldList DataType.
        /// </summary>
        public static readonly NodeId HistoryEventFieldList = new NodeId(Opc.Ua.DataTypes.HistoryEventFieldList);

        /// <summary>
        /// The identifier for the StatusChangeNotification DataType.
        /// </summary>
        public static readonly NodeId StatusChangeNotification = new NodeId(Opc.Ua.DataTypes.StatusChangeNotification);

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement DataType.
        /// </summary>
        public static readonly NodeId SubscriptionAcknowledgement = new NodeId(Opc.Ua.DataTypes.SubscriptionAcknowledgement);

        /// <summary>
        /// The identifier for the PublishRequest DataType.
        /// </summary>
        public static readonly NodeId PublishRequest = new NodeId(Opc.Ua.DataTypes.PublishRequest);

        /// <summary>
        /// The identifier for the PublishResponse DataType.
        /// </summary>
        public static readonly NodeId PublishResponse = new NodeId(Opc.Ua.DataTypes.PublishResponse);

        /// <summary>
        /// The identifier for the RepublishRequest DataType.
        /// </summary>
        public static readonly NodeId RepublishRequest = new NodeId(Opc.Ua.DataTypes.RepublishRequest);

        /// <summary>
        /// The identifier for the RepublishResponse DataType.
        /// </summary>
        public static readonly NodeId RepublishResponse = new NodeId(Opc.Ua.DataTypes.RepublishResponse);

        /// <summary>
        /// The identifier for the TransferResult DataType.
        /// </summary>
        public static readonly NodeId TransferResult = new NodeId(Opc.Ua.DataTypes.TransferResult);

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest DataType.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsRequest = new NodeId(Opc.Ua.DataTypes.TransferSubscriptionsRequest);

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse DataType.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsResponse = new NodeId(Opc.Ua.DataTypes.TransferSubscriptionsResponse);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest DataType.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsRequest = new NodeId(Opc.Ua.DataTypes.DeleteSubscriptionsRequest);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse DataType.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsResponse = new NodeId(Opc.Ua.DataTypes.DeleteSubscriptionsResponse);

        /// <summary>
        /// The identifier for the BuildInfo DataType.
        /// </summary>
        public static readonly NodeId BuildInfo = new NodeId(Opc.Ua.DataTypes.BuildInfo);

        /// <summary>
        /// The identifier for the RedundancySupport DataType.
        /// </summary>
        public static readonly NodeId RedundancySupport = new NodeId(Opc.Ua.DataTypes.RedundancySupport);

        /// <summary>
        /// The identifier for the ServerState DataType.
        /// </summary>
        public static readonly NodeId ServerState = new NodeId(Opc.Ua.DataTypes.ServerState);

        /// <summary>
        /// The identifier for the RedundantServerDataType DataType.
        /// </summary>
        public static readonly NodeId RedundantServerDataType = new NodeId(Opc.Ua.DataTypes.RedundantServerDataType);

        /// <summary>
        /// The identifier for the EndpointUrlListDataType DataType.
        /// </summary>
        public static readonly NodeId EndpointUrlListDataType = new NodeId(Opc.Ua.DataTypes.EndpointUrlListDataType);

        /// <summary>
        /// The identifier for the NetworkGroupDataType DataType.
        /// </summary>
        public static readonly NodeId NetworkGroupDataType = new NodeId(Opc.Ua.DataTypes.NetworkGroupDataType);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType DataType.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsDataType = new NodeId(Opc.Ua.DataTypes.SamplingIntervalDiagnosticsDataType);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType DataType.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryDataType = new NodeId(Opc.Ua.DataTypes.ServerDiagnosticsSummaryDataType);

        /// <summary>
        /// The identifier for the ServerStatusDataType DataType.
        /// </summary>
        public static readonly NodeId ServerStatusDataType = new NodeId(Opc.Ua.DataTypes.ServerStatusDataType);

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType DataType.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsDataType = new NodeId(Opc.Ua.DataTypes.SessionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType DataType.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsDataType = new NodeId(Opc.Ua.DataTypes.SessionSecurityDiagnosticsDataType);

        /// <summary>
        /// The identifier for the ServiceCounterDataType DataType.
        /// </summary>
        public static readonly NodeId ServiceCounterDataType = new NodeId(Opc.Ua.DataTypes.ServiceCounterDataType);

        /// <summary>
        /// The identifier for the StatusResult DataType.
        /// </summary>
        public static readonly NodeId StatusResult = new NodeId(Opc.Ua.DataTypes.StatusResult);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType DataType.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsDataType = new NodeId(Opc.Ua.DataTypes.SubscriptionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the ModelChangeStructureVerbMask DataType.
        /// </summary>
        public static readonly NodeId ModelChangeStructureVerbMask = new NodeId(Opc.Ua.DataTypes.ModelChangeStructureVerbMask);

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType DataType.
        /// </summary>
        public static readonly NodeId ModelChangeStructureDataType = new NodeId(Opc.Ua.DataTypes.ModelChangeStructureDataType);

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType DataType.
        /// </summary>
        public static readonly NodeId SemanticChangeStructureDataType = new NodeId(Opc.Ua.DataTypes.SemanticChangeStructureDataType);

        /// <summary>
        /// The identifier for the Range DataType.
        /// </summary>
        public static readonly NodeId Range = new NodeId(Opc.Ua.DataTypes.Range);

        /// <summary>
        /// The identifier for the EUInformation DataType.
        /// </summary>
        public static readonly NodeId EUInformation = new NodeId(Opc.Ua.DataTypes.EUInformation);

        /// <summary>
        /// The identifier for the AxisScaleEnumeration DataType.
        /// </summary>
        public static readonly NodeId AxisScaleEnumeration = new NodeId(Opc.Ua.DataTypes.AxisScaleEnumeration);

        /// <summary>
        /// The identifier for the ComplexNumberType DataType.
        /// </summary>
        public static readonly NodeId ComplexNumberType = new NodeId(Opc.Ua.DataTypes.ComplexNumberType);

        /// <summary>
        /// The identifier for the DoubleComplexNumberType DataType.
        /// </summary>
        public static readonly NodeId DoubleComplexNumberType = new NodeId(Opc.Ua.DataTypes.DoubleComplexNumberType);

        /// <summary>
        /// The identifier for the AxisInformation DataType.
        /// </summary>
        public static readonly NodeId AxisInformation = new NodeId(Opc.Ua.DataTypes.AxisInformation);

        /// <summary>
        /// The identifier for the XVType DataType.
        /// </summary>
        public static readonly NodeId XVType = new NodeId(Opc.Ua.DataTypes.XVType);

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType DataType.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticDataType = new NodeId(Opc.Ua.DataTypes.ProgramDiagnosticDataType);

        /// <summary>
        /// The identifier for the Annotation DataType.
        /// </summary>
        public static readonly NodeId Annotation = new NodeId(Opc.Ua.DataTypes.Annotation);

        /// <summary>
        /// The identifier for the ExceptionDeviationFormat DataType.
        /// </summary>
        public static readonly NodeId ExceptionDeviationFormat = new NodeId(Opc.Ua.DataTypes.ExceptionDeviationFormat);
    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class MethodIds
    {
        /// <summary>
        /// The identifier for the ServerType_GetMonitoredItems Method.
        /// </summary>
        public static readonly NodeId ServerType_GetMonitoredItems = new NodeId(Opc.Ua.Methods.ServerType_GetMonitoredItems);

        /// <summary>
        /// The identifier for the ServerType_ResendData Method.
        /// </summary>
        public static readonly NodeId ServerType_ResendData = new NodeId(Opc.Ua.Methods.ServerType_ResendData);

        /// <summary>
        /// The identifier for the ServerType_SetSubscriptionDurable Method.
        /// </summary>
        public static readonly NodeId ServerType_SetSubscriptionDurable = new NodeId(Opc.Ua.Methods.ServerType_SetSubscriptionDurable);

        /// <summary>
        /// The identifier for the ServerType_RequestServerStateChange Method.
        /// </summary>
        public static readonly NodeId ServerType_RequestServerStateChange = new NodeId(Opc.Ua.Methods.ServerType_RequestServerStateChange);

        /// <summary>
        /// The identifier for the FileType_Open Method.
        /// </summary>
        public static readonly NodeId FileType_Open = new NodeId(Opc.Ua.Methods.FileType_Open);

        /// <summary>
        /// The identifier for the FileType_Close Method.
        /// </summary>
        public static readonly NodeId FileType_Close = new NodeId(Opc.Ua.Methods.FileType_Close);

        /// <summary>
        /// The identifier for the FileType_Read Method.
        /// </summary>
        public static readonly NodeId FileType_Read = new NodeId(Opc.Ua.Methods.FileType_Read);

        /// <summary>
        /// The identifier for the FileType_Write Method.
        /// </summary>
        public static readonly NodeId FileType_Write = new NodeId(Opc.Ua.Methods.FileType_Write);

        /// <summary>
        /// The identifier for the FileType_GetPosition Method.
        /// </summary>
        public static readonly NodeId FileType_GetPosition = new NodeId(Opc.Ua.Methods.FileType_GetPosition);

        /// <summary>
        /// The identifier for the FileType_SetPosition Method.
        /// </summary>
        public static readonly NodeId FileType_SetPosition = new NodeId(Opc.Ua.Methods.FileType_SetPosition);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateFile Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateFile = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_Delete Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_Delete = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileDirectoryName_Placeholder_Delete);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Open Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Open = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_Open);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Close Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Close = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_Close);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Read Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Read = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_Read);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Write Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Write = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_Write);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_GetPosition Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_GetPosition = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_GetPosition);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_SetPosition Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_SetPosition = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_SetPosition);

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateDirectory Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_CreateDirectory = new NodeId(Opc.Ua.Methods.FileDirectoryType_CreateDirectory);

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateFile Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_CreateFile = new NodeId(Opc.Ua.Methods.FileDirectoryType_CreateFile);

        /// <summary>
        /// The identifier for the FileDirectoryType_Delete Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_Delete = new NodeId(Opc.Ua.Methods.FileDirectoryType_Delete);

        /// <summary>
        /// The identifier for the FileDirectoryType_MoveOrCopy Method.
        /// </summary>
        public static readonly NodeId FileDirectoryType_MoveOrCopy = new NodeId(Opc.Ua.Methods.FileDirectoryType_MoveOrCopy);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForRead Method.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForRead = new NodeId(Opc.Ua.Methods.TemporaryFileTransferType_GenerateFileForRead);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForWrite Method.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForWrite = new NodeId(Opc.Ua.Methods.TemporaryFileTransferType_GenerateFileForWrite);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_CloseAndCommit Method.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_CloseAndCommit = new NodeId(Opc.Ua.Methods.TemporaryFileTransferType_CloseAndCommit);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Reset Method.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_Reset = new NodeId(Opc.Ua.Methods.TemporaryFileTransferType_TransferState_Placeholder_Reset);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_ExportNamespace Method.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_ExportNamespace = new NodeId(Opc.Ua.Methods.AddressSpaceFileType_ExportNamespace);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Open Method.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Open = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_Open);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Close Method.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Close = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_Close);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Read Method.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Read = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_Read);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Write Method.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Write = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_Write);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_GetPosition Method.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_GetPosition = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_GetPosition);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_SetPosition Method.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_SetPosition = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_SetPosition);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open Method.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close Method.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read Method.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write Method.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition Method.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition Method.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition);

        /// <summary>
        /// The identifier for the Server_GetMonitoredItems Method.
        /// </summary>
        public static readonly NodeId Server_GetMonitoredItems = new NodeId(Opc.Ua.Methods.Server_GetMonitoredItems);

        /// <summary>
        /// The identifier for the Server_ResendData Method.
        /// </summary>
        public static readonly NodeId Server_ResendData = new NodeId(Opc.Ua.Methods.Server_ResendData);

        /// <summary>
        /// The identifier for the Server_SetSubscriptionDurable Method.
        /// </summary>
        public static readonly NodeId Server_SetSubscriptionDurable = new NodeId(Opc.Ua.Methods.Server_SetSubscriptionDurable);

        /// <summary>
        /// The identifier for the Server_RequestServerStateChange Method.
        /// </summary>
        public static readonly NodeId Server_RequestServerStateChange = new NodeId(Opc.Ua.Methods.Server_RequestServerStateChange);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open Method.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open = new NodeId(Opc.Ua.Methods.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close Method.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close = new NodeId(Opc.Ua.Methods.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read Method.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read = new NodeId(Opc.Ua.Methods.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write Method.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write = new NodeId(Opc.Ua.Methods.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition Method.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition = new NodeId(Opc.Ua.Methods.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition Method.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition = new NodeId(Opc.Ua.Methods.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Reset Method.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_Reset = new NodeId(Opc.Ua.Methods.FileTransferStateMachineType_Reset);

        /// <summary>
        /// The identifier for the ConditionType_Disable Method.
        /// </summary>
        public static readonly NodeId ConditionType_Disable = new NodeId(Opc.Ua.Methods.ConditionType_Disable);

        /// <summary>
        /// The identifier for the ConditionType_Enable Method.
        /// </summary>
        public static readonly NodeId ConditionType_Enable = new NodeId(Opc.Ua.Methods.ConditionType_Enable);

        /// <summary>
        /// The identifier for the ConditionType_AddComment Method.
        /// </summary>
        public static readonly NodeId ConditionType_AddComment = new NodeId(Opc.Ua.Methods.ConditionType_AddComment);

        /// <summary>
        /// The identifier for the ConditionType_ConditionRefresh Method.
        /// </summary>
        public static readonly NodeId ConditionType_ConditionRefresh = new NodeId(Opc.Ua.Methods.ConditionType_ConditionRefresh);

        /// <summary>
        /// The identifier for the ConditionType_ConditionRefresh2 Method.
        /// </summary>
        public static readonly NodeId ConditionType_ConditionRefresh2 = new NodeId(Opc.Ua.Methods.ConditionType_ConditionRefresh2);

        /// <summary>
        /// The identifier for the DialogConditionType_Respond Method.
        /// </summary>
        public static readonly NodeId DialogConditionType_Respond = new NodeId(Opc.Ua.Methods.DialogConditionType_Respond);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Acknowledge Method.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_Acknowledge = new NodeId(Opc.Ua.Methods.AcknowledgeableConditionType_Acknowledge);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Confirm Method.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_Confirm = new NodeId(Opc.Ua.Methods.AcknowledgeableConditionType_Confirm);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.AlarmConditionType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.AlarmConditionType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.AlarmConditionType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelve Method.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_Unshelve = new NodeId(Opc.Ua.Methods.ShelvedStateMachineType_Unshelve);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelve = new NodeId(Opc.Ua.Methods.ShelvedStateMachineType_OneShotShelve);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelve Method.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelve = new NodeId(Opc.Ua.Methods.ShelvedStateMachineType_TimedShelve);

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.LimitAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.LimitAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.LimitAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ExclusiveLimitAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ExclusiveLimitAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ExclusiveLimitAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.NonExclusiveLimitAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.NonExclusiveLimitAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.NonExclusiveLevelAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.NonExclusiveLevelAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ExclusiveLevelAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ExclusiveLevelAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ExclusiveLevelAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.NonExclusiveDeviationAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ExclusiveDeviationAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ExclusiveDeviationAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.DiscreteAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.DiscreteAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.DiscreteAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.OffNormalAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.OffNormalAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.OffNormalAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.SystemOffNormalAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.SystemOffNormalAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.SystemOffNormalAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateExpirationAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateExpirationAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateExpirationAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_Unshelve Method.
        /// </summary>
        public static readonly NodeId TripAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.TripAlarmType_ShelvingState_Unshelve);

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId TripAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.TripAlarmType_ShelvingState_OneShotShelve);

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_TimedShelve Method.
        /// </summary>
        public static readonly NodeId TripAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.TripAlarmType_ShelvingState_TimedShelve);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Start Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Start = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Start);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspend Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Suspend = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Suspend);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Resume Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Resume = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Resume);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halt Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Halt = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Halt);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Reset Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Reset = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Reset);

        /// <summary>
        /// The identifier for the TrustListType_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId TrustListType_OpenWithMasks = new NodeId(Opc.Ua.Methods.TrustListType_OpenWithMasks);

        /// <summary>
        /// The identifier for the TrustListType_CloseAndUpdate Method.
        /// </summary>
        public static readonly NodeId TrustListType_CloseAndUpdate = new NodeId(Opc.Ua.Methods.TrustListType_CloseAndUpdate);

        /// <summary>
        /// The identifier for the TrustListType_AddCertificate Method.
        /// </summary>
        public static readonly NodeId TrustListType_AddCertificate = new NodeId(Opc.Ua.Methods.TrustListType_AddCertificate);

        /// <summary>
        /// The identifier for the TrustListType_RemoveCertificate Method.
        /// </summary>
        public static readonly NodeId TrustListType_RemoveCertificate = new NodeId(Opc.Ua.Methods.TrustListType_RemoveCertificate);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_Open);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_Close);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_Read);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_Write);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the ServerConfigurationType_UpdateCertificate Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_UpdateCertificate = new NodeId(Opc.Ua.Methods.ServerConfigurationType_UpdateCertificate);

        /// <summary>
        /// The identifier for the ServerConfigurationType_ApplyChanges Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_ApplyChanges = new NodeId(Opc.Ua.Methods.ServerConfigurationType_ApplyChanges);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CreateSigningRequest Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CreateSigningRequest = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CreateSigningRequest);

        /// <summary>
        /// The identifier for the ServerConfigurationType_GetRejectedList Method.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_GetRejectedList = new NodeId(Opc.Ua.Methods.ServerConfigurationType_GetRejectedList);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate);

        /// <summary>
        /// The identifier for the ServerConfiguration_UpdateCertificate Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_UpdateCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_UpdateCertificate);

        /// <summary>
        /// The identifier for the ServerConfiguration_ApplyChanges Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_ApplyChanges = new NodeId(Opc.Ua.Methods.ServerConfiguration_ApplyChanges);

        /// <summary>
        /// The identifier for the ServerConfiguration_CreateSigningRequest Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CreateSigningRequest = new NodeId(Opc.Ua.Methods.ServerConfiguration_CreateSigningRequest);

        /// <summary>
        /// The identifier for the ServerConfiguration_GetRejectedList Method.
        /// </summary>
        public static readonly NodeId ServerConfiguration_GetRejectedList = new NodeId(Opc.Ua.Methods.ServerConfiguration_GetRejectedList);

        /// <summary>
        /// The identifier for the RoleType_AddIdentity Method.
        /// </summary>
        public static readonly NodeId RoleType_AddIdentity = new NodeId(Opc.Ua.Methods.RoleType_AddIdentity);

        /// <summary>
        /// The identifier for the RoleType_RemoveIdentity Method.
        /// </summary>
        public static readonly NodeId RoleType_RemoveIdentity = new NodeId(Opc.Ua.Methods.RoleType_RemoveIdentity);

        /// <summary>
        /// The identifier for the RoleType_AddApplication Method.
        /// </summary>
        public static readonly NodeId RoleType_AddApplication = new NodeId(Opc.Ua.Methods.RoleType_AddApplication);

        /// <summary>
        /// The identifier for the RoleType_RemoveApplication Method.
        /// </summary>
        public static readonly NodeId RoleType_RemoveApplication = new NodeId(Opc.Ua.Methods.RoleType_RemoveApplication);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityKeys Method.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_GetSecurityKeys = new NodeId(Opc.Ua.Methods.PubSubKeyServiceType_GetSecurityKeys);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityGroup Method.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_GetSecurityGroup = new NodeId(Opc.Ua.Methods.PubSubKeyServiceType_GetSecurityGroup);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_AddSecurityGroup Method.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_AddSecurityGroup = new NodeId(Opc.Ua.Methods.PubSubKeyServiceType_SecurityGroups_AddSecurityGroup);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup Method.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup Method.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup = new NodeId(Opc.Ua.Methods.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup Method.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_AddSecurityGroup Method.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_AddSecurityGroup = new NodeId(Opc.Ua.Methods.SecurityGroupFolderType_AddSecurityGroup);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_RemoveSecurityGroup Method.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.SecurityGroupFolderType_RemoveSecurityGroup);

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_AddSecurityGroup Method.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_SecurityGroups_AddSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribeType_SecurityGroups_AddSecurityGroup);

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_RemoveSecurityGroup Method.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_SecurityGroups_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribeType_SecurityGroups_RemoveSecurityGroup);

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddUadpConnection Method.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_AddUadpConnection = new NodeId(Opc.Ua.Methods.PublishSubscribeType_AddUadpConnection);

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddBrokerConnection Method.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_AddBrokerConnection = new NodeId(Opc.Ua.Methods.PublishSubscribeType_AddBrokerConnection);

        /// <summary>
        /// The identifier for the PublishSubscribeType_RemoveConnection Method.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_RemoveConnection = new NodeId(Opc.Ua.Methods.PublishSubscribeType_RemoveConnection);

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityKeys Method.
        /// </summary>
        public static readonly NodeId PublishSubscribe_GetSecurityKeys = new NodeId(Opc.Ua.Methods.PublishSubscribe_GetSecurityKeys);

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityGroup Method.
        /// </summary>
        public static readonly NodeId PublishSubscribe_GetSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribe_GetSecurityGroup);

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_AddSecurityGroup Method.
        /// </summary>
        public static readonly NodeId PublishSubscribe_SecurityGroups_AddSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribe_SecurityGroups_AddSecurityGroup);

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_RemoveSecurityGroup Method.
        /// </summary>
        public static readonly NodeId PublishSubscribe_SecurityGroups_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribe_SecurityGroups_RemoveSecurityGroup);

        /// <summary>
        /// The identifier for the PublishSubscribe_AddUadpConnection Method.
        /// </summary>
        public static readonly NodeId PublishSubscribe_AddUadpConnection = new NodeId(Opc.Ua.Methods.PublishSubscribe_AddUadpConnection);

        /// <summary>
        /// The identifier for the PublishSubscribe_AddBrokerConnection Method.
        /// </summary>
        public static readonly NodeId PublishSubscribe_AddBrokerConnection = new NodeId(Opc.Ua.Methods.PublishSubscribe_AddBrokerConnection);

        /// <summary>
        /// The identifier for the PublishSubscribe_RemoveConnection Method.
        /// </summary>
        public static readonly NodeId PublishSubscribe_RemoveConnection = new NodeId(Opc.Ua.Methods.PublishSubscribe_RemoveConnection);

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_ExtensionFields_AddExtensionField = new NodeId(Opc.Ua.Methods.PublishedDataSetType_ExtensionFields_AddExtensionField);

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_ExtensionFields_RemoveExtensionField = new NodeId(Opc.Ua.Methods.PublishedDataSetType_ExtensionFields_RemoveExtensionField);

        /// <summary>
        /// The identifier for the ExtensionFieldsType_AddExtensionField Method.
        /// </summary>
        public static readonly NodeId ExtensionFieldsType_AddExtensionField = new NodeId(Opc.Ua.Methods.ExtensionFieldsType_AddExtensionField);

        /// <summary>
        /// The identifier for the ExtensionFieldsType_RemoveExtensionField Method.
        /// </summary>
        public static readonly NodeId ExtensionFieldsType_RemoveExtensionField = new NodeId(Opc.Ua.Methods.ExtensionFieldsType_RemoveExtensionField);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_AddExtensionField = new NodeId(Opc.Ua.Methods.PublishedDataItemsType_ExtensionFields_AddExtensionField);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_RemoveExtensionField = new NodeId(Opc.Ua.Methods.PublishedDataItemsType_ExtensionFields_RemoveExtensionField);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_AddVariables Method.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_AddVariables = new NodeId(Opc.Ua.Methods.PublishedDataItemsType_AddVariables);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_RemoveVariables Method.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_RemoveVariables = new NodeId(Opc.Ua.Methods.PublishedDataItemsType_RemoveVariables);

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public static readonly NodeId PublishedEventsType_ExtensionFields_AddExtensionField = new NodeId(Opc.Ua.Methods.PublishedEventsType_ExtensionFields_AddExtensionField);

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public static readonly NodeId PublishedEventsType_ExtensionFields_RemoveExtensionField = new NodeId(Opc.Ua.Methods.PublishedEventsType_ExtensionFields_RemoveExtensionField);

        /// <summary>
        /// The identifier for the PublishedEventsType_ModifyFieldSelection Method.
        /// </summary>
        public static readonly NodeId PublishedEventsType_ModifyFieldSelection = new NodeId(Opc.Ua.Methods.PublishedEventsType_ModifyFieldSelection);

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public static readonly NodeId DataSetClassType_ExtensionFields_AddExtensionField = new NodeId(Opc.Ua.Methods.DataSetClassType_ExtensionFields_AddExtensionField);

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public static readonly NodeId DataSetClassType_ExtensionFields_RemoveExtensionField = new NodeId(Opc.Ua.Methods.DataSetClassType_ExtensionFields_RemoveExtensionField);

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems Method.
        /// </summary>
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems);

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents Method.
        /// </summary>
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents);

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet Method.
        /// </summary>
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet);

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField Method.
        /// </summary>
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField = new NodeId(Opc.Ua.Methods.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField);

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField Method.
        /// </summary>
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField = new NodeId(Opc.Ua.Methods.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField);

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedDataItems Method.
        /// </summary>
        public static readonly NodeId DataSetFolderType_AddPublishedDataItems = new NodeId(Opc.Ua.Methods.DataSetFolderType_AddPublishedDataItems);

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedEvents Method.
        /// </summary>
        public static readonly NodeId DataSetFolderType_AddPublishedEvents = new NodeId(Opc.Ua.Methods.DataSetFolderType_AddPublishedEvents);

        /// <summary>
        /// The identifier for the DataSetFolderType_RemovePublishedDataSet Method.
        /// </summary>
        public static readonly NodeId DataSetFolderType_RemovePublishedDataSet = new NodeId(Opc.Ua.Methods.DataSetFolderType_RemovePublishedDataSet);

        /// <summary>
        /// The identifier for the PubSubConnectionType_RemoveGroup Method.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_RemoveGroup = new NodeId(Opc.Ua.Methods.PubSubConnectionType_RemoveGroup);

        /// <summary>
        /// The identifier for the PubSubGroupType_RemoveDataSetWriter Method.
        /// </summary>
        public static readonly NodeId PubSubGroupType_RemoveDataSetWriter = new NodeId(Opc.Ua.Methods.PubSubGroupType_RemoveDataSetWriter);

        /// <summary>
        /// The identifier for the PubSubGroupType_RemoveDataSetReader Method.
        /// </summary>
        public static readonly NodeId PubSubGroupType_RemoveDataSetReader = new NodeId(Opc.Ua.Methods.PubSubGroupType_RemoveDataSetReader);

        /// <summary>
        /// The identifier for the DataSetReaderType_SetConnectVariables Method.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SetConnectVariables = new NodeId(Opc.Ua.Methods.DataSetReaderType_SetConnectVariables);

        /// <summary>
        /// The identifier for the DataSetReaderType_SetDataSetMirror Method.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SetDataSetMirror = new NodeId(Opc.Ua.Methods.DataSetReaderType_SetDataSetMirror);

        /// <summary>
        /// The identifier for the ConnectedVariablesType_AddDataConnections Method.
        /// </summary>
        public static readonly NodeId ConnectedVariablesType_AddDataConnections = new NodeId(Opc.Ua.Methods.ConnectedVariablesType_AddDataConnections);

        /// <summary>
        /// The identifier for the ConnectedVariablesType_RemoveDataConnections Method.
        /// </summary>
        public static readonly NodeId ConnectedVariablesType_RemoveDataConnections = new NodeId(Opc.Ua.Methods.ConnectedVariablesType_RemoveDataConnections);

        /// <summary>
        /// The identifier for the PubSubStatusType_Enable Method.
        /// </summary>
        public static readonly NodeId PubSubStatusType_Enable = new NodeId(Opc.Ua.Methods.PubSubStatusType_Enable);

        /// <summary>
        /// The identifier for the PubSubStatusType_Disable Method.
        /// </summary>
        public static readonly NodeId PubSubStatusType_Disable = new NodeId(Opc.Ua.Methods.PubSubStatusType_Disable);

        /// <summary>
        /// The identifier for the UadpConnectionType_AddGroup Method.
        /// </summary>
        public static readonly NodeId UadpConnectionType_AddGroup = new NodeId(Opc.Ua.Methods.UadpConnectionType_AddGroup);

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetWriter Method.
        /// </summary>
        public static readonly NodeId UadpGroupType_AddDataSetWriter = new NodeId(Opc.Ua.Methods.UadpGroupType_AddDataSetWriter);

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetReader Method.
        /// </summary>
        public static readonly NodeId UadpGroupType_AddDataSetReader = new NodeId(Opc.Ua.Methods.UadpGroupType_AddDataSetReader);

        /// <summary>
        /// The identifier for the BrokerConnectionType_AddGroup Method.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_AddGroup = new NodeId(Opc.Ua.Methods.BrokerConnectionType_AddGroup);

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetWriter Method.
        /// </summary>
        public static readonly NodeId BrokerGroupType_AddDataSetWriter = new NodeId(Opc.Ua.Methods.BrokerGroupType_AddDataSetWriter);

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetReader Method.
        /// </summary>
        public static readonly NodeId BrokerGroupType_AddDataSetReader = new NodeId(Opc.Ua.Methods.BrokerGroupType_AddDataSetReader);

        /// <summary>
        /// The identifier for the BrokerGroupTypeAddReaderType Method.
        /// </summary>
        public static readonly NodeId BrokerGroupTypeAddReaderType = new NodeId(Opc.Ua.Methods.BrokerGroupTypeAddReaderType);
    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DefaultBinary = new NodeId(Opc.Ua.Objects.DefaultBinary);

        /// <summary>
        /// The identifier for the DefaultXml Object.
        /// </summary>
        public static readonly NodeId DefaultXml = new NodeId(Opc.Ua.Objects.DefaultXml);

        /// <summary>
        /// The identifier for the ModellingRule_Mandatory Object.
        /// </summary>
        public static readonly NodeId ModellingRule_Mandatory = new NodeId(Opc.Ua.Objects.ModellingRule_Mandatory);

        /// <summary>
        /// The identifier for the ModellingRule_Optional Object.
        /// </summary>
        public static readonly NodeId ModellingRule_Optional = new NodeId(Opc.Ua.Objects.ModellingRule_Optional);

        /// <summary>
        /// The identifier for the ModellingRule_ExposesItsArray Object.
        /// </summary>
        public static readonly NodeId ModellingRule_ExposesItsArray = new NodeId(Opc.Ua.Objects.ModellingRule_ExposesItsArray);

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryShared Object.
        /// </summary>
        public static readonly NodeId ModellingRule_MandatoryShared = new NodeId(Opc.Ua.Objects.ModellingRule_MandatoryShared);

        /// <summary>
        /// The identifier for the ModellingRule_OptionalPlaceholder Object.
        /// </summary>
        public static readonly NodeId ModellingRule_OptionalPlaceholder = new NodeId(Opc.Ua.Objects.ModellingRule_OptionalPlaceholder);

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryPlaceholder Object.
        /// </summary>
        public static readonly NodeId ModellingRule_MandatoryPlaceholder = new NodeId(Opc.Ua.Objects.ModellingRule_MandatoryPlaceholder);

        /// <summary>
        /// The identifier for the RootFolder Object.
        /// </summary>
        public static readonly NodeId RootFolder = new NodeId(Opc.Ua.Objects.RootFolder);

        /// <summary>
        /// The identifier for the ObjectsFolder Object.
        /// </summary>
        public static readonly NodeId ObjectsFolder = new NodeId(Opc.Ua.Objects.ObjectsFolder);

        /// <summary>
        /// The identifier for the TypesFolder Object.
        /// </summary>
        public static readonly NodeId TypesFolder = new NodeId(Opc.Ua.Objects.TypesFolder);

        /// <summary>
        /// The identifier for the ViewsFolder Object.
        /// </summary>
        public static readonly NodeId ViewsFolder = new NodeId(Opc.Ua.Objects.ViewsFolder);

        /// <summary>
        /// The identifier for the ObjectTypesFolder Object.
        /// </summary>
        public static readonly NodeId ObjectTypesFolder = new NodeId(Opc.Ua.Objects.ObjectTypesFolder);

        /// <summary>
        /// The identifier for the VariableTypesFolder Object.
        /// </summary>
        public static readonly NodeId VariableTypesFolder = new NodeId(Opc.Ua.Objects.VariableTypesFolder);

        /// <summary>
        /// The identifier for the DataTypesFolder Object.
        /// </summary>
        public static readonly NodeId DataTypesFolder = new NodeId(Opc.Ua.Objects.DataTypesFolder);

        /// <summary>
        /// The identifier for the ReferenceTypesFolder Object.
        /// </summary>
        public static readonly NodeId ReferenceTypesFolder = new NodeId(Opc.Ua.Objects.ReferenceTypesFolder);

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem Object.
        /// </summary>
        public static readonly NodeId XmlSchema_TypeSystem = new NodeId(Opc.Ua.Objects.XmlSchema_TypeSystem);

        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem Object.
        /// </summary>
        public static readonly NodeId OPCBinarySchema_TypeSystem = new NodeId(Opc.Ua.Objects.OPCBinarySchema_TypeSystem);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities Object.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities = new NodeId(Opc.Ua.Objects.ServerType_ServerCapabilities);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_ModellingRules Object.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities_ModellingRules = new NodeId(Opc.Ua.Objects.ServerType_ServerCapabilities_ModellingRules);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_AggregateFunctions Object.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities_AggregateFunctions = new NodeId(Opc.Ua.Objects.ServerType_ServerCapabilities_AggregateFunctions);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics Object.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics = new NodeId(Opc.Ua.Objects.ServerType_ServerDiagnostics);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_SessionsDiagnosticsSummary Object.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_SessionsDiagnosticsSummary = new NodeId(Opc.Ua.Objects.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary);

        /// <summary>
        /// The identifier for the ServerType_VendorServerInfo Object.
        /// </summary>
        public static readonly NodeId ServerType_VendorServerInfo = new NodeId(Opc.Ua.Objects.ServerType_VendorServerInfo);

        /// <summary>
        /// The identifier for the ServerType_ServerRedundancy Object.
        /// </summary>
        public static readonly NodeId ServerType_ServerRedundancy = new NodeId(Opc.Ua.Objects.ServerType_ServerRedundancy);

        /// <summary>
        /// The identifier for the ServerType_Namespaces Object.
        /// </summary>
        public static readonly NodeId ServerType_Namespaces = new NodeId(Opc.Ua.Objects.ServerType_Namespaces);

        /// <summary>
        /// The identifier for the ServerType_Roles Object.
        /// </summary>
        public static readonly NodeId ServerType_Roles = new NodeId(Opc.Ua.Objects.ServerType_Roles);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_OperationLimits Object.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_OperationLimits = new NodeId(Opc.Ua.Objects.ServerCapabilitiesType_OperationLimits);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_ModellingRules Object.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_ModellingRules = new NodeId(Opc.Ua.Objects.ServerCapabilitiesType_ModellingRules);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_AggregateFunctions Object.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_AggregateFunctions = new NodeId(Opc.Ua.Objects.ServerCapabilitiesType_AggregateFunctions);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SessionsDiagnosticsSummary Object.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_SessionsDiagnosticsSummary = new NodeId(Opc.Ua.Objects.ServerDiagnosticsType_SessionsDiagnosticsSummary);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder Object.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder = new NodeId(Opc.Ua.Objects.SessionsDiagnosticsSummaryType_ClientName_Placeholder);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder Object.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder = new NodeId(Opc.Ua.Objects.FileDirectoryType_FileDirectoryName_Placeholder);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder Object.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder = new NodeId(Opc.Ua.Objects.FileDirectoryType_FileName_Placeholder);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Idle Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_Idle = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_Idle);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Error Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_Error = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_Error);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle Object.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile Object.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile = new NodeId(Opc.Ua.Objects.NamespaceMetadataType_NamespaceFile);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder Object.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder = new NodeId(Opc.Ua.Objects.NamespacesType_NamespaceIdentifier_Placeholder);

        /// <summary>
        /// The identifier for the EventTypesFolder Object.
        /// </summary>
        public static readonly NodeId EventTypesFolder = new NodeId(Opc.Ua.Objects.EventTypesFolder);

        /// <summary>
        /// The identifier for the Server Object.
        /// </summary>
        public static readonly NodeId Server = new NodeId(Opc.Ua.Objects.Server);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities Object.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities = new NodeId(Opc.Ua.Objects.Server_ServerCapabilities);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits Object.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits = new NodeId(Opc.Ua.Objects.Server_ServerCapabilities_OperationLimits);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_ModellingRules Object.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_ModellingRules = new NodeId(Opc.Ua.Objects.Server_ServerCapabilities_ModellingRules);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_AggregateFunctions Object.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_AggregateFunctions = new NodeId(Opc.Ua.Objects.Server_ServerCapabilities_AggregateFunctions);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics Object.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics = new NodeId(Opc.Ua.Objects.Server_ServerDiagnostics);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary Object.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SessionsDiagnosticsSummary = new NodeId(Opc.Ua.Objects.Server_ServerDiagnostics_SessionsDiagnosticsSummary);

        /// <summary>
        /// The identifier for the Server_VendorServerInfo Object.
        /// </summary>
        public static readonly NodeId Server_VendorServerInfo = new NodeId(Opc.Ua.Objects.Server_VendorServerInfo);

        /// <summary>
        /// The identifier for the Server_ServerRedundancy Object.
        /// </summary>
        public static readonly NodeId Server_ServerRedundancy = new NodeId(Opc.Ua.Objects.Server_ServerRedundancy);

        /// <summary>
        /// The identifier for the Server_Namespaces Object.
        /// </summary>
        public static readonly NodeId Server_Namespaces = new NodeId(Opc.Ua.Objects.Server_Namespaces);

        /// <summary>
        /// The identifier for the Server_Roles Object.
        /// </summary>
        public static readonly NodeId Server_Roles = new NodeId(Opc.Ua.Objects.Server_Roles);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri Object.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri = new NodeId(Opc.Ua.Objects.Server_Namespaces_OPCUANamespaceUri);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities Object.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities = new NodeId(Opc.Ua.Objects.HistoryServerCapabilities);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_AggregateFunctions Object.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_AggregateFunctions = new NodeId(Opc.Ua.Objects.HistoryServerCapabilities_AggregateFunctions);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Idle Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_Idle = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_Idle);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepare Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadPrepare = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadPrepare);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransfer Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadTransfer = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadTransfer);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWrite Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ApplyWrite = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ApplyWrite);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Error Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_Error = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_Error);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_IdleToReadPrepare Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_IdleToReadPrepare = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_IdleToReadPrepare);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepareToReadTransfer Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadPrepareToReadTransfer = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadPrepareToReadTransfer);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransferToIdle Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadTransferToIdle = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadTransferToIdle);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_IdleToApplyWrite Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_IdleToApplyWrite = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_IdleToApplyWrite);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWriteToIdle Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ApplyWriteToIdle = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ApplyWriteToIdle);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepareToError Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadPrepareToError = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadPrepareToError);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransferToError Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadTransferToError = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadTransferToError);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWriteToError Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ApplyWriteToError = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ApplyWriteToError);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ErrorToIdle Object.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ErrorToIdle = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ErrorToIdle);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState Object.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState = new NodeId(Opc.Ua.Objects.AlarmConditionType_ShelvingState);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_Unshelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_Unshelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_TimedShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_OneShotShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToTimedShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToTimedShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_UnshelvedToTimedShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToOneShotShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToOneShotShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_UnshelvedToOneShotShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToUnshelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToUnshelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_TimedShelvedToUnshelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToOneShotShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToOneShotShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_TimedShelvedToOneShotShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToUnshelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToUnshelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_OneShotShelvedToUnshelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToTimedShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToTimedShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_OneShotShelvedToTimedShelved);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighHigh Object.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_HighHigh = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_HighHigh);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_High Object.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_High = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_High);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_Low Object.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_Low = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_Low);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowLow Object.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_LowLow = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_LowLow);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowLowToLow Object.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_LowLowToLow = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_LowLowToLow);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowToLowLow Object.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_LowToLowLow = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_LowToLowLow);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighHighToHigh Object.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_HighHighToHigh = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_HighHighToHigh);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighToHighHigh Object.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_HighToHighHigh = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_HighToHighHigh);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState Object.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState = new NodeId(Opc.Ua.Objects.ExclusiveLimitAlarmType_LimitState);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_FinalResultData Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_FinalResultData = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_FinalResultData);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Ready Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Ready = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_Ready);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Running Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Running = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_Running);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspended Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Suspended = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_Suspended);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halted Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Halted = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_Halted);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_HaltedToReady Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_HaltedToReady = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_HaltedToReady);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToRunning Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ReadyToRunning = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_ReadyToRunning);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToHalted Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToHalted = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_RunningToHalted);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToReady Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToReady = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_RunningToReady);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToSuspended Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToSuspended = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_RunningToSuspended);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToRunning Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToRunning = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_SuspendedToRunning);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToHalted Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToHalted = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_SuspendedToHalted);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToReady Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToReady = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_SuspendedToReady);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToHalted Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ReadyToHalted = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_ReadyToHalted);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration Object.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration = new NodeId(Opc.Ua.Objects.HistoricalDataConfigurationType_AggregateConfiguration);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateFunctions Object.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_AggregateFunctions = new NodeId(Opc.Ua.Objects.HistoricalDataConfigurationType_AggregateFunctions);

        /// <summary>
        /// The identifier for the HAConfiguration Object.
        /// </summary>
        public static readonly NodeId HAConfiguration = new NodeId(Opc.Ua.Objects.HAConfiguration);

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration Object.
        /// </summary>
        public static readonly NodeId HAConfiguration_AggregateConfiguration = new NodeId(Opc.Ua.Objects.HAConfiguration_AggregateConfiguration);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AggregateFunctions Object.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_AggregateFunctions = new NodeId(Opc.Ua.Objects.HistoryServerCapabilitiesType_AggregateFunctions);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList Object.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupType_TrustList);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup Object.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultApplicationGroup);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList Object.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultApplicationGroup_TrustList);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup Object.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultHttpsGroup);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList Object.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultHttpsGroup_TrustList);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup Object.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultUserTokenGroup);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList Object.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder Object.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_AdditionalGroup_Placeholder);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList Object.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups Object.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup Object.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList Object.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList Object.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList Object.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList);

        /// <summary>
        /// The identifier for the ServerConfiguration Object.
        /// </summary>
        public static readonly NodeId ServerConfiguration = new NodeId(Opc.Ua.Objects.ServerConfiguration);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups Object.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup Object.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultApplicationGroup);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList Object.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup Object.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultHttpsGroup);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList Object.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup Object.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList Object.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList);

        /// <summary>
        /// The identifier for the AggregateFunction_Interpolative Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Interpolative = new NodeId(Opc.Ua.Objects.AggregateFunction_Interpolative);

        /// <summary>
        /// The identifier for the AggregateFunction_Average Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Average = new NodeId(Opc.Ua.Objects.AggregateFunction_Average);

        /// <summary>
        /// The identifier for the AggregateFunction_TimeAverage Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_TimeAverage = new NodeId(Opc.Ua.Objects.AggregateFunction_TimeAverage);

        /// <summary>
        /// The identifier for the AggregateFunction_TimeAverage2 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_TimeAverage2 = new NodeId(Opc.Ua.Objects.AggregateFunction_TimeAverage2);

        /// <summary>
        /// The identifier for the AggregateFunction_Total Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Total = new NodeId(Opc.Ua.Objects.AggregateFunction_Total);

        /// <summary>
        /// The identifier for the AggregateFunction_Total2 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Total2 = new NodeId(Opc.Ua.Objects.AggregateFunction_Total2);

        /// <summary>
        /// The identifier for the AggregateFunction_Minimum Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Minimum = new NodeId(Opc.Ua.Objects.AggregateFunction_Minimum);

        /// <summary>
        /// The identifier for the AggregateFunction_Maximum Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Maximum = new NodeId(Opc.Ua.Objects.AggregateFunction_Maximum);

        /// <summary>
        /// The identifier for the AggregateFunction_MinimumActualTime Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_MinimumActualTime = new NodeId(Opc.Ua.Objects.AggregateFunction_MinimumActualTime);

        /// <summary>
        /// The identifier for the AggregateFunction_MaximumActualTime Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_MaximumActualTime = new NodeId(Opc.Ua.Objects.AggregateFunction_MaximumActualTime);

        /// <summary>
        /// The identifier for the AggregateFunction_Range Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Range = new NodeId(Opc.Ua.Objects.AggregateFunction_Range);

        /// <summary>
        /// The identifier for the AggregateFunction_Minimum2 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Minimum2 = new NodeId(Opc.Ua.Objects.AggregateFunction_Minimum2);

        /// <summary>
        /// The identifier for the AggregateFunction_Maximum2 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Maximum2 = new NodeId(Opc.Ua.Objects.AggregateFunction_Maximum2);

        /// <summary>
        /// The identifier for the AggregateFunction_MinimumActualTime2 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_MinimumActualTime2 = new NodeId(Opc.Ua.Objects.AggregateFunction_MinimumActualTime2);

        /// <summary>
        /// The identifier for the AggregateFunction_MaximumActualTime2 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_MaximumActualTime2 = new NodeId(Opc.Ua.Objects.AggregateFunction_MaximumActualTime2);

        /// <summary>
        /// The identifier for the AggregateFunction_Range2 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Range2 = new NodeId(Opc.Ua.Objects.AggregateFunction_Range2);

        /// <summary>
        /// The identifier for the AggregateFunction_AnnotationCount Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_AnnotationCount = new NodeId(Opc.Ua.Objects.AggregateFunction_AnnotationCount);

        /// <summary>
        /// The identifier for the AggregateFunction_Count Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Count = new NodeId(Opc.Ua.Objects.AggregateFunction_Count);

        /// <summary>
        /// The identifier for the AggregateFunction_DurationInStateZero Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_DurationInStateZero = new NodeId(Opc.Ua.Objects.AggregateFunction_DurationInStateZero);

        /// <summary>
        /// The identifier for the AggregateFunction_DurationInStateNonZero Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_DurationInStateNonZero = new NodeId(Opc.Ua.Objects.AggregateFunction_DurationInStateNonZero);

        /// <summary>
        /// The identifier for the AggregateFunction_NumberOfTransitions Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_NumberOfTransitions = new NodeId(Opc.Ua.Objects.AggregateFunction_NumberOfTransitions);

        /// <summary>
        /// The identifier for the AggregateFunction_Start Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Start = new NodeId(Opc.Ua.Objects.AggregateFunction_Start);

        /// <summary>
        /// The identifier for the AggregateFunction_End Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_End = new NodeId(Opc.Ua.Objects.AggregateFunction_End);

        /// <summary>
        /// The identifier for the AggregateFunction_Delta Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Delta = new NodeId(Opc.Ua.Objects.AggregateFunction_Delta);

        /// <summary>
        /// The identifier for the AggregateFunction_StartBound Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_StartBound = new NodeId(Opc.Ua.Objects.AggregateFunction_StartBound);

        /// <summary>
        /// The identifier for the AggregateFunction_EndBound Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_EndBound = new NodeId(Opc.Ua.Objects.AggregateFunction_EndBound);

        /// <summary>
        /// The identifier for the AggregateFunction_DeltaBounds Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_DeltaBounds = new NodeId(Opc.Ua.Objects.AggregateFunction_DeltaBounds);

        /// <summary>
        /// The identifier for the AggregateFunction_DurationGood Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_DurationGood = new NodeId(Opc.Ua.Objects.AggregateFunction_DurationGood);

        /// <summary>
        /// The identifier for the AggregateFunction_DurationBad Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_DurationBad = new NodeId(Opc.Ua.Objects.AggregateFunction_DurationBad);

        /// <summary>
        /// The identifier for the AggregateFunction_PercentGood Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_PercentGood = new NodeId(Opc.Ua.Objects.AggregateFunction_PercentGood);

        /// <summary>
        /// The identifier for the AggregateFunction_PercentBad Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_PercentBad = new NodeId(Opc.Ua.Objects.AggregateFunction_PercentBad);

        /// <summary>
        /// The identifier for the AggregateFunction_WorstQuality Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_WorstQuality = new NodeId(Opc.Ua.Objects.AggregateFunction_WorstQuality);

        /// <summary>
        /// The identifier for the AggregateFunction_WorstQuality2 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_WorstQuality2 = new NodeId(Opc.Ua.Objects.AggregateFunction_WorstQuality2);

        /// <summary>
        /// The identifier for the AggregateFunction_StandardDeviationSample Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_StandardDeviationSample = new NodeId(Opc.Ua.Objects.AggregateFunction_StandardDeviationSample);

        /// <summary>
        /// The identifier for the AggregateFunction_StandardDeviationPopulation Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_StandardDeviationPopulation = new NodeId(Opc.Ua.Objects.AggregateFunction_StandardDeviationPopulation);

        /// <summary>
        /// The identifier for the AggregateFunction_VarianceSample Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_VarianceSample = new NodeId(Opc.Ua.Objects.AggregateFunction_VarianceSample);

        /// <summary>
        /// The identifier for the AggregateFunction_VariancePopulation Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_VariancePopulation = new NodeId(Opc.Ua.Objects.AggregateFunction_VariancePopulation);

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder Object.
        /// </summary>
        public static readonly NodeId RoleFolderType_RoleName_Placeholder = new NodeId(Opc.Ua.Objects.RoleFolderType_RoleName_Placeholder);

        /// <summary>
        /// The identifier for the Anonymous Object.
        /// </summary>
        public static readonly NodeId Anonymous = new NodeId(Opc.Ua.Objects.Anonymous);

        /// <summary>
        /// The identifier for the AuthenticatedUsers Object.
        /// </summary>
        public static readonly NodeId AuthenticatedUsers = new NodeId(Opc.Ua.Objects.AuthenticatedUsers);

        /// <summary>
        /// The identifier for the Observer Object.
        /// </summary>
        public static readonly NodeId Observer = new NodeId(Opc.Ua.Objects.Observer);

        /// <summary>
        /// The identifier for the Operator Object.
        /// </summary>
        public static readonly NodeId Operator = new NodeId(Opc.Ua.Objects.Operator);

        /// <summary>
        /// The identifier for the Supervisor Object.
        /// </summary>
        public static readonly NodeId Supervisor = new NodeId(Opc.Ua.Objects.Supervisor);

        /// <summary>
        /// The identifier for the SecurityAdmin Object.
        /// </summary>
        public static readonly NodeId SecurityAdmin = new NodeId(Opc.Ua.Objects.SecurityAdmin);

        /// <summary>
        /// The identifier for the ConfigureAdmin Object.
        /// </summary>
        public static readonly NodeId ConfigureAdmin = new NodeId(Opc.Ua.Objects.ConfigureAdmin);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups Object.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups = new NodeId(Opc.Ua.Objects.PubSubKeyServiceType_SecurityGroups);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder Object.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder = new NodeId(Opc.Ua.Objects.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupName_Placeholder Object.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupName_Placeholder = new NodeId(Opc.Ua.Objects.SecurityGroupFolderType_SecurityGroupName_Placeholder);

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder Object.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder = new NodeId(Opc.Ua.Objects.PublishSubscribeType_ConnectionName_Placeholder);

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishSubscribeType_ConnectionName_Placeholder_Status);

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets Object.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_PublishedDataSets = new NodeId(Opc.Ua.Objects.PublishSubscribeType_PublishedDataSets);

        /// <summary>
        /// The identifier for the PublishSubscribeType_Status Object.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_Status = new NodeId(Opc.Ua.Objects.PublishSubscribeType_Status);

        /// <summary>
        /// The identifier for the PublishSubscribe Object.
        /// </summary>
        public static readonly NodeId PublishSubscribe = new NodeId(Opc.Ua.Objects.PublishSubscribe);

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups Object.
        /// </summary>
        public static readonly NodeId PublishSubscribe_SecurityGroups = new NodeId(Opc.Ua.Objects.PublishSubscribe_SecurityGroups);

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishSubscribe_ConnectionName_Placeholder_Status);

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets Object.
        /// </summary>
        public static readonly NodeId PublishSubscribe_PublishedDataSets = new NodeId(Opc.Ua.Objects.PublishSubscribe_PublishedDataSets);

        /// <summary>
        /// The identifier for the PublishSubscribe_Status Object.
        /// </summary>
        public static readonly NodeId PublishSubscribe_Status = new NodeId(Opc.Ua.Objects.PublishSubscribe_Status);

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder Object.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder = new NodeId(Opc.Ua.Objects.PublishedDataSetType_DataSetWriterName_Placeholder);

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishedDataSetType_DataSetWriterName_Placeholder_Status);

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.PublishedDataSetType_DataSetWriterName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields Object.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_ExtensionFields = new NodeId(Opc.Ua.Objects.PublishedDataSetType_ExtensionFields);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishedDataItemsType_DataSetWriterName_Placeholder_Status);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.PublishedDataItemsType_DataSetWriterName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the PublishedEventsType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishedEventsType_DataSetWriterName_Placeholder_Status);

        /// <summary>
        /// The identifier for the PublishedEventsType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.PublishedEventsType_DataSetWriterName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId DataSetClassType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.DataSetClassType_DataSetWriterName_Placeholder_Status);

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId DataSetClassType_DataSetWriterName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.DataSetClassType_DataSetWriterName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder Object.
        /// </summary>
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder = new NodeId(Opc.Ua.Objects.DataSetFolderType_DataSetFolderName_Placeholder);

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder Object.
        /// </summary>
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder = new NodeId(Opc.Ua.Objects.DataSetFolderType_PublishedDataSetName_Placeholder);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder Object.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder = new NodeId(Opc.Ua.Objects.PubSubConnectionType_GroupName_Placeholder);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PubSubConnectionType_GroupName_Placeholder_Status);

        /// <summary>
        /// The identifier for the PubSubConnectionType_Status Object.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_Status = new NodeId(Opc.Ua.Objects.PubSubConnectionType_Status);

        /// <summary>
        /// The identifier for the PubSubGroupType_Status Object.
        /// </summary>
        public static readonly NodeId PubSubGroupType_Status = new NodeId(Opc.Ua.Objects.PubSubGroupType_Status);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder Object.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetWriterName_Placeholder = new NodeId(Opc.Ua.Objects.PubSubGroupType_DataSetWriterName_Placeholder);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PubSubGroupType_DataSetWriterName_Placeholder_Status);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetWriterName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.PubSubGroupType_DataSetWriterName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder Object.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder = new NodeId(Opc.Ua.Objects.PubSubGroupType_DataSetReaderName_Placeholder);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PubSubGroupType_DataSetReaderName_Placeholder_Status);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.PubSubGroupType_DataSetReaderName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet Object.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet = new NodeId(Opc.Ua.Objects.PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet);

        /// <summary>
        /// The identifier for the DataSetWriterType_Status Object.
        /// </summary>
        public static readonly NodeId DataSetWriterType_Status = new NodeId(Opc.Ua.Objects.DataSetWriterType_Status);

        /// <summary>
        /// The identifier for the DataSetWriterType_TransportSettings Object.
        /// </summary>
        public static readonly NodeId DataSetWriterType_TransportSettings = new NodeId(Opc.Ua.Objects.DataSetWriterType_TransportSettings);

        /// <summary>
        /// The identifier for the DataSetReaderType_Status Object.
        /// </summary>
        public static readonly NodeId DataSetReaderType_Status = new NodeId(Opc.Ua.Objects.DataSetReaderType_Status);

        /// <summary>
        /// The identifier for the DataSetReaderType_TransportSettings Object.
        /// </summary>
        public static readonly NodeId DataSetReaderType_TransportSettings = new NodeId(Opc.Ua.Objects.DataSetReaderType_TransportSettings);

        /// <summary>
        /// The identifier for the DataSetReaderType_SubscribedDataSet Object.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SubscribedDataSet = new NodeId(Opc.Ua.Objects.DataSetReaderType_SubscribedDataSet);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_Status = new NodeId(Opc.Ua.Objects.UadpConnectionType_GroupName_Placeholder_Status);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.UadpGroupType_DataSetWriterName_Placeholder_Status);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetWriterName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.UadpGroupType_DataSetWriterName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_Status = new NodeId(Opc.Ua.Objects.UadpGroupType_DataSetReaderName_Placeholder_Status);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.UadpGroupType_DataSetReaderName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet Object.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet = new NodeId(Opc.Ua.Objects.UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_Status = new NodeId(Opc.Ua.Objects.BrokerConnectionType_GroupName_Placeholder_Status);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetWriterName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.BrokerGroupType_DataSetWriterName_Placeholder_Status);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetWriterName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetWriterName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.BrokerGroupType_DataSetWriterName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_Status Object.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_Status = new NodeId(Opc.Ua.Objects.BrokerGroupType_DataSetReaderName_Placeholder_Status);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_TransportSettings Object.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_TransportSettings = new NodeId(Opc.Ua.Objects.BrokerGroupType_DataSetReaderName_Placeholder_TransportSettings);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet Object.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet = new NodeId(Opc.Ua.Objects.BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet);

        /// <summary>
        /// The identifier for the TrustListDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TrustListDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TrustListDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataTypeDefinition_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataTypeDefinition_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataTypeDefinition_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the StructureDefinition_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId StructureDefinition_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StructureDefinition_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EnumDefinition_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EnumDefinition_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EnumDefinition_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the StructureField_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId StructureField_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StructureField_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the IdentityMappingRuleType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId IdentityMappingRuleType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.IdentityMappingRuleType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ApplicationPermissionRuleType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ApplicationPermissionRuleType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ApplicationPermissionRuleType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ConfigurationVersionDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ConfigurationVersionDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ConfigurationVersionDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataSetMetaDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataSetMetaDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataSetMetaDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the FieldMetaData_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId FieldMetaData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FieldMetaData_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataTypeDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataTypeDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataTypeDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the StructureDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId StructureDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StructureDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EnumDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EnumDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EnumDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the KeyValuePair_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId KeyValuePair_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.KeyValuePair_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the PublishedVariableDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId PublishedVariableDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishedVariableDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataConnectionDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataConnectionDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataConnectionDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the Node_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId Node_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Node_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the InstanceNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId InstanceNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.InstanceNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TypeNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ObjectNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ObjectNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ObjectNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ObjectTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ObjectTypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ObjectTypeNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the VariableNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId VariableNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.VariableNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the VariableTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId VariableTypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.VariableTypeNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReferenceTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReferenceTypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReferenceTypeNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MethodNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MethodNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MethodNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ViewNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ViewNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ViewNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataTypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataTypeNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReferenceNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReferenceNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReferenceNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the Argument_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId Argument_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Argument_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EnumValueType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EnumValueType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EnumValueType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EnumField_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EnumField_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EnumField_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the OptionSet_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId OptionSet_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.OptionSet_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the Union_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId Union_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Union_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TimeZoneDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TimeZoneDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TimeZoneDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ApplicationDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ApplicationDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ApplicationDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RequestHeader_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RequestHeader_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RequestHeader_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ResponseHeader_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ResponseHeader_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ResponseHeader_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ServiceFault_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ServiceFault_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServiceFault_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SessionLessServiceMessageType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SessionLessServiceMessageType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SessionLessServiceMessageType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the FindServersRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId FindServersRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FindServersRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the FindServersResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId FindServersResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FindServersResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ServerOnNetwork_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ServerOnNetwork_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServerOnNetwork_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the FindServersOnNetworkRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId FindServersOnNetworkRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FindServersOnNetworkRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the FindServersOnNetworkResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId FindServersOnNetworkResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FindServersOnNetworkResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UserTokenPolicy_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UserTokenPolicy_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UserTokenPolicy_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EndpointDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EndpointDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EndpointDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the GetEndpointsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId GetEndpointsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.GetEndpointsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the GetEndpointsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId GetEndpointsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.GetEndpointsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisteredServer_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisteredServer_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisteredServer_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterServerRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterServerRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterServerRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterServerResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterServerResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterServerResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DiscoveryConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DiscoveryConfiguration_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DiscoveryConfiguration_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MdnsDiscoveryConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MdnsDiscoveryConfiguration_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MdnsDiscoveryConfiguration_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterServer2Request_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterServer2Request_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterServer2Request_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterServer2Response_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterServer2Response_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterServer2Response_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ChannelSecurityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ChannelSecurityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ChannelSecurityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId OpenSecureChannelRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.OpenSecureChannelRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId OpenSecureChannelResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.OpenSecureChannelResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CloseSecureChannelRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CloseSecureChannelRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CloseSecureChannelResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CloseSecureChannelResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SignedSoftwareCertificate_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SignedSoftwareCertificate_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SignatureData_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SignatureData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SignatureData_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateSessionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateSessionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateSessionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateSessionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UserIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UserIdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UserIdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AnonymousIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AnonymousIdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AnonymousIdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UserNameIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UserNameIdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UserNameIdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the X509IdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId X509IdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.X509IdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the IssuedIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId IssuedIdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.IssuedIdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ActivateSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ActivateSessionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ActivateSessionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ActivateSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ActivateSessionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ActivateSessionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CloseSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CloseSessionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CloseSessionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CloseSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CloseSessionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CloseSessionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CancelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CancelRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CancelRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CancelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CancelResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CancelResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NodeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NodeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NodeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ObjectAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ObjectAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ObjectAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the VariableAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId VariableAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.VariableAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MethodAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MethodAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MethodAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ObjectTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ObjectTypeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ObjectTypeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the VariableTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId VariableTypeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.VariableTypeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReferenceTypeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReferenceTypeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataTypeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataTypeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ViewAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ViewAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ViewAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddNodesItem_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddNodesItem_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddNodesItem_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddNodesResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddNodesResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddNodesResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddNodesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddNodesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddNodesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddNodesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddReferencesItem_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddReferencesItem_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddReferencesItem_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddReferencesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddReferencesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddReferencesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddReferencesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddReferencesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddReferencesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteNodesItem_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteNodesItem_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteNodesItem_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteNodesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteNodesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteNodesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteNodesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteReferencesItem_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesItem_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteReferencesItem_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteReferencesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteReferencesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteReferencesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteReferencesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ViewDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ViewDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ViewDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReferenceDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReferenceDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReferenceDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseNextRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseNextRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseNextRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseNextResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseNextResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseNextResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RelativePathElement_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RelativePathElement_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RelativePathElement_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RelativePath_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RelativePath_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RelativePath_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowsePath_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowsePath_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowsePath_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowsePathTarget_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowsePathTarget_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowsePathTarget_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowsePathResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowsePathResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowsePathResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterNodesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterNodesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterNodesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterNodesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UnregisterNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UnregisterNodesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UnregisterNodesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UnregisterNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UnregisterNodesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UnregisterNodesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EndpointConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EndpointConfiguration_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EndpointConfiguration_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryDataDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryDataDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryDataDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NodeTypeDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NodeTypeDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NodeTypeDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryDataSet_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryDataSet_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryDataSet_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NodeReference_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NodeReference_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NodeReference_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ContentFilterElement_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ContentFilterElement_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ContentFilterElement_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ContentFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ContentFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ContentFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the FilterOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId FilterOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FilterOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ElementOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ElementOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ElementOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the LiteralOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId LiteralOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.LiteralOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AttributeOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AttributeOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AttributeOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SimpleAttributeOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SimpleAttributeOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SimpleAttributeOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ContentFilterElementResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ContentFilterElementResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ContentFilterElementResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ContentFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ContentFilterResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ContentFilterResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ParsingResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ParsingResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ParsingResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryFirstRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryFirstRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryFirstRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryFirstResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryFirstResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryFirstResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryNextRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryNextRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryNextRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryNextResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryNextResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryNextResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadValueId_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadValueId_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadValueId_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadValueId_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadValueId_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadValueId_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadEventDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadEventDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadRawModifiedDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadRawModifiedDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadProcessedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadProcessedDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadProcessedDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadAtTimeDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadAtTimeDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadAtTimeDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryData_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryData_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModificationInfo_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModificationInfo_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModificationInfo_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryModifiedData_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryModifiedData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryModifiedData_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryEvent_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryEvent_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryEvent_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the WriteValue_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId WriteValue_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.WriteValue_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the WriteRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId WriteRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.WriteRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the WriteResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId WriteResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.WriteResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryUpdateDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryUpdateDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UpdateDataDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UpdateDataDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UpdateDataDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UpdateStructureDataDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UpdateStructureDataDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UpdateStructureDataDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UpdateEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UpdateEventDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UpdateEventDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteRawModifiedDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteRawModifiedDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteAtTimeDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteAtTimeDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteEventDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteEventDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryUpdateResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryUpdateResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryUpdateRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryUpdateRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryUpdateResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryUpdateResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CallMethodRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CallMethodRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CallMethodRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CallMethodResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CallMethodResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CallMethodResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CallRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CallRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CallRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CallResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CallResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CallResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoringFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoringFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoringFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataChangeFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataChangeFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataChangeFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EventFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EventFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EventFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AggregateConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AggregateConfiguration_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AggregateConfiguration_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AggregateFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AggregateFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AggregateFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoringFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoringFilterResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoringFilterResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EventFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EventFilterResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EventFilterResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AggregateFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AggregateFilterResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AggregateFilterResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoringParameters_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoringParameters_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoringParameters_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemCreateRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemCreateResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemModifyRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemModifyResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetMonitoringModeRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetMonitoringModeRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetMonitoringModeResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetMonitoringModeResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetTriggeringRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetTriggeringRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetTriggeringRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetTriggeringResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetTriggeringResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetTriggeringResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateSubscriptionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateSubscriptionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateSubscriptionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateSubscriptionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModifySubscriptionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModifySubscriptionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModifySubscriptionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModifySubscriptionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetPublishingModeRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetPublishingModeRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetPublishingModeRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetPublishingModeResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetPublishingModeResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetPublishingModeResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NotificationMessage_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NotificationMessage_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NotificationMessage_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NotificationData_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NotificationData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NotificationData_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataChangeNotification_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataChangeNotification_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataChangeNotification_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemNotification_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemNotification_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemNotification_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EventNotificationList_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EventNotificationList_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EventNotificationList_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EventFieldList_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EventFieldList_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EventFieldList_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryEventFieldList_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryEventFieldList_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryEventFieldList_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the StatusChangeNotification_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId StatusChangeNotification_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StatusChangeNotification_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SubscriptionAcknowledgement_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SubscriptionAcknowledgement_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the PublishRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId PublishRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the PublishResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId PublishResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RepublishRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RepublishRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RepublishRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RepublishResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RepublishResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RepublishResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TransferResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TransferResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TransferResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TransferSubscriptionsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TransferSubscriptionsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BuildInfo_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BuildInfo_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BuildInfo_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RedundantServerDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RedundantServerDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RedundantServerDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EndpointUrlListDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EndpointUrlListDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EndpointUrlListDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NetworkGroupDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NetworkGroupDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NetworkGroupDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServerDiagnosticsSummaryDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ServerStatusDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ServerStatusDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServerStatusDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SessionDiagnosticsDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SessionSecurityDiagnosticsDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ServiceCounterDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ServiceCounterDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServiceCounterDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the StatusResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId StatusResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StatusResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SubscriptionDiagnosticsDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModelChangeStructureDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModelChangeStructureDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SemanticChangeStructureDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SemanticChangeStructureDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the Range_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId Range_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Range_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EUInformation_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EUInformation_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EUInformation_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ComplexNumberType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ComplexNumberType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ComplexNumberType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DoubleComplexNumberType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DoubleComplexNumberType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DoubleComplexNumberType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AxisInformation_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AxisInformation_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AxisInformation_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the XVType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId XVType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.XVType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ProgramDiagnosticDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the Annotation_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId Annotation_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Annotation_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TrustListDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TrustListDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TrustListDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataTypeDefinition_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataTypeDefinition_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataTypeDefinition_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the StructureDefinition_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId StructureDefinition_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StructureDefinition_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EnumDefinition_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EnumDefinition_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EnumDefinition_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the StructureField_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId StructureField_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StructureField_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the IdentityMappingRuleType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId IdentityMappingRuleType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.IdentityMappingRuleType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ApplicationPermissionRuleType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ApplicationPermissionRuleType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ApplicationPermissionRuleType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ConfigurationVersionDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ConfigurationVersionDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ConfigurationVersionDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataSetMetaDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataSetMetaDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataSetMetaDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the FieldMetaData_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId FieldMetaData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FieldMetaData_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataTypeDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataTypeDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataTypeDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the StructureDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId StructureDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StructureDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EnumDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EnumDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EnumDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the KeyValuePair_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId KeyValuePair_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.KeyValuePair_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the PublishedVariableDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId PublishedVariableDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishedVariableDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataConnectionDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataConnectionDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataConnectionDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the Node_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId Node_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Node_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the InstanceNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId InstanceNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.InstanceNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TypeNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ObjectNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ObjectNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ObjectNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ObjectTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ObjectTypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ObjectTypeNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the VariableNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId VariableNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.VariableNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the VariableTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId VariableTypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.VariableTypeNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReferenceTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReferenceTypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReferenceTypeNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MethodNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MethodNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MethodNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ViewNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ViewNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ViewNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataTypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataTypeNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReferenceNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReferenceNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReferenceNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the Argument_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId Argument_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Argument_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EnumValueType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EnumValueType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EnumValueType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EnumField_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EnumField_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EnumField_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the OptionSet_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId OptionSet_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.OptionSet_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the Union_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId Union_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Union_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TimeZoneDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TimeZoneDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TimeZoneDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ApplicationDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ApplicationDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ApplicationDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RequestHeader_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RequestHeader_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RequestHeader_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ResponseHeader_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ResponseHeader_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ResponseHeader_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ServiceFault_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ServiceFault_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServiceFault_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SessionLessServiceMessageType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SessionLessServiceMessageType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SessionLessServiceMessageType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the FindServersRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId FindServersRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FindServersRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the FindServersResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId FindServersResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FindServersResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ServerOnNetwork_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ServerOnNetwork_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServerOnNetwork_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the FindServersOnNetworkRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId FindServersOnNetworkRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FindServersOnNetworkRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the FindServersOnNetworkResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId FindServersOnNetworkResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FindServersOnNetworkResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UserTokenPolicy_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UserTokenPolicy_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UserTokenPolicy_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EndpointDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EndpointDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EndpointDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the GetEndpointsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId GetEndpointsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.GetEndpointsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the GetEndpointsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId GetEndpointsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.GetEndpointsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisteredServer_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisteredServer_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisteredServer_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterServerRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterServerRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterServerRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterServerResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterServerResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterServerResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DiscoveryConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DiscoveryConfiguration_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DiscoveryConfiguration_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MdnsDiscoveryConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MdnsDiscoveryConfiguration_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MdnsDiscoveryConfiguration_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterServer2Request_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterServer2Request_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterServer2Request_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterServer2Response_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterServer2Response_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterServer2Response_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ChannelSecurityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ChannelSecurityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ChannelSecurityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId OpenSecureChannelRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.OpenSecureChannelRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId OpenSecureChannelResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.OpenSecureChannelResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CloseSecureChannelRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CloseSecureChannelRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CloseSecureChannelResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CloseSecureChannelResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SignedSoftwareCertificate_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SignedSoftwareCertificate_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SignatureData_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SignatureData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SignatureData_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateSessionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateSessionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateSessionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateSessionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UserIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UserIdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UserIdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AnonymousIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AnonymousIdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AnonymousIdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UserNameIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UserNameIdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UserNameIdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the X509IdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId X509IdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.X509IdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the IssuedIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId IssuedIdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.IssuedIdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ActivateSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ActivateSessionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ActivateSessionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ActivateSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ActivateSessionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ActivateSessionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CloseSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CloseSessionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CloseSessionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CloseSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CloseSessionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CloseSessionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CancelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CancelRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CancelRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CancelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CancelResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CancelResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NodeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NodeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NodeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ObjectAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ObjectAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ObjectAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the VariableAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId VariableAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.VariableAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MethodAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MethodAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MethodAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ObjectTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ObjectTypeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ObjectTypeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the VariableTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId VariableTypeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.VariableTypeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReferenceTypeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReferenceTypeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataTypeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataTypeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ViewAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ViewAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ViewAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddNodesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddNodesItem_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddNodesItem_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddNodesResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddNodesResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddNodesResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddNodesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddNodesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddNodesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddNodesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddReferencesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddReferencesItem_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddReferencesItem_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddReferencesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddReferencesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddReferencesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddReferencesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddReferencesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddReferencesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteNodesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteNodesItem_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteNodesItem_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteNodesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteNodesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteNodesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteNodesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteReferencesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesItem_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteReferencesItem_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteReferencesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteReferencesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteReferencesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteReferencesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ViewDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ViewDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ViewDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReferenceDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReferenceDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReferenceDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseNextRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseNextRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseNextRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseNextResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseNextResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseNextResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RelativePathElement_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RelativePathElement_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RelativePathElement_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RelativePath_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RelativePath_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RelativePath_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowsePath_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowsePath_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowsePath_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowsePathTarget_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowsePathTarget_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowsePathTarget_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowsePathResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowsePathResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowsePathResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterNodesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterNodesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterNodesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterNodesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UnregisterNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UnregisterNodesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UnregisterNodesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UnregisterNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UnregisterNodesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UnregisterNodesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EndpointConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EndpointConfiguration_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EndpointConfiguration_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryDataDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryDataDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryDataDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NodeTypeDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NodeTypeDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NodeTypeDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryDataSet_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryDataSet_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryDataSet_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NodeReference_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NodeReference_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NodeReference_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ContentFilterElement_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ContentFilterElement_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ContentFilterElement_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ContentFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ContentFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ContentFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the FilterOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId FilterOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FilterOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ElementOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ElementOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ElementOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the LiteralOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId LiteralOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.LiteralOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AttributeOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AttributeOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AttributeOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SimpleAttributeOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SimpleAttributeOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SimpleAttributeOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ContentFilterElementResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ContentFilterElementResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ContentFilterElementResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ContentFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ContentFilterResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ContentFilterResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ParsingResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ParsingResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ParsingResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryFirstRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryFirstRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryFirstRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryFirstResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryFirstResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryFirstResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryNextRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryNextRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryNextRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryNextResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryNextResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryNextResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadValueId_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadValueId_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadValueId_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadValueId_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadValueId_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadValueId_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadEventDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadEventDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadRawModifiedDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadRawModifiedDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadProcessedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadProcessedDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadProcessedDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadAtTimeDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadAtTimeDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadAtTimeDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryData_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryData_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModificationInfo_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModificationInfo_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModificationInfo_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryModifiedData_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryModifiedData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryModifiedData_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryEvent_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryEvent_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryEvent_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the WriteValue_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId WriteValue_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.WriteValue_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the WriteRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId WriteRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.WriteRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the WriteResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId WriteResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.WriteResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryUpdateDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryUpdateDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UpdateDataDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UpdateDataDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UpdateDataDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UpdateStructureDataDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UpdateStructureDataDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UpdateStructureDataDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UpdateEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UpdateEventDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UpdateEventDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteRawModifiedDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteRawModifiedDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteAtTimeDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteAtTimeDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteEventDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteEventDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryUpdateResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryUpdateResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryUpdateRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryUpdateRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryUpdateResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryUpdateResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CallMethodRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CallMethodRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CallMethodRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CallMethodResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CallMethodResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CallMethodResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CallRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CallRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CallRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CallResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CallResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CallResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoringFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoringFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoringFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataChangeFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataChangeFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataChangeFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EventFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EventFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EventFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AggregateConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AggregateConfiguration_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AggregateConfiguration_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AggregateFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AggregateFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AggregateFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoringFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoringFilterResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoringFilterResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EventFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EventFilterResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EventFilterResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AggregateFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AggregateFilterResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AggregateFilterResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoringParameters_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoringParameters_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoringParameters_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemCreateRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemCreateResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemModifyRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemModifyResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetMonitoringModeRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetMonitoringModeRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetMonitoringModeResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetMonitoringModeResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetTriggeringRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetTriggeringRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetTriggeringRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetTriggeringResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetTriggeringResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetTriggeringResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateSubscriptionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateSubscriptionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateSubscriptionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateSubscriptionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModifySubscriptionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModifySubscriptionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModifySubscriptionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModifySubscriptionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetPublishingModeRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetPublishingModeRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetPublishingModeRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetPublishingModeResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetPublishingModeResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetPublishingModeResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NotificationMessage_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NotificationMessage_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NotificationMessage_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NotificationData_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NotificationData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NotificationData_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataChangeNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataChangeNotification_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataChangeNotification_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemNotification_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemNotification_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EventNotificationList_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EventNotificationList_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EventNotificationList_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EventFieldList_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EventFieldList_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EventFieldList_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryEventFieldList_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryEventFieldList_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryEventFieldList_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the StatusChangeNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId StatusChangeNotification_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StatusChangeNotification_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SubscriptionAcknowledgement_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SubscriptionAcknowledgement_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the PublishRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId PublishRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the PublishResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId PublishResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RepublishRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RepublishRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RepublishRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RepublishResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RepublishResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RepublishResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TransferResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TransferResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TransferResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TransferSubscriptionsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TransferSubscriptionsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BuildInfo_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BuildInfo_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BuildInfo_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RedundantServerDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RedundantServerDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RedundantServerDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EndpointUrlListDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EndpointUrlListDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EndpointUrlListDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NetworkGroupDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NetworkGroupDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NetworkGroupDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ServerStatusDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ServerStatusDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServerStatusDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SessionDiagnosticsDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ServiceCounterDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ServiceCounterDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServiceCounterDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the StatusResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId StatusResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StatusResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SubscriptionDiagnosticsDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModelChangeStructureDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModelChangeStructureDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SemanticChangeStructureDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SemanticChangeStructureDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the Range_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId Range_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Range_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EUInformation_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EUInformation_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EUInformation_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ComplexNumberType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ComplexNumberType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ComplexNumberType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DoubleComplexNumberType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DoubleComplexNumberType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DoubleComplexNumberType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AxisInformation_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AxisInformation_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AxisInformation_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the XVType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId XVType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.XVType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ProgramDiagnosticDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the Annotation_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId Annotation_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Annotation_Encoding_DefaultBinary);
    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectTypeIds
    {
        /// <summary>
        /// The identifier for the BaseObjectType ObjectType.
        /// </summary>
        public static readonly NodeId BaseObjectType = new NodeId(Opc.Ua.ObjectTypes.BaseObjectType);

        /// <summary>
        /// The identifier for the FolderType ObjectType.
        /// </summary>
        public static readonly NodeId FolderType = new NodeId(Opc.Ua.ObjectTypes.FolderType);

        /// <summary>
        /// The identifier for the DataTypeSystemType ObjectType.
        /// </summary>
        public static readonly NodeId DataTypeSystemType = new NodeId(Opc.Ua.ObjectTypes.DataTypeSystemType);

        /// <summary>
        /// The identifier for the DataTypeEncodingType ObjectType.
        /// </summary>
        public static readonly NodeId DataTypeEncodingType = new NodeId(Opc.Ua.ObjectTypes.DataTypeEncodingType);

        /// <summary>
        /// The identifier for the ModellingRuleType ObjectType.
        /// </summary>
        public static readonly NodeId ModellingRuleType = new NodeId(Opc.Ua.ObjectTypes.ModellingRuleType);

        /// <summary>
        /// The identifier for the ServerType ObjectType.
        /// </summary>
        public static readonly NodeId ServerType = new NodeId(Opc.Ua.ObjectTypes.ServerType);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType ObjectType.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType = new NodeId(Opc.Ua.ObjectTypes.ServerCapabilitiesType);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType ObjectType.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType = new NodeId(Opc.Ua.ObjectTypes.ServerDiagnosticsType);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType ObjectType.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType = new NodeId(Opc.Ua.ObjectTypes.SessionsDiagnosticsSummaryType);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType ObjectType.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType = new NodeId(Opc.Ua.ObjectTypes.SessionDiagnosticsObjectType);

        /// <summary>
        /// The identifier for the VendorServerInfoType ObjectType.
        /// </summary>
        public static readonly NodeId VendorServerInfoType = new NodeId(Opc.Ua.ObjectTypes.VendorServerInfoType);

        /// <summary>
        /// The identifier for the ServerRedundancyType ObjectType.
        /// </summary>
        public static readonly NodeId ServerRedundancyType = new NodeId(Opc.Ua.ObjectTypes.ServerRedundancyType);

        /// <summary>
        /// The identifier for the TransparentRedundancyType ObjectType.
        /// </summary>
        public static readonly NodeId TransparentRedundancyType = new NodeId(Opc.Ua.ObjectTypes.TransparentRedundancyType);

        /// <summary>
        /// The identifier for the NonTransparentRedundancyType ObjectType.
        /// </summary>
        public static readonly NodeId NonTransparentRedundancyType = new NodeId(Opc.Ua.ObjectTypes.NonTransparentRedundancyType);

        /// <summary>
        /// The identifier for the NonTransparentNetworkRedundancyType ObjectType.
        /// </summary>
        public static readonly NodeId NonTransparentNetworkRedundancyType = new NodeId(Opc.Ua.ObjectTypes.NonTransparentNetworkRedundancyType);

        /// <summary>
        /// The identifier for the OperationLimitsType ObjectType.
        /// </summary>
        public static readonly NodeId OperationLimitsType = new NodeId(Opc.Ua.ObjectTypes.OperationLimitsType);

        /// <summary>
        /// The identifier for the FileType ObjectType.
        /// </summary>
        public static readonly NodeId FileType = new NodeId(Opc.Ua.ObjectTypes.FileType);

        /// <summary>
        /// The identifier for the FileDirectoryType ObjectType.
        /// </summary>
        public static readonly NodeId FileDirectoryType = new NodeId(Opc.Ua.ObjectTypes.FileDirectoryType);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType ObjectType.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType = new NodeId(Opc.Ua.ObjectTypes.TemporaryFileTransferType);

        /// <summary>
        /// The identifier for the AddressSpaceFileType ObjectType.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType = new NodeId(Opc.Ua.ObjectTypes.AddressSpaceFileType);

        /// <summary>
        /// The identifier for the NamespaceMetadataType ObjectType.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType = new NodeId(Opc.Ua.ObjectTypes.NamespaceMetadataType);

        /// <summary>
        /// The identifier for the NamespacesType ObjectType.
        /// </summary>
        public static readonly NodeId NamespacesType = new NodeId(Opc.Ua.ObjectTypes.NamespacesType);

        /// <summary>
        /// The identifier for the BaseEventType ObjectType.
        /// </summary>
        public static readonly NodeId BaseEventType = new NodeId(Opc.Ua.ObjectTypes.BaseEventType);

        /// <summary>
        /// The identifier for the AuditEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditEventType = new NodeId(Opc.Ua.ObjectTypes.AuditEventType);

        /// <summary>
        /// The identifier for the AuditSecurityEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditSecurityEventType = new NodeId(Opc.Ua.ObjectTypes.AuditSecurityEventType);

        /// <summary>
        /// The identifier for the AuditChannelEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditChannelEventType = new NodeId(Opc.Ua.ObjectTypes.AuditChannelEventType);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType = new NodeId(Opc.Ua.ObjectTypes.AuditOpenSecureChannelEventType);

        /// <summary>
        /// The identifier for the AuditSessionEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditSessionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditSessionEventType);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCreateSessionEventType);

        /// <summary>
        /// The identifier for the AuditUrlMismatchEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditUrlMismatchEventType = new NodeId(Opc.Ua.ObjectTypes.AuditUrlMismatchEventType);

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditActivateSessionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditActivateSessionEventType);

        /// <summary>
        /// The identifier for the AuditCancelEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCancelEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCancelEventType);

        /// <summary>
        /// The identifier for the AuditCertificateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateEventType);

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateDataMismatchEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateDataMismatchEventType);

        /// <summary>
        /// The identifier for the AuditCertificateExpiredEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateExpiredEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateExpiredEventType);

        /// <summary>
        /// The identifier for the AuditCertificateInvalidEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateInvalidEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateInvalidEventType);

        /// <summary>
        /// The identifier for the AuditCertificateUntrustedEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateUntrustedEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateUntrustedEventType);

        /// <summary>
        /// The identifier for the AuditCertificateRevokedEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateRevokedEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateRevokedEventType);

        /// <summary>
        /// The identifier for the AuditCertificateMismatchEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateMismatchEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateMismatchEventType);

        /// <summary>
        /// The identifier for the AuditNodeManagementEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditNodeManagementEventType = new NodeId(Opc.Ua.ObjectTypes.AuditNodeManagementEventType);

        /// <summary>
        /// The identifier for the AuditAddNodesEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditAddNodesEventType = new NodeId(Opc.Ua.ObjectTypes.AuditAddNodesEventType);

        /// <summary>
        /// The identifier for the AuditDeleteNodesEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditDeleteNodesEventType = new NodeId(Opc.Ua.ObjectTypes.AuditDeleteNodesEventType);

        /// <summary>
        /// The identifier for the AuditAddReferencesEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditAddReferencesEventType = new NodeId(Opc.Ua.ObjectTypes.AuditAddReferencesEventType);

        /// <summary>
        /// The identifier for the AuditDeleteReferencesEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditDeleteReferencesEventType = new NodeId(Opc.Ua.ObjectTypes.AuditDeleteReferencesEventType);

        /// <summary>
        /// The identifier for the AuditUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditUpdateEventType);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditWriteUpdateEventType);

        /// <summary>
        /// The identifier for the AuditHistoryUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryUpdateEventType);

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditUpdateMethodEventType = new NodeId(Opc.Ua.ObjectTypes.AuditUpdateMethodEventType);

        /// <summary>
        /// The identifier for the SystemEventType ObjectType.
        /// </summary>
        public static readonly NodeId SystemEventType = new NodeId(Opc.Ua.ObjectTypes.SystemEventType);

        /// <summary>
        /// The identifier for the DeviceFailureEventType ObjectType.
        /// </summary>
        public static readonly NodeId DeviceFailureEventType = new NodeId(Opc.Ua.ObjectTypes.DeviceFailureEventType);

        /// <summary>
        /// The identifier for the SystemStatusChangeEventType ObjectType.
        /// </summary>
        public static readonly NodeId SystemStatusChangeEventType = new NodeId(Opc.Ua.ObjectTypes.SystemStatusChangeEventType);

        /// <summary>
        /// The identifier for the BaseModelChangeEventType ObjectType.
        /// </summary>
        public static readonly NodeId BaseModelChangeEventType = new NodeId(Opc.Ua.ObjectTypes.BaseModelChangeEventType);

        /// <summary>
        /// The identifier for the GeneralModelChangeEventType ObjectType.
        /// </summary>
        public static readonly NodeId GeneralModelChangeEventType = new NodeId(Opc.Ua.ObjectTypes.GeneralModelChangeEventType);

        /// <summary>
        /// The identifier for the SemanticChangeEventType ObjectType.
        /// </summary>
        public static readonly NodeId SemanticChangeEventType = new NodeId(Opc.Ua.ObjectTypes.SemanticChangeEventType);

        /// <summary>
        /// The identifier for the EventQueueOverflowEventType ObjectType.
        /// </summary>
        public static readonly NodeId EventQueueOverflowEventType = new NodeId(Opc.Ua.ObjectTypes.EventQueueOverflowEventType);

        /// <summary>
        /// The identifier for the ProgressEventType ObjectType.
        /// </summary>
        public static readonly NodeId ProgressEventType = new NodeId(Opc.Ua.ObjectTypes.ProgressEventType);

        /// <summary>
        /// The identifier for the AggregateFunctionType ObjectType.
        /// </summary>
        public static readonly NodeId AggregateFunctionType = new NodeId(Opc.Ua.ObjectTypes.AggregateFunctionType);

        /// <summary>
        /// The identifier for the StateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId StateMachineType = new NodeId(Opc.Ua.ObjectTypes.StateMachineType);

        /// <summary>
        /// The identifier for the FiniteStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId FiniteStateMachineType = new NodeId(Opc.Ua.ObjectTypes.FiniteStateMachineType);

        /// <summary>
        /// The identifier for the StateType ObjectType.
        /// </summary>
        public static readonly NodeId StateType = new NodeId(Opc.Ua.ObjectTypes.StateType);

        /// <summary>
        /// The identifier for the InitialStateType ObjectType.
        /// </summary>
        public static readonly NodeId InitialStateType = new NodeId(Opc.Ua.ObjectTypes.InitialStateType);

        /// <summary>
        /// The identifier for the TransitionType ObjectType.
        /// </summary>
        public static readonly NodeId TransitionType = new NodeId(Opc.Ua.ObjectTypes.TransitionType);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType = new NodeId(Opc.Ua.ObjectTypes.FileTransferStateMachineType);

        /// <summary>
        /// The identifier for the TransitionEventType ObjectType.
        /// </summary>
        public static readonly NodeId TransitionEventType = new NodeId(Opc.Ua.ObjectTypes.TransitionEventType);

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditUpdateStateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditUpdateStateEventType);

        /// <summary>
        /// The identifier for the ConditionType ObjectType.
        /// </summary>
        public static readonly NodeId ConditionType = new NodeId(Opc.Ua.ObjectTypes.ConditionType);

        /// <summary>
        /// The identifier for the DialogConditionType ObjectType.
        /// </summary>
        public static readonly NodeId DialogConditionType = new NodeId(Opc.Ua.ObjectTypes.DialogConditionType);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType ObjectType.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType = new NodeId(Opc.Ua.ObjectTypes.AcknowledgeableConditionType);

        /// <summary>
        /// The identifier for the AlarmConditionType ObjectType.
        /// </summary>
        public static readonly NodeId AlarmConditionType = new NodeId(Opc.Ua.ObjectTypes.AlarmConditionType);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType = new NodeId(Opc.Ua.ObjectTypes.ShelvedStateMachineType);

        /// <summary>
        /// The identifier for the LimitAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId LimitAlarmType = new NodeId(Opc.Ua.ObjectTypes.LimitAlarmType);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveLimitStateMachineType);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveLimitAlarmType);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType = new NodeId(Opc.Ua.ObjectTypes.NonExclusiveLimitAlarmType);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType = new NodeId(Opc.Ua.ObjectTypes.NonExclusiveLevelAlarmType);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveLevelAlarmType);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType = new NodeId(Opc.Ua.ObjectTypes.NonExclusiveDeviationAlarmType);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveDeviationAlarmType);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType = new NodeId(Opc.Ua.ObjectTypes.NonExclusiveRateOfChangeAlarmType);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveRateOfChangeAlarmType);

        /// <summary>
        /// The identifier for the DiscreteAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType = new NodeId(Opc.Ua.ObjectTypes.DiscreteAlarmType);

        /// <summary>
        /// The identifier for the OffNormalAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType = new NodeId(Opc.Ua.ObjectTypes.OffNormalAlarmType);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType = new NodeId(Opc.Ua.ObjectTypes.SystemOffNormalAlarmType);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType = new NodeId(Opc.Ua.ObjectTypes.CertificateExpirationAlarmType);

        /// <summary>
        /// The identifier for the TripAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId TripAlarmType = new NodeId(Opc.Ua.ObjectTypes.TripAlarmType);

        /// <summary>
        /// The identifier for the BaseConditionClassType ObjectType.
        /// </summary>
        public static readonly NodeId BaseConditionClassType = new NodeId(Opc.Ua.ObjectTypes.BaseConditionClassType);

        /// <summary>
        /// The identifier for the ProcessConditionClassType ObjectType.
        /// </summary>
        public static readonly NodeId ProcessConditionClassType = new NodeId(Opc.Ua.ObjectTypes.ProcessConditionClassType);

        /// <summary>
        /// The identifier for the MaintenanceConditionClassType ObjectType.
        /// </summary>
        public static readonly NodeId MaintenanceConditionClassType = new NodeId(Opc.Ua.ObjectTypes.MaintenanceConditionClassType);

        /// <summary>
        /// The identifier for the SystemConditionClassType ObjectType.
        /// </summary>
        public static readonly NodeId SystemConditionClassType = new NodeId(Opc.Ua.ObjectTypes.SystemConditionClassType);

        /// <summary>
        /// The identifier for the AuditConditionEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionEventType);

        /// <summary>
        /// The identifier for the AuditConditionEnableEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionEnableEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionEnableEventType);

        /// <summary>
        /// The identifier for the AuditConditionCommentEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionCommentEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionCommentEventType);

        /// <summary>
        /// The identifier for the AuditConditionRespondEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionRespondEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionRespondEventType);

        /// <summary>
        /// The identifier for the AuditConditionAcknowledgeEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionAcknowledgeEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionAcknowledgeEventType);

        /// <summary>
        /// The identifier for the AuditConditionConfirmEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionConfirmEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionConfirmEventType);

        /// <summary>
        /// The identifier for the AuditConditionShelvingEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionShelvingEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionShelvingEventType);

        /// <summary>
        /// The identifier for the RefreshStartEventType ObjectType.
        /// </summary>
        public static readonly NodeId RefreshStartEventType = new NodeId(Opc.Ua.ObjectTypes.RefreshStartEventType);

        /// <summary>
        /// The identifier for the RefreshEndEventType ObjectType.
        /// </summary>
        public static readonly NodeId RefreshEndEventType = new NodeId(Opc.Ua.ObjectTypes.RefreshEndEventType);

        /// <summary>
        /// The identifier for the RefreshRequiredEventType ObjectType.
        /// </summary>
        public static readonly NodeId RefreshRequiredEventType = new NodeId(Opc.Ua.ObjectTypes.RefreshRequiredEventType);

        /// <summary>
        /// The identifier for the ProgramStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType = new NodeId(Opc.Ua.ObjectTypes.ProgramStateMachineType);

        /// <summary>
        /// The identifier for the ProgramTransitionEventType ObjectType.
        /// </summary>
        public static readonly NodeId ProgramTransitionEventType = new NodeId(Opc.Ua.ObjectTypes.ProgramTransitionEventType);

        /// <summary>
        /// The identifier for the AuditProgramTransitionEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditProgramTransitionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditProgramTransitionEventType);

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType ObjectType.
        /// </summary>
        public static readonly NodeId ProgramTransitionAuditEventType = new NodeId(Opc.Ua.ObjectTypes.ProgramTransitionAuditEventType);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType ObjectType.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType = new NodeId(Opc.Ua.ObjectTypes.HistoricalDataConfigurationType);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType ObjectType.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType = new NodeId(Opc.Ua.ObjectTypes.HistoryServerCapabilitiesType);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryEventUpdateEventType);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryValueUpdateEventType);

        /// <summary>
        /// The identifier for the AuditHistoryDeleteEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryDeleteEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryDeleteEventType);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryRawModifyDeleteEventType);

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryAtTimeDeleteEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryAtTimeDeleteEventType);

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryEventDeleteEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryEventDeleteEventType);

        /// <summary>
        /// The identifier for the TrustListType ObjectType.
        /// </summary>
        public static readonly NodeId TrustListType = new NodeId(Opc.Ua.ObjectTypes.TrustListType);

        /// <summary>
        /// The identifier for the CertificateGroupType ObjectType.
        /// </summary>
        public static readonly NodeId CertificateGroupType = new NodeId(Opc.Ua.ObjectTypes.CertificateGroupType);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType ObjectType.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType = new NodeId(Opc.Ua.ObjectTypes.CertificateGroupFolderType);

        /// <summary>
        /// The identifier for the CertificateType ObjectType.
        /// </summary>
        public static readonly NodeId CertificateType = new NodeId(Opc.Ua.ObjectTypes.CertificateType);

        /// <summary>
        /// The identifier for the ApplicationCertificateType ObjectType.
        /// </summary>
        public static readonly NodeId ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.ApplicationCertificateType);

        /// <summary>
        /// The identifier for the HttpsCertificateType ObjectType.
        /// </summary>
        public static readonly NodeId HttpsCertificateType = new NodeId(Opc.Ua.ObjectTypes.HttpsCertificateType);

        /// <summary>
        /// The identifier for the RsaMinApplicationCertificateType ObjectType.
        /// </summary>
        public static readonly NodeId RsaMinApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.RsaMinApplicationCertificateType);

        /// <summary>
        /// The identifier for the RsaSha256ApplicationCertificateType ObjectType.
        /// </summary>
        public static readonly NodeId RsaSha256ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.RsaSha256ApplicationCertificateType);

        /// <summary>
        /// The identifier for the TrustListUpdatedAuditEventType ObjectType.
        /// </summary>
        public static readonly NodeId TrustListUpdatedAuditEventType = new NodeId(Opc.Ua.ObjectTypes.TrustListUpdatedAuditEventType);

        /// <summary>
        /// The identifier for the ServerConfigurationType ObjectType.
        /// </summary>
        public static readonly NodeId ServerConfigurationType = new NodeId(Opc.Ua.ObjectTypes.ServerConfigurationType);

        /// <summary>
        /// The identifier for the CertificateUpdatedAuditEventType ObjectType.
        /// </summary>
        public static readonly NodeId CertificateUpdatedAuditEventType = new NodeId(Opc.Ua.ObjectTypes.CertificateUpdatedAuditEventType);

        /// <summary>
        /// The identifier for the AggregateConfigurationType ObjectType.
        /// </summary>
        public static readonly NodeId AggregateConfigurationType = new NodeId(Opc.Ua.ObjectTypes.AggregateConfigurationType);

        /// <summary>
        /// The identifier for the RoleFolderType ObjectType.
        /// </summary>
        public static readonly NodeId RoleFolderType = new NodeId(Opc.Ua.ObjectTypes.RoleFolderType);

        /// <summary>
        /// The identifier for the RoleType ObjectType.
        /// </summary>
        public static readonly NodeId RoleType = new NodeId(Opc.Ua.ObjectTypes.RoleType);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType ObjectType.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType = new NodeId(Opc.Ua.ObjectTypes.PubSubKeyServiceType);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType ObjectType.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType = new NodeId(Opc.Ua.ObjectTypes.SecurityGroupFolderType);

        /// <summary>
        /// The identifier for the SecurityGroupType ObjectType.
        /// </summary>
        public static readonly NodeId SecurityGroupType = new NodeId(Opc.Ua.ObjectTypes.SecurityGroupType);

        /// <summary>
        /// The identifier for the PublishSubscribeType ObjectType.
        /// </summary>
        public static readonly NodeId PublishSubscribeType = new NodeId(Opc.Ua.ObjectTypes.PublishSubscribeType);

        /// <summary>
        /// The identifier for the PublishedDataSetType ObjectType.
        /// </summary>
        public static readonly NodeId PublishedDataSetType = new NodeId(Opc.Ua.ObjectTypes.PublishedDataSetType);

        /// <summary>
        /// The identifier for the ExtensionFieldsType ObjectType.
        /// </summary>
        public static readonly NodeId ExtensionFieldsType = new NodeId(Opc.Ua.ObjectTypes.ExtensionFieldsType);

        /// <summary>
        /// The identifier for the PublishedDataItemsType ObjectType.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType = new NodeId(Opc.Ua.ObjectTypes.PublishedDataItemsType);

        /// <summary>
        /// The identifier for the PublishedEventsType ObjectType.
        /// </summary>
        public static readonly NodeId PublishedEventsType = new NodeId(Opc.Ua.ObjectTypes.PublishedEventsType);

        /// <summary>
        /// The identifier for the DataSetClassType ObjectType.
        /// </summary>
        public static readonly NodeId DataSetClassType = new NodeId(Opc.Ua.ObjectTypes.DataSetClassType);

        /// <summary>
        /// The identifier for the DataSetFolderType ObjectType.
        /// </summary>
        public static readonly NodeId DataSetFolderType = new NodeId(Opc.Ua.ObjectTypes.DataSetFolderType);

        /// <summary>
        /// The identifier for the PubSubConnectionType ObjectType.
        /// </summary>
        public static readonly NodeId PubSubConnectionType = new NodeId(Opc.Ua.ObjectTypes.PubSubConnectionType);

        /// <summary>
        /// The identifier for the PubSubGroupType ObjectType.
        /// </summary>
        public static readonly NodeId PubSubGroupType = new NodeId(Opc.Ua.ObjectTypes.PubSubGroupType);

        /// <summary>
        /// The identifier for the DataSetWriterType ObjectType.
        /// </summary>
        public static readonly NodeId DataSetWriterType = new NodeId(Opc.Ua.ObjectTypes.DataSetWriterType);

        /// <summary>
        /// The identifier for the DataSetWriterTransportType ObjectType.
        /// </summary>
        public static readonly NodeId DataSetWriterTransportType = new NodeId(Opc.Ua.ObjectTypes.DataSetWriterTransportType);

        /// <summary>
        /// The identifier for the DataSetReaderType ObjectType.
        /// </summary>
        public static readonly NodeId DataSetReaderType = new NodeId(Opc.Ua.ObjectTypes.DataSetReaderType);

        /// <summary>
        /// The identifier for the DataSetReaderTransportType ObjectType.
        /// </summary>
        public static readonly NodeId DataSetReaderTransportType = new NodeId(Opc.Ua.ObjectTypes.DataSetReaderTransportType);

        /// <summary>
        /// The identifier for the SubscribedDataSetType ObjectType.
        /// </summary>
        public static readonly NodeId SubscribedDataSetType = new NodeId(Opc.Ua.ObjectTypes.SubscribedDataSetType);

        /// <summary>
        /// The identifier for the ConnectedVariablesType ObjectType.
        /// </summary>
        public static readonly NodeId ConnectedVariablesType = new NodeId(Opc.Ua.ObjectTypes.ConnectedVariablesType);

        /// <summary>
        /// The identifier for the SubscribedDataSetMirrorType ObjectType.
        /// </summary>
        public static readonly NodeId SubscribedDataSetMirrorType = new NodeId(Opc.Ua.ObjectTypes.SubscribedDataSetMirrorType);

        /// <summary>
        /// The identifier for the PubSubStatusType ObjectType.
        /// </summary>
        public static readonly NodeId PubSubStatusType = new NodeId(Opc.Ua.ObjectTypes.PubSubStatusType);

        /// <summary>
        /// The identifier for the PubSubStatusEventType ObjectType.
        /// </summary>
        public static readonly NodeId PubSubStatusEventType = new NodeId(Opc.Ua.ObjectTypes.PubSubStatusEventType);

        /// <summary>
        /// The identifier for the PubSubTransportLimitsExceedEventType ObjectType.
        /// </summary>
        public static readonly NodeId PubSubTransportLimitsExceedEventType = new NodeId(Opc.Ua.ObjectTypes.PubSubTransportLimitsExceedEventType);

        /// <summary>
        /// The identifier for the PubSubCommunicationFailureEventType ObjectType.
        /// </summary>
        public static readonly NodeId PubSubCommunicationFailureEventType = new NodeId(Opc.Ua.ObjectTypes.PubSubCommunicationFailureEventType);

        /// <summary>
        /// The identifier for the UadpConnectionType ObjectType.
        /// </summary>
        public static readonly NodeId UadpConnectionType = new NodeId(Opc.Ua.ObjectTypes.UadpConnectionType);

        /// <summary>
        /// The identifier for the UadpGroupType ObjectType.
        /// </summary>
        public static readonly NodeId UadpGroupType = new NodeId(Opc.Ua.ObjectTypes.UadpGroupType);

        /// <summary>
        /// The identifier for the UadpWriterTransportType ObjectType.
        /// </summary>
        public static readonly NodeId UadpWriterTransportType = new NodeId(Opc.Ua.ObjectTypes.UadpWriterTransportType);

        /// <summary>
        /// The identifier for the UadpReaderTransportType ObjectType.
        /// </summary>
        public static readonly NodeId UadpReaderTransportType = new NodeId(Opc.Ua.ObjectTypes.UadpReaderTransportType);

        /// <summary>
        /// The identifier for the BrokerConnectionType ObjectType.
        /// </summary>
        public static readonly NodeId BrokerConnectionType = new NodeId(Opc.Ua.ObjectTypes.BrokerConnectionType);

        /// <summary>
        /// The identifier for the BrokerGroupType ObjectType.
        /// </summary>
        public static readonly NodeId BrokerGroupType = new NodeId(Opc.Ua.ObjectTypes.BrokerGroupType);

        /// <summary>
        /// The identifier for the BrokerWriterTransportType ObjectType.
        /// </summary>
        public static readonly NodeId BrokerWriterTransportType = new NodeId(Opc.Ua.ObjectTypes.BrokerWriterTransportType);

        /// <summary>
        /// The identifier for the BrokerReaderTransportType ObjectType.
        /// </summary>
        public static readonly NodeId BrokerReaderTransportType = new NodeId(Opc.Ua.ObjectTypes.BrokerReaderTransportType);
    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ReferenceTypeIds
    {
        /// <summary>
        /// The identifier for the References ReferenceType.
        /// </summary>
        public static readonly NodeId References = new NodeId(Opc.Ua.ReferenceTypes.References);

        /// <summary>
        /// The identifier for the NonHierarchicalReferences ReferenceType.
        /// </summary>
        public static readonly NodeId NonHierarchicalReferences = new NodeId(Opc.Ua.ReferenceTypes.NonHierarchicalReferences);

        /// <summary>
        /// The identifier for the HierarchicalReferences ReferenceType.
        /// </summary>
        public static readonly NodeId HierarchicalReferences = new NodeId(Opc.Ua.ReferenceTypes.HierarchicalReferences);

        /// <summary>
        /// The identifier for the HasChild ReferenceType.
        /// </summary>
        public static readonly NodeId HasChild = new NodeId(Opc.Ua.ReferenceTypes.HasChild);

        /// <summary>
        /// The identifier for the Organizes ReferenceType.
        /// </summary>
        public static readonly NodeId Organizes = new NodeId(Opc.Ua.ReferenceTypes.Organizes);

        /// <summary>
        /// The identifier for the HasEventSource ReferenceType.
        /// </summary>
        public static readonly NodeId HasEventSource = new NodeId(Opc.Ua.ReferenceTypes.HasEventSource);

        /// <summary>
        /// The identifier for the HasModellingRule ReferenceType.
        /// </summary>
        public static readonly NodeId HasModellingRule = new NodeId(Opc.Ua.ReferenceTypes.HasModellingRule);

        /// <summary>
        /// The identifier for the HasEncoding ReferenceType.
        /// </summary>
        public static readonly NodeId HasEncoding = new NodeId(Opc.Ua.ReferenceTypes.HasEncoding);

        /// <summary>
        /// The identifier for the HasDescription ReferenceType.
        /// </summary>
        public static readonly NodeId HasDescription = new NodeId(Opc.Ua.ReferenceTypes.HasDescription);

        /// <summary>
        /// The identifier for the HasTypeDefinition ReferenceType.
        /// </summary>
        public static readonly NodeId HasTypeDefinition = new NodeId(Opc.Ua.ReferenceTypes.HasTypeDefinition);

        /// <summary>
        /// The identifier for the GeneratesEvent ReferenceType.
        /// </summary>
        public static readonly NodeId GeneratesEvent = new NodeId(Opc.Ua.ReferenceTypes.GeneratesEvent);

        /// <summary>
        /// The identifier for the AlwaysGeneratesEvent ReferenceType.
        /// </summary>
        public static readonly NodeId AlwaysGeneratesEvent = new NodeId(Opc.Ua.ReferenceTypes.AlwaysGeneratesEvent);

        /// <summary>
        /// The identifier for the Aggregates ReferenceType.
        /// </summary>
        public static readonly NodeId Aggregates = new NodeId(Opc.Ua.ReferenceTypes.Aggregates);

        /// <summary>
        /// The identifier for the HasSubtype ReferenceType.
        /// </summary>
        public static readonly NodeId HasSubtype = new NodeId(Opc.Ua.ReferenceTypes.HasSubtype);

        /// <summary>
        /// The identifier for the HasProperty ReferenceType.
        /// </summary>
        public static readonly NodeId HasProperty = new NodeId(Opc.Ua.ReferenceTypes.HasProperty);

        /// <summary>
        /// The identifier for the HasComponent ReferenceType.
        /// </summary>
        public static readonly NodeId HasComponent = new NodeId(Opc.Ua.ReferenceTypes.HasComponent);

        /// <summary>
        /// The identifier for the HasNotifier ReferenceType.
        /// </summary>
        public static readonly NodeId HasNotifier = new NodeId(Opc.Ua.ReferenceTypes.HasNotifier);

        /// <summary>
        /// The identifier for the HasOrderedComponent ReferenceType.
        /// </summary>
        public static readonly NodeId HasOrderedComponent = new NodeId(Opc.Ua.ReferenceTypes.HasOrderedComponent);

        /// <summary>
        /// The identifier for the FromState ReferenceType.
        /// </summary>
        public static readonly NodeId FromState = new NodeId(Opc.Ua.ReferenceTypes.FromState);

        /// <summary>
        /// The identifier for the ToState ReferenceType.
        /// </summary>
        public static readonly NodeId ToState = new NodeId(Opc.Ua.ReferenceTypes.ToState);

        /// <summary>
        /// The identifier for the HasCause ReferenceType.
        /// </summary>
        public static readonly NodeId HasCause = new NodeId(Opc.Ua.ReferenceTypes.HasCause);

        /// <summary>
        /// The identifier for the HasEffect ReferenceType.
        /// </summary>
        public static readonly NodeId HasEffect = new NodeId(Opc.Ua.ReferenceTypes.HasEffect);

        /// <summary>
        /// The identifier for the HasSubStateMachine ReferenceType.
        /// </summary>
        public static readonly NodeId HasSubStateMachine = new NodeId(Opc.Ua.ReferenceTypes.HasSubStateMachine);

        /// <summary>
        /// The identifier for the HasHistoricalConfiguration ReferenceType.
        /// </summary>
        public static readonly NodeId HasHistoricalConfiguration = new NodeId(Opc.Ua.ReferenceTypes.HasHistoricalConfiguration);

        /// <summary>
        /// The identifier for the HasTrueSubState ReferenceType.
        /// </summary>
        public static readonly NodeId HasTrueSubState = new NodeId(Opc.Ua.ReferenceTypes.HasTrueSubState);

        /// <summary>
        /// The identifier for the HasFalseSubState ReferenceType.
        /// </summary>
        public static readonly NodeId HasFalseSubState = new NodeId(Opc.Ua.ReferenceTypes.HasFalseSubState);

        /// <summary>
        /// The identifier for the HasCondition ReferenceType.
        /// </summary>
        public static readonly NodeId HasCondition = new NodeId(Opc.Ua.ReferenceTypes.HasCondition);

        /// <summary>
        /// The identifier for the HasPubSubConnection ReferenceType.
        /// </summary>
        public static readonly NodeId HasPubSubConnection = new NodeId(Opc.Ua.ReferenceTypes.HasPubSubConnection);

        /// <summary>
        /// The identifier for the DataSetToWriter ReferenceType.
        /// </summary>
        public static readonly NodeId DataSetToWriter = new NodeId(Opc.Ua.ReferenceTypes.DataSetToWriter);

        /// <summary>
        /// The identifier for the HasDataSetWriter ReferenceType.
        /// </summary>
        public static readonly NodeId HasDataSetWriter = new NodeId(Opc.Ua.ReferenceTypes.HasDataSetWriter);

        /// <summary>
        /// The identifier for the HasDataSetReader ReferenceType.
        /// </summary>
        public static readonly NodeId HasDataSetReader = new NodeId(Opc.Ua.ReferenceTypes.HasDataSetReader);
    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the DataTypeDescriptionType_DataTypeVersion Variable.
        /// </summary>
        public static readonly NodeId DataTypeDescriptionType_DataTypeVersion = new NodeId(Opc.Ua.Variables.DataTypeDescriptionType_DataTypeVersion);

        /// <summary>
        /// The identifier for the DataTypeDescriptionType_DictionaryFragment Variable.
        /// </summary>
        public static readonly NodeId DataTypeDescriptionType_DictionaryFragment = new NodeId(Opc.Ua.Variables.DataTypeDescriptionType_DictionaryFragment);

        /// <summary>
        /// The identifier for the DataTypeDictionaryType_DataTypeVersion Variable.
        /// </summary>
        public static readonly NodeId DataTypeDictionaryType_DataTypeVersion = new NodeId(Opc.Ua.Variables.DataTypeDictionaryType_DataTypeVersion);

        /// <summary>
        /// The identifier for the DataTypeDictionaryType_NamespaceUri Variable.
        /// </summary>
        public static readonly NodeId DataTypeDictionaryType_NamespaceUri = new NodeId(Opc.Ua.Variables.DataTypeDictionaryType_NamespaceUri);

        /// <summary>
        /// The identifier for the NamingRuleType_EnumValues Variable.
        /// </summary>
        public static readonly NodeId NamingRuleType_EnumValues = new NodeId(Opc.Ua.Variables.NamingRuleType_EnumValues);

        /// <summary>
        /// The identifier for the ModellingRuleType_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRuleType_NamingRule = new NodeId(Opc.Ua.Variables.ModellingRuleType_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_Mandatory_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_Mandatory_NamingRule = new NodeId(Opc.Ua.Variables.ModellingRule_Mandatory_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_Optional_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_Optional_NamingRule = new NodeId(Opc.Ua.Variables.ModellingRule_Optional_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_ExposesItsArray_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_ExposesItsArray_NamingRule = new NodeId(Opc.Ua.Variables.ModellingRule_ExposesItsArray_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryShared_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_MandatoryShared_NamingRule = new NodeId(Opc.Ua.Variables.ModellingRule_MandatoryShared_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_OptionalPlaceholder_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_OptionalPlaceholder_NamingRule = new NodeId(Opc.Ua.Variables.ModellingRule_OptionalPlaceholder_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryPlaceholder_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_MandatoryPlaceholder_NamingRule = new NodeId(Opc.Ua.Variables.ModellingRule_MandatoryPlaceholder_NamingRule);

        /// <summary>
        /// The identifier for the NodeVersion Variable.
        /// </summary>
        public static readonly NodeId NodeVersion = new NodeId(Opc.Ua.Variables.NodeVersion);

        /// <summary>
        /// The identifier for the ViewVersion Variable.
        /// </summary>
        public static readonly NodeId ViewVersion = new NodeId(Opc.Ua.Variables.ViewVersion);

        /// <summary>
        /// The identifier for the Icon Variable.
        /// </summary>
        public static readonly NodeId Icon = new NodeId(Opc.Ua.Variables.Icon);

        /// <summary>
        /// The identifier for the LocalTime Variable.
        /// </summary>
        public static readonly NodeId LocalTime = new NodeId(Opc.Ua.Variables.LocalTime);

        /// <summary>
        /// The identifier for the AllowNulls Variable.
        /// </summary>
        public static readonly NodeId AllowNulls = new NodeId(Opc.Ua.Variables.AllowNulls);

        /// <summary>
        /// The identifier for the ValueAsText Variable.
        /// </summary>
        public static readonly NodeId ValueAsText = new NodeId(Opc.Ua.Variables.ValueAsText);

        /// <summary>
        /// The identifier for the MaxStringLength Variable.
        /// </summary>
        public static readonly NodeId MaxStringLength = new NodeId(Opc.Ua.Variables.MaxStringLength);

        /// <summary>
        /// The identifier for the MaxByteStringLength Variable.
        /// </summary>
        public static readonly NodeId MaxByteStringLength = new NodeId(Opc.Ua.Variables.MaxByteStringLength);

        /// <summary>
        /// The identifier for the MaxArrayLength Variable.
        /// </summary>
        public static readonly NodeId MaxArrayLength = new NodeId(Opc.Ua.Variables.MaxArrayLength);

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public static readonly NodeId EngineeringUnits = new NodeId(Opc.Ua.Variables.EngineeringUnits);

        /// <summary>
        /// The identifier for the EnumStrings Variable.
        /// </summary>
        public static readonly NodeId EnumStrings = new NodeId(Opc.Ua.Variables.EnumStrings);

        /// <summary>
        /// The identifier for the EnumValues Variable.
        /// </summary>
        public static readonly NodeId EnumValues = new NodeId(Opc.Ua.Variables.EnumValues);

        /// <summary>
        /// The identifier for the OptionSetValues Variable.
        /// </summary>
        public static readonly NodeId OptionSetValues = new NodeId(Opc.Ua.Variables.OptionSetValues);

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public static readonly NodeId InputArguments = new NodeId(Opc.Ua.Variables.InputArguments);

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public static readonly NodeId OutputArguments = new NodeId(Opc.Ua.Variables.OutputArguments);

        /// <summary>
        /// The identifier for the ServerType_ServerArray Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerArray = new NodeId(Opc.Ua.Variables.ServerType_ServerArray);

        /// <summary>
        /// The identifier for the ServerType_NamespaceArray Variable.
        /// </summary>
        public static readonly NodeId ServerType_NamespaceArray = new NodeId(Opc.Ua.Variables.ServerType_NamespaceArray);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_StartTime Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_StartTime = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_StartTime);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_CurrentTime Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_CurrentTime = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_CurrentTime);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_State Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_State = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_State);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_BuildInfo = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_ProductUri Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_ProductUri = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_ProductUri);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_ManufacturerName Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_ManufacturerName = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_ManufacturerName);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_ProductName Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_ProductName = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_ProductName);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_SoftwareVersion Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_SoftwareVersion = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_SoftwareVersion);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_BuildNumber Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_BuildNumber = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_BuildNumber);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_BuildInfo_BuildDate Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_BuildDate = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_BuildDate);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_SecondsTillShutdown Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_SecondsTillShutdown = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_SecondsTillShutdown);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus_ShutdownReason Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus_ShutdownReason = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_ShutdownReason);

        /// <summary>
        /// The identifier for the ServerType_ServiceLevel Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServiceLevel = new NodeId(Opc.Ua.Variables.ServerType_ServiceLevel);

        /// <summary>
        /// The identifier for the ServerType_Auditing Variable.
        /// </summary>
        public static readonly NodeId ServerType_Auditing = new NodeId(Opc.Ua.Variables.ServerType_Auditing);

        /// <summary>
        /// The identifier for the ServerType_EstimatedReturnTime Variable.
        /// </summary>
        public static readonly NodeId ServerType_EstimatedReturnTime = new NodeId(Opc.Ua.Variables.ServerType_EstimatedReturnTime);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_ServerProfileArray Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities_ServerProfileArray = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_ServerProfileArray);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_LocaleIdArray Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities_LocaleIdArray = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_LocaleIdArray);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_MinSupportedSampleRate Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities_MinSupportedSampleRate = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_MinSupportedSampleRate);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities_MaxBrowseContinuationPoints = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_MaxBrowseContinuationPoints);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_MaxQueryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities_MaxQueryContinuationPoints = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_MaxQueryContinuationPoints);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities_MaxHistoryContinuationPoints = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_MaxHistoryContinuationPoints);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities_SoftwareCertificates Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities_SoftwareCertificates = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_SoftwareCertificates);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics_EnabledFlag Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics_EnabledFlag = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_EnabledFlag);

        /// <summary>
        /// The identifier for the ServerType_ServerRedundancy_RedundancySupport Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerRedundancy_RedundancySupport = new NodeId(Opc.Ua.Variables.ServerType_ServerRedundancy_RedundancySupport);

        /// <summary>
        /// The identifier for the ServerType_GetMonitoredItems_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerType_GetMonitoredItems_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_GetMonitoredItems_InputArguments);

        /// <summary>
        /// The identifier for the ServerType_GetMonitoredItems_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerType_GetMonitoredItems_OutputArguments = new NodeId(Opc.Ua.Variables.ServerType_GetMonitoredItems_OutputArguments);

        /// <summary>
        /// The identifier for the ServerType_ResendData_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerType_ResendData_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_ResendData_InputArguments);

        /// <summary>
        /// The identifier for the ServerType_SetSubscriptionDurable_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerType_SetSubscriptionDurable_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_SetSubscriptionDurable_InputArguments);

        /// <summary>
        /// The identifier for the ServerType_SetSubscriptionDurable_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerType_SetSubscriptionDurable_OutputArguments = new NodeId(Opc.Ua.Variables.ServerType_SetSubscriptionDurable_OutputArguments);

        /// <summary>
        /// The identifier for the ServerType_RequestServerStateChange_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerType_RequestServerStateChange_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_RequestServerStateChange_InputArguments);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_ServerProfileArray Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_ServerProfileArray = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_ServerProfileArray);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_LocaleIdArray Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_LocaleIdArray = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_LocaleIdArray);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MinSupportedSampleRate Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MinSupportedSampleRate = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MinSupportedSampleRate);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MaxBrowseContinuationPoints = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxBrowseContinuationPoints);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxQueryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MaxQueryContinuationPoints = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxQueryContinuationPoints);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MaxHistoryContinuationPoints = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxHistoryContinuationPoints);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_SoftwareCertificates Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_SoftwareCertificates = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_SoftwareCertificates);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxArrayLength Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MaxArrayLength = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxArrayLength);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxStringLength Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MaxStringLength = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxStringLength);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxByteStringLength Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MaxByteStringLength = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxByteStringLength);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_VendorCapability_Placeholder Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_VendorCapability_Placeholder = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_VendorCapability_Placeholder);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SamplingIntervalDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_SamplingIntervalDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_SamplingIntervalDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_SubscriptionDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_EnabledFlag Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_EnabledFlag = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_EnabledFlag);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_SessionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_SessionDiagnosticsArray = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_SessionDiagnosticsArray);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SessionId);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SessionName Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SessionName = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SessionName);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CallCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CallCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CallCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerRedundancyType_RedundancySupport Variable.
        /// </summary>
        public static readonly NodeId ServerRedundancyType_RedundancySupport = new NodeId(Opc.Ua.Variables.ServerRedundancyType_RedundancySupport);

        /// <summary>
        /// The identifier for the TransparentRedundancyType_CurrentServerId Variable.
        /// </summary>
        public static readonly NodeId TransparentRedundancyType_CurrentServerId = new NodeId(Opc.Ua.Variables.TransparentRedundancyType_CurrentServerId);

        /// <summary>
        /// The identifier for the TransparentRedundancyType_RedundantServerArray Variable.
        /// </summary>
        public static readonly NodeId TransparentRedundancyType_RedundantServerArray = new NodeId(Opc.Ua.Variables.TransparentRedundancyType_RedundantServerArray);

        /// <summary>
        /// The identifier for the NonTransparentRedundancyType_ServerUriArray Variable.
        /// </summary>
        public static readonly NodeId NonTransparentRedundancyType_ServerUriArray = new NodeId(Opc.Ua.Variables.NonTransparentRedundancyType_ServerUriArray);

        /// <summary>
        /// The identifier for the NonTransparentNetworkRedundancyType_ServerNetworkGroups Variable.
        /// </summary>
        public static readonly NodeId NonTransparentNetworkRedundancyType_ServerNetworkGroups = new NodeId(Opc.Ua.Variables.NonTransparentNetworkRedundancyType_ServerNetworkGroups);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerRead Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerRead = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerRead);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerHistoryReadData Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerHistoryReadData = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerHistoryReadData);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerHistoryReadEvents Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerHistoryReadEvents = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerHistoryReadEvents);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerWrite Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerWrite = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerWrite);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerHistoryUpdateData Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerHistoryUpdateData = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerHistoryUpdateData);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerHistoryUpdateEvents Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerHistoryUpdateEvents = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerHistoryUpdateEvents);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerMethodCall Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerMethodCall = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerMethodCall);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerBrowse Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerBrowse = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerBrowse);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerRegisterNodes Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerRegisterNodes = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerRegisterNodes);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxNodesPerNodeManagement Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxNodesPerNodeManagement = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerNodeManagement);

        /// <summary>
        /// The identifier for the OperationLimitsType_MaxMonitoredItemsPerCall Variable.
        /// </summary>
        public static readonly NodeId OperationLimitsType_MaxMonitoredItemsPerCall = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxMonitoredItemsPerCall);

        /// <summary>
        /// The identifier for the FileType_Size Variable.
        /// </summary>
        public static readonly NodeId FileType_Size = new NodeId(Opc.Ua.Variables.FileType_Size);

        /// <summary>
        /// The identifier for the FileType_Writable Variable.
        /// </summary>
        public static readonly NodeId FileType_Writable = new NodeId(Opc.Ua.Variables.FileType_Writable);

        /// <summary>
        /// The identifier for the FileType_UserWritable Variable.
        /// </summary>
        public static readonly NodeId FileType_UserWritable = new NodeId(Opc.Ua.Variables.FileType_UserWritable);

        /// <summary>
        /// The identifier for the FileType_OpenCount Variable.
        /// </summary>
        public static readonly NodeId FileType_OpenCount = new NodeId(Opc.Ua.Variables.FileType_OpenCount);

        /// <summary>
        /// The identifier for the FileType_MimeType Variable.
        /// </summary>
        public static readonly NodeId FileType_MimeType = new NodeId(Opc.Ua.Variables.FileType_MimeType);

        /// <summary>
        /// The identifier for the FileType_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileType_Open_InputArguments = new NodeId(Opc.Ua.Variables.FileType_Open_InputArguments);

        /// <summary>
        /// The identifier for the FileType_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileType_Open_OutputArguments = new NodeId(Opc.Ua.Variables.FileType_Open_OutputArguments);

        /// <summary>
        /// The identifier for the FileType_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileType_Close_InputArguments = new NodeId(Opc.Ua.Variables.FileType_Close_InputArguments);

        /// <summary>
        /// The identifier for the FileType_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileType_Read_InputArguments = new NodeId(Opc.Ua.Variables.FileType_Read_InputArguments);

        /// <summary>
        /// The identifier for the FileType_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileType_Read_OutputArguments = new NodeId(Opc.Ua.Variables.FileType_Read_OutputArguments);

        /// <summary>
        /// The identifier for the FileType_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileType_Write_InputArguments = new NodeId(Opc.Ua.Variables.FileType_Write_InputArguments);

        /// <summary>
        /// The identifier for the FileType_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileType_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileType_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the FileType_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileType_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.FileType_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the FileType_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileType_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileType_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_Delete_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_Delete_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_Delete_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Size Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Size = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Size);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Writable Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Writable = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Writable);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_UserWritable Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_UserWritable = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_UserWritable);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_OpenCount Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_OpenCount = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_OpenCount);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Open_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Open_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Open_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Open_OutputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Close_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Close_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Read_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Read_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Read_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Read_OutputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Write_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Write_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateDirectory_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_CreateDirectory_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_CreateDirectory_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateDirectory_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_CreateDirectory_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_CreateDirectory_OutputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateFile_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_CreateFile_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_CreateFile_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_CreateFile_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_CreateFile_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_CreateFile_OutputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_Delete_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_Delete_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_Delete_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_MoveOrCopy_InputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_MoveOrCopy_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_MoveOrCopy_InputArguments);

        /// <summary>
        /// The identifier for the FileDirectoryType_MoveOrCopy_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId FileDirectoryType_MoveOrCopy_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_MoveOrCopy_OutputArguments);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_ClientProcessingTimeout Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_ClientProcessingTimeout = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_ClientProcessingTimeout);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForRead_InputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_GenerateFileForRead_InputArguments);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForRead_OutputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_GenerateFileForRead_OutputArguments);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForWrite_OutputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_GenerateFileForWrite_OutputArguments);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_CloseAndCommit_InputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_CloseAndCommit_InputArguments);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_CloseAndCommit_OutputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_CloseAndCommit_OutputArguments);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_CurrentState Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_CurrentState = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_CurrentState);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Idle_StateNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_Idle_StateNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_Idle_StateNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare_StateNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare_StateNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ReadPrepare_StateNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer_StateNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer_StateNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ReadTransfer_StateNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite_StateNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite_StateNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ApplyWrite_StateNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_Error_StateNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_Error_StateNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_Error_StateNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare_TransitionNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_IdleToReadPrepare_TransitionNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer_TransitionNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToReadTransfer_TransitionNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle_TransitionNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToIdle_TransitionNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite_TransitionNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_IdleToApplyWrite_TransitionNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle_TransitionNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToIdle_TransitionNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError_TransitionNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ReadPrepareToError_TransitionNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError_TransitionNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ReadTransferToError_TransitionNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError_TransitionNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ApplyWriteToError_TransitionNumber);

        /// <summary>
        /// The identifier for the TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle_TransitionNumber = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_ErrorToIdle_TransitionNumber);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_Open_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Open_InputArguments);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_Open_OutputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Open_OutputArguments);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_Close_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Close_InputArguments);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_Read_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Read_InputArguments);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_Read_OutputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Read_OutputArguments);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_Write_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Write_InputArguments);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the AddressSpaceFileType_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AddressSpaceFileType_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceUri Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceUri = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceUri);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceVersion Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceVersion = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceVersion);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespacePublicationDate Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespacePublicationDate = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespacePublicationDate);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_IsNamespaceSubset Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_IsNamespaceSubset = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_IsNamespaceSubset);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_StaticNodeIdTypes Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_StaticNodeIdTypes = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_StaticNodeIdTypes);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_StaticNumericNodeIdRange Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_StaticNumericNodeIdRange = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_StaticNumericNodeIdRange);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_StaticStringNodeIdPattern Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_StaticStringNodeIdPattern = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_StaticStringNodeIdPattern);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Size Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Size = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Size);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Writable Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Writable = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Writable);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_UserWritable Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_UserWritable = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_UserWritable);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_OpenCount Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_OpenCount = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_OpenCount);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Open_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Open_InputArguments);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Open_OutputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Open_OutputArguments);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Close_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Close_InputArguments);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Read_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Read_InputArguments);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Read_OutputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Read_OutputArguments);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Write_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Write_InputArguments);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the BaseEventType_EventId Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_EventId = new NodeId(Opc.Ua.Variables.BaseEventType_EventId);

        /// <summary>
        /// The identifier for the BaseEventType_EventType Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_EventType = new NodeId(Opc.Ua.Variables.BaseEventType_EventType);

        /// <summary>
        /// The identifier for the BaseEventType_SourceNode Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_SourceNode = new NodeId(Opc.Ua.Variables.BaseEventType_SourceNode);

        /// <summary>
        /// The identifier for the BaseEventType_SourceName Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_SourceName = new NodeId(Opc.Ua.Variables.BaseEventType_SourceName);

        /// <summary>
        /// The identifier for the BaseEventType_Time Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_Time = new NodeId(Opc.Ua.Variables.BaseEventType_Time);

        /// <summary>
        /// The identifier for the BaseEventType_ReceiveTime Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_ReceiveTime = new NodeId(Opc.Ua.Variables.BaseEventType_ReceiveTime);

        /// <summary>
        /// The identifier for the BaseEventType_LocalTime Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_LocalTime = new NodeId(Opc.Ua.Variables.BaseEventType_LocalTime);

        /// <summary>
        /// The identifier for the BaseEventType_Message Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_Message = new NodeId(Opc.Ua.Variables.BaseEventType_Message);

        /// <summary>
        /// The identifier for the BaseEventType_Severity Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_Severity = new NodeId(Opc.Ua.Variables.BaseEventType_Severity);

        /// <summary>
        /// The identifier for the AuditEventType_ActionTimeStamp Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_ActionTimeStamp = new NodeId(Opc.Ua.Variables.AuditEventType_ActionTimeStamp);

        /// <summary>
        /// The identifier for the AuditEventType_Status Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_Status = new NodeId(Opc.Ua.Variables.AuditEventType_Status);

        /// <summary>
        /// The identifier for the AuditEventType_ServerId Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_ServerId = new NodeId(Opc.Ua.Variables.AuditEventType_ServerId);

        /// <summary>
        /// The identifier for the AuditEventType_ClientAuditEntryId Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_ClientAuditEntryId = new NodeId(Opc.Ua.Variables.AuditEventType_ClientAuditEntryId);

        /// <summary>
        /// The identifier for the AuditEventType_ClientUserId Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_ClientUserId = new NodeId(Opc.Ua.Variables.AuditEventType_ClientUserId);

        /// <summary>
        /// The identifier for the AuditChannelEventType_SecureChannelId Variable.
        /// </summary>
        public static readonly NodeId AuditChannelEventType_SecureChannelId = new NodeId(Opc.Ua.Variables.AuditChannelEventType_SecureChannelId);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_ClientCertificate Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_ClientCertificate = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_ClientCertificate);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_ClientCertificateThumbprint Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_ClientCertificateThumbprint = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_ClientCertificateThumbprint);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_RequestType Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_RequestType = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_RequestType);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_SecurityPolicyUri Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_SecurityPolicyUri);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_SecurityMode = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_SecurityMode);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_RequestedLifetime Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_RequestedLifetime = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_RequestedLifetime);

        /// <summary>
        /// The identifier for the AuditSessionEventType_SessionId Variable.
        /// </summary>
        public static readonly NodeId AuditSessionEventType_SessionId = new NodeId(Opc.Ua.Variables.AuditSessionEventType_SessionId);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_SecureChannelId Variable.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType_SecureChannelId = new NodeId(Opc.Ua.Variables.AuditCreateSessionEventType_SecureChannelId);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_ClientCertificate Variable.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType_ClientCertificate = new NodeId(Opc.Ua.Variables.AuditCreateSessionEventType_ClientCertificate);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_ClientCertificateThumbprint Variable.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType_ClientCertificateThumbprint = new NodeId(Opc.Ua.Variables.AuditCreateSessionEventType_ClientCertificateThumbprint);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_RevisedSessionTimeout Variable.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType_RevisedSessionTimeout = new NodeId(Opc.Ua.Variables.AuditCreateSessionEventType_RevisedSessionTimeout);

        /// <summary>
        /// The identifier for the AuditUrlMismatchEventType_EndpointUrl Variable.
        /// </summary>
        public static readonly NodeId AuditUrlMismatchEventType_EndpointUrl = new NodeId(Opc.Ua.Variables.AuditUrlMismatchEventType_EndpointUrl);

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_ClientSoftwareCertificates Variable.
        /// </summary>
        public static readonly NodeId AuditActivateSessionEventType_ClientSoftwareCertificates = new NodeId(Opc.Ua.Variables.AuditActivateSessionEventType_ClientSoftwareCertificates);

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_UserIdentityToken Variable.
        /// </summary>
        public static readonly NodeId AuditActivateSessionEventType_UserIdentityToken = new NodeId(Opc.Ua.Variables.AuditActivateSessionEventType_UserIdentityToken);

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_SecureChannelId Variable.
        /// </summary>
        public static readonly NodeId AuditActivateSessionEventType_SecureChannelId = new NodeId(Opc.Ua.Variables.AuditActivateSessionEventType_SecureChannelId);

        /// <summary>
        /// The identifier for the AuditCancelEventType_RequestHandle Variable.
        /// </summary>
        public static readonly NodeId AuditCancelEventType_RequestHandle = new NodeId(Opc.Ua.Variables.AuditCancelEventType_RequestHandle);

        /// <summary>
        /// The identifier for the AuditCertificateEventType_Certificate Variable.
        /// </summary>
        public static readonly NodeId AuditCertificateEventType_Certificate = new NodeId(Opc.Ua.Variables.AuditCertificateEventType_Certificate);

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType_InvalidHostname Variable.
        /// </summary>
        public static readonly NodeId AuditCertificateDataMismatchEventType_InvalidHostname = new NodeId(Opc.Ua.Variables.AuditCertificateDataMismatchEventType_InvalidHostname);

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType_InvalidUri Variable.
        /// </summary>
        public static readonly NodeId AuditCertificateDataMismatchEventType_InvalidUri = new NodeId(Opc.Ua.Variables.AuditCertificateDataMismatchEventType_InvalidUri);

        /// <summary>
        /// The identifier for the AuditAddNodesEventType_NodesToAdd Variable.
        /// </summary>
        public static readonly NodeId AuditAddNodesEventType_NodesToAdd = new NodeId(Opc.Ua.Variables.AuditAddNodesEventType_NodesToAdd);

        /// <summary>
        /// The identifier for the AuditDeleteNodesEventType_NodesToDelete Variable.
        /// </summary>
        public static readonly NodeId AuditDeleteNodesEventType_NodesToDelete = new NodeId(Opc.Ua.Variables.AuditDeleteNodesEventType_NodesToDelete);

        /// <summary>
        /// The identifier for the AuditAddReferencesEventType_ReferencesToAdd Variable.
        /// </summary>
        public static readonly NodeId AuditAddReferencesEventType_ReferencesToAdd = new NodeId(Opc.Ua.Variables.AuditAddReferencesEventType_ReferencesToAdd);

        /// <summary>
        /// The identifier for the AuditDeleteReferencesEventType_ReferencesToDelete Variable.
        /// </summary>
        public static readonly NodeId AuditDeleteReferencesEventType_ReferencesToDelete = new NodeId(Opc.Ua.Variables.AuditDeleteReferencesEventType_ReferencesToDelete);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_AttributeId Variable.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType_AttributeId = new NodeId(Opc.Ua.Variables.AuditWriteUpdateEventType_AttributeId);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_IndexRange Variable.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType_IndexRange = new NodeId(Opc.Ua.Variables.AuditWriteUpdateEventType_IndexRange);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_OldValue Variable.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType_OldValue = new NodeId(Opc.Ua.Variables.AuditWriteUpdateEventType_OldValue);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_NewValue Variable.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType_NewValue = new NodeId(Opc.Ua.Variables.AuditWriteUpdateEventType_NewValue);

        /// <summary>
        /// The identifier for the AuditHistoryUpdateEventType_ParameterDataTypeId Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryUpdateEventType_ParameterDataTypeId = new NodeId(Opc.Ua.Variables.AuditHistoryUpdateEventType_ParameterDataTypeId);

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType_MethodId Variable.
        /// </summary>
        public static readonly NodeId AuditUpdateMethodEventType_MethodId = new NodeId(Opc.Ua.Variables.AuditUpdateMethodEventType_MethodId);

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AuditUpdateMethodEventType_InputArguments = new NodeId(Opc.Ua.Variables.AuditUpdateMethodEventType_InputArguments);

        /// <summary>
        /// The identifier for the SystemStatusChangeEventType_SystemState Variable.
        /// </summary>
        public static readonly NodeId SystemStatusChangeEventType_SystemState = new NodeId(Opc.Ua.Variables.SystemStatusChangeEventType_SystemState);

        /// <summary>
        /// The identifier for the GeneralModelChangeEventType_Changes Variable.
        /// </summary>
        public static readonly NodeId GeneralModelChangeEventType_Changes = new NodeId(Opc.Ua.Variables.GeneralModelChangeEventType_Changes);

        /// <summary>
        /// The identifier for the SemanticChangeEventType_Changes Variable.
        /// </summary>
        public static readonly NodeId SemanticChangeEventType_Changes = new NodeId(Opc.Ua.Variables.SemanticChangeEventType_Changes);

        /// <summary>
        /// The identifier for the ProgressEventType_Context Variable.
        /// </summary>
        public static readonly NodeId ProgressEventType_Context = new NodeId(Opc.Ua.Variables.ProgressEventType_Context);

        /// <summary>
        /// The identifier for the ProgressEventType_Progress Variable.
        /// </summary>
        public static readonly NodeId ProgressEventType_Progress = new NodeId(Opc.Ua.Variables.ProgressEventType_Progress);

        /// <summary>
        /// The identifier for the ServerStatusType_StartTime Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_StartTime = new NodeId(Opc.Ua.Variables.ServerStatusType_StartTime);

        /// <summary>
        /// The identifier for the ServerStatusType_CurrentTime Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_CurrentTime = new NodeId(Opc.Ua.Variables.ServerStatusType_CurrentTime);

        /// <summary>
        /// The identifier for the ServerStatusType_State Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_State = new NodeId(Opc.Ua.Variables.ServerStatusType_State);

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_BuildInfo = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo);

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_ProductUri Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_BuildInfo_ProductUri = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_ProductUri);

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_ManufacturerName Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_BuildInfo_ManufacturerName = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_ManufacturerName);

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_ProductName Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_BuildInfo_ProductName = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_ProductName);

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_SoftwareVersion Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_BuildInfo_SoftwareVersion = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_SoftwareVersion);

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_BuildNumber Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_BuildInfo_BuildNumber = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_BuildNumber);

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo_BuildDate Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_BuildInfo_BuildDate = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_BuildDate);

        /// <summary>
        /// The identifier for the ServerStatusType_SecondsTillShutdown Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_SecondsTillShutdown = new NodeId(Opc.Ua.Variables.ServerStatusType_SecondsTillShutdown);

        /// <summary>
        /// The identifier for the ServerStatusType_ShutdownReason Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_ShutdownReason = new NodeId(Opc.Ua.Variables.ServerStatusType_ShutdownReason);

        /// <summary>
        /// The identifier for the BuildInfoType_ProductUri Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_ProductUri = new NodeId(Opc.Ua.Variables.BuildInfoType_ProductUri);

        /// <summary>
        /// The identifier for the BuildInfoType_ManufacturerName Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_ManufacturerName = new NodeId(Opc.Ua.Variables.BuildInfoType_ManufacturerName);

        /// <summary>
        /// The identifier for the BuildInfoType_ProductName Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_ProductName = new NodeId(Opc.Ua.Variables.BuildInfoType_ProductName);

        /// <summary>
        /// The identifier for the BuildInfoType_SoftwareVersion Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_SoftwareVersion = new NodeId(Opc.Ua.Variables.BuildInfoType_SoftwareVersion);

        /// <summary>
        /// The identifier for the BuildInfoType_BuildNumber Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_BuildNumber = new NodeId(Opc.Ua.Variables.BuildInfoType_BuildNumber);

        /// <summary>
        /// The identifier for the BuildInfoType_BuildDate Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_BuildDate = new NodeId(Opc.Ua.Variables.BuildInfoType_BuildDate);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_ServerViewCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_ServerViewCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_ServerViewCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CurrentSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_CurrentSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_CurrentSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CumulatedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_CumulatedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_CumulatedSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SecurityRejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_SecurityRejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_SecurityRejectedSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_RejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_RejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_RejectedSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SessionTimeoutCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_SessionTimeoutCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_SessionTimeoutCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SessionAbortCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_SessionAbortCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_SessionAbortCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_PublishingIntervalCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_PublishingIntervalCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_PublishingIntervalCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CurrentSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_CurrentSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_CurrentSubscriptionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CumulatedSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_CumulatedSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_CumulatedSubscriptionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_RejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_RejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_RejectedRequestsCount);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_SamplingInterval Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType_SamplingInterval = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsType_SamplingInterval);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverFlowCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverFlowCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverFlowCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_SessionId Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_SessionId = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_SessionId);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_SubscriptionId Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_SubscriptionId = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_SubscriptionId);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_Priority Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_Priority = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_Priority);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishingInterval Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_PublishingInterval = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_PublishingInterval);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxKeepAliveCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MaxKeepAliveCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MaxKeepAliveCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxLifetimeCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MaxLifetimeCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MaxLifetimeCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxNotificationsPerPublish Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MaxNotificationsPerPublish = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MaxNotificationsPerPublish);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishingEnabled Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_PublishingEnabled = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_PublishingEnabled);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_ModifyCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_ModifyCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_ModifyCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EnableCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_EnableCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_EnableCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DisableCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_DisableCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_DisableCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_RepublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_RepublishRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishMessageRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_RepublishMessageRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_RepublishMessageRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishMessageCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_RepublishMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_RepublishMessageCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_TransferRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_TransferRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferredToAltClientCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_TransferredToAltClientCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_TransferredToAltClientCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferredToSameClientCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_TransferredToSameClientCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_TransferredToSameClientCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_PublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_PublishRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DataChangeNotificationsCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_DataChangeNotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_DataChangeNotificationsCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EventNotificationsCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_EventNotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_EventNotificationsCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_NotificationsCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_NotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_NotificationsCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_LatePublishRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_LatePublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_LatePublishRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_CurrentKeepAliveCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_CurrentKeepAliveCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_CurrentKeepAliveCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_CurrentLifetimeCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_CurrentLifetimeCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_CurrentLifetimeCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_UnacknowledgedMessageCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_UnacknowledgedMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_UnacknowledgedMessageCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DiscardedMessageCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_DiscardedMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_DiscardedMessageCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MonitoredItemCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MonitoredItemCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MonitoredItemCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DisabledMonitoredItemCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_DisabledMonitoredItemCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_DisabledMonitoredItemCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MonitoringQueueOverflowCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MonitoringQueueOverflowCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MonitoringQueueOverflowCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_NextSequenceNumber Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_NextSequenceNumber = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_NextSequenceNumber);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EventQueueOverFlowCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_EventQueueOverFlowCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_EventQueueOverFlowCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SessionId);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SessionName Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SessionName = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SessionName);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CallCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CallCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CallCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SessionId = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SessionId);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SessionName Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SessionName = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SessionName);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientDescription Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ClientDescription = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ClientDescription);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ServerUri Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ServerUri = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ServerUri);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_EndpointUrl Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_EndpointUrl = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_EndpointUrl);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_LocaleIds Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_LocaleIds = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_LocaleIds);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ActualSessionTimeout Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ActualSessionTimeout = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ActualSessionTimeout);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_MaxResponseMessageSize Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_MaxResponseMessageSize = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_MaxResponseMessageSize);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientConnectionTime Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ClientConnectionTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ClientConnectionTime);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientLastContactTime Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ClientLastContactTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ClientLastContactTime);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CurrentSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CurrentSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CurrentMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CurrentMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TotalRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_TotalRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_TotalRequestCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_UnauthorizedRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_UnauthorizedRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_UnauthorizedRequestCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ReadCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_HistoryReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_HistoryReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_HistoryReadCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_WriteCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_WriteCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_WriteCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_HistoryUpdateCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_HistoryUpdateCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_HistoryUpdateCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CallCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CallCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CallCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CreateMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CreateMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CreateMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ModifyMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ModifyMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetMonitoringModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SetMonitoringModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SetMonitoringModeCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetTriggeringCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SetTriggeringCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SetTriggeringCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_DeleteMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CreateSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CreateSubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CreateSubscriptionCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ModifySubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ModifySubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ModifySubscriptionCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetPublishingModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SetPublishingModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SetPublishingModeCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_PublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_PublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_PublishCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_RepublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_RepublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_RepublishCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TransferSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_TransferSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_TransferSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_DeleteSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_AddNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_AddNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_AddNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_AddReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_AddReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_AddReferencesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_DeleteNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_DeleteReferencesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_BrowseCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_BrowseCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_BrowseCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_BrowseNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_BrowseNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_BrowseNextCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_QueryFirstCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_QueryFirstCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_QueryFirstCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_QueryNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_QueryNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_QueryNextCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_RegisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_RegisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_RegisterNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_UnregisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_UnregisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_UnregisterNodesCount);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_SessionId = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_SessionId);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientUserIdOfSession Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_ClientUserIdOfSession = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_ClientUserIdOfSession);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientUserIdHistory Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_ClientUserIdHistory = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_ClientUserIdHistory);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_AuthenticationMechanism Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_AuthenticationMechanism = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_AuthenticationMechanism);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_Encoding Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_Encoding = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_Encoding);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_TransportProtocol Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_TransportProtocol = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_TransportProtocol);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_SecurityMode = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_SecurityMode);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SecurityPolicyUri Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_SecurityPolicyUri);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientCertificate Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_ClientCertificate = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_ClientCertificate);

        /// <summary>
        /// The identifier for the OptionSetType_OptionSetValues Variable.
        /// </summary>
        public static readonly NodeId OptionSetType_OptionSetValues = new NodeId(Opc.Ua.Variables.OptionSetType_OptionSetValues);

        /// <summary>
        /// The identifier for the OptionSetType_BitMask Variable.
        /// </summary>
        public static readonly NodeId OptionSetType_BitMask = new NodeId(Opc.Ua.Variables.OptionSetType_BitMask);

        /// <summary>
        /// The identifier for the Server_ServerArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerArray = new NodeId(Opc.Ua.Variables.Server_ServerArray);

        /// <summary>
        /// The identifier for the Server_NamespaceArray Variable.
        /// </summary>
        public static readonly NodeId Server_NamespaceArray = new NodeId(Opc.Ua.Variables.Server_NamespaceArray);

        /// <summary>
        /// The identifier for the Server_ServerStatus Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus = new NodeId(Opc.Ua.Variables.Server_ServerStatus);

        /// <summary>
        /// The identifier for the Server_ServerStatus_StartTime Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_StartTime = new NodeId(Opc.Ua.Variables.Server_ServerStatus_StartTime);

        /// <summary>
        /// The identifier for the Server_ServerStatus_CurrentTime Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_CurrentTime = new NodeId(Opc.Ua.Variables.Server_ServerStatus_CurrentTime);

        /// <summary>
        /// The identifier for the Server_ServerStatus_State Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_State = new NodeId(Opc.Ua.Variables.Server_ServerStatus_State);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ProductUri Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_ProductUri = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_ProductUri);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ManufacturerName Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_ManufacturerName = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_ManufacturerName);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ProductName Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_ProductName = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_ProductName);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_SoftwareVersion Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_SoftwareVersion = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_SoftwareVersion);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_BuildNumber Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_BuildNumber = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_BuildNumber);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_BuildDate Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_BuildDate = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_BuildDate);

        /// <summary>
        /// The identifier for the Server_ServerStatus_SecondsTillShutdown Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_SecondsTillShutdown = new NodeId(Opc.Ua.Variables.Server_ServerStatus_SecondsTillShutdown);

        /// <summary>
        /// The identifier for the Server_ServerStatus_ShutdownReason Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_ShutdownReason = new NodeId(Opc.Ua.Variables.Server_ServerStatus_ShutdownReason);

        /// <summary>
        /// The identifier for the Server_ServiceLevel Variable.
        /// </summary>
        public static readonly NodeId Server_ServiceLevel = new NodeId(Opc.Ua.Variables.Server_ServiceLevel);

        /// <summary>
        /// The identifier for the Server_Auditing Variable.
        /// </summary>
        public static readonly NodeId Server_Auditing = new NodeId(Opc.Ua.Variables.Server_Auditing);

        /// <summary>
        /// The identifier for the Server_EstimatedReturnTime Variable.
        /// </summary>
        public static readonly NodeId Server_EstimatedReturnTime = new NodeId(Opc.Ua.Variables.Server_EstimatedReturnTime);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_ServerProfileArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_ServerProfileArray = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_ServerProfileArray);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_LocaleIdArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_LocaleIdArray = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_LocaleIdArray);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MinSupportedSampleRate Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MinSupportedSampleRate = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MinSupportedSampleRate);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MaxBrowseContinuationPoints = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxBrowseContinuationPoints);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxQueryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MaxQueryContinuationPoints = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxQueryContinuationPoints);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MaxHistoryContinuationPoints = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxHistoryContinuationPoints);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_SoftwareCertificates Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_SoftwareCertificates = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_SoftwareCertificates);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxArrayLength Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MaxArrayLength = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxArrayLength);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxStringLength Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MaxStringLength = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxStringLength);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxByteStringLength Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MaxByteStringLength = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxByteStringLength);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerRead Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerRead = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerRead);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_SubscriptionDiagnosticsArray);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_EnabledFlag Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_EnabledFlag = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_EnabledFlag);

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_RedundancySupport Variable.
        /// </summary>
        public static readonly NodeId Server_ServerRedundancy_RedundancySupport = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_RedundancySupport);

        /// <summary>
        /// The identifier for the Server_GetMonitoredItems_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_GetMonitoredItems_InputArguments = new NodeId(Opc.Ua.Variables.Server_GetMonitoredItems_InputArguments);

        /// <summary>
        /// The identifier for the Server_GetMonitoredItems_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_GetMonitoredItems_OutputArguments = new NodeId(Opc.Ua.Variables.Server_GetMonitoredItems_OutputArguments);

        /// <summary>
        /// The identifier for the Server_ResendData_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_ResendData_InputArguments = new NodeId(Opc.Ua.Variables.Server_ResendData_InputArguments);

        /// <summary>
        /// The identifier for the Server_SetSubscriptionDurable_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_SetSubscriptionDurable_InputArguments = new NodeId(Opc.Ua.Variables.Server_SetSubscriptionDurable_InputArguments);

        /// <summary>
        /// The identifier for the Server_SetSubscriptionDurable_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_SetSubscriptionDurable_OutputArguments = new NodeId(Opc.Ua.Variables.Server_SetSubscriptionDurable_OutputArguments);

        /// <summary>
        /// The identifier for the Server_RequestServerStateChange_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_RequestServerStateChange_InputArguments = new NodeId(Opc.Ua.Variables.Server_RequestServerStateChange_InputArguments);

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_CurrentServerId Variable.
        /// </summary>
        public static readonly NodeId Server_ServerRedundancy_CurrentServerId = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_CurrentServerId);

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_RedundantServerArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerRedundancy_RedundantServerArray = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_RedundantServerArray);

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_ServerUriArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerRedundancy_ServerUriArray = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_ServerUriArray);

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_ServerNetworkGroups Variable.
        /// </summary>
        public static readonly NodeId Server_ServerRedundancy_ServerNetworkGroups = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_ServerNetworkGroups);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceUri Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceUri = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceUri);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceVersion Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceVersion = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceVersion);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespacePublicationDate Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespacePublicationDate = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespacePublicationDate);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_IsNamespaceSubset Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_IsNamespaceSubset = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_IsNamespaceSubset);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_StaticNodeIdTypes Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_StaticNodeIdTypes = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_StaticNodeIdTypes);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_StaticNumericNodeIdRange Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_StaticNumericNodeIdRange = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_StaticNumericNodeIdRange);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_StaticStringNodeIdPattern Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_StaticStringNodeIdPattern = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_StaticStringNodeIdPattern);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Size Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Size = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Size);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Writable Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Writable = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Writable);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_UserWritable Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_UserWritable = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_UserWritable);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_OpenCount Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_OpenCount = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_OpenCount);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_InputArguments = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_InputArguments);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_OutputArguments = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Open_OutputArguments);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close_InputArguments = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Close_InputArguments);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_InputArguments = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_InputArguments);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_OutputArguments = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Read_OutputArguments);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write_InputArguments = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_Write_InputArguments);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.Server_Namespaces_OPCUANamespaceUri_NamespaceFile_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_AccessHistoryDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_AccessHistoryDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_AccessHistoryDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_AccessHistoryEventsCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_AccessHistoryEventsCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_AccessHistoryEventsCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_MaxReturnDataValues Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_MaxReturnDataValues = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_MaxReturnDataValues);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_MaxReturnEventValues Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_MaxReturnEventValues = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_MaxReturnEventValues);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_InsertDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_InsertDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_InsertDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_ReplaceDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_ReplaceDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_ReplaceDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_UpdateDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_UpdateDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_UpdateDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_DeleteRawCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_DeleteRawCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_DeleteRawCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_DeleteAtTimeCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_DeleteAtTimeCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_DeleteAtTimeCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_InsertEventCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_InsertEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_InsertEventCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_ReplaceEventCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_ReplaceEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_ReplaceEventCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_UpdateEventCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_UpdateEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_UpdateEventCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_DeleteEventCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_DeleteEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_DeleteEventCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilities_InsertAnnotationCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilities_InsertAnnotationCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_InsertAnnotationCapability);

        /// <summary>
        /// The identifier for the StateMachineType_CurrentState Variable.
        /// </summary>
        public static readonly NodeId StateMachineType_CurrentState = new NodeId(Opc.Ua.Variables.StateMachineType_CurrentState);

        /// <summary>
        /// The identifier for the StateMachineType_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId StateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.StateMachineType_CurrentState_Id);

        /// <summary>
        /// The identifier for the StateMachineType_LastTransition Variable.
        /// </summary>
        public static readonly NodeId StateMachineType_LastTransition = new NodeId(Opc.Ua.Variables.StateMachineType_LastTransition);

        /// <summary>
        /// The identifier for the StateMachineType_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId StateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.StateMachineType_LastTransition_Id);

        /// <summary>
        /// The identifier for the StateVariableType_Id Variable.
        /// </summary>
        public static readonly NodeId StateVariableType_Id = new NodeId(Opc.Ua.Variables.StateVariableType_Id);

        /// <summary>
        /// The identifier for the StateVariableType_Name Variable.
        /// </summary>
        public static readonly NodeId StateVariableType_Name = new NodeId(Opc.Ua.Variables.StateVariableType_Name);

        /// <summary>
        /// The identifier for the StateVariableType_Number Variable.
        /// </summary>
        public static readonly NodeId StateVariableType_Number = new NodeId(Opc.Ua.Variables.StateVariableType_Number);

        /// <summary>
        /// The identifier for the StateVariableType_EffectiveDisplayName Variable.
        /// </summary>
        public static readonly NodeId StateVariableType_EffectiveDisplayName = new NodeId(Opc.Ua.Variables.StateVariableType_EffectiveDisplayName);

        /// <summary>
        /// The identifier for the TransitionVariableType_Id Variable.
        /// </summary>
        public static readonly NodeId TransitionVariableType_Id = new NodeId(Opc.Ua.Variables.TransitionVariableType_Id);

        /// <summary>
        /// The identifier for the TransitionVariableType_Name Variable.
        /// </summary>
        public static readonly NodeId TransitionVariableType_Name = new NodeId(Opc.Ua.Variables.TransitionVariableType_Name);

        /// <summary>
        /// The identifier for the TransitionVariableType_Number Variable.
        /// </summary>
        public static readonly NodeId TransitionVariableType_Number = new NodeId(Opc.Ua.Variables.TransitionVariableType_Number);

        /// <summary>
        /// The identifier for the TransitionVariableType_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId TransitionVariableType_TransitionTime = new NodeId(Opc.Ua.Variables.TransitionVariableType_TransitionTime);

        /// <summary>
        /// The identifier for the TransitionVariableType_EffectiveTransitionTime Variable.
        /// </summary>
        public static readonly NodeId TransitionVariableType_EffectiveTransitionTime = new NodeId(Opc.Ua.Variables.TransitionVariableType_EffectiveTransitionTime);

        /// <summary>
        /// The identifier for the FiniteStateMachineType_CurrentState Variable.
        /// </summary>
        public static readonly NodeId FiniteStateMachineType_CurrentState = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_CurrentState);

        /// <summary>
        /// The identifier for the FiniteStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId FiniteStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_CurrentState_Id);

        /// <summary>
        /// The identifier for the FiniteStateMachineType_LastTransition Variable.
        /// </summary>
        public static readonly NodeId FiniteStateMachineType_LastTransition = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_LastTransition);

        /// <summary>
        /// The identifier for the FiniteStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId FiniteStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_LastTransition_Id);

        /// <summary>
        /// The identifier for the FiniteStateVariableType_Id Variable.
        /// </summary>
        public static readonly NodeId FiniteStateVariableType_Id = new NodeId(Opc.Ua.Variables.FiniteStateVariableType_Id);

        /// <summary>
        /// The identifier for the FiniteTransitionVariableType_Id Variable.
        /// </summary>
        public static readonly NodeId FiniteTransitionVariableType_Id = new NodeId(Opc.Ua.Variables.FiniteTransitionVariableType_Id);

        /// <summary>
        /// The identifier for the StateType_StateNumber Variable.
        /// </summary>
        public static readonly NodeId StateType_StateNumber = new NodeId(Opc.Ua.Variables.StateType_StateNumber);

        /// <summary>
        /// The identifier for the TransitionType_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId TransitionType_TransitionNumber = new NodeId(Opc.Ua.Variables.TransitionType_TransitionNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_CurrentState_Id);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_LastTransition_Id);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Idle_StateNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_Idle_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_Idle_StateNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepare_StateNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadPrepare_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadPrepare_StateNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransfer_StateNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadTransfer_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadTransfer_StateNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWrite_StateNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ApplyWrite_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ApplyWrite_StateNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_Error_StateNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_Error_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_Error_StateNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadPrepareToError_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadPrepareToError_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadPrepareToError_TransitionNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ReadTransferToError_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ReadTransferToError_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadTransferToError_TransitionNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ApplyWriteToError_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ApplyWriteToError_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ApplyWriteToError_TransitionNumber);

        /// <summary>
        /// The identifier for the FileTransferStateMachineType_ErrorToIdle_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId FileTransferStateMachineType_ErrorToIdle_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ErrorToIdle_TransitionNumber);

        /// <summary>
        /// The identifier for the TransitionEventType_Transition Variable.
        /// </summary>
        public static readonly NodeId TransitionEventType_Transition = new NodeId(Opc.Ua.Variables.TransitionEventType_Transition);

        /// <summary>
        /// The identifier for the TransitionEventType_Transition_Id Variable.
        /// </summary>
        public static readonly NodeId TransitionEventType_Transition_Id = new NodeId(Opc.Ua.Variables.TransitionEventType_Transition_Id);

        /// <summary>
        /// The identifier for the TransitionEventType_FromState Variable.
        /// </summary>
        public static readonly NodeId TransitionEventType_FromState = new NodeId(Opc.Ua.Variables.TransitionEventType_FromState);

        /// <summary>
        /// The identifier for the TransitionEventType_FromState_Id Variable.
        /// </summary>
        public static readonly NodeId TransitionEventType_FromState_Id = new NodeId(Opc.Ua.Variables.TransitionEventType_FromState_Id);

        /// <summary>
        /// The identifier for the TransitionEventType_ToState Variable.
        /// </summary>
        public static readonly NodeId TransitionEventType_ToState = new NodeId(Opc.Ua.Variables.TransitionEventType_ToState);

        /// <summary>
        /// The identifier for the TransitionEventType_ToState_Id Variable.
        /// </summary>
        public static readonly NodeId TransitionEventType_ToState_Id = new NodeId(Opc.Ua.Variables.TransitionEventType_ToState_Id);

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType_OldStateId Variable.
        /// </summary>
        public static readonly NodeId AuditUpdateStateEventType_OldStateId = new NodeId(Opc.Ua.Variables.AuditUpdateStateEventType_OldStateId);

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType_NewStateId Variable.
        /// </summary>
        public static readonly NodeId AuditUpdateStateEventType_NewStateId = new NodeId(Opc.Ua.Variables.AuditUpdateStateEventType_NewStateId);

        /// <summary>
        /// The identifier for the OpenFileMode_EnumValues Variable.
        /// </summary>
        public static readonly NodeId OpenFileMode_EnumValues = new NodeId(Opc.Ua.Variables.OpenFileMode_EnumValues);

        /// <summary>
        /// The identifier for the DataItemType_Definition Variable.
        /// </summary>
        public static readonly NodeId DataItemType_Definition = new NodeId(Opc.Ua.Variables.DataItemType_Definition);

        /// <summary>
        /// The identifier for the DataItemType_ValuePrecision Variable.
        /// </summary>
        public static readonly NodeId DataItemType_ValuePrecision = new NodeId(Opc.Ua.Variables.DataItemType_ValuePrecision);

        /// <summary>
        /// The identifier for the AnalogItemType_InstrumentRange Variable.
        /// </summary>
        public static readonly NodeId AnalogItemType_InstrumentRange = new NodeId(Opc.Ua.Variables.AnalogItemType_InstrumentRange);

        /// <summary>
        /// The identifier for the AnalogItemType_EURange Variable.
        /// </summary>
        public static readonly NodeId AnalogItemType_EURange = new NodeId(Opc.Ua.Variables.AnalogItemType_EURange);

        /// <summary>
        /// The identifier for the AnalogItemType_EngineeringUnits Variable.
        /// </summary>
        public static readonly NodeId AnalogItemType_EngineeringUnits = new NodeId(Opc.Ua.Variables.AnalogItemType_EngineeringUnits);

        /// <summary>
        /// The identifier for the TwoStateDiscreteType_FalseState Variable.
        /// </summary>
        public static readonly NodeId TwoStateDiscreteType_FalseState = new NodeId(Opc.Ua.Variables.TwoStateDiscreteType_FalseState);

        /// <summary>
        /// The identifier for the TwoStateDiscreteType_TrueState Variable.
        /// </summary>
        public static readonly NodeId TwoStateDiscreteType_TrueState = new NodeId(Opc.Ua.Variables.TwoStateDiscreteType_TrueState);

        /// <summary>
        /// The identifier for the MultiStateDiscreteType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId MultiStateDiscreteType_EnumStrings = new NodeId(Opc.Ua.Variables.MultiStateDiscreteType_EnumStrings);

        /// <summary>
        /// The identifier for the MultiStateValueDiscreteType_EnumValues Variable.
        /// </summary>
        public static readonly NodeId MultiStateValueDiscreteType_EnumValues = new NodeId(Opc.Ua.Variables.MultiStateValueDiscreteType_EnumValues);

        /// <summary>
        /// The identifier for the MultiStateValueDiscreteType_ValueAsText Variable.
        /// </summary>
        public static readonly NodeId MultiStateValueDiscreteType_ValueAsText = new NodeId(Opc.Ua.Variables.MultiStateValueDiscreteType_ValueAsText);

        /// <summary>
        /// The identifier for the ArrayItemType_InstrumentRange Variable.
        /// </summary>
        public static readonly NodeId ArrayItemType_InstrumentRange = new NodeId(Opc.Ua.Variables.ArrayItemType_InstrumentRange);

        /// <summary>
        /// The identifier for the ArrayItemType_EURange Variable.
        /// </summary>
        public static readonly NodeId ArrayItemType_EURange = new NodeId(Opc.Ua.Variables.ArrayItemType_EURange);

        /// <summary>
        /// The identifier for the ArrayItemType_EngineeringUnits Variable.
        /// </summary>
        public static readonly NodeId ArrayItemType_EngineeringUnits = new NodeId(Opc.Ua.Variables.ArrayItemType_EngineeringUnits);

        /// <summary>
        /// The identifier for the ArrayItemType_Title Variable.
        /// </summary>
        public static readonly NodeId ArrayItemType_Title = new NodeId(Opc.Ua.Variables.ArrayItemType_Title);

        /// <summary>
        /// The identifier for the ArrayItemType_AxisScaleType Variable.
        /// </summary>
        public static readonly NodeId ArrayItemType_AxisScaleType = new NodeId(Opc.Ua.Variables.ArrayItemType_AxisScaleType);

        /// <summary>
        /// The identifier for the YArrayItemType_XAxisDefinition Variable.
        /// </summary>
        public static readonly NodeId YArrayItemType_XAxisDefinition = new NodeId(Opc.Ua.Variables.YArrayItemType_XAxisDefinition);

        /// <summary>
        /// The identifier for the XYArrayItemType_XAxisDefinition Variable.
        /// </summary>
        public static readonly NodeId XYArrayItemType_XAxisDefinition = new NodeId(Opc.Ua.Variables.XYArrayItemType_XAxisDefinition);

        /// <summary>
        /// The identifier for the ImageItemType_XAxisDefinition Variable.
        /// </summary>
        public static readonly NodeId ImageItemType_XAxisDefinition = new NodeId(Opc.Ua.Variables.ImageItemType_XAxisDefinition);

        /// <summary>
        /// The identifier for the ImageItemType_YAxisDefinition Variable.
        /// </summary>
        public static readonly NodeId ImageItemType_YAxisDefinition = new NodeId(Opc.Ua.Variables.ImageItemType_YAxisDefinition);

        /// <summary>
        /// The identifier for the CubeItemType_XAxisDefinition Variable.
        /// </summary>
        public static readonly NodeId CubeItemType_XAxisDefinition = new NodeId(Opc.Ua.Variables.CubeItemType_XAxisDefinition);

        /// <summary>
        /// The identifier for the CubeItemType_YAxisDefinition Variable.
        /// </summary>
        public static readonly NodeId CubeItemType_YAxisDefinition = new NodeId(Opc.Ua.Variables.CubeItemType_YAxisDefinition);

        /// <summary>
        /// The identifier for the CubeItemType_ZAxisDefinition Variable.
        /// </summary>
        public static readonly NodeId CubeItemType_ZAxisDefinition = new NodeId(Opc.Ua.Variables.CubeItemType_ZAxisDefinition);

        /// <summary>
        /// The identifier for the NDimensionArrayItemType_AxisDefinition Variable.
        /// </summary>
        public static readonly NodeId NDimensionArrayItemType_AxisDefinition = new NodeId(Opc.Ua.Variables.NDimensionArrayItemType_AxisDefinition);

        /// <summary>
        /// The identifier for the TwoStateVariableType_Id Variable.
        /// </summary>
        public static readonly NodeId TwoStateVariableType_Id = new NodeId(Opc.Ua.Variables.TwoStateVariableType_Id);

        /// <summary>
        /// The identifier for the TwoStateVariableType_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId TwoStateVariableType_TransitionTime = new NodeId(Opc.Ua.Variables.TwoStateVariableType_TransitionTime);

        /// <summary>
        /// The identifier for the TwoStateVariableType_EffectiveTransitionTime Variable.
        /// </summary>
        public static readonly NodeId TwoStateVariableType_EffectiveTransitionTime = new NodeId(Opc.Ua.Variables.TwoStateVariableType_EffectiveTransitionTime);

        /// <summary>
        /// The identifier for the TwoStateVariableType_TrueState Variable.
        /// </summary>
        public static readonly NodeId TwoStateVariableType_TrueState = new NodeId(Opc.Ua.Variables.TwoStateVariableType_TrueState);

        /// <summary>
        /// The identifier for the TwoStateVariableType_FalseState Variable.
        /// </summary>
        public static readonly NodeId TwoStateVariableType_FalseState = new NodeId(Opc.Ua.Variables.TwoStateVariableType_FalseState);

        /// <summary>
        /// The identifier for the ConditionVariableType_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ConditionVariableType_SourceTimestamp = new NodeId(Opc.Ua.Variables.ConditionVariableType_SourceTimestamp);

        /// <summary>
        /// The identifier for the ConditionType_ConditionClassId Variable.
        /// </summary>
        public static readonly NodeId ConditionType_ConditionClassId = new NodeId(Opc.Ua.Variables.ConditionType_ConditionClassId);

        /// <summary>
        /// The identifier for the ConditionType_ConditionClassName Variable.
        /// </summary>
        public static readonly NodeId ConditionType_ConditionClassName = new NodeId(Opc.Ua.Variables.ConditionType_ConditionClassName);

        /// <summary>
        /// The identifier for the ConditionType_ConditionName Variable.
        /// </summary>
        public static readonly NodeId ConditionType_ConditionName = new NodeId(Opc.Ua.Variables.ConditionType_ConditionName);

        /// <summary>
        /// The identifier for the ConditionType_BranchId Variable.
        /// </summary>
        public static readonly NodeId ConditionType_BranchId = new NodeId(Opc.Ua.Variables.ConditionType_BranchId);

        /// <summary>
        /// The identifier for the ConditionType_Retain Variable.
        /// </summary>
        public static readonly NodeId ConditionType_Retain = new NodeId(Opc.Ua.Variables.ConditionType_Retain);

        /// <summary>
        /// The identifier for the ConditionType_EnabledState Variable.
        /// </summary>
        public static readonly NodeId ConditionType_EnabledState = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState);

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId ConditionType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_Id);

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_EffectiveDisplayName Variable.
        /// </summary>
        public static readonly NodeId ConditionType_EnabledState_EffectiveDisplayName = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_EffectiveDisplayName);

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId ConditionType_EnabledState_TransitionTime = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_TransitionTime);

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_EffectiveTransitionTime Variable.
        /// </summary>
        public static readonly NodeId ConditionType_EnabledState_EffectiveTransitionTime = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_EffectiveTransitionTime);

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_TrueState Variable.
        /// </summary>
        public static readonly NodeId ConditionType_EnabledState_TrueState = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_TrueState);

        /// <summary>
        /// The identifier for the ConditionType_EnabledState_FalseState Variable.
        /// </summary>
        public static readonly NodeId ConditionType_EnabledState_FalseState = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_FalseState);

        /// <summary>
        /// The identifier for the ConditionType_Quality Variable.
        /// </summary>
        public static readonly NodeId ConditionType_Quality = new NodeId(Opc.Ua.Variables.ConditionType_Quality);

        /// <summary>
        /// The identifier for the ConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ConditionType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ConditionType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the ConditionType_LastSeverity Variable.
        /// </summary>
        public static readonly NodeId ConditionType_LastSeverity = new NodeId(Opc.Ua.Variables.ConditionType_LastSeverity);

        /// <summary>
        /// The identifier for the ConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ConditionType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ConditionType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the ConditionType_Comment Variable.
        /// </summary>
        public static readonly NodeId ConditionType_Comment = new NodeId(Opc.Ua.Variables.ConditionType_Comment);

        /// <summary>
        /// The identifier for the ConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ConditionType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ConditionType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the ConditionType_ClientUserId Variable.
        /// </summary>
        public static readonly NodeId ConditionType_ClientUserId = new NodeId(Opc.Ua.Variables.ConditionType_ClientUserId);

        /// <summary>
        /// The identifier for the ConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConditionType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ConditionType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the ConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConditionType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ConditionType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the ConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConditionType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ConditionType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the DialogConditionType_EnabledState Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_EnabledState = new NodeId(Opc.Ua.Variables.DialogConditionType_EnabledState);

        /// <summary>
        /// The identifier for the DialogConditionType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_EnabledState_Id = new NodeId(Opc.Ua.Variables.DialogConditionType_EnabledState_Id);

        /// <summary>
        /// The identifier for the DialogConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.DialogConditionType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the DialogConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.DialogConditionType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the DialogConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.DialogConditionType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the DialogConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.DialogConditionType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the DialogConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.DialogConditionType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the DialogConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.DialogConditionType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_DialogState = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState);

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState_Id Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_DialogState_Id = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState_Id);

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_DialogState_TransitionTime = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState_TransitionTime);

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState_TrueState Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_DialogState_TrueState = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState_TrueState);

        /// <summary>
        /// The identifier for the DialogConditionType_DialogState_FalseState Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_DialogState_FalseState = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState_FalseState);

        /// <summary>
        /// The identifier for the DialogConditionType_Prompt Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_Prompt = new NodeId(Opc.Ua.Variables.DialogConditionType_Prompt);

        /// <summary>
        /// The identifier for the DialogConditionType_ResponseOptionSet Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_ResponseOptionSet = new NodeId(Opc.Ua.Variables.DialogConditionType_ResponseOptionSet);

        /// <summary>
        /// The identifier for the DialogConditionType_DefaultResponse Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_DefaultResponse = new NodeId(Opc.Ua.Variables.DialogConditionType_DefaultResponse);

        /// <summary>
        /// The identifier for the DialogConditionType_OkResponse Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_OkResponse = new NodeId(Opc.Ua.Variables.DialogConditionType_OkResponse);

        /// <summary>
        /// The identifier for the DialogConditionType_CancelResponse Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_CancelResponse = new NodeId(Opc.Ua.Variables.DialogConditionType_CancelResponse);

        /// <summary>
        /// The identifier for the DialogConditionType_LastResponse Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_LastResponse = new NodeId(Opc.Ua.Variables.DialogConditionType_LastResponse);

        /// <summary>
        /// The identifier for the DialogConditionType_Respond_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_Respond_InputArguments = new NodeId(Opc.Ua.Variables.DialogConditionType_Respond_InputArguments);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_EnabledState Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_EnabledState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_EnabledState);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_EnabledState_Id = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_EnabledState_Id);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AckedState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AckedState_Id = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState_Id);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AckedState_TransitionTime = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState_TransitionTime);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState_TrueState Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AckedState_TrueState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState_TrueState);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckedState_FalseState Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AckedState_FalseState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState_FalseState);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState_TransitionTime = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState_TransitionTime);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState_TrueState Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState_TrueState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState_TrueState);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmedState_FalseState Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState_FalseState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState_FalseState);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the AlarmConditionType_EnabledState Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_EnabledState = new NodeId(Opc.Ua.Variables.AlarmConditionType_EnabledState);

        /// <summary>
        /// The identifier for the AlarmConditionType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_EnabledState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_EnabledState_Id);

        /// <summary>
        /// The identifier for the AlarmConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.AlarmConditionType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the AlarmConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.AlarmConditionType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the AlarmConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.AlarmConditionType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the AlarmConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the AlarmConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the AlarmConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the AlarmConditionType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_AckedState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_AckedState_Id);

        /// <summary>
        /// The identifier for the AlarmConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the AlarmConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the AlarmConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ActiveState = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState);

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ActiveState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_Id);

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_EffectiveDisplayName Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ActiveState_EffectiveDisplayName = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_EffectiveDisplayName);

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ActiveState_TransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_TransitionTime);

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_EffectiveTransitionTime Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ActiveState_EffectiveTransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_EffectiveTransitionTime);

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_TrueState Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ActiveState_TrueState = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_TrueState);

        /// <summary>
        /// The identifier for the AlarmConditionType_ActiveState_FalseState Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ActiveState_FalseState = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_FalseState);

        /// <summary>
        /// The identifier for the AlarmConditionType_InputNode Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_InputNode = new NodeId(Opc.Ua.Variables.AlarmConditionType_InputNode);

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_SuppressedState = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState);

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_SuppressedState_TransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState_TransitionTime);

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState_TrueState Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_SuppressedState_TrueState = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState_TrueState);

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedState_FalseState Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_SuppressedState_FalseState = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState_FalseState);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_LastTransition Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_LastTransition = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_LastTransition);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_LastTransition_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_LastTransition_TransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_LastTransition_TransitionTime);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the AlarmConditionType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedOrShelved Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedOrShelved);

        /// <summary>
        /// The identifier for the AlarmConditionType_MaxTimeShelved Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_MaxTimeShelved = new NodeId(Opc.Ua.Variables.AlarmConditionType_MaxTimeShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_CurrentState_Id);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_LastTransition_Id);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_UnshelveTime = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_UnshelveTime);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelved_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_Unshelved_StateNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_Unshelved_StateNumber);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelved_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelved_StateNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_TimedShelved_StateNumber);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelved_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelved_StateNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_OneShotShelved_StateNumber);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the LimitAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the LimitAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.LimitAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the LimitAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.LimitAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the LimitAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.LimitAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the LimitAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the LimitAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the LimitAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the LimitAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the LimitAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the LimitAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the LimitAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the LimitAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the LimitAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the LimitAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the LimitAlarmType_HighHighLimit Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_HighHighLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_HighHighLimit);

        /// <summary>
        /// The identifier for the LimitAlarmType_HighLimit Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_HighLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_HighLimit);

        /// <summary>
        /// The identifier for the LimitAlarmType_LowLimit Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_LowLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_LowLimit);

        /// <summary>
        /// The identifier for the LimitAlarmType_LowLowLimit Variable.
        /// </summary>
        public static readonly NodeId LimitAlarmType_LowLowLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_LowLowLimit);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_CurrentState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_LastTransition_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighHigh_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_HighHigh_StateNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_HighHigh_StateNumber);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_High_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_High_StateNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_High_StateNumber);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_Low_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_Low_StateNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_Low_StateNumber);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowLow_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_LowLow_StateNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_LowLow_StateNumber);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber);

        /// <summary>
        /// The identifier for the ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ActiveState Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ActiveState = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ActiveState);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_CurrentState);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_CurrentState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_LastTransition Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_LastTransition = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_LastTransition);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_LastTransition_Id);

        /// <summary>
        /// The identifier for the ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ActiveState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ActiveState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ActiveState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState_TransitionTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState_TransitionTime);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState_TrueState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState_TrueState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState_TrueState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighHighState_FalseState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState_FalseState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState_FalseState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState_TransitionTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState_TransitionTime);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState_TrueState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState_TrueState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState_TrueState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_HighState_FalseState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState_FalseState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState_FalseState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState_TransitionTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState_TransitionTime);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState_TrueState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState_TrueState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState_TrueState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowState_FalseState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState_FalseState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState_FalseState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState_TransitionTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState_TransitionTime);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState_TrueState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState_TrueState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState_TrueState);

        /// <summary>
        /// The identifier for the NonExclusiveLimitAlarmType_LowLowState_FalseState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState_FalseState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState_FalseState);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_HighHighState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_HighHighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_HighHighState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_HighState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_HighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_HighState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_LowState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_LowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_LowState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveLevelAlarmType_LowLowState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveLevelAlarmType_LowLowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_LowLowState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_LimitState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_LimitState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_LimitState_CurrentState);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_LimitState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_LimitState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_LimitState_CurrentState_Id);

        /// <summary>
        /// The identifier for the ExclusiveLevelAlarmType_LimitState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveLevelAlarmType_LimitState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_LimitState_LastTransition_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_HighHighState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_HighHighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_HighHighState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_HighState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_HighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_HighState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_LowState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_LowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_LowState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_LowLowState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_LowLowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_LowLowState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveDeviationAlarmType_SetpointNode Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveDeviationAlarmType_SetpointNode = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_SetpointNode);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_LimitState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_LimitState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_LimitState_CurrentState);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_LimitState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_LimitState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_LimitState_CurrentState_Id);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_LimitState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_LimitState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_LimitState_LastTransition_Id);

        /// <summary>
        /// The identifier for the ExclusiveDeviationAlarmType_SetpointNode Variable.
        /// </summary>
        public static readonly NodeId ExclusiveDeviationAlarmType_SetpointNode = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_SetpointNode);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_HighHighState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_HighHighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_HighHighState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_HighState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_HighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_HighState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_LowState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_LowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_LowState_Id);

        /// <summary>
        /// The identifier for the NonExclusiveRateOfChangeAlarmType_LowLowState_Id Variable.
        /// </summary>
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_LowLowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_LowLowState_Id);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_LimitState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_LimitState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_LimitState_CurrentState);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id);

        /// <summary>
        /// The identifier for the ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the OffNormalAlarmType_NormalState Variable.
        /// </summary>
        public static readonly NodeId OffNormalAlarmType_NormalState = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_NormalState);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ExpirationDate Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ExpirationDate = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ExpirationDate);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_ExpirationLimit Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_ExpirationLimit = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ExpirationLimit);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_CertificateType Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_CertificateType = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_CertificateType);

        /// <summary>
        /// The identifier for the CertificateExpirationAlarmType_Certificate Variable.
        /// </summary>
        public static readonly NodeId CertificateExpirationAlarmType_Certificate = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Certificate);

        /// <summary>
        /// The identifier for the TripAlarmType_EnabledState_Id Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_EnabledState_Id);

        /// <summary>
        /// The identifier for the TripAlarmType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.TripAlarmType_Quality_SourceTimestamp);

        /// <summary>
        /// The identifier for the TripAlarmType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.TripAlarmType_LastSeverity_SourceTimestamp);

        /// <summary>
        /// The identifier for the TripAlarmType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.TripAlarmType_Comment_SourceTimestamp);

        /// <summary>
        /// The identifier for the TripAlarmType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the TripAlarmType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the TripAlarmType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_ConditionRefresh2_InputArguments);

        /// <summary>
        /// The identifier for the TripAlarmType_AckedState_Id Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_AckedState_Id);

        /// <summary>
        /// The identifier for the TripAlarmType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_ConfirmedState_Id);

        /// <summary>
        /// The identifier for the TripAlarmType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the TripAlarmType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the TripAlarmType_ActiveState_Id Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_ActiveState_Id);

        /// <summary>
        /// The identifier for the TripAlarmType_SuppressedState_Id Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_SuppressedState_Id);

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_CurrentState Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_CurrentState);

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_CurrentState_Id);

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_LastTransition_Id);

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_UnshelveTime Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_UnshelveTime);

        /// <summary>
        /// The identifier for the TripAlarmType_ShelvingState_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TripAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the AuditConditionCommentEventType_EventId Variable.
        /// </summary>
        public static readonly NodeId AuditConditionCommentEventType_EventId = new NodeId(Opc.Ua.Variables.AuditConditionCommentEventType_EventId);

        /// <summary>
        /// The identifier for the AuditConditionCommentEventType_Comment Variable.
        /// </summary>
        public static readonly NodeId AuditConditionCommentEventType_Comment = new NodeId(Opc.Ua.Variables.AuditConditionCommentEventType_Comment);

        /// <summary>
        /// The identifier for the AuditConditionRespondEventType_SelectedResponse Variable.
        /// </summary>
        public static readonly NodeId AuditConditionRespondEventType_SelectedResponse = new NodeId(Opc.Ua.Variables.AuditConditionRespondEventType_SelectedResponse);

        /// <summary>
        /// The identifier for the AuditConditionAcknowledgeEventType_EventId Variable.
        /// </summary>
        public static readonly NodeId AuditConditionAcknowledgeEventType_EventId = new NodeId(Opc.Ua.Variables.AuditConditionAcknowledgeEventType_EventId);

        /// <summary>
        /// The identifier for the AuditConditionAcknowledgeEventType_Comment Variable.
        /// </summary>
        public static readonly NodeId AuditConditionAcknowledgeEventType_Comment = new NodeId(Opc.Ua.Variables.AuditConditionAcknowledgeEventType_Comment);

        /// <summary>
        /// The identifier for the AuditConditionConfirmEventType_EventId Variable.
        /// </summary>
        public static readonly NodeId AuditConditionConfirmEventType_EventId = new NodeId(Opc.Ua.Variables.AuditConditionConfirmEventType_EventId);

        /// <summary>
        /// The identifier for the AuditConditionConfirmEventType_Comment Variable.
        /// </summary>
        public static readonly NodeId AuditConditionConfirmEventType_Comment = new NodeId(Opc.Ua.Variables.AuditConditionConfirmEventType_Comment);

        /// <summary>
        /// The identifier for the AuditConditionShelvingEventType_ShelvingTime Variable.
        /// </summary>
        public static readonly NodeId AuditConditionShelvingEventType_ShelvingTime = new NodeId(Opc.Ua.Variables.AuditConditionShelvingEventType_ShelvingTime);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_CurrentState = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_CurrentState);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_CurrentState_Id);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState_Number Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_CurrentState_Number = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_CurrentState_Number);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_LastTransition = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_LastTransition);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_LastTransition_Id);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_Number Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_LastTransition_Number = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_LastTransition_Number);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_LastTransition_TransitionTime = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_LastTransition_TransitionTime);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Creatable Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Creatable = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Creatable);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Deletable Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Deletable = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Deletable);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_AutoDelete Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_AutoDelete = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_AutoDelete);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RecycleCount Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RecycleCount = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_RecycleCount);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_InstanceCount Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_InstanceCount = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_InstanceCount);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_MaxInstanceCount Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_MaxInstanceCount = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_MaxInstanceCount);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_MaxRecycleCount Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_MaxRecycleCount = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_MaxRecycleCount);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_CreateSessionId Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_CreateSessionId = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_CreateSessionId);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_CreateClientName Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_CreateClientName = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_CreateClientName);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodCall Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_LastMethodCall = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_LastMethodCall);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Ready_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Ready_StateNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Ready_StateNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Running_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Running_StateNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Running_StateNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspended_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Suspended_StateNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Suspended_StateNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halted_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Halted_StateNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Halted_StateNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_HaltedToReady_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_HaltedToReady_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_HaltedToReady_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToRunning_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ReadyToRunning_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ReadyToRunning_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToHalted_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_RunningToHalted_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToReady_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToReady_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_RunningToReady_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToSuspended_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToSuspended_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_RunningToSuspended_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToRunning_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToRunning_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_SuspendedToRunning_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToHalted_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_SuspendedToHalted_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToReady_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToReady_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_SuspendedToReady_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ReadyToHalted_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ReadyToHalted_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_Transition_Id Variable.
        /// </summary>
        public static readonly NodeId ProgramTransitionEventType_Transition_Id = new NodeId(Opc.Ua.Variables.ProgramTransitionEventType_Transition_Id);

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_FromState_Id Variable.
        /// </summary>
        public static readonly NodeId ProgramTransitionEventType_FromState_Id = new NodeId(Opc.Ua.Variables.ProgramTransitionEventType_FromState_Id);

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_ToState_Id Variable.
        /// </summary>
        public static readonly NodeId ProgramTransitionEventType_ToState_Id = new NodeId(Opc.Ua.Variables.ProgramTransitionEventType_ToState_Id);

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_IntermediateResult Variable.
        /// </summary>
        public static readonly NodeId ProgramTransitionEventType_IntermediateResult = new NodeId(Opc.Ua.Variables.ProgramTransitionEventType_IntermediateResult);

        /// <summary>
        /// The identifier for the AuditProgramTransitionEventType_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId AuditProgramTransitionEventType_TransitionNumber = new NodeId(Opc.Ua.Variables.AuditProgramTransitionEventType_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType_Transition Variable.
        /// </summary>
        public static readonly NodeId ProgramTransitionAuditEventType_Transition = new NodeId(Opc.Ua.Variables.ProgramTransitionAuditEventType_Transition);

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType_Transition_Id Variable.
        /// </summary>
        public static readonly NodeId ProgramTransitionAuditEventType_Transition_Id = new NodeId(Opc.Ua.Variables.ProgramTransitionAuditEventType_Transition_Id);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_CreateSessionId Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_CreateSessionId = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_CreateSessionId);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_CreateClientName Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_CreateClientName = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_CreateClientName);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_InvocationCreationTime Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_InvocationCreationTime = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_InvocationCreationTime);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastTransitionTime Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastTransitionTime = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastTransitionTime);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodCall Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodCall = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodCall);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodSessionId Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodSessionId = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodSessionId);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodInputArguments Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodInputArguments = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodInputArguments);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodOutputArguments Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodOutputArguments = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodOutputArguments);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodCallTime Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodCallTime = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodCallTime);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodReturnStatus Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodReturnStatus = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodReturnStatus);

        /// <summary>
        /// The identifier for the Annotations Variable.
        /// </summary>
        public static readonly NodeId Annotations = new NodeId(Opc.Ua.Variables.Annotations);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_Stepped Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_Stepped = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_Stepped);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_Definition Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_Definition = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_Definition);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_MaxTimeInterval Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_MaxTimeInterval = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_MaxTimeInterval);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_MinTimeInterval Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_MinTimeInterval = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_MinTimeInterval);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_ExceptionDeviation Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_ExceptionDeviation = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_ExceptionDeviation);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_ExceptionDeviationFormat Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_ExceptionDeviationFormat = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_ExceptionDeviationFormat);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_StartOfArchive Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_StartOfArchive = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_StartOfArchive);

        /// <summary>
        /// The identifier for the HistoricalDataConfigurationType_StartOfOnlineArchive Variable.
        /// </summary>
        public static readonly NodeId HistoricalDataConfigurationType_StartOfOnlineArchive = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_StartOfOnlineArchive);

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration_TreatUncertainAsBad Variable.
        /// </summary>
        public static readonly NodeId HAConfiguration_AggregateConfiguration_TreatUncertainAsBad = new NodeId(Opc.Ua.Variables.HAConfiguration_AggregateConfiguration_TreatUncertainAsBad);

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration_PercentDataBad Variable.
        /// </summary>
        public static readonly NodeId HAConfiguration_AggregateConfiguration_PercentDataBad = new NodeId(Opc.Ua.Variables.HAConfiguration_AggregateConfiguration_PercentDataBad);

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration_PercentDataGood Variable.
        /// </summary>
        public static readonly NodeId HAConfiguration_AggregateConfiguration_PercentDataGood = new NodeId(Opc.Ua.Variables.HAConfiguration_AggregateConfiguration_PercentDataGood);

        /// <summary>
        /// The identifier for the HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation Variable.
        /// </summary>
        public static readonly NodeId HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation = new NodeId(Opc.Ua.Variables.HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation);

        /// <summary>
        /// The identifier for the HAConfiguration_Stepped Variable.
        /// </summary>
        public static readonly NodeId HAConfiguration_Stepped = new NodeId(Opc.Ua.Variables.HAConfiguration_Stepped);

        /// <summary>
        /// The identifier for the HistoricalEventFilter Variable.
        /// </summary>
        public static readonly NodeId HistoricalEventFilter = new NodeId(Opc.Ua.Variables.HistoricalEventFilter);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AccessHistoryDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_AccessHistoryDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_AccessHistoryDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AccessHistoryEventsCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_AccessHistoryEventsCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_AccessHistoryEventsCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_MaxReturnDataValues Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_MaxReturnDataValues = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_MaxReturnDataValues);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_MaxReturnEventValues Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_MaxReturnEventValues = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_MaxReturnEventValues);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_InsertDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_InsertDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_InsertDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_ReplaceDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_ReplaceDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_ReplaceDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_UpdateDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_UpdateDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_UpdateDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteRawCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_DeleteRawCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_DeleteRawCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteAtTimeCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_DeleteAtTimeCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_DeleteAtTimeCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_InsertEventCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_InsertEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_InsertEventCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_ReplaceEventCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_ReplaceEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_ReplaceEventCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_UpdateEventCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_UpdateEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_UpdateEventCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteEventCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_DeleteEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_DeleteEventCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_InsertAnnotationCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_InsertAnnotationCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_InsertAnnotationCapability);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_UpdatedNode Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_UpdatedNode = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_UpdatedNode);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_PerformInsertReplace Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_PerformInsertReplace = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_PerformInsertReplace);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_Filter Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_Filter = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_Filter);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_NewValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_NewValues = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_NewValues);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_OldValues);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_UpdatedNode Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType_UpdatedNode = new NodeId(Opc.Ua.Variables.AuditHistoryValueUpdateEventType_UpdatedNode);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_PerformInsertReplace Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType_PerformInsertReplace = new NodeId(Opc.Ua.Variables.AuditHistoryValueUpdateEventType_PerformInsertReplace);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_NewValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType_NewValues = new NodeId(Opc.Ua.Variables.AuditHistoryValueUpdateEventType_NewValues);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryValueUpdateEventType_OldValues);

        /// <summary>
        /// The identifier for the AuditHistoryDeleteEventType_UpdatedNode Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryDeleteEventType_UpdatedNode = new NodeId(Opc.Ua.Variables.AuditHistoryDeleteEventType_UpdatedNode);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_IsDeleteModified Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_IsDeleteModified = new NodeId(Opc.Ua.Variables.AuditHistoryRawModifyDeleteEventType_IsDeleteModified);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_StartTime Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_StartTime = new NodeId(Opc.Ua.Variables.AuditHistoryRawModifyDeleteEventType_StartTime);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_EndTime Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_EndTime = new NodeId(Opc.Ua.Variables.AuditHistoryRawModifyDeleteEventType_EndTime);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryRawModifyDeleteEventType_OldValues);

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType_ReqTimes Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryAtTimeDeleteEventType_ReqTimes = new NodeId(Opc.Ua.Variables.AuditHistoryAtTimeDeleteEventType_ReqTimes);

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryAtTimeDeleteEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryAtTimeDeleteEventType_OldValues);

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType_EventIds Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventDeleteEventType_EventIds = new NodeId(Opc.Ua.Variables.AuditHistoryEventDeleteEventType_EventIds);

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventDeleteEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryEventDeleteEventType_OldValues);

        /// <summary>
        /// The identifier for the TrustListType_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_Open_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Open_InputArguments);

        /// <summary>
        /// The identifier for the TrustListType_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_Open_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Open_OutputArguments);

        /// <summary>
        /// The identifier for the TrustListType_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_Close_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Close_InputArguments);

        /// <summary>
        /// The identifier for the TrustListType_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_Read_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Read_InputArguments);

        /// <summary>
        /// The identifier for the TrustListType_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_Read_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Read_OutputArguments);

        /// <summary>
        /// The identifier for the TrustListType_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_Write_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Write_InputArguments);

        /// <summary>
        /// The identifier for the TrustListType_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the TrustListType_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the TrustListType_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the TrustListType_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId TrustListType_LastUpdateTime = new NodeId(Opc.Ua.Variables.TrustListType_LastUpdateTime);

        /// <summary>
        /// The identifier for the TrustListType_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the TrustListType_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the TrustListType_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the TrustListType_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the TrustListType_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the TrustListType_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TrustListType_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the TrustListMasks_EnumValues Variable.
        /// </summary>
        public static readonly NodeId TrustListMasks_EnumValues = new NodeId(Opc.Ua.Variables.TrustListMasks_EnumValues);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Size);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Writable);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupType_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupType_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateTypes);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes);

        /// <summary>
        /// The identifier for the ServerConfigurationType_ServerCapabilities Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_ServerCapabilities = new NodeId(Opc.Ua.Variables.ServerConfigurationType_ServerCapabilities);

        /// <summary>
        /// The identifier for the ServerConfigurationType_SupportedPrivateKeyFormats Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_SupportedPrivateKeyFormats = new NodeId(Opc.Ua.Variables.ServerConfigurationType_SupportedPrivateKeyFormats);

        /// <summary>
        /// The identifier for the ServerConfigurationType_MaxTrustListSize Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_MaxTrustListSize = new NodeId(Opc.Ua.Variables.ServerConfigurationType_MaxTrustListSize);

        /// <summary>
        /// The identifier for the ServerConfigurationType_MulticastDnsEnabled Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_MulticastDnsEnabled = new NodeId(Opc.Ua.Variables.ServerConfigurationType_MulticastDnsEnabled);

        /// <summary>
        /// The identifier for the ServerConfigurationType_UpdateCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_UpdateCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_UpdateCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_UpdateCertificate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_UpdateCertificate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_UpdateCertificate_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CreateSigningRequest_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CreateSigningRequest_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CreateSigningRequest_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_CreateSigningRequest_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_CreateSigningRequest_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CreateSigningRequest_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfigurationType_GetRejectedList_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfigurationType_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_GetRejectedList_OutputArguments);

        /// <summary>
        /// The identifier for the CertificateUpdatedAuditEventType_CertificateGroup Variable.
        /// </summary>
        public static readonly NodeId CertificateUpdatedAuditEventType_CertificateGroup = new NodeId(Opc.Ua.Variables.CertificateUpdatedAuditEventType_CertificateGroup);

        /// <summary>
        /// The identifier for the CertificateUpdatedAuditEventType_CertificateType Variable.
        /// </summary>
        public static readonly NodeId CertificateUpdatedAuditEventType_CertificateType = new NodeId(Opc.Ua.Variables.CertificateUpdatedAuditEventType_CertificateType);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes);

        /// <summary>
        /// The identifier for the ServerConfiguration_ServerCapabilities Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_ServerCapabilities = new NodeId(Opc.Ua.Variables.ServerConfiguration_ServerCapabilities);

        /// <summary>
        /// The identifier for the ServerConfiguration_SupportedPrivateKeyFormats Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_SupportedPrivateKeyFormats = new NodeId(Opc.Ua.Variables.ServerConfiguration_SupportedPrivateKeyFormats);

        /// <summary>
        /// The identifier for the ServerConfiguration_MaxTrustListSize Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_MaxTrustListSize = new NodeId(Opc.Ua.Variables.ServerConfiguration_MaxTrustListSize);

        /// <summary>
        /// The identifier for the ServerConfiguration_MulticastDnsEnabled Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_MulticastDnsEnabled = new NodeId(Opc.Ua.Variables.ServerConfiguration_MulticastDnsEnabled);

        /// <summary>
        /// The identifier for the ServerConfiguration_UpdateCertificate_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_UpdateCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_UpdateCertificate_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_UpdateCertificate_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_UpdateCertificate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_UpdateCertificate_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CreateSigningRequest_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CreateSigningRequest_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CreateSigningRequest_InputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_CreateSigningRequest_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_CreateSigningRequest_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CreateSigningRequest_OutputArguments);

        /// <summary>
        /// The identifier for the ServerConfiguration_GetRejectedList_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ServerConfiguration_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_GetRejectedList_OutputArguments);

        /// <summary>
        /// The identifier for the AggregateConfigurationType_TreatUncertainAsBad Variable.
        /// </summary>
        public static readonly NodeId AggregateConfigurationType_TreatUncertainAsBad = new NodeId(Opc.Ua.Variables.AggregateConfigurationType_TreatUncertainAsBad);

        /// <summary>
        /// The identifier for the AggregateConfigurationType_PercentDataBad Variable.
        /// </summary>
        public static readonly NodeId AggregateConfigurationType_PercentDataBad = new NodeId(Opc.Ua.Variables.AggregateConfigurationType_PercentDataBad);

        /// <summary>
        /// The identifier for the AggregateConfigurationType_PercentDataGood Variable.
        /// </summary>
        public static readonly NodeId AggregateConfigurationType_PercentDataGood = new NodeId(Opc.Ua.Variables.AggregateConfigurationType_PercentDataGood);

        /// <summary>
        /// The identifier for the AggregateConfigurationType_UseSlopedExtrapolation Variable.
        /// </summary>
        public static readonly NodeId AggregateConfigurationType_UseSlopedExtrapolation = new NodeId(Opc.Ua.Variables.AggregateConfigurationType_UseSlopedExtrapolation);

        /// <summary>
        /// The identifier for the StructureType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId StructureType_EnumStrings = new NodeId(Opc.Ua.Variables.StructureType_EnumStrings);

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_Identities Variable.
        /// </summary>
        public static readonly NodeId RoleFolderType_RoleName_Placeholder_Identities = new NodeId(Opc.Ua.Variables.RoleFolderType_RoleName_Placeholder_Identities);

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_AddIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId RoleFolderType_RoleName_Placeholder_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.RoleFolderType_RoleName_Placeholder_AddIdentity_InputArguments);

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId RoleFolderType_RoleName_Placeholder_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.RoleFolderType_RoleName_Placeholder_RemoveIdentity_InputArguments);

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_AddApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId RoleFolderType_RoleName_Placeholder_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.RoleFolderType_RoleName_Placeholder_AddApplication_InputArguments);

        /// <summary>
        /// The identifier for the RoleFolderType_RoleName_Placeholder_RemoveApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId RoleFolderType_RoleName_Placeholder_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.RoleFolderType_RoleName_Placeholder_RemoveApplication_InputArguments);

        /// <summary>
        /// The identifier for the RoleType_Identities Variable.
        /// </summary>
        public static readonly NodeId RoleType_Identities = new NodeId(Opc.Ua.Variables.RoleType_Identities);

        /// <summary>
        /// The identifier for the RoleType_Applications Variable.
        /// </summary>
        public static readonly NodeId RoleType_Applications = new NodeId(Opc.Ua.Variables.RoleType_Applications);

        /// <summary>
        /// The identifier for the RoleType_Endpoints Variable.
        /// </summary>
        public static readonly NodeId RoleType_Endpoints = new NodeId(Opc.Ua.Variables.RoleType_Endpoints);

        /// <summary>
        /// The identifier for the RoleType_AddIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId RoleType_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_AddIdentity_InputArguments);

        /// <summary>
        /// The identifier for the RoleType_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId RoleType_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_RemoveIdentity_InputArguments);

        /// <summary>
        /// The identifier for the RoleType_AddApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId RoleType_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_AddApplication_InputArguments);

        /// <summary>
        /// The identifier for the RoleType_RemoveApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId RoleType_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_RemoveApplication_InputArguments);

        /// <summary>
        /// The identifier for the IdentityCriteriaType_EnumValues Variable.
        /// </summary>
        public static readonly NodeId IdentityCriteriaType_EnumValues = new NodeId(Opc.Ua.Variables.IdentityCriteriaType_EnumValues);

        /// <summary>
        /// The identifier for the Anonymous_Identities Variable.
        /// </summary>
        public static readonly NodeId Anonymous_Identities = new NodeId(Opc.Ua.Variables.Anonymous_Identities);

        /// <summary>
        /// The identifier for the Anonymous_AddIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Anonymous_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.Anonymous_AddIdentity_InputArguments);

        /// <summary>
        /// The identifier for the Anonymous_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Anonymous_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.Anonymous_RemoveIdentity_InputArguments);

        /// <summary>
        /// The identifier for the Anonymous_AddApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Anonymous_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.Anonymous_AddApplication_InputArguments);

        /// <summary>
        /// The identifier for the Anonymous_RemoveApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Anonymous_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.Anonymous_RemoveApplication_InputArguments);

        /// <summary>
        /// The identifier for the AuthenticatedUsers_Identities Variable.
        /// </summary>
        public static readonly NodeId AuthenticatedUsers_Identities = new NodeId(Opc.Ua.Variables.AuthenticatedUsers_Identities);

        /// <summary>
        /// The identifier for the AuthenticatedUsers_AddIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AuthenticatedUsers_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.AuthenticatedUsers_AddIdentity_InputArguments);

        /// <summary>
        /// The identifier for the AuthenticatedUsers_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AuthenticatedUsers_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.AuthenticatedUsers_RemoveIdentity_InputArguments);

        /// <summary>
        /// The identifier for the AuthenticatedUsers_AddApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AuthenticatedUsers_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.AuthenticatedUsers_AddApplication_InputArguments);

        /// <summary>
        /// The identifier for the AuthenticatedUsers_RemoveApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AuthenticatedUsers_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.AuthenticatedUsers_RemoveApplication_InputArguments);

        /// <summary>
        /// The identifier for the Observer_Identities Variable.
        /// </summary>
        public static readonly NodeId Observer_Identities = new NodeId(Opc.Ua.Variables.Observer_Identities);

        /// <summary>
        /// The identifier for the Observer_AddIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Observer_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.Observer_AddIdentity_InputArguments);

        /// <summary>
        /// The identifier for the Observer_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Observer_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.Observer_RemoveIdentity_InputArguments);

        /// <summary>
        /// The identifier for the Observer_AddApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Observer_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.Observer_AddApplication_InputArguments);

        /// <summary>
        /// The identifier for the Observer_RemoveApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Observer_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.Observer_RemoveApplication_InputArguments);

        /// <summary>
        /// The identifier for the Operator_Identities Variable.
        /// </summary>
        public static readonly NodeId Operator_Identities = new NodeId(Opc.Ua.Variables.Operator_Identities);

        /// <summary>
        /// The identifier for the Operator_AddIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Operator_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.Operator_AddIdentity_InputArguments);

        /// <summary>
        /// The identifier for the Operator_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Operator_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.Operator_RemoveIdentity_InputArguments);

        /// <summary>
        /// The identifier for the Operator_AddApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Operator_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.Operator_AddApplication_InputArguments);

        /// <summary>
        /// The identifier for the Operator_RemoveApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Operator_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.Operator_RemoveApplication_InputArguments);

        /// <summary>
        /// The identifier for the Supervisor_Identities Variable.
        /// </summary>
        public static readonly NodeId Supervisor_Identities = new NodeId(Opc.Ua.Variables.Supervisor_Identities);

        /// <summary>
        /// The identifier for the Supervisor_AddIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Supervisor_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.Supervisor_AddIdentity_InputArguments);

        /// <summary>
        /// The identifier for the Supervisor_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Supervisor_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.Supervisor_RemoveIdentity_InputArguments);

        /// <summary>
        /// The identifier for the Supervisor_AddApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Supervisor_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.Supervisor_AddApplication_InputArguments);

        /// <summary>
        /// The identifier for the Supervisor_RemoveApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId Supervisor_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.Supervisor_RemoveApplication_InputArguments);

        /// <summary>
        /// The identifier for the SecurityAdmin_Identities Variable.
        /// </summary>
        public static readonly NodeId SecurityAdmin_Identities = new NodeId(Opc.Ua.Variables.SecurityAdmin_Identities);

        /// <summary>
        /// The identifier for the SecurityAdmin_AddIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityAdmin_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.SecurityAdmin_AddIdentity_InputArguments);

        /// <summary>
        /// The identifier for the SecurityAdmin_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityAdmin_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.SecurityAdmin_RemoveIdentity_InputArguments);

        /// <summary>
        /// The identifier for the SecurityAdmin_AddApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityAdmin_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.SecurityAdmin_AddApplication_InputArguments);

        /// <summary>
        /// The identifier for the SecurityAdmin_RemoveApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityAdmin_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.SecurityAdmin_RemoveApplication_InputArguments);

        /// <summary>
        /// The identifier for the ConfigureAdmin_Identities Variable.
        /// </summary>
        public static readonly NodeId ConfigureAdmin_Identities = new NodeId(Opc.Ua.Variables.ConfigureAdmin_Identities);

        /// <summary>
        /// The identifier for the ConfigureAdmin_AddIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConfigureAdmin_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.ConfigureAdmin_AddIdentity_InputArguments);

        /// <summary>
        /// The identifier for the ConfigureAdmin_RemoveIdentity_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConfigureAdmin_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.ConfigureAdmin_RemoveIdentity_InputArguments);

        /// <summary>
        /// The identifier for the ConfigureAdmin_AddApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConfigureAdmin_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.ConfigureAdmin_AddApplication_InputArguments);

        /// <summary>
        /// The identifier for the ConfigureAdmin_RemoveApplication_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConfigureAdmin_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.ConfigureAdmin_RemoveApplication_InputArguments);

        /// <summary>
        /// The identifier for the DataSetFieldFlags_EnumValues Variable.
        /// </summary>
        public static readonly NodeId DataSetFieldFlags_EnumValues = new NodeId(Opc.Ua.Variables.DataSetFieldFlags_EnumValues);

        /// <summary>
        /// The identifier for the DataSetContentMask_EnumValues Variable.
        /// </summary>
        public static readonly NodeId DataSetContentMask_EnumValues = new NodeId(Opc.Ua.Variables.DataSetContentMask_EnumValues);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityKeys_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_GetSecurityKeys_InputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_GetSecurityKeys_InputArguments);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityKeys_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_GetSecurityKeys_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_GetSecurityKeys_OutputArguments);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_GetSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_GetSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_GetSecurityGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_GetSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_GetSecurityGroup_OutputArguments);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_OutputArguments);

        /// <summary>
        /// The identifier for the PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_OutputArguments);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityGroupId = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityGroupId);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_AddSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_AddSecurityGroup_OutputArguments);

        /// <summary>
        /// The identifier for the SecurityGroupFolderType_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId SecurityGroupFolderType_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_RemoveSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the SecurityGroupType_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId SecurityGroupType_SecurityGroupId = new NodeId(Opc.Ua.Variables.SecurityGroupType_SecurityGroupId);

        /// <summary>
        /// The identifier for the PublishSubscribeType_GetSecurityKeys_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_GetSecurityKeys_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_GetSecurityKeys_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_GetSecurityKeys_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_GetSecurityKeys_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_GetSecurityKeys_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_GetSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_GetSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_GetSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_GetSecurityGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_GetSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_GetSecurityGroup_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_SecurityGroups_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_SecurityGroups_AddSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_SecurityGroups_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_SecurityGroups_AddSecurityGroup_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_SecurityGroups_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_SecurityGroups_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_SecurityGroups_RemoveSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_PublisherId Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_PublisherId = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_PublisherId);

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_Address Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Address = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Address);

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the PublishSubscribeType_ConnectionName_Placeholder_RemoveGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_RemoveGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_RemoveGroup_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddUadpConnection_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_AddUadpConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_AddUadpConnection_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddUadpConnection_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_AddUadpConnection_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_AddUadpConnection_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddBrokerConnection_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_AddBrokerConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_AddBrokerConnection_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_AddBrokerConnection_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_AddBrokerConnection_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_AddBrokerConnection_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_RemoveConnection_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_RemoveConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_RemoveConnection_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_AddPublishedEvents_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedEvents_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedEvents_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_AddPublishedEvents_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedEvents_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedEvents_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_PublishedDataSets_RemovePublishedDataSet_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_RemovePublishedDataSet_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_RemovePublishedDataSet_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribeType_Status_State Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_Status_State = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Status_State);

        /// <summary>
        /// The identifier for the PublishSubscribeType_DefaultPublisherId Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribeType_DefaultPublisherId = new NodeId(Opc.Ua.Variables.PublishSubscribeType_DefaultPublisherId);

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityKeys_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_GetSecurityKeys_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_GetSecurityKeys_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityKeys_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_GetSecurityKeys_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_GetSecurityKeys_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_GetSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_GetSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_GetSecurityGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_GetSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_GetSecurityGroup_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_AddSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_SecurityGroups_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_SecurityGroups_AddSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_AddSecurityGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_SecurityGroups_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_SecurityGroups_AddSecurityGroup_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_SecurityGroups_RemoveSecurityGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_SecurityGroups_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_SecurityGroups_RemoveSecurityGroup_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_PublisherId Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_PublisherId = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_PublisherId);

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_Address Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Address = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Address);

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the PublishSubscribe_ConnectionName_Placeholder_RemoveGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_RemoveGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_RemoveGroup_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_AddUadpConnection_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_AddUadpConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_AddUadpConnection_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_AddUadpConnection_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_AddUadpConnection_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_AddUadpConnection_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_AddBrokerConnection_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_AddBrokerConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_AddBrokerConnection_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_AddBrokerConnection_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_AddBrokerConnection_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_AddBrokerConnection_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_RemoveConnection_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_RemoveConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_RemoveConnection_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_AddPublishedDataItems_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedDataItems_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedDataItems_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_AddPublishedDataItems_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedDataItems_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedDataItems_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_AddPublishedEvents_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedEvents_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedEvents_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_AddPublishedEvents_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedEvents_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedEvents_OutputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_PublishedDataSets_RemovePublishedDataSet_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_PublishedDataSets_RemovePublishedDataSet_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_RemovePublishedDataSet_InputArguments);

        /// <summary>
        /// The identifier for the PublishSubscribe_Status_State Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_Status_State = new NodeId(Opc.Ua.Variables.PublishSubscribe_Status_State);

        /// <summary>
        /// The identifier for the PublishSubscribe_DefaultPublisherId Variable.
        /// </summary>
        public static readonly NodeId PublishSubscribe_DefaultPublisherId = new NodeId(Opc.Ua.Variables.PublishSubscribe_DefaultPublisherId);

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_DataSetContentMask = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_DataSetContentMask);

        /// <summary>
        /// The identifier for the PublishedDataSetType_ConfigurationVersion Variable.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_ConfigurationVersion = new NodeId(Opc.Ua.Variables.PublishedDataSetType_ConfigurationVersion);

        /// <summary>
        /// The identifier for the PublishedDataSetType_DataSetMetaData Variable.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_DataSetMetaData = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetMetaData);

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_ExtensionFields_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataSetType_ExtensionFields_AddExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_ExtensionFields_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedDataSetType_ExtensionFields_AddExtensionField_OutputArguments);

        /// <summary>
        /// The identifier for the PublishedDataSetType_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataSetType_ExtensionFields_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataSetType_ExtensionFields_RemoveExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the ExtensionFieldsType_ExtensionFieldName_Placeholder Variable.
        /// </summary>
        public static readonly NodeId ExtensionFieldsType_ExtensionFieldName_Placeholder = new NodeId(Opc.Ua.Variables.ExtensionFieldsType_ExtensionFieldName_Placeholder);

        /// <summary>
        /// The identifier for the ExtensionFieldsType_AddExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExtensionFieldsType_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.ExtensionFieldsType_AddExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the ExtensionFieldsType_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ExtensionFieldsType_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.ExtensionFieldsType_AddExtensionField_OutputArguments);

        /// <summary>
        /// The identifier for the ExtensionFieldsType_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ExtensionFieldsType_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.ExtensionFieldsType_RemoveExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetContentMask = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetContentMask);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_ExtensionFields_AddExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_ExtensionFields_AddExtensionField_OutputArguments);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_ExtensionFields_RemoveExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_PublishedData Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_PublishedData = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_PublishedData);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_AddVariables_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_AddVariables_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_AddVariables_InputArguments);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_AddVariables_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_AddVariables_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_AddVariables_OutputArguments);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_RemoveVariables_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_RemoveVariables_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_RemoveVariables_InputArguments);

        /// <summary>
        /// The identifier for the PublishedDataItemsType_RemoveVariables_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedDataItemsType_RemoveVariables_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_RemoveVariables_OutputArguments);

        /// <summary>
        /// The identifier for the PublishedEventsType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the PublishedEventsType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_DataSetContentMask = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_DataSetContentMask);

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_ExtensionFields_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ExtensionFields_AddExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_ExtensionFields_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ExtensionFields_AddExtensionField_OutputArguments);

        /// <summary>
        /// The identifier for the PublishedEventsType_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_ExtensionFields_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ExtensionFields_RemoveExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the PublishedEventsType_EventNotifier Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_EventNotifier = new NodeId(Opc.Ua.Variables.PublishedEventsType_EventNotifier);

        /// <summary>
        /// The identifier for the PublishedEventsType_SelectedFields Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_SelectedFields = new NodeId(Opc.Ua.Variables.PublishedEventsType_SelectedFields);

        /// <summary>
        /// The identifier for the PublishedEventsType_Filter Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_Filter = new NodeId(Opc.Ua.Variables.PublishedEventsType_Filter);

        /// <summary>
        /// The identifier for the PublishedEventsType_ModifyFieldSelection_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_ModifyFieldSelection_InputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ModifyFieldSelection_InputArguments);

        /// <summary>
        /// The identifier for the PublishedEventsType_ModifyFieldSelection_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PublishedEventsType_ModifyFieldSelection_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ModifyFieldSelection_OutputArguments);

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId DataSetClassType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.DataSetClassType_DataSetWriterName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public static readonly NodeId DataSetClassType_DataSetWriterName_Placeholder_DataSetContentMask = new NodeId(Opc.Ua.Variables.DataSetClassType_DataSetWriterName_Placeholder_DataSetContentMask);

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetClassType_ExtensionFields_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.DataSetClassType_ExtensionFields_AddExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetClassType_ExtensionFields_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetClassType_ExtensionFields_AddExtensionField_OutputArguments);

        /// <summary>
        /// The identifier for the DataSetClassType_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetClassType_ExtensionFields_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.DataSetClassType_ExtensionFields_RemoveExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the DataSetClassType_DataSetClassId Variable.
        /// </summary>
        public static readonly NodeId DataSetClassType_DataSetClassId = new NodeId(Opc.Ua.Variables.DataSetClassType_DataSetClassId);

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_InputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_OutputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_InputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_OutputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet_InputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ConfigurationVersion Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ConfigurationVersion = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_ConfigurationVersion);

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_DataSetMetaData Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_DataSetMetaData = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_DataSetMetaData);

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_OutputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField_InputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedDataItems_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_AddPublishedDataItems_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedDataItems_InputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedDataItems_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_AddPublishedDataItems_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedDataItems_OutputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedEvents_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_AddPublishedEvents_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedEvents_InputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_AddPublishedEvents_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_AddPublishedEvents_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedEvents_OutputArguments);

        /// <summary>
        /// The identifier for the DataSetFolderType_RemovePublishedDataSet_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetFolderType_RemovePublishedDataSet_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_RemovePublishedDataSet_InputArguments);

        /// <summary>
        /// The identifier for the PubSubConnectionType_PublisherId Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_PublisherId = new NodeId(Opc.Ua.Variables.PubSubConnectionType_PublisherId);

        /// <summary>
        /// The identifier for the PubSubConnectionType_Address Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_Address = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Address);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_PublishingInterval Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_PublishingInterval = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_PublishingInterval);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_KeepAliveTime Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_KeepAliveTime = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_KeepAliveTime);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_EncodingMimeType Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_EncodingMimeType = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_EncodingMimeType);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_Priority Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_Priority = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_Priority);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_LocaleIds Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_LocaleIds = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_LocaleIds);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_SecurityMode = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_SecurityMode);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_SecurityGroupId = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_SecurityGroupId);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments);

        /// <summary>
        /// The identifier for the PubSubConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments);

        /// <summary>
        /// The identifier for the PubSubConnectionType_Status_State Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_Status_State = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Status_State);

        /// <summary>
        /// The identifier for the PubSubConnectionType_RemoveGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubConnectionType_RemoveGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_RemoveGroup_InputArguments);

        /// <summary>
        /// The identifier for the PubSubGroupType_PublishingInterval Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_PublishingInterval = new NodeId(Opc.Ua.Variables.PubSubGroupType_PublishingInterval);

        /// <summary>
        /// The identifier for the PubSubGroupType_KeepAliveTime Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_KeepAliveTime = new NodeId(Opc.Ua.Variables.PubSubGroupType_KeepAliveTime);

        /// <summary>
        /// The identifier for the PubSubGroupType_EncodingMimeType Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_EncodingMimeType = new NodeId(Opc.Ua.Variables.PubSubGroupType_EncodingMimeType);

        /// <summary>
        /// The identifier for the PubSubGroupType_Priority Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_Priority = new NodeId(Opc.Ua.Variables.PubSubGroupType_Priority);

        /// <summary>
        /// The identifier for the PubSubGroupType_LocaleIds Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_LocaleIds = new NodeId(Opc.Ua.Variables.PubSubGroupType_LocaleIds);

        /// <summary>
        /// The identifier for the PubSubGroupType_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_SecurityMode = new NodeId(Opc.Ua.Variables.PubSubGroupType_SecurityMode);

        /// <summary>
        /// The identifier for the PubSubGroupType_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_SecurityGroupId = new NodeId(Opc.Ua.Variables.PubSubGroupType_SecurityGroupId);

        /// <summary>
        /// The identifier for the PubSubGroupType_SecurityKeyServices Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_SecurityKeyServices = new NodeId(Opc.Ua.Variables.PubSubGroupType_SecurityKeyServices);

        /// <summary>
        /// The identifier for the PubSubGroupType_Status_State Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_Status_State = new NodeId(Opc.Ua.Variables.PubSubGroupType_Status_State);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetWriterName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetWriterName_Placeholder_DataSetContentMask = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetWriterName_Placeholder_DataSetContentMask);

        /// <summary>
        /// The identifier for the PubSubGroupType_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_RemoveDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.PubSubGroupType_RemoveDataSetWriter_InputArguments);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetReaderName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_SecurityMode = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetReaderName_Placeholder_SecurityMode);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_SecurityGroupId = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetReaderName_Placeholder_SecurityGroupId);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments);

        /// <summary>
        /// The identifier for the PubSubGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments = new NodeId(Opc.Ua.Variables.PubSubGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments);

        /// <summary>
        /// The identifier for the PubSubGroupType_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public static readonly NodeId PubSubGroupType_RemoveDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.PubSubGroupType_RemoveDataSetReader_InputArguments);

        /// <summary>
        /// The identifier for the DataSetWriterType_Status_State Variable.
        /// </summary>
        public static readonly NodeId DataSetWriterType_Status_State = new NodeId(Opc.Ua.Variables.DataSetWriterType_Status_State);

        /// <summary>
        /// The identifier for the DataSetWriterType_DataSetContentMask Variable.
        /// </summary>
        public static readonly NodeId DataSetWriterType_DataSetContentMask = new NodeId(Opc.Ua.Variables.DataSetWriterType_DataSetContentMask);

        /// <summary>
        /// The identifier for the DataSetWriterTransportType_KeyFrameCount Variable.
        /// </summary>
        public static readonly NodeId DataSetWriterTransportType_KeyFrameCount = new NodeId(Opc.Ua.Variables.DataSetWriterTransportType_KeyFrameCount);

        /// <summary>
        /// The identifier for the DataSetReaderType_Status_State Variable.
        /// </summary>
        public static readonly NodeId DataSetReaderType_Status_State = new NodeId(Opc.Ua.Variables.DataSetReaderType_Status_State);

        /// <summary>
        /// The identifier for the DataSetReaderType_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SecurityMode = new NodeId(Opc.Ua.Variables.DataSetReaderType_SecurityMode);

        /// <summary>
        /// The identifier for the DataSetReaderType_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SecurityGroupId = new NodeId(Opc.Ua.Variables.DataSetReaderType_SecurityGroupId);

        /// <summary>
        /// The identifier for the DataSetReaderType_SecurityKeyServices Variable.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SecurityKeyServices = new NodeId(Opc.Ua.Variables.DataSetReaderType_SecurityKeyServices);

        /// <summary>
        /// The identifier for the DataSetReaderType_SubscribedDataSet_DataSetMetaData Variable.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SubscribedDataSet_DataSetMetaData = new NodeId(Opc.Ua.Variables.DataSetReaderType_SubscribedDataSet_DataSetMetaData);

        /// <summary>
        /// The identifier for the DataSetReaderType_SubscribedDataSet_MessageReceiveTimeout Variable.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SubscribedDataSet_MessageReceiveTimeout = new NodeId(Opc.Ua.Variables.DataSetReaderType_SubscribedDataSet_MessageReceiveTimeout);

        /// <summary>
        /// The identifier for the DataSetReaderType_SetConnectVariables_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SetConnectVariables_InputArguments = new NodeId(Opc.Ua.Variables.DataSetReaderType_SetConnectVariables_InputArguments);

        /// <summary>
        /// The identifier for the DataSetReaderType_SetConnectVariables_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SetConnectVariables_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetReaderType_SetConnectVariables_OutputArguments);

        /// <summary>
        /// The identifier for the DataSetReaderType_SetDataSetMirror_InputArguments Variable.
        /// </summary>
        public static readonly NodeId DataSetReaderType_SetDataSetMirror_InputArguments = new NodeId(Opc.Ua.Variables.DataSetReaderType_SetDataSetMirror_InputArguments);

        /// <summary>
        /// The identifier for the SubscribedDataSetType_DataSetMetaData Variable.
        /// </summary>
        public static readonly NodeId SubscribedDataSetType_DataSetMetaData = new NodeId(Opc.Ua.Variables.SubscribedDataSetType_DataSetMetaData);

        /// <summary>
        /// The identifier for the SubscribedDataSetType_MessageReceiveTimeout Variable.
        /// </summary>
        public static readonly NodeId SubscribedDataSetType_MessageReceiveTimeout = new NodeId(Opc.Ua.Variables.SubscribedDataSetType_MessageReceiveTimeout);

        /// <summary>
        /// The identifier for the ConnectedVariablesType_ConnectedVariables Variable.
        /// </summary>
        public static readonly NodeId ConnectedVariablesType_ConnectedVariables = new NodeId(Opc.Ua.Variables.ConnectedVariablesType_ConnectedVariables);

        /// <summary>
        /// The identifier for the ConnectedVariablesType_AddDataConnections_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConnectedVariablesType_AddDataConnections_InputArguments = new NodeId(Opc.Ua.Variables.ConnectedVariablesType_AddDataConnections_InputArguments);

        /// <summary>
        /// The identifier for the ConnectedVariablesType_AddDataConnections_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ConnectedVariablesType_AddDataConnections_OutputArguments = new NodeId(Opc.Ua.Variables.ConnectedVariablesType_AddDataConnections_OutputArguments);

        /// <summary>
        /// The identifier for the ConnectedVariablesType_RemoveDataConnections_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConnectedVariablesType_RemoveDataConnections_InputArguments = new NodeId(Opc.Ua.Variables.ConnectedVariablesType_RemoveDataConnections_InputArguments);

        /// <summary>
        /// The identifier for the ConnectedVariablesType_RemoveDataConnections_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ConnectedVariablesType_RemoveDataConnections_OutputArguments = new NodeId(Opc.Ua.Variables.ConnectedVariablesType_RemoveDataConnections_OutputArguments);

        /// <summary>
        /// The identifier for the OverrideValueHandling_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId OverrideValueHandling_EnumStrings = new NodeId(Opc.Ua.Variables.OverrideValueHandling_EnumStrings);

        /// <summary>
        /// The identifier for the SubscribedDataSetMirrorType_ParentNode Variable.
        /// </summary>
        public static readonly NodeId SubscribedDataSetMirrorType_ParentNode = new NodeId(Opc.Ua.Variables.SubscribedDataSetMirrorType_ParentNode);

        /// <summary>
        /// The identifier for the PubSubStatusType_State Variable.
        /// </summary>
        public static readonly NodeId PubSubStatusType_State = new NodeId(Opc.Ua.Variables.PubSubStatusType_State);

        /// <summary>
        /// The identifier for the PubSubState_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId PubSubState_EnumStrings = new NodeId(Opc.Ua.Variables.PubSubState_EnumStrings);

        /// <summary>
        /// The identifier for the PubSubStatusEventType_ConnectionId Variable.
        /// </summary>
        public static readonly NodeId PubSubStatusEventType_ConnectionId = new NodeId(Opc.Ua.Variables.PubSubStatusEventType_ConnectionId);

        /// <summary>
        /// The identifier for the PubSubStatusEventType_GroupId Variable.
        /// </summary>
        public static readonly NodeId PubSubStatusEventType_GroupId = new NodeId(Opc.Ua.Variables.PubSubStatusEventType_GroupId);

        /// <summary>
        /// The identifier for the PubSubStatusEventType_State Variable.
        /// </summary>
        public static readonly NodeId PubSubStatusEventType_State = new NodeId(Opc.Ua.Variables.PubSubStatusEventType_State);

        /// <summary>
        /// The identifier for the PubSubTransportLimitsExceedEventType_Actual Variable.
        /// </summary>
        public static readonly NodeId PubSubTransportLimitsExceedEventType_Actual = new NodeId(Opc.Ua.Variables.PubSubTransportLimitsExceedEventType_Actual);

        /// <summary>
        /// The identifier for the PubSubTransportLimitsExceedEventType_Maximum Variable.
        /// </summary>
        public static readonly NodeId PubSubTransportLimitsExceedEventType_Maximum = new NodeId(Opc.Ua.Variables.PubSubTransportLimitsExceedEventType_Maximum);

        /// <summary>
        /// The identifier for the PubSubCommunicationFailureEventType_Error Variable.
        /// </summary>
        public static readonly NodeId PubSubCommunicationFailureEventType_Error = new NodeId(Opc.Ua.Variables.PubSubCommunicationFailureEventType_Error);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_PublishingInterval Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_PublishingInterval = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_PublishingInterval);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_KeepAliveTime Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_KeepAliveTime = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_KeepAliveTime);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_EncodingMimeType Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_EncodingMimeType = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_EncodingMimeType);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_Priority Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_Priority = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_Priority);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_LocaleIds Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_LocaleIds = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_LocaleIds);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_SecurityMode = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_SecurityMode);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_SecurityGroupId = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_SecurityGroupId);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments);

        /// <summary>
        /// The identifier for the UadpConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.UadpConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments);

        /// <summary>
        /// The identifier for the UadpConnectionType_Status_State Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_Status_State = new NodeId(Opc.Ua.Variables.UadpConnectionType_Status_State);

        /// <summary>
        /// The identifier for the UadpConnectionType_RemoveGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_RemoveGroup_InputArguments = new NodeId(Opc.Ua.Variables.UadpConnectionType_RemoveGroup_InputArguments);

        /// <summary>
        /// The identifier for the UadpConnectionType_NetworkInterface Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_NetworkInterface = new NodeId(Opc.Ua.Variables.UadpConnectionType_NetworkInterface);

        /// <summary>
        /// The identifier for the UadpConnectionType_NetworkInterface_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_NetworkInterface_EnumStrings = new NodeId(Opc.Ua.Variables.UadpConnectionType_NetworkInterface_EnumStrings);

        /// <summary>
        /// The identifier for the UadpConnectionType_TimeToLive Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_TimeToLive = new NodeId(Opc.Ua.Variables.UadpConnectionType_TimeToLive);

        /// <summary>
        /// The identifier for the UadpConnectionType_AddGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_AddGroup_InputArguments = new NodeId(Opc.Ua.Variables.UadpConnectionType_AddGroup_InputArguments);

        /// <summary>
        /// The identifier for the UadpConnectionType_AddGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpConnectionType_AddGroup_OutputArguments = new NodeId(Opc.Ua.Variables.UadpConnectionType_AddGroup_OutputArguments);

        /// <summary>
        /// The identifier for the UadpGroupType_Status_State Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_Status_State = new NodeId(Opc.Ua.Variables.UadpGroupType_Status_State);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetWriterName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetWriterName_Placeholder_DataSetContentMask = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetWriterName_Placeholder_DataSetContentMask);

        /// <summary>
        /// The identifier for the UadpGroupType_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_RemoveDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.UadpGroupType_RemoveDataSetWriter_InputArguments);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetReaderName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_SecurityMode = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetReaderName_Placeholder_SecurityMode);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_SecurityGroupId = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetReaderName_Placeholder_SecurityGroupId);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments);

        /// <summary>
        /// The identifier for the UadpGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments = new NodeId(Opc.Ua.Variables.UadpGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments);

        /// <summary>
        /// The identifier for the UadpGroupType_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_RemoveDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.UadpGroupType_RemoveDataSetReader_InputArguments);

        /// <summary>
        /// The identifier for the UadpGroupType_MaxNetworkMessageSize Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_MaxNetworkMessageSize = new NodeId(Opc.Ua.Variables.UadpGroupType_MaxNetworkMessageSize);

        /// <summary>
        /// The identifier for the UadpGroupType_SamplingOffset Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_SamplingOffset = new NodeId(Opc.Ua.Variables.UadpGroupType_SamplingOffset);

        /// <summary>
        /// The identifier for the UadpGroupType_PublishingOffset Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_PublishingOffset = new NodeId(Opc.Ua.Variables.UadpGroupType_PublishingOffset);

        /// <summary>
        /// The identifier for the UadpGroupType_MessageRepeatCount Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_MessageRepeatCount = new NodeId(Opc.Ua.Variables.UadpGroupType_MessageRepeatCount);

        /// <summary>
        /// The identifier for the UadpGroupType_MessageRepeatDelay Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_MessageRepeatDelay = new NodeId(Opc.Ua.Variables.UadpGroupType_MessageRepeatDelay);

        /// <summary>
        /// The identifier for the UadpGroupType_UadpStreamAddress Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_UadpStreamAddress = new NodeId(Opc.Ua.Variables.UadpGroupType_UadpStreamAddress);

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetWriter_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_AddDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.UadpGroupType_AddDataSetWriter_InputArguments);

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetWriter_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_AddDataSetWriter_OutputArguments = new NodeId(Opc.Ua.Variables.UadpGroupType_AddDataSetWriter_OutputArguments);

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetReader_InputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_AddDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.UadpGroupType_AddDataSetReader_InputArguments);

        /// <summary>
        /// The identifier for the UadpGroupType_AddDataSetReader_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId UadpGroupType_AddDataSetReader_OutputArguments = new NodeId(Opc.Ua.Variables.UadpGroupType_AddDataSetReader_OutputArguments);

        /// <summary>
        /// The identifier for the UadpWriterTransportType_DataSetWriterId Variable.
        /// </summary>
        public static readonly NodeId UadpWriterTransportType_DataSetWriterId = new NodeId(Opc.Ua.Variables.UadpWriterTransportType_DataSetWriterId);

        /// <summary>
        /// The identifier for the UadpReaderTransportType_PublisherId Variable.
        /// </summary>
        public static readonly NodeId UadpReaderTransportType_PublisherId = new NodeId(Opc.Ua.Variables.UadpReaderTransportType_PublisherId);

        /// <summary>
        /// The identifier for the UadpReaderTransportType_DataSetWriterId Variable.
        /// </summary>
        public static readonly NodeId UadpReaderTransportType_DataSetWriterId = new NodeId(Opc.Ua.Variables.UadpReaderTransportType_DataSetWriterId);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_PublishingInterval Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_PublishingInterval = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_PublishingInterval);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_KeepAliveTime Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_KeepAliveTime = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_KeepAliveTime);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_EncodingMimeType Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_EncodingMimeType = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_EncodingMimeType);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_Priority Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_Priority = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_Priority);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_LocaleIds Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_LocaleIds = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_LocaleIds);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_SecurityMode = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_SecurityMode);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_SecurityGroupId = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_SecurityGroupId);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_RemoveDataSetWriter_InputArguments);

        /// <summary>
        /// The identifier for the BrokerConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.BrokerConnectionType_GroupName_Placeholder_RemoveDataSetReader_InputArguments);

        /// <summary>
        /// The identifier for the BrokerConnectionType_Status_State Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_Status_State = new NodeId(Opc.Ua.Variables.BrokerConnectionType_Status_State);

        /// <summary>
        /// The identifier for the BrokerConnectionType_RemoveGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_RemoveGroup_InputArguments = new NodeId(Opc.Ua.Variables.BrokerConnectionType_RemoveGroup_InputArguments);

        /// <summary>
        /// The identifier for the BrokerConnectionType_AddGroup_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_AddGroup_InputArguments = new NodeId(Opc.Ua.Variables.BrokerConnectionType_AddGroup_InputArguments);

        /// <summary>
        /// The identifier for the BrokerConnectionType_AddGroup_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerConnectionType_AddGroup_OutputArguments = new NodeId(Opc.Ua.Variables.BrokerConnectionType_AddGroup_OutputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupType_Status_State Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_Status_State = new NodeId(Opc.Ua.Variables.BrokerGroupType_Status_State);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetWriterName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetWriterName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetWriterName_Placeholder_DataSetContentMask Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetWriterName_Placeholder_DataSetContentMask = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetWriterName_Placeholder_DataSetContentMask);

        /// <summary>
        /// The identifier for the BrokerGroupType_RemoveDataSetWriter_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_RemoveDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupType_RemoveDataSetWriter_InputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_Status_State Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetReaderName_Placeholder_Status_State);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_SecurityMode = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetReaderName_Placeholder_SecurityMode);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SecurityGroupId Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_SecurityGroupId = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetReaderName_Placeholder_SecurityGroupId);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_DataSetMetaData);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetReaderName_Placeholder_SubscribedDataSet_MessageReceiveTimeout);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_InputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetReaderName_Placeholder_SetConnectVariables_OutputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupType_DataSetReaderName_Placeholder_SetDataSetMirror_InputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupType_RemoveDataSetReader_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_RemoveDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupType_RemoveDataSetReader_InputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupType_QueueName Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_QueueName = new NodeId(Opc.Ua.Variables.BrokerGroupType_QueueName);

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetWriter_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_AddDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupType_AddDataSetWriter_InputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetWriter_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_AddDataSetWriter_OutputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupType_AddDataSetWriter_OutputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetReader_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_AddDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupType_AddDataSetReader_InputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupType_AddDataSetReader_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupType_AddDataSetReader_OutputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupType_AddDataSetReader_OutputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupTypeAddReaderType_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupTypeAddReaderType_InputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupTypeAddReaderType_InputArguments);

        /// <summary>
        /// The identifier for the BrokerGroupTypeAddReaderType_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId BrokerGroupTypeAddReaderType_OutputArguments = new NodeId(Opc.Ua.Variables.BrokerGroupTypeAddReaderType_OutputArguments);

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_QueueName Variable.
        /// </summary>
        public static readonly NodeId BrokerWriterTransportType_QueueName = new NodeId(Opc.Ua.Variables.BrokerWriterTransportType_QueueName);

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_MetaDataQueueName Variable.
        /// </summary>
        public static readonly NodeId BrokerWriterTransportType_MetaDataQueueName = new NodeId(Opc.Ua.Variables.BrokerWriterTransportType_MetaDataQueueName);

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_MetaDataUpdateTime Variable.
        /// </summary>
        public static readonly NodeId BrokerWriterTransportType_MetaDataUpdateTime = new NodeId(Opc.Ua.Variables.BrokerWriterTransportType_MetaDataUpdateTime);

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_DataSetWriterId Variable.
        /// </summary>
        public static readonly NodeId BrokerWriterTransportType_DataSetWriterId = new NodeId(Opc.Ua.Variables.BrokerWriterTransportType_DataSetWriterId);

        /// <summary>
        /// The identifier for the BrokerWriterTransportType_MaxMessageSize Variable.
        /// </summary>
        public static readonly NodeId BrokerWriterTransportType_MaxMessageSize = new NodeId(Opc.Ua.Variables.BrokerWriterTransportType_MaxMessageSize);

        /// <summary>
        /// The identifier for the BrokerReaderTransportType_QueueName Variable.
        /// </summary>
        public static readonly NodeId BrokerReaderTransportType_QueueName = new NodeId(Opc.Ua.Variables.BrokerReaderTransportType_QueueName);

        /// <summary>
        /// The identifier for the BrokerReaderTransportType_MetaDataQueueName Variable.
        /// </summary>
        public static readonly NodeId BrokerReaderTransportType_MetaDataQueueName = new NodeId(Opc.Ua.Variables.BrokerReaderTransportType_MetaDataQueueName);

        /// <summary>
        /// The identifier for the BrokerReaderTransportType_DataSetWriterId Variable.
        /// </summary>
        public static readonly NodeId BrokerReaderTransportType_DataSetWriterId = new NodeId(Opc.Ua.Variables.BrokerReaderTransportType_DataSetWriterId);

        /// <summary>
        /// The identifier for the IdType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId IdType_EnumStrings = new NodeId(Opc.Ua.Variables.IdType_EnumStrings);

        /// <summary>
        /// The identifier for the NodeClass_EnumValues Variable.
        /// </summary>
        public static readonly NodeId NodeClass_EnumValues = new NodeId(Opc.Ua.Variables.NodeClass_EnumValues);

        /// <summary>
        /// The identifier for the ApplicationType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId ApplicationType_EnumStrings = new NodeId(Opc.Ua.Variables.ApplicationType_EnumStrings);

        /// <summary>
        /// The identifier for the MessageSecurityMode_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId MessageSecurityMode_EnumStrings = new NodeId(Opc.Ua.Variables.MessageSecurityMode_EnumStrings);

        /// <summary>
        /// The identifier for the UserTokenType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId UserTokenType_EnumStrings = new NodeId(Opc.Ua.Variables.UserTokenType_EnumStrings);

        /// <summary>
        /// The identifier for the SecurityTokenRequestType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId SecurityTokenRequestType_EnumStrings = new NodeId(Opc.Ua.Variables.SecurityTokenRequestType_EnumStrings);

        /// <summary>
        /// The identifier for the NodeAttributesMask_EnumValues Variable.
        /// </summary>
        public static readonly NodeId NodeAttributesMask_EnumValues = new NodeId(Opc.Ua.Variables.NodeAttributesMask_EnumValues);

        /// <summary>
        /// The identifier for the AttributeWriteMask_EnumValues Variable.
        /// </summary>
        public static readonly NodeId AttributeWriteMask_EnumValues = new NodeId(Opc.Ua.Variables.AttributeWriteMask_EnumValues);

        /// <summary>
        /// The identifier for the BrowseDirection_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId BrowseDirection_EnumStrings = new NodeId(Opc.Ua.Variables.BrowseDirection_EnumStrings);

        /// <summary>
        /// The identifier for the BrowseResultMask_EnumValues Variable.
        /// </summary>
        public static readonly NodeId BrowseResultMask_EnumValues = new NodeId(Opc.Ua.Variables.BrowseResultMask_EnumValues);

        /// <summary>
        /// The identifier for the FilterOperator_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId FilterOperator_EnumStrings = new NodeId(Opc.Ua.Variables.FilterOperator_EnumStrings);

        /// <summary>
        /// The identifier for the TimestampsToReturn_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId TimestampsToReturn_EnumStrings = new NodeId(Opc.Ua.Variables.TimestampsToReturn_EnumStrings);

        /// <summary>
        /// The identifier for the HistoryUpdateType_EnumValues Variable.
        /// </summary>
        public static readonly NodeId HistoryUpdateType_EnumValues = new NodeId(Opc.Ua.Variables.HistoryUpdateType_EnumValues);

        /// <summary>
        /// The identifier for the PerformUpdateType_EnumValues Variable.
        /// </summary>
        public static readonly NodeId PerformUpdateType_EnumValues = new NodeId(Opc.Ua.Variables.PerformUpdateType_EnumValues);

        /// <summary>
        /// The identifier for the MonitoringMode_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId MonitoringMode_EnumStrings = new NodeId(Opc.Ua.Variables.MonitoringMode_EnumStrings);

        /// <summary>
        /// The identifier for the DataChangeTrigger_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId DataChangeTrigger_EnumStrings = new NodeId(Opc.Ua.Variables.DataChangeTrigger_EnumStrings);

        /// <summary>
        /// The identifier for the DeadbandType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId DeadbandType_EnumStrings = new NodeId(Opc.Ua.Variables.DeadbandType_EnumStrings);

        /// <summary>
        /// The identifier for the RedundancySupport_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId RedundancySupport_EnumStrings = new NodeId(Opc.Ua.Variables.RedundancySupport_EnumStrings);

        /// <summary>
        /// The identifier for the ServerState_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId ServerState_EnumStrings = new NodeId(Opc.Ua.Variables.ServerState_EnumStrings);

        /// <summary>
        /// The identifier for the ModelChangeStructureVerbMask_EnumValues Variable.
        /// </summary>
        public static readonly NodeId ModelChangeStructureVerbMask_EnumValues = new NodeId(Opc.Ua.Variables.ModelChangeStructureVerbMask_EnumValues);

        /// <summary>
        /// The identifier for the AxisScaleEnumeration_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId AxisScaleEnumeration_EnumStrings = new NodeId(Opc.Ua.Variables.AxisScaleEnumeration_EnumStrings);

        /// <summary>
        /// The identifier for the ExceptionDeviationFormat_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId ExceptionDeviationFormat_EnumStrings = new NodeId(Opc.Ua.Variables.ExceptionDeviationFormat_EnumStrings);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NamespaceUri Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_NamespaceUri = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_NamespaceUri);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TrustListDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TrustListDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_TrustListDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataTypeDefinition Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DataTypeDefinition = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataTypeDefinition);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StructureDefinition Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_StructureDefinition = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_StructureDefinition);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumDefinition Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EnumDefinition = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EnumDefinition);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StructureField Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_StructureField = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_StructureField);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_IdentityMappingRuleType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_IdentityMappingRuleType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_IdentityMappingRuleType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ApplicationPermissionRuleType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ApplicationPermissionRuleType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ApplicationPermissionRuleType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ConfigurationVersionDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ConfigurationVersionDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ConfigurationVersionDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataSetMetaDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DataSetMetaDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataSetMetaDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FieldMetaData Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_FieldMetaData = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_FieldMetaData);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataTypeDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DataTypeDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataTypeDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StructureDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_StructureDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_StructureDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EnumDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EnumDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_KeyValuePair Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_KeyValuePair = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_KeyValuePair);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_PublishedVariableDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_PublishedVariableDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_PublishedVariableDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataConnectionDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DataConnectionDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataConnectionDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Argument Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_Argument = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Argument);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumValueType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EnumValueType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EnumValueType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumField Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EnumField = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EnumField);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_OptionSet Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_OptionSet = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_OptionSet);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Union Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_Union = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Union);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TimeZoneDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TimeZoneDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_TimeZoneDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ApplicationDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ApplicationDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ApplicationDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerOnNetwork Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ServerOnNetwork = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ServerOnNetwork);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserTokenPolicy Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UserTokenPolicy = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UserTokenPolicy);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EndpointDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EndpointDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisteredServer Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RegisteredServer = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RegisteredServer);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DiscoveryConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DiscoveryConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DiscoveryConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MdnsDiscoveryConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MdnsDiscoveryConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_MdnsDiscoveryConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SignedSoftwareCertificate Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SignedSoftwareCertificate = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SignedSoftwareCertificate);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UserIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UserIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AnonymousIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AnonymousIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AnonymousIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserNameIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UserNameIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UserNameIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_X509IdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_X509IdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_X509IdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_IssuedIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_IssuedIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_IssuedIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AddNodesItem = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AddNodesItem);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddReferencesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AddReferencesItem = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AddReferencesItem);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteNodesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteNodesItem = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DeleteNodesItem);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteReferencesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteReferencesItem = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DeleteReferencesItem);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RelativePathElement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RelativePathElement = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RelativePathElement);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RelativePath Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RelativePath = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RelativePath);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EndpointConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EndpointConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilterElement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ContentFilterElement = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ContentFilterElement);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ContentFilter = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ContentFilter);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FilterOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_FilterOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_FilterOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ElementOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ElementOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ElementOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_LiteralOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_LiteralOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_LiteralOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AttributeOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AttributeOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AttributeOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SimpleAttributeOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SimpleAttributeOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SimpleAttributeOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryEvent Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryEvent = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_HistoryEvent);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoringFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MonitoringFilter = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_MonitoringFilter);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EventFilter = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EventFilter);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AggregateConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AggregateConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AggregateConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryEventFieldList Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryEventFieldList = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_HistoryEventFieldList);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BuildInfo Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BuildInfo = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_BuildInfo);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RedundantServerDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RedundantServerDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RedundantServerDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointUrlListDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EndpointUrlListDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EndpointUrlListDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NetworkGroupDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_NetworkGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_NetworkGroupDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerStatusDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ServerStatusDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ServerStatusDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SessionDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SessionDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SessionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServiceCounterDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ServiceCounterDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ServiceCounterDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StatusResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_StatusResult = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_StatusResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SubscriptionDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SubscriptionDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SubscriptionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModelChangeStructureDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ModelChangeStructureDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ModelChangeStructureDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SemanticChangeStructureDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SemanticChangeStructureDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SemanticChangeStructureDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Range Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_Range = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Range);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EUInformation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EUInformation = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EUInformation);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ComplexNumberType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ComplexNumberType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ComplexNumberType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DoubleComplexNumberType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DoubleComplexNumberType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DoubleComplexNumberType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AxisInformation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AxisInformation = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AxisInformation);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_XVType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_XVType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_XVType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ProgramDiagnosticDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ProgramDiagnosticDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ProgramDiagnosticDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Annotation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_Annotation = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Annotation);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NamespaceUri Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_NamespaceUri = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_NamespaceUri);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TrustListDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TrustListDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_TrustListDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataTypeDefinition Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DataTypeDefinition = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataTypeDefinition);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StructureDefinition Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_StructureDefinition = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_StructureDefinition);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumDefinition Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EnumDefinition = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EnumDefinition);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StructureField Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_StructureField = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_StructureField);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_IdentityMappingRuleType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_IdentityMappingRuleType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_IdentityMappingRuleType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ApplicationPermissionRuleType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ApplicationPermissionRuleType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ApplicationPermissionRuleType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ConfigurationVersionDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ConfigurationVersionDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ConfigurationVersionDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataSetMetaDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DataSetMetaDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataSetMetaDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FieldMetaData Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_FieldMetaData = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_FieldMetaData);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataTypeDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DataTypeDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataTypeDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StructureDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_StructureDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_StructureDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EnumDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EnumDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_KeyValuePair Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_KeyValuePair = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_KeyValuePair);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_PublishedVariableDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_PublishedVariableDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_PublishedVariableDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataConnectionDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DataConnectionDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataConnectionDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Argument Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_Argument = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Argument);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumValueType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EnumValueType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EnumValueType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumField Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EnumField = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EnumField);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_OptionSet Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_OptionSet = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_OptionSet);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Union Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_Union = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Union);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TimeZoneDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TimeZoneDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_TimeZoneDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ApplicationDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ApplicationDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ApplicationDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerOnNetwork Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ServerOnNetwork = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ServerOnNetwork);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserTokenPolicy Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UserTokenPolicy = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UserTokenPolicy);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EndpointDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EndpointDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisteredServer Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RegisteredServer = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RegisteredServer);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DiscoveryConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DiscoveryConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DiscoveryConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MdnsDiscoveryConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MdnsDiscoveryConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_MdnsDiscoveryConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SignedSoftwareCertificate Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SignedSoftwareCertificate = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SignedSoftwareCertificate);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UserIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UserIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AnonymousIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AnonymousIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AnonymousIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserNameIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UserNameIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UserNameIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_X509IdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_X509IdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_X509IdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_IssuedIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_IssuedIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_IssuedIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AddNodesItem = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AddNodesItem);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddReferencesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AddReferencesItem = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AddReferencesItem);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteNodesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteNodesItem = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DeleteNodesItem);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteReferencesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteReferencesItem = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DeleteReferencesItem);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RelativePathElement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RelativePathElement = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RelativePathElement);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RelativePath Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RelativePath = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RelativePath);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EndpointConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EndpointConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilterElement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ContentFilterElement = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ContentFilterElement);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ContentFilter = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ContentFilter);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FilterOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_FilterOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_FilterOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ElementOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ElementOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ElementOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_LiteralOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_LiteralOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_LiteralOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AttributeOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AttributeOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AttributeOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SimpleAttributeOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SimpleAttributeOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SimpleAttributeOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryEvent Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryEvent = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_HistoryEvent);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoringFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MonitoringFilter = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_MonitoringFilter);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EventFilter = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EventFilter);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AggregateConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AggregateConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AggregateConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryEventFieldList Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryEventFieldList = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_HistoryEventFieldList);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BuildInfo Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BuildInfo = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_BuildInfo);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RedundantServerDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RedundantServerDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RedundantServerDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointUrlListDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EndpointUrlListDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EndpointUrlListDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NetworkGroupDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_NetworkGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_NetworkGroupDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerStatusDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ServerStatusDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ServerStatusDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SessionDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SessionDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SessionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServiceCounterDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ServiceCounterDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ServiceCounterDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StatusResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_StatusResult = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_StatusResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SubscriptionDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SubscriptionDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SubscriptionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModelChangeStructureDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ModelChangeStructureDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ModelChangeStructureDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SemanticChangeStructureDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SemanticChangeStructureDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SemanticChangeStructureDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Range Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_Range = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Range);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EUInformation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EUInformation = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EUInformation);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ComplexNumberType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ComplexNumberType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ComplexNumberType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DoubleComplexNumberType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DoubleComplexNumberType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DoubleComplexNumberType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AxisInformation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AxisInformation = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AxisInformation);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_XVType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_XVType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_XVType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ProgramDiagnosticDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ProgramDiagnosticDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ProgramDiagnosticDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Annotation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_Annotation = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Annotation);
    }
    #endregion

    #region VariableType Node Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableTypeIds
    {
        /// <summary>
        /// The identifier for the BaseVariableType VariableType.
        /// </summary>
        public static readonly NodeId BaseVariableType = new NodeId(Opc.Ua.VariableTypes.BaseVariableType);

        /// <summary>
        /// The identifier for the BaseDataVariableType VariableType.
        /// </summary>
        public static readonly NodeId BaseDataVariableType = new NodeId(Opc.Ua.VariableTypes.BaseDataVariableType);

        /// <summary>
        /// The identifier for the PropertyType VariableType.
        /// </summary>
        public static readonly NodeId PropertyType = new NodeId(Opc.Ua.VariableTypes.PropertyType);

        /// <summary>
        /// The identifier for the DataTypeDescriptionType VariableType.
        /// </summary>
        public static readonly NodeId DataTypeDescriptionType = new NodeId(Opc.Ua.VariableTypes.DataTypeDescriptionType);

        /// <summary>
        /// The identifier for the DataTypeDictionaryType VariableType.
        /// </summary>
        public static readonly NodeId DataTypeDictionaryType = new NodeId(Opc.Ua.VariableTypes.DataTypeDictionaryType);

        /// <summary>
        /// The identifier for the ServerVendorCapabilityType VariableType.
        /// </summary>
        public static readonly NodeId ServerVendorCapabilityType = new NodeId(Opc.Ua.VariableTypes.ServerVendorCapabilityType);

        /// <summary>
        /// The identifier for the ServerStatusType VariableType.
        /// </summary>
        public static readonly NodeId ServerStatusType = new NodeId(Opc.Ua.VariableTypes.ServerStatusType);

        /// <summary>
        /// The identifier for the BuildInfoType VariableType.
        /// </summary>
        public static readonly NodeId BuildInfoType = new NodeId(Opc.Ua.VariableTypes.BuildInfoType);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType VariableType.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType = new NodeId(Opc.Ua.VariableTypes.ServerDiagnosticsSummaryType);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType VariableType.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType = new NodeId(Opc.Ua.VariableTypes.SamplingIntervalDiagnosticsArrayType);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType VariableType.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType = new NodeId(Opc.Ua.VariableTypes.SamplingIntervalDiagnosticsType);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType VariableType.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType = new NodeId(Opc.Ua.VariableTypes.SubscriptionDiagnosticsArrayType);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType VariableType.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType = new NodeId(Opc.Ua.VariableTypes.SubscriptionDiagnosticsType);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType VariableType.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType = new NodeId(Opc.Ua.VariableTypes.SessionDiagnosticsArrayType);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType VariableType.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType = new NodeId(Opc.Ua.VariableTypes.SessionDiagnosticsVariableType);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType VariableType.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType = new NodeId(Opc.Ua.VariableTypes.SessionSecurityDiagnosticsArrayType);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType VariableType.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType = new NodeId(Opc.Ua.VariableTypes.SessionSecurityDiagnosticsType);

        /// <summary>
        /// The identifier for the OptionSetType VariableType.
        /// </summary>
        public static readonly NodeId OptionSetType = new NodeId(Opc.Ua.VariableTypes.OptionSetType);

        /// <summary>
        /// The identifier for the StateVariableType VariableType.
        /// </summary>
        public static readonly NodeId StateVariableType = new NodeId(Opc.Ua.VariableTypes.StateVariableType);

        /// <summary>
        /// The identifier for the TransitionVariableType VariableType.
        /// </summary>
        public static readonly NodeId TransitionVariableType = new NodeId(Opc.Ua.VariableTypes.TransitionVariableType);

        /// <summary>
        /// The identifier for the FiniteStateVariableType VariableType.
        /// </summary>
        public static readonly NodeId FiniteStateVariableType = new NodeId(Opc.Ua.VariableTypes.FiniteStateVariableType);

        /// <summary>
        /// The identifier for the FiniteTransitionVariableType VariableType.
        /// </summary>
        public static readonly NodeId FiniteTransitionVariableType = new NodeId(Opc.Ua.VariableTypes.FiniteTransitionVariableType);

        /// <summary>
        /// The identifier for the DataItemType VariableType.
        /// </summary>
        public static readonly NodeId DataItemType = new NodeId(Opc.Ua.VariableTypes.DataItemType);

        /// <summary>
        /// The identifier for the AnalogItemType VariableType.
        /// </summary>
        public static readonly NodeId AnalogItemType = new NodeId(Opc.Ua.VariableTypes.AnalogItemType);

        /// <summary>
        /// The identifier for the DiscreteItemType VariableType.
        /// </summary>
        public static readonly NodeId DiscreteItemType = new NodeId(Opc.Ua.VariableTypes.DiscreteItemType);

        /// <summary>
        /// The identifier for the TwoStateDiscreteType VariableType.
        /// </summary>
        public static readonly NodeId TwoStateDiscreteType = new NodeId(Opc.Ua.VariableTypes.TwoStateDiscreteType);

        /// <summary>
        /// The identifier for the MultiStateDiscreteType VariableType.
        /// </summary>
        public static readonly NodeId MultiStateDiscreteType = new NodeId(Opc.Ua.VariableTypes.MultiStateDiscreteType);

        /// <summary>
        /// The identifier for the MultiStateValueDiscreteType VariableType.
        /// </summary>
        public static readonly NodeId MultiStateValueDiscreteType = new NodeId(Opc.Ua.VariableTypes.MultiStateValueDiscreteType);

        /// <summary>
        /// The identifier for the ArrayItemType VariableType.
        /// </summary>
        public static readonly NodeId ArrayItemType = new NodeId(Opc.Ua.VariableTypes.ArrayItemType);

        /// <summary>
        /// The identifier for the YArrayItemType VariableType.
        /// </summary>
        public static readonly NodeId YArrayItemType = new NodeId(Opc.Ua.VariableTypes.YArrayItemType);

        /// <summary>
        /// The identifier for the XYArrayItemType VariableType.
        /// </summary>
        public static readonly NodeId XYArrayItemType = new NodeId(Opc.Ua.VariableTypes.XYArrayItemType);

        /// <summary>
        /// The identifier for the ImageItemType VariableType.
        /// </summary>
        public static readonly NodeId ImageItemType = new NodeId(Opc.Ua.VariableTypes.ImageItemType);

        /// <summary>
        /// The identifier for the CubeItemType VariableType.
        /// </summary>
        public static readonly NodeId CubeItemType = new NodeId(Opc.Ua.VariableTypes.CubeItemType);

        /// <summary>
        /// The identifier for the NDimensionArrayItemType VariableType.
        /// </summary>
        public static readonly NodeId NDimensionArrayItemType = new NodeId(Opc.Ua.VariableTypes.NDimensionArrayItemType);

        /// <summary>
        /// The identifier for the TwoStateVariableType VariableType.
        /// </summary>
        public static readonly NodeId TwoStateVariableType = new NodeId(Opc.Ua.VariableTypes.TwoStateVariableType);

        /// <summary>
        /// The identifier for the ConditionVariableType VariableType.
        /// </summary>
        public static readonly NodeId ConditionVariableType = new NodeId(Opc.Ua.VariableTypes.ConditionVariableType);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType VariableType.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType = new NodeId(Opc.Ua.VariableTypes.ProgramDiagnosticType);
    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model Design.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the AccessHistoryDataCapability component.
        /// </summary>
        public const string AccessHistoryDataCapability = "AccessHistoryDataCapability";

        /// <summary>
        /// The BrowseName for the AccessHistoryEventsCapability component.
        /// </summary>
        public const string AccessHistoryEventsCapability = "AccessHistoryEventsCapability";

        /// <summary>
        /// The BrowseName for the AckedState component.
        /// </summary>
        public const string AckedState = "AckedState";

        /// <summary>
        /// The BrowseName for the Acknowledge component.
        /// </summary>
        public const string Acknowledge = "Acknowledge";

        /// <summary>
        /// The BrowseName for the AcknowledgeableConditionType component.
        /// </summary>
        public const string AcknowledgeableConditionType = "AcknowledgeableConditionType";

        /// <summary>
        /// The BrowseName for the ActionTimeStamp component.
        /// </summary>
        public const string ActionTimeStamp = "ActionTimeStamp";

        /// <summary>
        /// The BrowseName for the ActivateSessionRequest component.
        /// </summary>
        public const string ActivateSessionRequest = "ActivateSessionRequest";

        /// <summary>
        /// The BrowseName for the ActivateSessionResponse component.
        /// </summary>
        public const string ActivateSessionResponse = "ActivateSessionResponse";

        /// <summary>
        /// The BrowseName for the ActiveState component.
        /// </summary>
        public const string ActiveState = "ActiveState";

        /// <summary>
        /// The BrowseName for the Actual component.
        /// </summary>
        public const string Actual = "Actual";

        /// <summary>
        /// The BrowseName for the ActualSessionTimeout component.
        /// </summary>
        public const string ActualSessionTimeout = "ActualSessionTimeout";

        /// <summary>
        /// The BrowseName for the AddApplication component.
        /// </summary>
        public const string AddApplication = "AddApplication";

        /// <summary>
        /// The BrowseName for the AddBrokerConnection component.
        /// </summary>
        public const string AddBrokerConnection = "AddBrokerConnection";

        /// <summary>
        /// The BrowseName for the AddCertificate component.
        /// </summary>
        public const string AddCertificate = "AddCertificate";

        /// <summary>
        /// The BrowseName for the AddComment component.
        /// </summary>
        public const string AddComment = "AddComment";

        /// <summary>
        /// The BrowseName for the AddDataConnections component.
        /// </summary>
        public const string AddDataConnections = "AddDataConnections";

        /// <summary>
        /// The BrowseName for the AddDataSetReader component.
        /// </summary>
        public const string AddDataSetReader = "AddDataSetReader";

        /// <summary>
        /// The BrowseName for the AddDataSetWriter component.
        /// </summary>
        public const string AddDataSetWriter = "AddDataSetWriter";

        /// <summary>
        /// The BrowseName for the AddExtensionField component.
        /// </summary>
        public const string AddExtensionField = "AddExtensionField";

        /// <summary>
        /// The BrowseName for the AddGroup component.
        /// </summary>
        public const string AddGroup = "AddGroup";

        /// <summary>
        /// The BrowseName for the AddIdentity component.
        /// </summary>
        public const string AddIdentity = "AddIdentity";

        /// <summary>
        /// The BrowseName for the AdditionalGroup_Placeholder component.
        /// </summary>
        public const string AdditionalGroup_Placeholder = "<AdditionalGroup>";

        /// <summary>
        /// The BrowseName for the AddNodesCount component.
        /// </summary>
        public const string AddNodesCount = "AddNodesCount";

        /// <summary>
        /// The BrowseName for the AddNodesItem component.
        /// </summary>
        public const string AddNodesItem = "AddNodesItem";

        /// <summary>
        /// The BrowseName for the AddNodesRequest component.
        /// </summary>
        public const string AddNodesRequest = "AddNodesRequest";

        /// <summary>
        /// The BrowseName for the AddNodesResponse component.
        /// </summary>
        public const string AddNodesResponse = "AddNodesResponse";

        /// <summary>
        /// The BrowseName for the AddNodesResult component.
        /// </summary>
        public const string AddNodesResult = "AddNodesResult";

        /// <summary>
        /// The BrowseName for the AddPublishedDataItems component.
        /// </summary>
        public const string AddPublishedDataItems = "AddPublishedDataItems";

        /// <summary>
        /// The BrowseName for the AddPublishedEvents component.
        /// </summary>
        public const string AddPublishedEvents = "AddPublishedEvents";

        /// <summary>
        /// The BrowseName for the AddReferencesCount component.
        /// </summary>
        public const string AddReferencesCount = "AddReferencesCount";

        /// <summary>
        /// The BrowseName for the AddReferencesItem component.
        /// </summary>
        public const string AddReferencesItem = "AddReferencesItem";

        /// <summary>
        /// The BrowseName for the AddReferencesRequest component.
        /// </summary>
        public const string AddReferencesRequest = "AddReferencesRequest";

        /// <summary>
        /// The BrowseName for the AddReferencesResponse component.
        /// </summary>
        public const string AddReferencesResponse = "AddReferencesResponse";

        /// <summary>
        /// The BrowseName for the Address component.
        /// </summary>
        public const string Address = "Address";

        /// <summary>
        /// The BrowseName for the AddressSpaceFileType component.
        /// </summary>
        public const string AddressSpaceFileType = "AddressSpaceFileType";

        /// <summary>
        /// The BrowseName for the AddSecurityGroup component.
        /// </summary>
        public const string AddSecurityGroup = "AddSecurityGroup";

        /// <summary>
        /// The BrowseName for the AddUadpConnection component.
        /// </summary>
        public const string AddUadpConnection = "AddUadpConnection";

        /// <summary>
        /// The BrowseName for the AddVariables component.
        /// </summary>
        public const string AddVariables = "AddVariables";

        /// <summary>
        /// The BrowseName for the AggregateConfiguration component.
        /// </summary>
        public const string AggregateConfiguration = "AggregateConfiguration";

        /// <summary>
        /// The BrowseName for the AggregateConfigurationType component.
        /// </summary>
        public const string AggregateConfigurationType = "AggregateConfigurationType";

        /// <summary>
        /// The BrowseName for the AggregateFilter component.
        /// </summary>
        public const string AggregateFilter = "AggregateFilter";

        /// <summary>
        /// The BrowseName for the AggregateFilterResult component.
        /// </summary>
        public const string AggregateFilterResult = "AggregateFilterResult";

        /// <summary>
        /// The BrowseName for the AggregateFunction_AnnotationCount component.
        /// </summary>
        public const string AggregateFunction_AnnotationCount = "AnnotationCount";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Average component.
        /// </summary>
        public const string AggregateFunction_Average = "Average";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Count component.
        /// </summary>
        public const string AggregateFunction_Count = "Count";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Delta component.
        /// </summary>
        public const string AggregateFunction_Delta = "Delta";

        /// <summary>
        /// The BrowseName for the AggregateFunction_DeltaBounds component.
        /// </summary>
        public const string AggregateFunction_DeltaBounds = "DeltaBounds";

        /// <summary>
        /// The BrowseName for the AggregateFunction_DurationBad component.
        /// </summary>
        public const string AggregateFunction_DurationBad = "DurationBad";

        /// <summary>
        /// The BrowseName for the AggregateFunction_DurationGood component.
        /// </summary>
        public const string AggregateFunction_DurationGood = "DurationGood";

        /// <summary>
        /// The BrowseName for the AggregateFunction_DurationInStateNonZero component.
        /// </summary>
        public const string AggregateFunction_DurationInStateNonZero = "DurationInStateNonZero";

        /// <summary>
        /// The BrowseName for the AggregateFunction_DurationInStateZero component.
        /// </summary>
        public const string AggregateFunction_DurationInStateZero = "DurationInStateZero";

        /// <summary>
        /// The BrowseName for the AggregateFunction_End component.
        /// </summary>
        public const string AggregateFunction_End = "End";

        /// <summary>
        /// The BrowseName for the AggregateFunction_EndBound component.
        /// </summary>
        public const string AggregateFunction_EndBound = "EndBound";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Interpolative component.
        /// </summary>
        public const string AggregateFunction_Interpolative = "Interpolative";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Maximum component.
        /// </summary>
        public const string AggregateFunction_Maximum = "Maximum";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Maximum2 component.
        /// </summary>
        public const string AggregateFunction_Maximum2 = "Maximum2";

        /// <summary>
        /// The BrowseName for the AggregateFunction_MaximumActualTime component.
        /// </summary>
        public const string AggregateFunction_MaximumActualTime = "MaximumActualTime";

        /// <summary>
        /// The BrowseName for the AggregateFunction_MaximumActualTime2 component.
        /// </summary>
        public const string AggregateFunction_MaximumActualTime2 = "MaximumActualTime2";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Minimum component.
        /// </summary>
        public const string AggregateFunction_Minimum = "Minimum";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Minimum2 component.
        /// </summary>
        public const string AggregateFunction_Minimum2 = "Minimum2";

        /// <summary>
        /// The BrowseName for the AggregateFunction_MinimumActualTime component.
        /// </summary>
        public const string AggregateFunction_MinimumActualTime = "MinimumActualTime";

        /// <summary>
        /// The BrowseName for the AggregateFunction_MinimumActualTime2 component.
        /// </summary>
        public const string AggregateFunction_MinimumActualTime2 = "MinimumActualTime2";

        /// <summary>
        /// The BrowseName for the AggregateFunction_NumberOfTransitions component.
        /// </summary>
        public const string AggregateFunction_NumberOfTransitions = "NumberOfTransitions";

        /// <summary>
        /// The BrowseName for the AggregateFunction_PercentBad component.
        /// </summary>
        public const string AggregateFunction_PercentBad = "PercentBad";

        /// <summary>
        /// The BrowseName for the AggregateFunction_PercentGood component.
        /// </summary>
        public const string AggregateFunction_PercentGood = "PercentGood";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Range component.
        /// </summary>
        public const string AggregateFunction_Range = "Range";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Range2 component.
        /// </summary>
        public const string AggregateFunction_Range2 = "Range2";

        /// <summary>
        /// The BrowseName for the AggregateFunction_StandardDeviationPopulation component.
        /// </summary>
        public const string AggregateFunction_StandardDeviationPopulation = "StandardDeviationPopulation";

        /// <summary>
        /// The BrowseName for the AggregateFunction_StandardDeviationSample component.
        /// </summary>
        public const string AggregateFunction_StandardDeviationSample = "StandardDeviationSample";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Start component.
        /// </summary>
        public const string AggregateFunction_Start = "Start";

        /// <summary>
        /// The BrowseName for the AggregateFunction_StartBound component.
        /// </summary>
        public const string AggregateFunction_StartBound = "StartBound";

        /// <summary>
        /// The BrowseName for the AggregateFunction_TimeAverage component.
        /// </summary>
        public const string AggregateFunction_TimeAverage = "TimeAverage";

        /// <summary>
        /// The BrowseName for the AggregateFunction_TimeAverage2 component.
        /// </summary>
        public const string AggregateFunction_TimeAverage2 = "TimeAverage2";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Total component.
        /// </summary>
        public const string AggregateFunction_Total = "Total";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Total2 component.
        /// </summary>
        public const string AggregateFunction_Total2 = "Total2";

        /// <summary>
        /// The BrowseName for the AggregateFunction_VariancePopulation component.
        /// </summary>
        public const string AggregateFunction_VariancePopulation = "VariancePopulation";

        /// <summary>
        /// The BrowseName for the AggregateFunction_VarianceSample component.
        /// </summary>
        public const string AggregateFunction_VarianceSample = "VarianceSample";

        /// <summary>
        /// The BrowseName for the AggregateFunction_WorstQuality component.
        /// </summary>
        public const string AggregateFunction_WorstQuality = "WorstQuality";

        /// <summary>
        /// The BrowseName for the AggregateFunction_WorstQuality2 component.
        /// </summary>
        public const string AggregateFunction_WorstQuality2 = "WorstQuality2";

        /// <summary>
        /// The BrowseName for the AggregateFunctions component.
        /// </summary>
        public const string AggregateFunctions = "AggregateFunctions";

        /// <summary>
        /// The BrowseName for the AggregateFunctionType component.
        /// </summary>
        public const string AggregateFunctionType = "AggregateFunctionType";

        /// <summary>
        /// The BrowseName for the Aggregates component.
        /// </summary>
        public const string Aggregates = "Aggregates";

        /// <summary>
        /// The BrowseName for the AlarmConditionType component.
        /// </summary>
        public const string AlarmConditionType = "AlarmConditionType";

        /// <summary>
        /// The BrowseName for the AllowNulls component.
        /// </summary>
        public const string AllowNulls = "AllowNulls";

        /// <summary>
        /// The BrowseName for the AlwaysGeneratesEvent component.
        /// </summary>
        public const string AlwaysGeneratesEvent = "AlwaysGeneratesEvent";

        /// <summary>
        /// The BrowseName for the AnalogItemType component.
        /// </summary>
        public const string AnalogItemType = "AnalogItemType";

        /// <summary>
        /// The BrowseName for the Annotation component.
        /// </summary>
        public const string Annotation = "Annotation";

        /// <summary>
        /// The BrowseName for the Annotations component.
        /// </summary>
        public const string Annotations = "Annotations";

        /// <summary>
        /// The BrowseName for the Anonymous component.
        /// </summary>
        public const string Anonymous = "Anonymous";

        /// <summary>
        /// The BrowseName for the AnonymousIdentityToken component.
        /// </summary>
        public const string AnonymousIdentityToken = "AnonymousIdentityToken";

        /// <summary>
        /// The BrowseName for the ApplicationCertificateType component.
        /// </summary>
        public const string ApplicationCertificateType = "ApplicationCertificateType";

        /// <summary>
        /// The BrowseName for the ApplicationDescription component.
        /// </summary>
        public const string ApplicationDescription = "ApplicationDescription";

        /// <summary>
        /// The BrowseName for the ApplicationInstanceCertificate component.
        /// </summary>
        public const string ApplicationInstanceCertificate = "ApplicationInstanceCertificate";

        /// <summary>
        /// The BrowseName for the ApplicationPermissionRuleType component.
        /// </summary>
        public const string ApplicationPermissionRuleType = "ApplicationPermissionRuleType";

        /// <summary>
        /// The BrowseName for the Applications component.
        /// </summary>
        public const string Applications = "Applications";

        /// <summary>
        /// The BrowseName for the ApplicationType component.
        /// </summary>
        public const string ApplicationType = "ApplicationType";

        /// <summary>
        /// The BrowseName for the ApplyChanges component.
        /// </summary>
        public const string ApplyChanges = "ApplyChanges";

        /// <summary>
        /// The BrowseName for the ApplyWrite component.
        /// </summary>
        public const string ApplyWrite = "ApplyWrite";

        /// <summary>
        /// The BrowseName for the ApplyWriteToError component.
        /// </summary>
        public const string ApplyWriteToError = "ApplyWriteToError";

        /// <summary>
        /// The BrowseName for the ApplyWriteToIdle component.
        /// </summary>
        public const string ApplyWriteToIdle = "ApplyWriteToIdle";

        /// <summary>
        /// The BrowseName for the Argument component.
        /// </summary>
        public const string Argument = "Argument";

        /// <summary>
        /// The BrowseName for the ArrayItemType component.
        /// </summary>
        public const string ArrayItemType = "ArrayItemType";

        /// <summary>
        /// The BrowseName for the AttributeId component.
        /// </summary>
        public const string AttributeId = "AttributeId";

        /// <summary>
        /// The BrowseName for the AttributeOperand component.
        /// </summary>
        public const string AttributeOperand = "AttributeOperand";

        /// <summary>
        /// The BrowseName for the AttributeWriteMask component.
        /// </summary>
        public const string AttributeWriteMask = "AttributeWriteMask";

        /// <summary>
        /// The BrowseName for the AuditActivateSessionEventType component.
        /// </summary>
        public const string AuditActivateSessionEventType = "AuditActivateSessionEventType";

        /// <summary>
        /// The BrowseName for the AuditAddNodesEventType component.
        /// </summary>
        public const string AuditAddNodesEventType = "AuditAddNodesEventType";

        /// <summary>
        /// The BrowseName for the AuditAddReferencesEventType component.
        /// </summary>
        public const string AuditAddReferencesEventType = "AuditAddReferencesEventType";

        /// <summary>
        /// The BrowseName for the AuditCancelEventType component.
        /// </summary>
        public const string AuditCancelEventType = "AuditCancelEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateDataMismatchEventType component.
        /// </summary>
        public const string AuditCertificateDataMismatchEventType = "AuditCertificateDataMismatchEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateEventType component.
        /// </summary>
        public const string AuditCertificateEventType = "AuditCertificateEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateExpiredEventType component.
        /// </summary>
        public const string AuditCertificateExpiredEventType = "AuditCertificateExpiredEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateInvalidEventType component.
        /// </summary>
        public const string AuditCertificateInvalidEventType = "AuditCertificateInvalidEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateMismatchEventType component.
        /// </summary>
        public const string AuditCertificateMismatchEventType = "AuditCertificateMismatchEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateRevokedEventType component.
        /// </summary>
        public const string AuditCertificateRevokedEventType = "AuditCertificateRevokedEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateUntrustedEventType component.
        /// </summary>
        public const string AuditCertificateUntrustedEventType = "AuditCertificateUntrustedEventType";

        /// <summary>
        /// The BrowseName for the AuditChannelEventType component.
        /// </summary>
        public const string AuditChannelEventType = "AuditChannelEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionAcknowledgeEventType component.
        /// </summary>
        public const string AuditConditionAcknowledgeEventType = "AuditConditionAcknowledgeEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionCommentEventType component.
        /// </summary>
        public const string AuditConditionCommentEventType = "AuditConditionCommentEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionConfirmEventType component.
        /// </summary>
        public const string AuditConditionConfirmEventType = "AuditConditionConfirmEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionEnableEventType component.
        /// </summary>
        public const string AuditConditionEnableEventType = "AuditConditionEnableEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionEventType component.
        /// </summary>
        public const string AuditConditionEventType = "AuditConditionEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionRespondEventType component.
        /// </summary>
        public const string AuditConditionRespondEventType = "AuditConditionRespondEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionShelvingEventType component.
        /// </summary>
        public const string AuditConditionShelvingEventType = "AuditConditionShelvingEventType";

        /// <summary>
        /// The BrowseName for the AuditCreateSessionEventType component.
        /// </summary>
        public const string AuditCreateSessionEventType = "AuditCreateSessionEventType";

        /// <summary>
        /// The BrowseName for the AuditDeleteNodesEventType component.
        /// </summary>
        public const string AuditDeleteNodesEventType = "AuditDeleteNodesEventType";

        /// <summary>
        /// The BrowseName for the AuditDeleteReferencesEventType component.
        /// </summary>
        public const string AuditDeleteReferencesEventType = "AuditDeleteReferencesEventType";

        /// <summary>
        /// The BrowseName for the AuditEventType component.
        /// </summary>
        public const string AuditEventType = "AuditEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryAtTimeDeleteEventType component.
        /// </summary>
        public const string AuditHistoryAtTimeDeleteEventType = "AuditHistoryAtTimeDeleteEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryDeleteEventType component.
        /// </summary>
        public const string AuditHistoryDeleteEventType = "AuditHistoryDeleteEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryEventDeleteEventType component.
        /// </summary>
        public const string AuditHistoryEventDeleteEventType = "AuditHistoryEventDeleteEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryEventUpdateEventType component.
        /// </summary>
        public const string AuditHistoryEventUpdateEventType = "AuditHistoryEventUpdateEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryRawModifyDeleteEventType component.
        /// </summary>
        public const string AuditHistoryRawModifyDeleteEventType = "AuditHistoryRawModifyDeleteEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryUpdateEventType component.
        /// </summary>
        public const string AuditHistoryUpdateEventType = "AuditHistoryUpdateEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryValueUpdateEventType component.
        /// </summary>
        public const string AuditHistoryValueUpdateEventType = "AuditHistoryValueUpdateEventType";

        /// <summary>
        /// The BrowseName for the Auditing component.
        /// </summary>
        public const string Auditing = "Auditing";

        /// <summary>
        /// The BrowseName for the AuditNodeManagementEventType component.
        /// </summary>
        public const string AuditNodeManagementEventType = "AuditNodeManagementEventType";

        /// <summary>
        /// The BrowseName for the AuditOpenSecureChannelEventType component.
        /// </summary>
        public const string AuditOpenSecureChannelEventType = "AuditOpenSecureChannelEventType";

        /// <summary>
        /// The BrowseName for the AuditProgramTransitionEventType component.
        /// </summary>
        public const string AuditProgramTransitionEventType = "AuditProgramTransitionEventType";

        /// <summary>
        /// The BrowseName for the AuditSecurityEventType component.
        /// </summary>
        public const string AuditSecurityEventType = "AuditSecurityEventType";

        /// <summary>
        /// The BrowseName for the AuditSessionEventType component.
        /// </summary>
        public const string AuditSessionEventType = "AuditSessionEventType";

        /// <summary>
        /// The BrowseName for the AuditUpdateEventType component.
        /// </summary>
        public const string AuditUpdateEventType = "AuditUpdateEventType";

        /// <summary>
        /// The BrowseName for the AuditUpdateMethodEventType component.
        /// </summary>
        public const string AuditUpdateMethodEventType = "AuditUpdateMethodEventType";

        /// <summary>
        /// The BrowseName for the AuditUpdateStateEventType component.
        /// </summary>
        public const string AuditUpdateStateEventType = "AuditUpdateStateEventType";

        /// <summary>
        /// The BrowseName for the AuditUrlMismatchEventType component.
        /// </summary>
        public const string AuditUrlMismatchEventType = "AuditUrlMismatchEventType";

        /// <summary>
        /// The BrowseName for the AuditWriteUpdateEventType component.
        /// </summary>
        public const string AuditWriteUpdateEventType = "AuditWriteUpdateEventType";

        /// <summary>
        /// The BrowseName for the AuthenticatedUsers component.
        /// </summary>
        public const string AuthenticatedUsers = "AuthenticatedUsers";

        /// <summary>
        /// The BrowseName for the AuthenticationMechanism component.
        /// </summary>
        public const string AuthenticationMechanism = "AuthenticationMechanism";

        /// <summary>
        /// The BrowseName for the AutoDelete component.
        /// </summary>
        public const string AutoDelete = "AutoDelete";

        /// <summary>
        /// The BrowseName for the AxisDefinition component.
        /// </summary>
        public const string AxisDefinition = "AxisDefinition";

        /// <summary>
        /// The BrowseName for the AxisInformation component.
        /// </summary>
        public const string AxisInformation = "AxisInformation";

        /// <summary>
        /// The BrowseName for the AxisScaleEnumeration component.
        /// </summary>
        public const string AxisScaleEnumeration = "AxisScaleEnumeration";

        /// <summary>
        /// The BrowseName for the AxisScaleType component.
        /// </summary>
        public const string AxisScaleType = "AxisScaleType";

        /// <summary>
        /// The BrowseName for the BaseConditionClassType component.
        /// </summary>
        public const string BaseConditionClassType = "BaseConditionClassType";

        /// <summary>
        /// The BrowseName for the BaseDataType component.
        /// </summary>
        public const string BaseDataType = "BaseDataType";

        /// <summary>
        /// The BrowseName for the BaseDataVariableType component.
        /// </summary>
        public const string BaseDataVariableType = "BaseDataVariableType";

        /// <summary>
        /// The BrowseName for the BaseEventType component.
        /// </summary>
        public const string BaseEventType = "BaseEventType";

        /// <summary>
        /// The BrowseName for the BaseModelChangeEventType component.
        /// </summary>
        public const string BaseModelChangeEventType = "BaseModelChangeEventType";

        /// <summary>
        /// The BrowseName for the BaseObjectType component.
        /// </summary>
        public const string BaseObjectType = "BaseObjectType";

        /// <summary>
        /// The BrowseName for the BaseVariableType component.
        /// </summary>
        public const string BaseVariableType = "BaseVariableType";

        /// <summary>
        /// The BrowseName for the BitFieldMaskDataType component.
        /// </summary>
        public const string BitFieldMaskDataType = "BitFieldMaskDataType";

        /// <summary>
        /// The BrowseName for the BitMask component.
        /// </summary>
        public const string BitMask = "BitMask";

        /// <summary>
        /// The BrowseName for the Boolean component.
        /// </summary>
        public const string Boolean = "Boolean";

        /// <summary>
        /// The BrowseName for the BranchId component.
        /// </summary>
        public const string BranchId = "BranchId";

        /// <summary>
        /// The BrowseName for the BrokerConnectionType component.
        /// </summary>
        public const string BrokerConnectionType = "BrokerConnectionType";

        /// <summary>
        /// The BrowseName for the BrokerGroupType component.
        /// </summary>
        public const string BrokerGroupType = "BrokerGroupType";

        /// <summary>
        /// The BrowseName for the BrokerGroupTypeAddReaderType component.
        /// </summary>
        public const string BrokerGroupTypeAddReaderType = "BrokerGroupTypeAddReaderType";

        /// <summary>
        /// The BrowseName for the BrokerReaderTransportType component.
        /// </summary>
        public const string BrokerReaderTransportType = "BrokerReaderTransportType";

        /// <summary>
        /// The BrowseName for the BrokerWriterTransportType component.
        /// </summary>
        public const string BrokerWriterTransportType = "BrokerWriterTransportType";

        /// <summary>
        /// The BrowseName for the BrowseCount component.
        /// </summary>
        public const string BrowseCount = "BrowseCount";

        /// <summary>
        /// The BrowseName for the BrowseDescription component.
        /// </summary>
        public const string BrowseDescription = "BrowseDescription";

        /// <summary>
        /// The BrowseName for the BrowseDirection component.
        /// </summary>
        public const string BrowseDirection = "BrowseDirection";

        /// <summary>
        /// The BrowseName for the BrowseNextCount component.
        /// </summary>
        public const string BrowseNextCount = "BrowseNextCount";

        /// <summary>
        /// The BrowseName for the BrowseNextRequest component.
        /// </summary>
        public const string BrowseNextRequest = "BrowseNextRequest";

        /// <summary>
        /// The BrowseName for the BrowseNextResponse component.
        /// </summary>
        public const string BrowseNextResponse = "BrowseNextResponse";

        /// <summary>
        /// The BrowseName for the BrowsePath component.
        /// </summary>
        public const string BrowsePath = "BrowsePath";

        /// <summary>
        /// The BrowseName for the BrowsePathResult component.
        /// </summary>
        public const string BrowsePathResult = "BrowsePathResult";

        /// <summary>
        /// The BrowseName for the BrowsePathTarget component.
        /// </summary>
        public const string BrowsePathTarget = "BrowsePathTarget";

        /// <summary>
        /// The BrowseName for the BrowseRequest component.
        /// </summary>
        public const string BrowseRequest = "BrowseRequest";

        /// <summary>
        /// The BrowseName for the BrowseResponse component.
        /// </summary>
        public const string BrowseResponse = "BrowseResponse";

        /// <summary>
        /// The BrowseName for the BrowseResult component.
        /// </summary>
        public const string BrowseResult = "BrowseResult";

        /// <summary>
        /// The BrowseName for the BrowseResultMask component.
        /// </summary>
        public const string BrowseResultMask = "BrowseResultMask";

        /// <summary>
        /// The BrowseName for the BuildDate component.
        /// </summary>
        public const string BuildDate = "BuildDate";

        /// <summary>
        /// The BrowseName for the BuildInfo component.
        /// </summary>
        public const string BuildInfo = "BuildInfo";

        /// <summary>
        /// The BrowseName for the BuildInfoType component.
        /// </summary>
        public const string BuildInfoType = "BuildInfoType";

        /// <summary>
        /// The BrowseName for the BuildNumber component.
        /// </summary>
        public const string BuildNumber = "BuildNumber";

        /// <summary>
        /// The BrowseName for the Byte component.
        /// </summary>
        public const string Byte = "Byte";

        /// <summary>
        /// The BrowseName for the ByteString component.
        /// </summary>
        public const string ByteString = "ByteString";

        /// <summary>
        /// The BrowseName for the CallCount component.
        /// </summary>
        public const string CallCount = "CallCount";

        /// <summary>
        /// The BrowseName for the CallMethodRequest component.
        /// </summary>
        public const string CallMethodRequest = "CallMethodRequest";

        /// <summary>
        /// The BrowseName for the CallMethodResult component.
        /// </summary>
        public const string CallMethodResult = "CallMethodResult";

        /// <summary>
        /// The BrowseName for the CallRequest component.
        /// </summary>
        public const string CallRequest = "CallRequest";

        /// <summary>
        /// The BrowseName for the CallResponse component.
        /// </summary>
        public const string CallResponse = "CallResponse";

        /// <summary>
        /// The BrowseName for the CancelRequest component.
        /// </summary>
        public const string CancelRequest = "CancelRequest";

        /// <summary>
        /// The BrowseName for the CancelResponse component.
        /// </summary>
        public const string CancelResponse = "CancelResponse";

        /// <summary>
        /// The BrowseName for the Certificate component.
        /// </summary>
        public const string Certificate = "Certificate";

        /// <summary>
        /// The BrowseName for the CertificateExpirationAlarmType component.
        /// </summary>
        public const string CertificateExpirationAlarmType = "CertificateExpirationAlarmType";

        /// <summary>
        /// The BrowseName for the CertificateGroup component.
        /// </summary>
        public const string CertificateGroup = "CertificateGroup";

        /// <summary>
        /// The BrowseName for the CertificateGroupFolderType component.
        /// </summary>
        public const string CertificateGroupFolderType = "CertificateGroupFolderType";

        /// <summary>
        /// The BrowseName for the CertificateGroups component.
        /// </summary>
        public const string CertificateGroups = "CertificateGroups";

        /// <summary>
        /// The BrowseName for the CertificateGroupType component.
        /// </summary>
        public const string CertificateGroupType = "CertificateGroupType";

        /// <summary>
        /// The BrowseName for the CertificateType component.
        /// </summary>
        public const string CertificateType = "CertificateType";

        /// <summary>
        /// The BrowseName for the CertificateTypes component.
        /// </summary>
        public const string CertificateTypes = "CertificateTypes";

        /// <summary>
        /// The BrowseName for the CertificateUpdatedAuditEventType component.
        /// </summary>
        public const string CertificateUpdatedAuditEventType = "CertificateUpdatedAuditEventType";

        /// <summary>
        /// The BrowseName for the Changes component.
        /// </summary>
        public const string Changes = "Changes";

        /// <summary>
        /// The BrowseName for the ChannelSecurityToken component.
        /// </summary>
        public const string ChannelSecurityToken = "ChannelSecurityToken";

        /// <summary>
        /// The BrowseName for the ClientAuditEntryId component.
        /// </summary>
        public const string ClientAuditEntryId = "ClientAuditEntryId";

        /// <summary>
        /// The BrowseName for the ClientCertificate component.
        /// </summary>
        public const string ClientCertificate = "ClientCertificate";

        /// <summary>
        /// The BrowseName for the ClientCertificateThumbprint component.
        /// </summary>
        public const string ClientCertificateThumbprint = "ClientCertificateThumbprint";

        /// <summary>
        /// The BrowseName for the ClientConnectionTime component.
        /// </summary>
        public const string ClientConnectionTime = "ClientConnectionTime";

        /// <summary>
        /// The BrowseName for the ClientDescription component.
        /// </summary>
        public const string ClientDescription = "ClientDescription";

        /// <summary>
        /// The BrowseName for the ClientLastContactTime component.
        /// </summary>
        public const string ClientLastContactTime = "ClientLastContactTime";

        /// <summary>
        /// The BrowseName for the ClientName_Placeholder component.
        /// </summary>
        public const string ClientName_Placeholder = "<ClientName>";

        /// <summary>
        /// The BrowseName for the ClientProcessingTimeout component.
        /// </summary>
        public const string ClientProcessingTimeout = "ClientProcessingTimeout";

        /// <summary>
        /// The BrowseName for the ClientSoftwareCertificates component.
        /// </summary>
        public const string ClientSoftwareCertificates = "ClientSoftwareCertificates";

        /// <summary>
        /// The BrowseName for the ClientUserId component.
        /// </summary>
        public const string ClientUserId = "ClientUserId";

        /// <summary>
        /// The BrowseName for the ClientUserIdHistory component.
        /// </summary>
        public const string ClientUserIdHistory = "ClientUserIdHistory";

        /// <summary>
        /// The BrowseName for the ClientUserIdOfSession component.
        /// </summary>
        public const string ClientUserIdOfSession = "ClientUserIdOfSession";

        /// <summary>
        /// The BrowseName for the Close component.
        /// </summary>
        public const string Close = "Close";

        /// <summary>
        /// The BrowseName for the CloseAndCommit component.
        /// </summary>
        public const string CloseAndCommit = "CloseAndCommit";

        /// <summary>
        /// The BrowseName for the CloseAndUpdate component.
        /// </summary>
        public const string CloseAndUpdate = "CloseAndUpdate";

        /// <summary>
        /// The BrowseName for the CloseSecureChannelRequest component.
        /// </summary>
        public const string CloseSecureChannelRequest = "CloseSecureChannelRequest";

        /// <summary>
        /// The BrowseName for the CloseSecureChannelResponse component.
        /// </summary>
        public const string CloseSecureChannelResponse = "CloseSecureChannelResponse";

        /// <summary>
        /// The BrowseName for the CloseSessionRequest component.
        /// </summary>
        public const string CloseSessionRequest = "CloseSessionRequest";

        /// <summary>
        /// The BrowseName for the CloseSessionResponse component.
        /// </summary>
        public const string CloseSessionResponse = "CloseSessionResponse";

        /// <summary>
        /// The BrowseName for the Comment component.
        /// </summary>
        public const string Comment = "Comment";

        /// <summary>
        /// The BrowseName for the ComplexNumberType component.
        /// </summary>
        public const string ComplexNumberType = "ComplexNumberType";

        /// <summary>
        /// The BrowseName for the ConditionClassId component.
        /// </summary>
        public const string ConditionClassId = "ConditionClassId";

        /// <summary>
        /// The BrowseName for the ConditionClassName component.
        /// </summary>
        public const string ConditionClassName = "ConditionClassName";

        /// <summary>
        /// The BrowseName for the ConditionName component.
        /// </summary>
        public const string ConditionName = "ConditionName";

        /// <summary>
        /// The BrowseName for the ConditionRefresh component.
        /// </summary>
        public const string ConditionRefresh = "ConditionRefresh";

        /// <summary>
        /// The BrowseName for the ConditionRefresh2 component.
        /// </summary>
        public const string ConditionRefresh2 = "ConditionRefresh2";

        /// <summary>
        /// The BrowseName for the ConditionType component.
        /// </summary>
        public const string ConditionType = "ConditionType";

        /// <summary>
        /// The BrowseName for the ConditionVariableType component.
        /// </summary>
        public const string ConditionVariableType = "ConditionVariableType";

        /// <summary>
        /// The BrowseName for the ConfigurationVersion component.
        /// </summary>
        public const string ConfigurationVersion = "ConfigurationVersion";

        /// <summary>
        /// The BrowseName for the ConfigurationVersionDataType component.
        /// </summary>
        public const string ConfigurationVersionDataType = "ConfigurationVersionDataType";

        /// <summary>
        /// The BrowseName for the ConfigureAdmin component.
        /// </summary>
        public const string ConfigureAdmin = "ConfigureAdmin";

        /// <summary>
        /// The BrowseName for the Confirm component.
        /// </summary>
        public const string Confirm = "Confirm";

        /// <summary>
        /// The BrowseName for the ConfirmedState component.
        /// </summary>
        public const string ConfirmedState = "ConfirmedState";

        /// <summary>
        /// The BrowseName for the ConnectedVariables component.
        /// </summary>
        public const string ConnectedVariables = "ConnectedVariables";

        /// <summary>
        /// The BrowseName for the ConnectedVariablesType component.
        /// </summary>
        public const string ConnectedVariablesType = "ConnectedVariablesType";

        /// <summary>
        /// The BrowseName for the ConnectionId component.
        /// </summary>
        public const string ConnectionId = "ConnectionId";

        /// <summary>
        /// The BrowseName for the ConnectionName_Placeholder component.
        /// </summary>
        public const string ConnectionName_Placeholder = "<ConnectionName>";

        /// <summary>
        /// The BrowseName for the ContentFilter component.
        /// </summary>
        public const string ContentFilter = "ContentFilter";

        /// <summary>
        /// The BrowseName for the ContentFilterElement component.
        /// </summary>
        public const string ContentFilterElement = "ContentFilterElement";

        /// <summary>
        /// The BrowseName for the ContentFilterElementResult component.
        /// </summary>
        public const string ContentFilterElementResult = "ContentFilterElementResult";

        /// <summary>
        /// The BrowseName for the ContentFilterResult component.
        /// </summary>
        public const string ContentFilterResult = "ContentFilterResult";

        /// <summary>
        /// The BrowseName for the Context component.
        /// </summary>
        public const string Context = "Context";

        /// <summary>
        /// The BrowseName for the ContinuationPoint component.
        /// </summary>
        public const string ContinuationPoint = "ContinuationPoint";

        /// <summary>
        /// The BrowseName for the Counter component.
        /// </summary>
        public const string Counter = "Counter";

        /// <summary>
        /// The BrowseName for the Creatable component.
        /// </summary>
        public const string Creatable = "Creatable";

        /// <summary>
        /// The BrowseName for the CreateClientName component.
        /// </summary>
        public const string CreateClientName = "CreateClientName";

        /// <summary>
        /// The BrowseName for the CreateDirectory component.
        /// </summary>
        public const string CreateDirectory = "CreateDirectory";

        /// <summary>
        /// The BrowseName for the CreateFile component.
        /// </summary>
        public const string CreateFile = "CreateFile";

        /// <summary>
        /// The BrowseName for the CreateMonitoredItemsCount component.
        /// </summary>
        public const string CreateMonitoredItemsCount = "CreateMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the CreateMonitoredItemsRequest component.
        /// </summary>
        public const string CreateMonitoredItemsRequest = "CreateMonitoredItemsRequest";

        /// <summary>
        /// The BrowseName for the CreateMonitoredItemsResponse component.
        /// </summary>
        public const string CreateMonitoredItemsResponse = "CreateMonitoredItemsResponse";

        /// <summary>
        /// The BrowseName for the CreateSessionId component.
        /// </summary>
        public const string CreateSessionId = "CreateSessionId";

        /// <summary>
        /// The BrowseName for the CreateSessionRequest component.
        /// </summary>
        public const string CreateSessionRequest = "CreateSessionRequest";

        /// <summary>
        /// The BrowseName for the CreateSessionResponse component.
        /// </summary>
        public const string CreateSessionResponse = "CreateSessionResponse";

        /// <summary>
        /// The BrowseName for the CreateSigningRequest component.
        /// </summary>
        public const string CreateSigningRequest = "CreateSigningRequest";

        /// <summary>
        /// The BrowseName for the CreateSubscriptionCount component.
        /// </summary>
        public const string CreateSubscriptionCount = "CreateSubscriptionCount";

        /// <summary>
        /// The BrowseName for the CreateSubscriptionRequest component.
        /// </summary>
        public const string CreateSubscriptionRequest = "CreateSubscriptionRequest";

        /// <summary>
        /// The BrowseName for the CreateSubscriptionResponse component.
        /// </summary>
        public const string CreateSubscriptionResponse = "CreateSubscriptionResponse";

        /// <summary>
        /// The BrowseName for the CubeItemType component.
        /// </summary>
        public const string CubeItemType = "CubeItemType";

        /// <summary>
        /// The BrowseName for the CumulatedSessionCount component.
        /// </summary>
        public const string CumulatedSessionCount = "CumulatedSessionCount";

        /// <summary>
        /// The BrowseName for the CumulatedSubscriptionCount component.
        /// </summary>
        public const string CumulatedSubscriptionCount = "CumulatedSubscriptionCount";

        /// <summary>
        /// The BrowseName for the CurrentKeepAliveCount component.
        /// </summary>
        public const string CurrentKeepAliveCount = "CurrentKeepAliveCount";

        /// <summary>
        /// The BrowseName for the CurrentLifetimeCount component.
        /// </summary>
        public const string CurrentLifetimeCount = "CurrentLifetimeCount";

        /// <summary>
        /// The BrowseName for the CurrentMonitoredItemsCount component.
        /// </summary>
        public const string CurrentMonitoredItemsCount = "CurrentMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the CurrentPublishRequestsInQueue component.
        /// </summary>
        public const string CurrentPublishRequestsInQueue = "CurrentPublishRequestsInQueue";

        /// <summary>
        /// The BrowseName for the CurrentServerId component.
        /// </summary>
        public const string CurrentServerId = "CurrentServerId";

        /// <summary>
        /// The BrowseName for the CurrentSessionCount component.
        /// </summary>
        public const string CurrentSessionCount = "CurrentSessionCount";

        /// <summary>
        /// The BrowseName for the CurrentState component.
        /// </summary>
        public const string CurrentState = "CurrentState";

        /// <summary>
        /// The BrowseName for the CurrentSubscriptionCount component.
        /// </summary>
        public const string CurrentSubscriptionCount = "CurrentSubscriptionCount";

        /// <summary>
        /// The BrowseName for the CurrentSubscriptionsCount component.
        /// </summary>
        public const string CurrentSubscriptionsCount = "CurrentSubscriptionsCount";

        /// <summary>
        /// The BrowseName for the CurrentTime component.
        /// </summary>
        public const string CurrentTime = "CurrentTime";

        /// <summary>
        /// The BrowseName for the DataChangeFilter component.
        /// </summary>
        public const string DataChangeFilter = "DataChangeFilter";

        /// <summary>
        /// The BrowseName for the DataChangeNotification component.
        /// </summary>
        public const string DataChangeNotification = "DataChangeNotification";

        /// <summary>
        /// The BrowseName for the DataChangeNotificationsCount component.
        /// </summary>
        public const string DataChangeNotificationsCount = "DataChangeNotificationsCount";

        /// <summary>
        /// The BrowseName for the DataChangeTrigger component.
        /// </summary>
        public const string DataChangeTrigger = "DataChangeTrigger";

        /// <summary>
        /// The BrowseName for the DataConnectionDataType component.
        /// </summary>
        public const string DataConnectionDataType = "DataConnectionDataType";

        /// <summary>
        /// The BrowseName for the DataItemType component.
        /// </summary>
        public const string DataItemType = "DataItemType";

        /// <summary>
        /// The BrowseName for the DataSetClassId component.
        /// </summary>
        public const string DataSetClassId = "DataSetClassId";

        /// <summary>
        /// The BrowseName for the DataSetClassType component.
        /// </summary>
        public const string DataSetClassType = "DataSetClassType";

        /// <summary>
        /// The BrowseName for the DataSetContentMask component.
        /// </summary>
        public const string DataSetContentMask = "DataSetContentMask";

        /// <summary>
        /// The BrowseName for the DataSetFieldFlags component.
        /// </summary>
        public const string DataSetFieldFlags = "DataSetFieldFlags";

        /// <summary>
        /// The BrowseName for the DataSetFolderName_Placeholder component.
        /// </summary>
        public const string DataSetFolderName_Placeholder = "<DataSetFolderName>";

        /// <summary>
        /// The BrowseName for the DataSetFolderType component.
        /// </summary>
        public const string DataSetFolderType = "DataSetFolderType";

        /// <summary>
        /// The BrowseName for the DataSetMetaData component.
        /// </summary>
        public const string DataSetMetaData = "DataSetMetaData";

        /// <summary>
        /// The BrowseName for the DataSetMetaDataType component.
        /// </summary>
        public const string DataSetMetaDataType = "DataSetMetaDataType";

        /// <summary>
        /// The BrowseName for the DataSetReaderName_Placeholder component.
        /// </summary>
        public const string DataSetReaderName_Placeholder = "<DataSetReaderName>";

        /// <summary>
        /// The BrowseName for the DataSetReaderTransportType component.
        /// </summary>
        public const string DataSetReaderTransportType = "DataSetReaderTransportType";

        /// <summary>
        /// The BrowseName for the DataSetReaderType component.
        /// </summary>
        public const string DataSetReaderType = "DataSetReaderType";

        /// <summary>
        /// The BrowseName for the DataSetToWriter component.
        /// </summary>
        public const string DataSetToWriter = "DataSetToWriter";

        /// <summary>
        /// The BrowseName for the DataSetWriterId component.
        /// </summary>
        public const string DataSetWriterId = "DataSetWriterId";

        /// <summary>
        /// The BrowseName for the DataSetWriterName_Placeholder component.
        /// </summary>
        public const string DataSetWriterName_Placeholder = "<DataSetWriterName>";

        /// <summary>
        /// The BrowseName for the DataSetWriterTransportType component.
        /// </summary>
        public const string DataSetWriterTransportType = "DataSetWriterTransportType";

        /// <summary>
        /// The BrowseName for the DataSetWriterType component.
        /// </summary>
        public const string DataSetWriterType = "DataSetWriterType";

        /// <summary>
        /// The BrowseName for the DataTypeAttributes component.
        /// </summary>
        public const string DataTypeAttributes = "DataTypeAttributes";

        /// <summary>
        /// The BrowseName for the DataTypeDefinition component.
        /// </summary>
        public const string DataTypeDefinition = "DataTypeDefinition";

        /// <summary>
        /// The BrowseName for the DataTypeDescription component.
        /// </summary>
        public const string DataTypeDescription = "DataTypeDescription";

        /// <summary>
        /// The BrowseName for the DataTypeDescriptionType component.
        /// </summary>
        public const string DataTypeDescriptionType = "DataTypeDescriptionType";

        /// <summary>
        /// The BrowseName for the DataTypeDictionaryType component.
        /// </summary>
        public const string DataTypeDictionaryType = "DataTypeDictionaryType";

        /// <summary>
        /// The BrowseName for the DataTypeEncodingType component.
        /// </summary>
        public const string DataTypeEncodingType = "DataTypeEncodingType";

        /// <summary>
        /// The BrowseName for the DataTypeNode component.
        /// </summary>
        public const string DataTypeNode = "DataTypeNode";

        /// <summary>
        /// The BrowseName for the DataTypesFolder component.
        /// </summary>
        public const string DataTypesFolder = "DataTypes";

        /// <summary>
        /// The BrowseName for the DataTypeSystemType component.
        /// </summary>
        public const string DataTypeSystemType = "DataTypeSystemType";

        /// <summary>
        /// The BrowseName for the DataTypeVersion component.
        /// </summary>
        public const string DataTypeVersion = "DataTypeVersion";

        /// <summary>
        /// The BrowseName for the DataValue component.
        /// </summary>
        public const string DataValue = "DataValue";

        /// <summary>
        /// The BrowseName for the Date component.
        /// </summary>
        public const string Date = "Date";

        /// <summary>
        /// The BrowseName for the DateString component.
        /// </summary>
        public const string DateString = "DateString";

        /// <summary>
        /// The BrowseName for the DateTime component.
        /// </summary>
        public const string DateTime = "DateTime";

        /// <summary>
        /// The BrowseName for the DeadbandType component.
        /// </summary>
        public const string DeadbandType = "DeadbandType";

        /// <summary>
        /// The BrowseName for the Decimal128 component.
        /// </summary>
        public const string Decimal128 = "Decimal128";

        /// <summary>
        /// The BrowseName for the DecimalString component.
        /// </summary>
        public const string DecimalString = "DecimalString";

        /// <summary>
        /// The BrowseName for the DefaultApplicationGroup component.
        /// </summary>
        public const string DefaultApplicationGroup = "DefaultApplicationGroup";

        /// <summary>
        /// The BrowseName for the DefaultBinary component.
        /// </summary>
        public const string DefaultBinary = "Default Binary";

        /// <summary>
        /// The BrowseName for the DefaultHttpsGroup component.
        /// </summary>
        public const string DefaultHttpsGroup = "DefaultHttpsGroup";

        /// <summary>
        /// The BrowseName for the DefaultPublisherId component.
        /// </summary>
        public const string DefaultPublisherId = "DefaultPublisherId";

        /// <summary>
        /// The BrowseName for the DefaultResponse component.
        /// </summary>
        public const string DefaultResponse = "DefaultResponse";

        /// <summary>
        /// The BrowseName for the DefaultUserTokenGroup component.
        /// </summary>
        public const string DefaultUserTokenGroup = "DefaultUserTokenGroup";

        /// <summary>
        /// The BrowseName for the DefaultXml component.
        /// </summary>
        public const string DefaultXml = "Default XML";

        /// <summary>
        /// The BrowseName for the Definition component.
        /// </summary>
        public const string Definition = "Definition";

        /// <summary>
        /// The BrowseName for the Deletable component.
        /// </summary>
        public const string Deletable = "Deletable";

        /// <summary>
        /// The BrowseName for the Delete component.
        /// </summary>
        public const string Delete = "Delete";

        /// <summary>
        /// The BrowseName for the DeleteAtTimeCapability component.
        /// </summary>
        public const string DeleteAtTimeCapability = "DeleteAtTimeCapability";

        /// <summary>
        /// The BrowseName for the DeleteAtTimeDetails component.
        /// </summary>
        public const string DeleteAtTimeDetails = "DeleteAtTimeDetails";

        /// <summary>
        /// The BrowseName for the DeleteEventCapability component.
        /// </summary>
        public const string DeleteEventCapability = "DeleteEventCapability";

        /// <summary>
        /// The BrowseName for the DeleteEventDetails component.
        /// </summary>
        public const string DeleteEventDetails = "DeleteEventDetails";

        /// <summary>
        /// The BrowseName for the DeleteMonitoredItemsCount component.
        /// </summary>
        public const string DeleteMonitoredItemsCount = "DeleteMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the DeleteMonitoredItemsRequest component.
        /// </summary>
        public const string DeleteMonitoredItemsRequest = "DeleteMonitoredItemsRequest";

        /// <summary>
        /// The BrowseName for the DeleteMonitoredItemsResponse component.
        /// </summary>
        public const string DeleteMonitoredItemsResponse = "DeleteMonitoredItemsResponse";

        /// <summary>
        /// The BrowseName for the DeleteNodesCount component.
        /// </summary>
        public const string DeleteNodesCount = "DeleteNodesCount";

        /// <summary>
        /// The BrowseName for the DeleteNodesItem component.
        /// </summary>
        public const string DeleteNodesItem = "DeleteNodesItem";

        /// <summary>
        /// The BrowseName for the DeleteNodesRequest component.
        /// </summary>
        public const string DeleteNodesRequest = "DeleteNodesRequest";

        /// <summary>
        /// The BrowseName for the DeleteNodesResponse component.
        /// </summary>
        public const string DeleteNodesResponse = "DeleteNodesResponse";

        /// <summary>
        /// The BrowseName for the DeleteRawCapability component.
        /// </summary>
        public const string DeleteRawCapability = "DeleteRawCapability";

        /// <summary>
        /// The BrowseName for the DeleteRawModifiedDetails component.
        /// </summary>
        public const string DeleteRawModifiedDetails = "DeleteRawModifiedDetails";

        /// <summary>
        /// The BrowseName for the DeleteReferencesCount component.
        /// </summary>
        public const string DeleteReferencesCount = "DeleteReferencesCount";

        /// <summary>
        /// The BrowseName for the DeleteReferencesItem component.
        /// </summary>
        public const string DeleteReferencesItem = "DeleteReferencesItem";

        /// <summary>
        /// The BrowseName for the DeleteReferencesRequest component.
        /// </summary>
        public const string DeleteReferencesRequest = "DeleteReferencesRequest";

        /// <summary>
        /// The BrowseName for the DeleteReferencesResponse component.
        /// </summary>
        public const string DeleteReferencesResponse = "DeleteReferencesResponse";

        /// <summary>
        /// The BrowseName for the DeleteSubscriptionsCount component.
        /// </summary>
        public const string DeleteSubscriptionsCount = "DeleteSubscriptionsCount";

        /// <summary>
        /// The BrowseName for the DeleteSubscriptionsRequest component.
        /// </summary>
        public const string DeleteSubscriptionsRequest = "DeleteSubscriptionsRequest";

        /// <summary>
        /// The BrowseName for the DeleteSubscriptionsResponse component.
        /// </summary>
        public const string DeleteSubscriptionsResponse = "DeleteSubscriptionsResponse";

        /// <summary>
        /// The BrowseName for the DeviceFailureEventType component.
        /// </summary>
        public const string DeviceFailureEventType = "DeviceFailureEventType";

        /// <summary>
        /// The BrowseName for the DiagnosticInfo component.
        /// </summary>
        public const string DiagnosticInfo = "DiagnosticInfo";

        /// <summary>
        /// The BrowseName for the DialogConditionType component.
        /// </summary>
        public const string DialogConditionType = "DialogConditionType";

        /// <summary>
        /// The BrowseName for the DialogState component.
        /// </summary>
        public const string DialogState = "DialogState";

        /// <summary>
        /// The BrowseName for the DictionaryFragment component.
        /// </summary>
        public const string DictionaryFragment = "DictionaryFragment";

        /// <summary>
        /// The BrowseName for the Disable component.
        /// </summary>
        public const string Disable = "Disable";

        /// <summary>
        /// The BrowseName for the DisableCount component.
        /// </summary>
        public const string DisableCount = "DisableCount";

        /// <summary>
        /// The BrowseName for the DisabledMonitoredItemCount component.
        /// </summary>
        public const string DisabledMonitoredItemCount = "DisabledMonitoredItemCount";

        /// <summary>
        /// The BrowseName for the DisabledMonitoredItemsSamplingCount component.
        /// </summary>
        public const string DisabledMonitoredItemsSamplingCount = "DisabledMonitoredItemsSamplingCount";

        /// <summary>
        /// The BrowseName for the DiscardedMessageCount component.
        /// </summary>
        public const string DiscardedMessageCount = "DiscardedMessageCount";

        /// <summary>
        /// The BrowseName for the DiscoveryConfiguration component.
        /// </summary>
        public const string DiscoveryConfiguration = "DiscoveryConfiguration";

        /// <summary>
        /// The BrowseName for the DiscreteAlarmType component.
        /// </summary>
        public const string DiscreteAlarmType = "DiscreteAlarmType";

        /// <summary>
        /// The BrowseName for the DiscreteItemType component.
        /// </summary>
        public const string DiscreteItemType = "DiscreteItemType";

        /// <summary>
        /// The BrowseName for the Double component.
        /// </summary>
        public const string Double = "Double";

        /// <summary>
        /// The BrowseName for the DoubleComplexNumberType component.
        /// </summary>
        public const string DoubleComplexNumberType = "DoubleComplexNumberType";

        /// <summary>
        /// The BrowseName for the Duration component.
        /// </summary>
        public const string Duration = "Duration";

        /// <summary>
        /// The BrowseName for the DurationString component.
        /// </summary>
        public const string DurationString = "DurationString";

        /// <summary>
        /// The BrowseName for the EffectiveDisplayName component.
        /// </summary>
        public const string EffectiveDisplayName = "EffectiveDisplayName";

        /// <summary>
        /// The BrowseName for the EffectiveTransitionTime component.
        /// </summary>
        public const string EffectiveTransitionTime = "EffectiveTransitionTime";

        /// <summary>
        /// The BrowseName for the ElementOperand component.
        /// </summary>
        public const string ElementOperand = "ElementOperand";

        /// <summary>
        /// The BrowseName for the Enable component.
        /// </summary>
        public const string Enable = "Enable";

        /// <summary>
        /// The BrowseName for the EnableCount component.
        /// </summary>
        public const string EnableCount = "EnableCount";

        /// <summary>
        /// The BrowseName for the EnabledFlag component.
        /// </summary>
        public const string EnabledFlag = "EnabledFlag";

        /// <summary>
        /// The BrowseName for the EnabledState component.
        /// </summary>
        public const string EnabledState = "EnabledState";

        /// <summary>
        /// The BrowseName for the Encoding component.
        /// </summary>
        public const string Encoding = "Encoding";

        /// <summary>
        /// The BrowseName for the EncodingMimeType component.
        /// </summary>
        public const string EncodingMimeType = "EncodingMimeType";

        /// <summary>
        /// The BrowseName for the EndpointConfiguration component.
        /// </summary>
        public const string EndpointConfiguration = "EndpointConfiguration";

        /// <summary>
        /// The BrowseName for the EndpointDescription component.
        /// </summary>
        public const string EndpointDescription = "EndpointDescription";

        /// <summary>
        /// The BrowseName for the Endpoints component.
        /// </summary>
        public const string Endpoints = "Endpoints";

        /// <summary>
        /// The BrowseName for the EndpointUrl component.
        /// </summary>
        public const string EndpointUrl = "EndpointUrl";

        /// <summary>
        /// The BrowseName for the EndpointUrlListDataType component.
        /// </summary>
        public const string EndpointUrlListDataType = "EndpointUrlListDataType";

        /// <summary>
        /// The BrowseName for the EndTime component.
        /// </summary>
        public const string EndTime = "EndTime";

        /// <summary>
        /// The BrowseName for the EngineeringUnits component.
        /// </summary>
        public const string EngineeringUnits = "EngineeringUnits";

        /// <summary>
        /// The BrowseName for the EnumDefinition component.
        /// </summary>
        public const string EnumDefinition = "EnumDefinition";

        /// <summary>
        /// The BrowseName for the EnumDescription component.
        /// </summary>
        public const string EnumDescription = "EnumDescription";

        /// <summary>
        /// The BrowseName for the Enumeration component.
        /// </summary>
        public const string Enumeration = "Enumeration";

        /// <summary>
        /// The BrowseName for the EnumField component.
        /// </summary>
        public const string EnumField = "EnumField";

        /// <summary>
        /// The BrowseName for the EnumStrings component.
        /// </summary>
        public const string EnumStrings = "EnumStrings";

        /// <summary>
        /// The BrowseName for the EnumValues component.
        /// </summary>
        public const string EnumValues = "EnumValues";

        /// <summary>
        /// The BrowseName for the EnumValueType component.
        /// </summary>
        public const string EnumValueType = "EnumValueType";

        /// <summary>
        /// The BrowseName for the Error component.
        /// </summary>
        public const string Error = "Error";

        /// <summary>
        /// The BrowseName for the ErrorToIdle component.
        /// </summary>
        public const string ErrorToIdle = "ErrorToIdle";

        /// <summary>
        /// The BrowseName for the EstimatedReturnTime component.
        /// </summary>
        public const string EstimatedReturnTime = "EstimatedReturnTime";

        /// <summary>
        /// The BrowseName for the EUInformation component.
        /// </summary>
        public const string EUInformation = "EUInformation";

        /// <summary>
        /// The BrowseName for the EURange component.
        /// </summary>
        public const string EURange = "EURange";

        /// <summary>
        /// The BrowseName for the EventFieldList component.
        /// </summary>
        public const string EventFieldList = "EventFieldList";

        /// <summary>
        /// The BrowseName for the EventFilter component.
        /// </summary>
        public const string EventFilter = "EventFilter";

        /// <summary>
        /// The BrowseName for the EventFilterResult component.
        /// </summary>
        public const string EventFilterResult = "EventFilterResult";

        /// <summary>
        /// The BrowseName for the EventId component.
        /// </summary>
        public const string EventId = "EventId";

        /// <summary>
        /// The BrowseName for the EventIds component.
        /// </summary>
        public const string EventIds = "EventIds";

        /// <summary>
        /// The BrowseName for the EventNotificationList component.
        /// </summary>
        public const string EventNotificationList = "EventNotificationList";

        /// <summary>
        /// The BrowseName for the EventNotificationsCount component.
        /// </summary>
        public const string EventNotificationsCount = "EventNotificationsCount";

        /// <summary>
        /// The BrowseName for the EventNotifier component.
        /// </summary>
        public const string EventNotifier = "EventNotifier";

        /// <summary>
        /// The BrowseName for the EventQueueOverFlowCount component.
        /// </summary>
        public const string EventQueueOverFlowCount = "EventQueueOverFlowCount";

        /// <summary>
        /// The BrowseName for the EventQueueOverflowEventType component.
        /// </summary>
        public const string EventQueueOverflowEventType = "EventQueueOverflowEventType";

        /// <summary>
        /// The BrowseName for the EventType component.
        /// </summary>
        public const string EventType = "EventType";

        /// <summary>
        /// The BrowseName for the EventTypesFolder component.
        /// </summary>
        public const string EventTypesFolder = "EventTypes";

        /// <summary>
        /// The BrowseName for the ExceptionDeviation component.
        /// </summary>
        public const string ExceptionDeviation = "ExceptionDeviation";

        /// <summary>
        /// The BrowseName for the ExceptionDeviationFormat component.
        /// </summary>
        public const string ExceptionDeviationFormat = "ExceptionDeviationFormat";

        /// <summary>
        /// The BrowseName for the ExclusiveDeviationAlarmType component.
        /// </summary>
        public const string ExclusiveDeviationAlarmType = "ExclusiveDeviationAlarmType";

        /// <summary>
        /// The BrowseName for the ExclusiveLevelAlarmType component.
        /// </summary>
        public const string ExclusiveLevelAlarmType = "ExclusiveLevelAlarmType";

        /// <summary>
        /// The BrowseName for the ExclusiveLimitAlarmType component.
        /// </summary>
        public const string ExclusiveLimitAlarmType = "ExclusiveLimitAlarmType";

        /// <summary>
        /// The BrowseName for the ExclusiveLimitStateMachineType component.
        /// </summary>
        public const string ExclusiveLimitStateMachineType = "ExclusiveLimitStateMachineType";

        /// <summary>
        /// The BrowseName for the ExclusiveRateOfChangeAlarmType component.
        /// </summary>
        public const string ExclusiveRateOfChangeAlarmType = "ExclusiveRateOfChangeAlarmType";

        /// <summary>
        /// The BrowseName for the ExpandedNodeId component.
        /// </summary>
        public const string ExpandedNodeId = "ExpandedNodeId";

        /// <summary>
        /// The BrowseName for the ExpirationDate component.
        /// </summary>
        public const string ExpirationDate = "ExpirationDate";

        /// <summary>
        /// The BrowseName for the ExpirationLimit component.
        /// </summary>
        public const string ExpirationLimit = "ExpirationLimit";

        /// <summary>
        /// The BrowseName for the ExportNamespace component.
        /// </summary>
        public const string ExportNamespace = "ExportNamespace";

        /// <summary>
        /// The BrowseName for the ExtensionFieldName_Placeholder component.
        /// </summary>
        public const string ExtensionFieldName_Placeholder = "<ExtensionFieldName>";

        /// <summary>
        /// The BrowseName for the ExtensionFields component.
        /// </summary>
        public const string ExtensionFields = "ExtensionFields";

        /// <summary>
        /// The BrowseName for the ExtensionFieldsType component.
        /// </summary>
        public const string ExtensionFieldsType = "ExtensionFieldsType";

        /// <summary>
        /// The BrowseName for the FalseState component.
        /// </summary>
        public const string FalseState = "FalseState";

        /// <summary>
        /// The BrowseName for the FieldMetaData component.
        /// </summary>
        public const string FieldMetaData = "FieldMetaData";

        /// <summary>
        /// The BrowseName for the FileDirectoryName_Placeholder component.
        /// </summary>
        public const string FileDirectoryName_Placeholder = "<FileDirectoryName>";

        /// <summary>
        /// The BrowseName for the FileDirectoryType component.
        /// </summary>
        public const string FileDirectoryType = "FileDirectoryType";

        /// <summary>
        /// The BrowseName for the FileName_Placeholder component.
        /// </summary>
        public const string FileName_Placeholder = "<FileName>";

        /// <summary>
        /// The BrowseName for the FileTransferStateMachineType component.
        /// </summary>
        public const string FileTransferStateMachineType = "FileTransferStateMachineType";

        /// <summary>
        /// The BrowseName for the FileType component.
        /// </summary>
        public const string FileType = "FileType";

        /// <summary>
        /// The BrowseName for the Filter component.
        /// </summary>
        public const string Filter = "Filter";

        /// <summary>
        /// The BrowseName for the FilterOperand component.
        /// </summary>
        public const string FilterOperand = "FilterOperand";

        /// <summary>
        /// The BrowseName for the FilterOperator component.
        /// </summary>
        public const string FilterOperator = "FilterOperator";

        /// <summary>
        /// The BrowseName for the FinalResultData component.
        /// </summary>
        public const string FinalResultData = "FinalResultData";

        /// <summary>
        /// The BrowseName for the FindServersOnNetworkRequest component.
        /// </summary>
        public const string FindServersOnNetworkRequest = "FindServersOnNetworkRequest";

        /// <summary>
        /// The BrowseName for the FindServersOnNetworkResponse component.
        /// </summary>
        public const string FindServersOnNetworkResponse = "FindServersOnNetworkResponse";

        /// <summary>
        /// The BrowseName for the FindServersRequest component.
        /// </summary>
        public const string FindServersRequest = "FindServersRequest";

        /// <summary>
        /// The BrowseName for the FindServersResponse component.
        /// </summary>
        public const string FindServersResponse = "FindServersResponse";

        /// <summary>
        /// The BrowseName for the FiniteStateMachineType component.
        /// </summary>
        public const string FiniteStateMachineType = "FiniteStateMachineType";

        /// <summary>
        /// The BrowseName for the FiniteStateVariableType component.
        /// </summary>
        public const string FiniteStateVariableType = "FiniteStateVariableType";

        /// <summary>
        /// The BrowseName for the FiniteTransitionVariableType component.
        /// </summary>
        public const string FiniteTransitionVariableType = "FiniteTransitionVariableType";

        /// <summary>
        /// The BrowseName for the Float component.
        /// </summary>
        public const string Float = "Float";

        /// <summary>
        /// The BrowseName for the FolderType component.
        /// </summary>
        public const string FolderType = "FolderType";

        /// <summary>
        /// The BrowseName for the FromState component.
        /// </summary>
        public const string FromState = "FromState";

        /// <summary>
        /// The BrowseName for the GeneralModelChangeEventType component.
        /// </summary>
        public const string GeneralModelChangeEventType = "GeneralModelChangeEventType";

        /// <summary>
        /// The BrowseName for the GenerateFileForRead component.
        /// </summary>
        public const string GenerateFileForRead = "GenerateFileForRead";

        /// <summary>
        /// The BrowseName for the GenerateFileForWrite component.
        /// </summary>
        public const string GenerateFileForWrite = "GenerateFileForWrite";

        /// <summary>
        /// The BrowseName for the GeneratesEvent component.
        /// </summary>
        public const string GeneratesEvent = "GeneratesEvent";

        /// <summary>
        /// The BrowseName for the GetEndpointsRequest component.
        /// </summary>
        public const string GetEndpointsRequest = "GetEndpointsRequest";

        /// <summary>
        /// The BrowseName for the GetEndpointsResponse component.
        /// </summary>
        public const string GetEndpointsResponse = "GetEndpointsResponse";

        /// <summary>
        /// The BrowseName for the GetMonitoredItems component.
        /// </summary>
        public const string GetMonitoredItems = "GetMonitoredItems";

        /// <summary>
        /// The BrowseName for the GetPosition component.
        /// </summary>
        public const string GetPosition = "GetPosition";

        /// <summary>
        /// The BrowseName for the GetRejectedList component.
        /// </summary>
        public const string GetRejectedList = "GetRejectedList";

        /// <summary>
        /// The BrowseName for the GetSecurityGroup component.
        /// </summary>
        public const string GetSecurityGroup = "GetSecurityGroup";

        /// <summary>
        /// The BrowseName for the GetSecurityKeys component.
        /// </summary>
        public const string GetSecurityKeys = "GetSecurityKeys";

        /// <summary>
        /// The BrowseName for the GroupId component.
        /// </summary>
        public const string GroupId = "GroupId";

        /// <summary>
        /// The BrowseName for the GroupName_Placeholder component.
        /// </summary>
        public const string GroupName_Placeholder = "<GroupName>";

        /// <summary>
        /// The BrowseName for the Guid component.
        /// </summary>
        public const string Guid = "Guid";

        /// <summary>
        /// The BrowseName for the HAConfiguration component.
        /// </summary>
        public const string HAConfiguration = "HA Configuration";

        /// <summary>
        /// The BrowseName for the Halt component.
        /// </summary>
        public const string Halt = "Halt";

        /// <summary>
        /// The BrowseName for the Halted component.
        /// </summary>
        public const string Halted = "Halted";

        /// <summary>
        /// The BrowseName for the HaltedToReady component.
        /// </summary>
        public const string HaltedToReady = "HaltedToReady";

        /// <summary>
        /// The BrowseName for the HasCause component.
        /// </summary>
        public const string HasCause = "HasCause";

        /// <summary>
        /// The BrowseName for the HasChild component.
        /// </summary>
        public const string HasChild = "HasChild";

        /// <summary>
        /// The BrowseName for the HasComponent component.
        /// </summary>
        public const string HasComponent = "HasComponent";

        /// <summary>
        /// The BrowseName for the HasCondition component.
        /// </summary>
        public const string HasCondition = "HasCondition";

        /// <summary>
        /// The BrowseName for the HasDataSetReader component.
        /// </summary>
        public const string HasDataSetReader = "HasDataSetReader";

        /// <summary>
        /// The BrowseName for the HasDataSetWriter component.
        /// </summary>
        public const string HasDataSetWriter = "HasDataSetWriter";

        /// <summary>
        /// The BrowseName for the HasDescription component.
        /// </summary>
        public const string HasDescription = "HasDescription";

        /// <summary>
        /// The BrowseName for the HasEffect component.
        /// </summary>
        public const string HasEffect = "HasEffect";

        /// <summary>
        /// The BrowseName for the HasEncoding component.
        /// </summary>
        public const string HasEncoding = "HasEncoding";

        /// <summary>
        /// The BrowseName for the HasEventSource component.
        /// </summary>
        public const string HasEventSource = "HasEventSource";

        /// <summary>
        /// The BrowseName for the HasFalseSubState component.
        /// </summary>
        public const string HasFalseSubState = "HasFalseSubState";

        /// <summary>
        /// The BrowseName for the HasHistoricalConfiguration component.
        /// </summary>
        public const string HasHistoricalConfiguration = "HasHistoricalConfiguration";

        /// <summary>
        /// The BrowseName for the HasModellingRule component.
        /// </summary>
        public const string HasModellingRule = "HasModellingRule";

        /// <summary>
        /// The BrowseName for the HasNotifier component.
        /// </summary>
        public const string HasNotifier = "HasNotifier";

        /// <summary>
        /// The BrowseName for the HasOrderedComponent component.
        /// </summary>
        public const string HasOrderedComponent = "HasOrderedComponent";

        /// <summary>
        /// The BrowseName for the HasProperty component.
        /// </summary>
        public const string HasProperty = "HasProperty";

        /// <summary>
        /// The BrowseName for the HasPubSubConnection component.
        /// </summary>
        public const string HasPubSubConnection = "HasPubSubConnection";

        /// <summary>
        /// The BrowseName for the HasSubStateMachine component.
        /// </summary>
        public const string HasSubStateMachine = "HasSubStateMachine";

        /// <summary>
        /// The BrowseName for the HasSubtype component.
        /// </summary>
        public const string HasSubtype = "HasSubtype";

        /// <summary>
        /// The BrowseName for the HasTrueSubState component.
        /// </summary>
        public const string HasTrueSubState = "HasTrueSubState";

        /// <summary>
        /// The BrowseName for the HasTypeDefinition component.
        /// </summary>
        public const string HasTypeDefinition = "HasTypeDefinition";

        /// <summary>
        /// The BrowseName for the HierarchicalReferences component.
        /// </summary>
        public const string HierarchicalReferences = "HierarchicalReferences";

        /// <summary>
        /// The BrowseName for the High component.
        /// </summary>
        public const string High = "High";

        /// <summary>
        /// The BrowseName for the HighHigh component.
        /// </summary>
        public const string HighHigh = "HighHigh";

        /// <summary>
        /// The BrowseName for the HighHighLimit component.
        /// </summary>
        public const string HighHighLimit = "HighHighLimit";

        /// <summary>
        /// The BrowseName for the HighHighState component.
        /// </summary>
        public const string HighHighState = "HighHighState";

        /// <summary>
        /// The BrowseName for the HighHighToHigh component.
        /// </summary>
        public const string HighHighToHigh = "HighHighToHigh";

        /// <summary>
        /// The BrowseName for the HighLimit component.
        /// </summary>
        public const string HighLimit = "HighLimit";

        /// <summary>
        /// The BrowseName for the HighState component.
        /// </summary>
        public const string HighState = "HighState";

        /// <summary>
        /// The BrowseName for the HighToHighHigh component.
        /// </summary>
        public const string HighToHighHigh = "HighToHighHigh";

        /// <summary>
        /// The BrowseName for the HistoricalDataConfigurationType component.
        /// </summary>
        public const string HistoricalDataConfigurationType = "HistoricalDataConfigurationType";

        /// <summary>
        /// The BrowseName for the HistoricalEventFilter component.
        /// </summary>
        public const string HistoricalEventFilter = "HistoricalEventFilter";

        /// <summary>
        /// The BrowseName for the HistoryData component.
        /// </summary>
        public const string HistoryData = "HistoryData";

        /// <summary>
        /// The BrowseName for the HistoryEvent component.
        /// </summary>
        public const string HistoryEvent = "HistoryEvent";

        /// <summary>
        /// The BrowseName for the HistoryEventFieldList component.
        /// </summary>
        public const string HistoryEventFieldList = "HistoryEventFieldList";

        /// <summary>
        /// The BrowseName for the HistoryModifiedData component.
        /// </summary>
        public const string HistoryModifiedData = "HistoryModifiedData";

        /// <summary>
        /// The BrowseName for the HistoryReadCount component.
        /// </summary>
        public const string HistoryReadCount = "HistoryReadCount";

        /// <summary>
        /// The BrowseName for the HistoryReadDetails component.
        /// </summary>
        public const string HistoryReadDetails = "HistoryReadDetails";

        /// <summary>
        /// The BrowseName for the HistoryReadRequest component.
        /// </summary>
        public const string HistoryReadRequest = "HistoryReadRequest";

        /// <summary>
        /// The BrowseName for the HistoryReadResponse component.
        /// </summary>
        public const string HistoryReadResponse = "HistoryReadResponse";

        /// <summary>
        /// The BrowseName for the HistoryReadResult component.
        /// </summary>
        public const string HistoryReadResult = "HistoryReadResult";

        /// <summary>
        /// The BrowseName for the HistoryReadValueId component.
        /// </summary>
        public const string HistoryReadValueId = "HistoryReadValueId";

        /// <summary>
        /// The BrowseName for the HistoryServerCapabilities component.
        /// </summary>
        public const string HistoryServerCapabilities = "HistoryServerCapabilities";

        /// <summary>
        /// The BrowseName for the HistoryServerCapabilitiesType component.
        /// </summary>
        public const string HistoryServerCapabilitiesType = "HistoryServerCapabilitiesType";

        /// <summary>
        /// The BrowseName for the HistoryUpdateCount component.
        /// </summary>
        public const string HistoryUpdateCount = "HistoryUpdateCount";

        /// <summary>
        /// The BrowseName for the HistoryUpdateDetails component.
        /// </summary>
        public const string HistoryUpdateDetails = "HistoryUpdateDetails";

        /// <summary>
        /// The BrowseName for the HistoryUpdateRequest component.
        /// </summary>
        public const string HistoryUpdateRequest = "HistoryUpdateRequest";

        /// <summary>
        /// The BrowseName for the HistoryUpdateResponse component.
        /// </summary>
        public const string HistoryUpdateResponse = "HistoryUpdateResponse";

        /// <summary>
        /// The BrowseName for the HistoryUpdateResult component.
        /// </summary>
        public const string HistoryUpdateResult = "HistoryUpdateResult";

        /// <summary>
        /// The BrowseName for the HistoryUpdateType component.
        /// </summary>
        public const string HistoryUpdateType = "HistoryUpdateType";

        /// <summary>
        /// The BrowseName for the HttpsCertificateType component.
        /// </summary>
        public const string HttpsCertificateType = "HttpsCertificateType";

        /// <summary>
        /// The BrowseName for the Icon component.
        /// </summary>
        public const string Icon = "Icon";

        /// <summary>
        /// The BrowseName for the Id component.
        /// </summary>
        public const string Id = "Id";

        /// <summary>
        /// The BrowseName for the Identities component.
        /// </summary>
        public const string Identities = "Identities";

        /// <summary>
        /// The BrowseName for the IdentityCriteriaType component.
        /// </summary>
        public const string IdentityCriteriaType = "IdentityCriteriaType";

        /// <summary>
        /// The BrowseName for the IdentityMappingRuleType component.
        /// </summary>
        public const string IdentityMappingRuleType = "IdentityMappingRuleType";

        /// <summary>
        /// The BrowseName for the Idle component.
        /// </summary>
        public const string Idle = "Idle";

        /// <summary>
        /// The BrowseName for the IdleToApplyWrite component.
        /// </summary>
        public const string IdleToApplyWrite = "IdleToApplyWrite";

        /// <summary>
        /// The BrowseName for the IdleToReadPrepare component.
        /// </summary>
        public const string IdleToReadPrepare = "IdleToReadPrepare";

        /// <summary>
        /// The BrowseName for the IdType component.
        /// </summary>
        public const string IdType = "IdType";

        /// <summary>
        /// The BrowseName for the Image component.
        /// </summary>
        public const string Image = "Image";

        /// <summary>
        /// The BrowseName for the ImageBMP component.
        /// </summary>
        public const string ImageBMP = "ImageBMP";

        /// <summary>
        /// The BrowseName for the ImageGIF component.
        /// </summary>
        public const string ImageGIF = "ImageGIF";

        /// <summary>
        /// The BrowseName for the ImageItemType component.
        /// </summary>
        public const string ImageItemType = "ImageItemType";

        /// <summary>
        /// The BrowseName for the ImageJPG component.
        /// </summary>
        public const string ImageJPG = "ImageJPG";

        /// <summary>
        /// The BrowseName for the ImagePNG component.
        /// </summary>
        public const string ImagePNG = "ImagePNG";

        /// <summary>
        /// The BrowseName for the IndexRange component.
        /// </summary>
        public const string IndexRange = "IndexRange";

        /// <summary>
        /// The BrowseName for the InitialStateType component.
        /// </summary>
        public const string InitialStateType = "InitialStateType";

        /// <summary>
        /// The BrowseName for the InputArguments component.
        /// </summary>
        public const string InputArguments = "InputArguments";

        /// <summary>
        /// The BrowseName for the InputNode component.
        /// </summary>
        public const string InputNode = "InputNode";

        /// <summary>
        /// The BrowseName for the InsertAnnotationCapability component.
        /// </summary>
        public const string InsertAnnotationCapability = "InsertAnnotationCapability";

        /// <summary>
        /// The BrowseName for the InsertDataCapability component.
        /// </summary>
        public const string InsertDataCapability = "InsertDataCapability";

        /// <summary>
        /// The BrowseName for the InsertEventCapability component.
        /// </summary>
        public const string InsertEventCapability = "InsertEventCapability";

        /// <summary>
        /// The BrowseName for the InstanceCount component.
        /// </summary>
        public const string InstanceCount = "InstanceCount";

        /// <summary>
        /// The BrowseName for the InstanceNode component.
        /// </summary>
        public const string InstanceNode = "InstanceNode";

        /// <summary>
        /// The BrowseName for the InstrumentRange component.
        /// </summary>
        public const string InstrumentRange = "InstrumentRange";

        /// <summary>
        /// The BrowseName for the Int16 component.
        /// </summary>
        public const string Int16 = "Int16";

        /// <summary>
        /// The BrowseName for the Int32 component.
        /// </summary>
        public const string Int32 = "Int32";

        /// <summary>
        /// The BrowseName for the Int64 component.
        /// </summary>
        public const string Int64 = "Int64";

        /// <summary>
        /// The BrowseName for the Integer component.
        /// </summary>
        public const string Integer = "Integer";

        /// <summary>
        /// The BrowseName for the IntegerId component.
        /// </summary>
        public const string IntegerId = "IntegerId";

        /// <summary>
        /// The BrowseName for the IntermediateResult component.
        /// </summary>
        public const string IntermediateResult = "IntermediateResult";

        /// <summary>
        /// The BrowseName for the InvalidHostname component.
        /// </summary>
        public const string InvalidHostname = "InvalidHostname";

        /// <summary>
        /// The BrowseName for the InvalidUri component.
        /// </summary>
        public const string InvalidUri = "InvalidUri";

        /// <summary>
        /// The BrowseName for the InvocationCreationTime component.
        /// </summary>
        public const string InvocationCreationTime = "InvocationCreationTime";

        /// <summary>
        /// The BrowseName for the IsDeleteModified component.
        /// </summary>
        public const string IsDeleteModified = "IsDeleteModified";

        /// <summary>
        /// The BrowseName for the IsNamespaceSubset component.
        /// </summary>
        public const string IsNamespaceSubset = "IsNamespaceSubset";

        /// <summary>
        /// The BrowseName for the IssuedIdentityToken component.
        /// </summary>
        public const string IssuedIdentityToken = "IssuedIdentityToken";

        /// <summary>
        /// The BrowseName for the KeepAliveTime component.
        /// </summary>
        public const string KeepAliveTime = "KeepAliveTime";

        /// <summary>
        /// The BrowseName for the KeyFrameCount component.
        /// </summary>
        public const string KeyFrameCount = "KeyFrameCount";

        /// <summary>
        /// The BrowseName for the KeyValuePair component.
        /// </summary>
        public const string KeyValuePair = "KeyValuePair";

        /// <summary>
        /// The BrowseName for the LastMethodCall component.
        /// </summary>
        public const string LastMethodCall = "LastMethodCall";

        /// <summary>
        /// The BrowseName for the LastMethodCallTime component.
        /// </summary>
        public const string LastMethodCallTime = "LastMethodCallTime";

        /// <summary>
        /// The BrowseName for the LastMethodInputArguments component.
        /// </summary>
        public const string LastMethodInputArguments = "LastMethodInputArguments";

        /// <summary>
        /// The BrowseName for the LastMethodOutputArguments component.
        /// </summary>
        public const string LastMethodOutputArguments = "LastMethodOutputArguments";

        /// <summary>
        /// The BrowseName for the LastMethodReturnStatus component.
        /// </summary>
        public const string LastMethodReturnStatus = "LastMethodReturnStatus";

        /// <summary>
        /// The BrowseName for the LastMethodSessionId component.
        /// </summary>
        public const string LastMethodSessionId = "LastMethodSessionId";

        /// <summary>
        /// The BrowseName for the LastResponse component.
        /// </summary>
        public const string LastResponse = "LastResponse";

        /// <summary>
        /// The BrowseName for the LastSeverity component.
        /// </summary>
        public const string LastSeverity = "LastSeverity";

        /// <summary>
        /// The BrowseName for the LastTransition component.
        /// </summary>
        public const string LastTransition = "LastTransition";

        /// <summary>
        /// The BrowseName for the LastTransitionTime component.
        /// </summary>
        public const string LastTransitionTime = "LastTransitionTime";

        /// <summary>
        /// The BrowseName for the LastUpdateTime component.
        /// </summary>
        public const string LastUpdateTime = "LastUpdateTime";

        /// <summary>
        /// The BrowseName for the LatePublishRequestCount component.
        /// </summary>
        public const string LatePublishRequestCount = "LatePublishRequestCount";

        /// <summary>
        /// The BrowseName for the LimitAlarmType component.
        /// </summary>
        public const string LimitAlarmType = "LimitAlarmType";

        /// <summary>
        /// The BrowseName for the LimitState component.
        /// </summary>
        public const string LimitState = "LimitState";

        /// <summary>
        /// The BrowseName for the LiteralOperand component.
        /// </summary>
        public const string LiteralOperand = "LiteralOperand";

        /// <summary>
        /// The BrowseName for the LocaleId component.
        /// </summary>
        public const string LocaleId = "LocaleId";

        /// <summary>
        /// The BrowseName for the LocaleIdArray component.
        /// </summary>
        public const string LocaleIdArray = "LocaleIdArray";

        /// <summary>
        /// The BrowseName for the LocaleIds component.
        /// </summary>
        public const string LocaleIds = "LocaleIds";

        /// <summary>
        /// The BrowseName for the LocalizedText component.
        /// </summary>
        public const string LocalizedText = "LocalizedText";

        /// <summary>
        /// The BrowseName for the LocalTime component.
        /// </summary>
        public const string LocalTime = "LocalTime";

        /// <summary>
        /// The BrowseName for the Low component.
        /// </summary>
        public const string Low = "Low";

        /// <summary>
        /// The BrowseName for the LowLimit component.
        /// </summary>
        public const string LowLimit = "LowLimit";

        /// <summary>
        /// The BrowseName for the LowLow component.
        /// </summary>
        public const string LowLow = "LowLow";

        /// <summary>
        /// The BrowseName for the LowLowLimit component.
        /// </summary>
        public const string LowLowLimit = "LowLowLimit";

        /// <summary>
        /// The BrowseName for the LowLowState component.
        /// </summary>
        public const string LowLowState = "LowLowState";

        /// <summary>
        /// The BrowseName for the LowLowToLow component.
        /// </summary>
        public const string LowLowToLow = "LowLowToLow";

        /// <summary>
        /// The BrowseName for the LowState component.
        /// </summary>
        public const string LowState = "LowState";

        /// <summary>
        /// The BrowseName for the LowToLowLow component.
        /// </summary>
        public const string LowToLowLow = "LowToLowLow";

        /// <summary>
        /// The BrowseName for the MaintenanceConditionClassType component.
        /// </summary>
        public const string MaintenanceConditionClassType = "MaintenanceConditionClassType";

        /// <summary>
        /// The BrowseName for the ManufacturerName component.
        /// </summary>
        public const string ManufacturerName = "ManufacturerName";

        /// <summary>
        /// The BrowseName for the MaxArrayLength component.
        /// </summary>
        public const string MaxArrayLength = "MaxArrayLength";

        /// <summary>
        /// The BrowseName for the MaxBrowseContinuationPoints component.
        /// </summary>
        public const string MaxBrowseContinuationPoints = "MaxBrowseContinuationPoints";

        /// <summary>
        /// The BrowseName for the MaxByteStringLength component.
        /// </summary>
        public const string MaxByteStringLength = "MaxByteStringLength";

        /// <summary>
        /// The BrowseName for the MaxHistoryContinuationPoints component.
        /// </summary>
        public const string MaxHistoryContinuationPoints = "MaxHistoryContinuationPoints";

        /// <summary>
        /// The BrowseName for the Maximum component.
        /// </summary>
        public const string Maximum = "Maximum";

        /// <summary>
        /// The BrowseName for the MaxInstanceCount component.
        /// </summary>
        public const string MaxInstanceCount = "MaxInstanceCount";

        /// <summary>
        /// The BrowseName for the MaxKeepAliveCount component.
        /// </summary>
        public const string MaxKeepAliveCount = "MaxKeepAliveCount";

        /// <summary>
        /// The BrowseName for the MaxLifetimeCount component.
        /// </summary>
        public const string MaxLifetimeCount = "MaxLifetimeCount";

        /// <summary>
        /// The BrowseName for the MaxMessageSize component.
        /// </summary>
        public const string MaxMessageSize = "MaxMessageSize";

        /// <summary>
        /// The BrowseName for the MaxMonitoredItemsPerCall component.
        /// </summary>
        public const string MaxMonitoredItemsPerCall = "MaxMonitoredItemsPerCall";

        /// <summary>
        /// The BrowseName for the MaxNetworkMessageSize component.
        /// </summary>
        public const string MaxNetworkMessageSize = "MaxNetworkMessageSize";

        /// <summary>
        /// The BrowseName for the MaxNodesPerBrowse component.
        /// </summary>
        public const string MaxNodesPerBrowse = "MaxNodesPerBrowse";

        /// <summary>
        /// The BrowseName for the MaxNodesPerHistoryReadData component.
        /// </summary>
        public const string MaxNodesPerHistoryReadData = "MaxNodesPerHistoryReadData";

        /// <summary>
        /// The BrowseName for the MaxNodesPerHistoryReadEvents component.
        /// </summary>
        public const string MaxNodesPerHistoryReadEvents = "MaxNodesPerHistoryReadEvents";

        /// <summary>
        /// The BrowseName for the MaxNodesPerHistoryUpdateData component.
        /// </summary>
        public const string MaxNodesPerHistoryUpdateData = "MaxNodesPerHistoryUpdateData";

        /// <summary>
        /// The BrowseName for the MaxNodesPerHistoryUpdateEvents component.
        /// </summary>
        public const string MaxNodesPerHistoryUpdateEvents = "MaxNodesPerHistoryUpdateEvents";

        /// <summary>
        /// The BrowseName for the MaxNodesPerMethodCall component.
        /// </summary>
        public const string MaxNodesPerMethodCall = "MaxNodesPerMethodCall";

        /// <summary>
        /// The BrowseName for the MaxNodesPerNodeManagement component.
        /// </summary>
        public const string MaxNodesPerNodeManagement = "MaxNodesPerNodeManagement";

        /// <summary>
        /// The BrowseName for the MaxNodesPerRead component.
        /// </summary>
        public const string MaxNodesPerRead = "MaxNodesPerRead";

        /// <summary>
        /// The BrowseName for the MaxNodesPerRegisterNodes component.
        /// </summary>
        public const string MaxNodesPerRegisterNodes = "MaxNodesPerRegisterNodes";

        /// <summary>
        /// The BrowseName for the MaxNodesPerTranslateBrowsePathsToNodeIds component.
        /// </summary>
        public const string MaxNodesPerTranslateBrowsePathsToNodeIds = "MaxNodesPerTranslateBrowsePathsToNodeIds";

        /// <summary>
        /// The BrowseName for the MaxNodesPerWrite component.
        /// </summary>
        public const string MaxNodesPerWrite = "MaxNodesPerWrite";

        /// <summary>
        /// The BrowseName for the MaxNotificationsPerPublish component.
        /// </summary>
        public const string MaxNotificationsPerPublish = "MaxNotificationsPerPublish";

        /// <summary>
        /// The BrowseName for the MaxQueryContinuationPoints component.
        /// </summary>
        public const string MaxQueryContinuationPoints = "MaxQueryContinuationPoints";

        /// <summary>
        /// The BrowseName for the MaxRecycleCount component.
        /// </summary>
        public const string MaxRecycleCount = "MaxRecycleCount";

        /// <summary>
        /// The BrowseName for the MaxResponseMessageSize component.
        /// </summary>
        public const string MaxResponseMessageSize = "MaxResponseMessageSize";

        /// <summary>
        /// The BrowseName for the MaxReturnDataValues component.
        /// </summary>
        public const string MaxReturnDataValues = "MaxReturnDataValues";

        /// <summary>
        /// The BrowseName for the MaxReturnEventValues component.
        /// </summary>
        public const string MaxReturnEventValues = "MaxReturnEventValues";

        /// <summary>
        /// The BrowseName for the MaxSampledMonitoredItemsCount component.
        /// </summary>
        public const string MaxSampledMonitoredItemsCount = "MaxSampledMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the MaxStringLength component.
        /// </summary>
        public const string MaxStringLength = "MaxStringLength";

        /// <summary>
        /// The BrowseName for the MaxTimeInterval component.
        /// </summary>
        public const string MaxTimeInterval = "MaxTimeInterval";

        /// <summary>
        /// The BrowseName for the MaxTimeShelved component.
        /// </summary>
        public const string MaxTimeShelved = "MaxTimeShelved";

        /// <summary>
        /// The BrowseName for the MaxTrustListSize component.
        /// </summary>
        public const string MaxTrustListSize = "MaxTrustListSize";

        /// <summary>
        /// The BrowseName for the MdnsDiscoveryConfiguration component.
        /// </summary>
        public const string MdnsDiscoveryConfiguration = "MdnsDiscoveryConfiguration";

        /// <summary>
        /// The BrowseName for the Message component.
        /// </summary>
        public const string Message = "Message";

        /// <summary>
        /// The BrowseName for the MessageReceiveTimeout component.
        /// </summary>
        public const string MessageReceiveTimeout = "MessageReceiveTimeout";

        /// <summary>
        /// The BrowseName for the MessageRepeatCount component.
        /// </summary>
        public const string MessageRepeatCount = "MessageRepeatCount";

        /// <summary>
        /// The BrowseName for the MessageRepeatDelay component.
        /// </summary>
        public const string MessageRepeatDelay = "MessageRepeatDelay";

        /// <summary>
        /// The BrowseName for the MessageSecurityMode component.
        /// </summary>
        public const string MessageSecurityMode = "MessageSecurityMode";

        /// <summary>
        /// The BrowseName for the MetaDataQueueName component.
        /// </summary>
        public const string MetaDataQueueName = "MetaDataQueueName";

        /// <summary>
        /// The BrowseName for the MetaDataUpdateTime component.
        /// </summary>
        public const string MetaDataUpdateTime = "MetaDataUpdateTime";

        /// <summary>
        /// The BrowseName for the MethodAttributes component.
        /// </summary>
        public const string MethodAttributes = "MethodAttributes";

        /// <summary>
        /// The BrowseName for the MethodId component.
        /// </summary>
        public const string MethodId = "MethodId";

        /// <summary>
        /// The BrowseName for the MethodNode component.
        /// </summary>
        public const string MethodNode = "MethodNode";

        /// <summary>
        /// The BrowseName for the MimeType component.
        /// </summary>
        public const string MimeType = "MimeType";

        /// <summary>
        /// The BrowseName for the MinSupportedSampleRate component.
        /// </summary>
        public const string MinSupportedSampleRate = "MinSupportedSampleRate";

        /// <summary>
        /// The BrowseName for the MinTimeInterval component.
        /// </summary>
        public const string MinTimeInterval = "MinTimeInterval";

        /// <summary>
        /// The BrowseName for the ModelChangeStructureDataType component.
        /// </summary>
        public const string ModelChangeStructureDataType = "ModelChangeStructureDataType";

        /// <summary>
        /// The BrowseName for the ModelChangeStructureVerbMask component.
        /// </summary>
        public const string ModelChangeStructureVerbMask = "ModelChangeStructureVerbMask";

        /// <summary>
        /// The BrowseName for the ModellingRule_ExposesItsArray component.
        /// </summary>
        public const string ModellingRule_ExposesItsArray = "ExposesItsArray";

        /// <summary>
        /// The BrowseName for the ModellingRule_Mandatory component.
        /// </summary>
        public const string ModellingRule_Mandatory = "Mandatory";

        /// <summary>
        /// The BrowseName for the ModellingRule_MandatoryPlaceholder component.
        /// </summary>
        public const string ModellingRule_MandatoryPlaceholder = "MandatoryPlaceholder";

        /// <summary>
        /// The BrowseName for the ModellingRule_MandatoryShared component.
        /// </summary>
        public const string ModellingRule_MandatoryShared = "MandatoryShared";

        /// <summary>
        /// The BrowseName for the ModellingRule_Optional component.
        /// </summary>
        public const string ModellingRule_Optional = "Optional";

        /// <summary>
        /// The BrowseName for the ModellingRule_OptionalPlaceholder component.
        /// </summary>
        public const string ModellingRule_OptionalPlaceholder = "OptionalPlaceholder";

        /// <summary>
        /// The BrowseName for the ModellingRules component.
        /// </summary>
        public const string ModellingRules = "ModellingRules";

        /// <summary>
        /// The BrowseName for the ModellingRuleType component.
        /// </summary>
        public const string ModellingRuleType = "ModellingRuleType";

        /// <summary>
        /// The BrowseName for the ModificationInfo component.
        /// </summary>
        public const string ModificationInfo = "ModificationInfo";

        /// <summary>
        /// The BrowseName for the ModifyCount component.
        /// </summary>
        public const string ModifyCount = "ModifyCount";

        /// <summary>
        /// The BrowseName for the ModifyFieldSelection component.
        /// </summary>
        public const string ModifyFieldSelection = "ModifyFieldSelection";

        /// <summary>
        /// The BrowseName for the ModifyMonitoredItemsCount component.
        /// </summary>
        public const string ModifyMonitoredItemsCount = "ModifyMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the ModifyMonitoredItemsRequest component.
        /// </summary>
        public const string ModifyMonitoredItemsRequest = "ModifyMonitoredItemsRequest";

        /// <summary>
        /// The BrowseName for the ModifyMonitoredItemsResponse component.
        /// </summary>
        public const string ModifyMonitoredItemsResponse = "ModifyMonitoredItemsResponse";

        /// <summary>
        /// The BrowseName for the ModifySubscriptionCount component.
        /// </summary>
        public const string ModifySubscriptionCount = "ModifySubscriptionCount";

        /// <summary>
        /// The BrowseName for the ModifySubscriptionRequest component.
        /// </summary>
        public const string ModifySubscriptionRequest = "ModifySubscriptionRequest";

        /// <summary>
        /// The BrowseName for the ModifySubscriptionResponse component.
        /// </summary>
        public const string ModifySubscriptionResponse = "ModifySubscriptionResponse";

        /// <summary>
        /// The BrowseName for the MonitoredItemCount component.
        /// </summary>
        public const string MonitoredItemCount = "MonitoredItemCount";

        /// <summary>
        /// The BrowseName for the MonitoredItemCreateRequest component.
        /// </summary>
        public const string MonitoredItemCreateRequest = "MonitoredItemCreateRequest";

        /// <summary>
        /// The BrowseName for the MonitoredItemCreateResult component.
        /// </summary>
        public const string MonitoredItemCreateResult = "MonitoredItemCreateResult";

        /// <summary>
        /// The BrowseName for the MonitoredItemModifyRequest component.
        /// </summary>
        public const string MonitoredItemModifyRequest = "MonitoredItemModifyRequest";

        /// <summary>
        /// The BrowseName for the MonitoredItemModifyResult component.
        /// </summary>
        public const string MonitoredItemModifyResult = "MonitoredItemModifyResult";

        /// <summary>
        /// The BrowseName for the MonitoredItemNotification component.
        /// </summary>
        public const string MonitoredItemNotification = "MonitoredItemNotification";

        /// <summary>
        /// The BrowseName for the MonitoringFilter component.
        /// </summary>
        public const string MonitoringFilter = "MonitoringFilter";

        /// <summary>
        /// The BrowseName for the MonitoringFilterResult component.
        /// </summary>
        public const string MonitoringFilterResult = "MonitoringFilterResult";

        /// <summary>
        /// The BrowseName for the MonitoringMode component.
        /// </summary>
        public const string MonitoringMode = "MonitoringMode";

        /// <summary>
        /// The BrowseName for the MonitoringParameters component.
        /// </summary>
        public const string MonitoringParameters = "MonitoringParameters";

        /// <summary>
        /// The BrowseName for the MonitoringQueueOverflowCount component.
        /// </summary>
        public const string MonitoringQueueOverflowCount = "MonitoringQueueOverflowCount";

        /// <summary>
        /// The BrowseName for the MoveOrCopy component.
        /// </summary>
        public const string MoveOrCopy = "MoveOrCopy";

        /// <summary>
        /// The BrowseName for the MulticastDnsEnabled component.
        /// </summary>
        public const string MulticastDnsEnabled = "MulticastDnsEnabled";

        /// <summary>
        /// The BrowseName for the MultiStateDiscreteType component.
        /// </summary>
        public const string MultiStateDiscreteType = "MultiStateDiscreteType";

        /// <summary>
        /// The BrowseName for the MultiStateValueDiscreteType component.
        /// </summary>
        public const string MultiStateValueDiscreteType = "MultiStateValueDiscreteType";

        /// <summary>
        /// The BrowseName for the Name component.
        /// </summary>
        public const string Name = "Name";

        /// <summary>
        /// The BrowseName for the NamespaceArray component.
        /// </summary>
        public const string NamespaceArray = "NamespaceArray";

        /// <summary>
        /// The BrowseName for the NamespaceFile component.
        /// </summary>
        public const string NamespaceFile = "NamespaceFile";

        /// <summary>
        /// The BrowseName for the NamespaceIdentifier_Placeholder component.
        /// </summary>
        public const string NamespaceIdentifier_Placeholder = "<NamespaceIdentifier>";

        /// <summary>
        /// The BrowseName for the NamespaceMetadataType component.
        /// </summary>
        public const string NamespaceMetadataType = "NamespaceMetadataType";

        /// <summary>
        /// The BrowseName for the NamespacePublicationDate component.
        /// </summary>
        public const string NamespacePublicationDate = "NamespacePublicationDate";

        /// <summary>
        /// The BrowseName for the Namespaces component.
        /// </summary>
        public const string Namespaces = "Namespaces";

        /// <summary>
        /// The BrowseName for the NamespacesType component.
        /// </summary>
        public const string NamespacesType = "NamespacesType";

        /// <summary>
        /// The BrowseName for the NamespaceUri component.
        /// </summary>
        public const string NamespaceUri = "NamespaceUri";

        /// <summary>
        /// The BrowseName for the NamespaceVersion component.
        /// </summary>
        public const string NamespaceVersion = "NamespaceVersion";

        /// <summary>
        /// The BrowseName for the NamingRule component.
        /// </summary>
        public const string NamingRule = "NamingRule";

        /// <summary>
        /// The BrowseName for the NamingRuleType component.
        /// </summary>
        public const string NamingRuleType = "NamingRuleType";

        /// <summary>
        /// The BrowseName for the NDimensionArrayItemType component.
        /// </summary>
        public const string NDimensionArrayItemType = "NDimensionArrayItemType";

        /// <summary>
        /// The BrowseName for the NetworkGroupDataType component.
        /// </summary>
        public const string NetworkGroupDataType = "NetworkGroupDataType";

        /// <summary>
        /// The BrowseName for the NetworkInterface component.
        /// </summary>
        public const string NetworkInterface = "NetworkInterface";

        /// <summary>
        /// The BrowseName for the NewStateId component.
        /// </summary>
        public const string NewStateId = "NewStateId";

        /// <summary>
        /// The BrowseName for the NewValue component.
        /// </summary>
        public const string NewValue = "NewValue";

        /// <summary>
        /// The BrowseName for the NewValues component.
        /// </summary>
        public const string NewValues = "NewValues";

        /// <summary>
        /// The BrowseName for the NextSequenceNumber component.
        /// </summary>
        public const string NextSequenceNumber = "NextSequenceNumber";

        /// <summary>
        /// The BrowseName for the Node component.
        /// </summary>
        public const string Node = "Node";

        /// <summary>
        /// The BrowseName for the NodeAttributes component.
        /// </summary>
        public const string NodeAttributes = "NodeAttributes";

        /// <summary>
        /// The BrowseName for the NodeAttributesMask component.
        /// </summary>
        public const string NodeAttributesMask = "NodeAttributesMask";

        /// <summary>
        /// The BrowseName for the NodeClass component.
        /// </summary>
        public const string NodeClass = "NodeClass";

        /// <summary>
        /// The BrowseName for the NodeId component.
        /// </summary>
        public const string NodeId = "NodeId";

        /// <summary>
        /// The BrowseName for the NodeReference component.
        /// </summary>
        public const string NodeReference = "NodeReference";

        /// <summary>
        /// The BrowseName for the NodesToAdd component.
        /// </summary>
        public const string NodesToAdd = "NodesToAdd";

        /// <summary>
        /// The BrowseName for the NodesToDelete component.
        /// </summary>
        public const string NodesToDelete = "NodesToDelete";

        /// <summary>
        /// The BrowseName for the NodeTypeDescription component.
        /// </summary>
        public const string NodeTypeDescription = "NodeTypeDescription";

        /// <summary>
        /// The BrowseName for the NodeVersion component.
        /// </summary>
        public const string NodeVersion = "NodeVersion";

        /// <summary>
        /// The BrowseName for the NonExclusiveDeviationAlarmType component.
        /// </summary>
        public const string NonExclusiveDeviationAlarmType = "NonExclusiveDeviationAlarmType";

        /// <summary>
        /// The BrowseName for the NonExclusiveLevelAlarmType component.
        /// </summary>
        public const string NonExclusiveLevelAlarmType = "NonExclusiveLevelAlarmType";

        /// <summary>
        /// The BrowseName for the NonExclusiveLimitAlarmType component.
        /// </summary>
        public const string NonExclusiveLimitAlarmType = "NonExclusiveLimitAlarmType";

        /// <summary>
        /// The BrowseName for the NonExclusiveRateOfChangeAlarmType component.
        /// </summary>
        public const string NonExclusiveRateOfChangeAlarmType = "NonExclusiveRateOfChangeAlarmType";

        /// <summary>
        /// The BrowseName for the NonHierarchicalReferences component.
        /// </summary>
        public const string NonHierarchicalReferences = "NonHierarchicalReferences";

        /// <summary>
        /// The BrowseName for the NonTransparentNetworkRedundancyType component.
        /// </summary>
        public const string NonTransparentNetworkRedundancyType = "NonTransparentNetworkRedundancyType";

        /// <summary>
        /// The BrowseName for the NonTransparentRedundancyType component.
        /// </summary>
        public const string NonTransparentRedundancyType = "NonTransparentRedundancyType";

        /// <summary>
        /// The BrowseName for the NormalizedString component.
        /// </summary>
        public const string NormalizedString = "NormalizedString";

        /// <summary>
        /// The BrowseName for the NormalState component.
        /// </summary>
        public const string NormalState = "NormalState";

        /// <summary>
        /// The BrowseName for the NotificationData component.
        /// </summary>
        public const string NotificationData = "NotificationData";

        /// <summary>
        /// The BrowseName for the NotificationMessage component.
        /// </summary>
        public const string NotificationMessage = "NotificationMessage";

        /// <summary>
        /// The BrowseName for the NotificationsCount component.
        /// </summary>
        public const string NotificationsCount = "NotificationsCount";

        /// <summary>
        /// The BrowseName for the Number component.
        /// </summary>
        public const string Number = "Number";

        /// <summary>
        /// The BrowseName for the NumericRange component.
        /// </summary>
        public const string NumericRange = "NumericRange";

        /// <summary>
        /// The BrowseName for the ObjectAttributes component.
        /// </summary>
        public const string ObjectAttributes = "ObjectAttributes";

        /// <summary>
        /// The BrowseName for the ObjectNode component.
        /// </summary>
        public const string ObjectNode = "ObjectNode";

        /// <summary>
        /// The BrowseName for the ObjectsFolder component.
        /// </summary>
        public const string ObjectsFolder = "Objects";

        /// <summary>
        /// The BrowseName for the ObjectTypeAttributes component.
        /// </summary>
        public const string ObjectTypeAttributes = "ObjectTypeAttributes";

        /// <summary>
        /// The BrowseName for the ObjectTypeNode component.
        /// </summary>
        public const string ObjectTypeNode = "ObjectTypeNode";

        /// <summary>
        /// The BrowseName for the ObjectTypesFolder component.
        /// </summary>
        public const string ObjectTypesFolder = "ObjectTypes";

        /// <summary>
        /// The BrowseName for the Observer component.
        /// </summary>
        public const string Observer = "Observer";

        /// <summary>
        /// The BrowseName for the OffNormalAlarmType component.
        /// </summary>
        public const string OffNormalAlarmType = "OffNormalAlarmType";

        /// <summary>
        /// The BrowseName for the OkResponse component.
        /// </summary>
        public const string OkResponse = "OkResponse";

        /// <summary>
        /// The BrowseName for the OldStateId component.
        /// </summary>
        public const string OldStateId = "OldStateId";

        /// <summary>
        /// The BrowseName for the OldValue component.
        /// </summary>
        public const string OldValue = "OldValue";

        /// <summary>
        /// The BrowseName for the OldValues component.
        /// </summary>
        public const string OldValues = "OldValues";

        /// <summary>
        /// The BrowseName for the OneShotShelve component.
        /// </summary>
        public const string OneShotShelve = "OneShotShelve";

        /// <summary>
        /// The BrowseName for the OneShotShelved component.
        /// </summary>
        public const string OneShotShelved = "OneShotShelved";

        /// <summary>
        /// The BrowseName for the OneShotShelvedToTimedShelved component.
        /// </summary>
        public const string OneShotShelvedToTimedShelved = "OneShotShelvedToTimedShelved";

        /// <summary>
        /// The BrowseName for the OneShotShelvedToUnshelved component.
        /// </summary>
        public const string OneShotShelvedToUnshelved = "OneShotShelvedToUnshelved";

        /// <summary>
        /// The BrowseName for the OPCBinarySchema_TypeSystem component.
        /// </summary>
        public const string OPCBinarySchema_TypeSystem = "OPC Binary";

        /// <summary>
        /// The BrowseName for the OpcUa_BinarySchema component.
        /// </summary>
        public const string OpcUa_BinarySchema = "Opc.Ua";

        /// <summary>
        /// The BrowseName for the OpcUa_XmlSchema component.
        /// </summary>
        public const string OpcUa_XmlSchema = "Opc.Ua";

        /// <summary>
        /// The BrowseName for the Open component.
        /// </summary>
        public const string Open = "Open";

        /// <summary>
        /// The BrowseName for the OpenCount component.
        /// </summary>
        public const string OpenCount = "OpenCount";

        /// <summary>
        /// The BrowseName for the OpenFileMode component.
        /// </summary>
        public const string OpenFileMode = "OpenFileMode";

        /// <summary>
        /// The BrowseName for the OpenSecureChannelRequest component.
        /// </summary>
        public const string OpenSecureChannelRequest = "OpenSecureChannelRequest";

        /// <summary>
        /// The BrowseName for the OpenSecureChannelResponse component.
        /// </summary>
        public const string OpenSecureChannelResponse = "OpenSecureChannelResponse";

        /// <summary>
        /// The BrowseName for the OpenWithMasks component.
        /// </summary>
        public const string OpenWithMasks = "OpenWithMasks";

        /// <summary>
        /// The BrowseName for the OperationLimits component.
        /// </summary>
        public const string OperationLimits = "OperationLimits";

        /// <summary>
        /// The BrowseName for the OperationLimitsType component.
        /// </summary>
        public const string OperationLimitsType = "OperationLimitsType";

        /// <summary>
        /// The BrowseName for the Operator component.
        /// </summary>
        public const string Operator = "Operator";

        /// <summary>
        /// The BrowseName for the OptionSet component.
        /// </summary>
        public const string OptionSet = "OptionSet";

        /// <summary>
        /// The BrowseName for the OptionSetType component.
        /// </summary>
        public const string OptionSetType = "OptionSetType";

        /// <summary>
        /// The BrowseName for the OptionSetValues component.
        /// </summary>
        public const string OptionSetValues = "OptionSetValues";

        /// <summary>
        /// The BrowseName for the Organizes component.
        /// </summary>
        public const string Organizes = "Organizes";

        /// <summary>
        /// The BrowseName for the OutputArguments component.
        /// </summary>
        public const string OutputArguments = "OutputArguments";

        /// <summary>
        /// The BrowseName for the OverrideValueHandling component.
        /// </summary>
        public const string OverrideValueHandling = "OverrideValueHandling";

        /// <summary>
        /// The BrowseName for the ParameterDataTypeId component.
        /// </summary>
        public const string ParameterDataTypeId = "ParameterDataTypeId";

        /// <summary>
        /// The BrowseName for the ParentNode component.
        /// </summary>
        public const string ParentNode = "ParentNode";

        /// <summary>
        /// The BrowseName for the ParsingResult component.
        /// </summary>
        public const string ParsingResult = "ParsingResult";

        /// <summary>
        /// The BrowseName for the PercentDataBad component.
        /// </summary>
        public const string PercentDataBad = "PercentDataBad";

        /// <summary>
        /// The BrowseName for the PercentDataGood component.
        /// </summary>
        public const string PercentDataGood = "PercentDataGood";

        /// <summary>
        /// The BrowseName for the PerformInsertReplace component.
        /// </summary>
        public const string PerformInsertReplace = "PerformInsertReplace";

        /// <summary>
        /// The BrowseName for the PerformUpdateType component.
        /// </summary>
        public const string PerformUpdateType = "PerformUpdateType";

        /// <summary>
        /// The BrowseName for the Priority component.
        /// </summary>
        public const string Priority = "Priority";

        /// <summary>
        /// The BrowseName for the ProcessConditionClassType component.
        /// </summary>
        public const string ProcessConditionClassType = "ProcessConditionClassType";

        /// <summary>
        /// The BrowseName for the ProductName component.
        /// </summary>
        public const string ProductName = "ProductName";

        /// <summary>
        /// The BrowseName for the ProductUri component.
        /// </summary>
        public const string ProductUri = "ProductUri";

        /// <summary>
        /// The BrowseName for the ProgramDiagnosticDataType component.
        /// </summary>
        public const string ProgramDiagnosticDataType = "ProgramDiagnosticDataType";

        /// <summary>
        /// The BrowseName for the ProgramDiagnostics component.
        /// </summary>
        public const string ProgramDiagnostics = "ProgramDiagnostics";

        /// <summary>
        /// The BrowseName for the ProgramDiagnosticType component.
        /// </summary>
        public const string ProgramDiagnosticType = "ProgramDiagnosticType";

        /// <summary>
        /// The BrowseName for the ProgramStateMachineType component.
        /// </summary>
        public const string ProgramStateMachineType = "ProgramStateMachineType";

        /// <summary>
        /// The BrowseName for the ProgramTransitionAuditEventType component.
        /// </summary>
        public const string ProgramTransitionAuditEventType = "ProgramTransitionAuditEventType";

        /// <summary>
        /// The BrowseName for the ProgramTransitionEventType component.
        /// </summary>
        public const string ProgramTransitionEventType = "ProgramTransitionEventType";

        /// <summary>
        /// The BrowseName for the Progress component.
        /// </summary>
        public const string Progress = "Progress";

        /// <summary>
        /// The BrowseName for the ProgressEventType component.
        /// </summary>
        public const string ProgressEventType = "ProgressEventType";

        /// <summary>
        /// The BrowseName for the Prompt component.
        /// </summary>
        public const string Prompt = "Prompt";

        /// <summary>
        /// The BrowseName for the PropertyType component.
        /// </summary>
        public const string PropertyType = "PropertyType";

        /// <summary>
        /// The BrowseName for the PublishCount component.
        /// </summary>
        public const string PublishCount = "PublishCount";

        /// <summary>
        /// The BrowseName for the PublishedData component.
        /// </summary>
        public const string PublishedData = "PublishedData";

        /// <summary>
        /// The BrowseName for the PublishedDataItemsType component.
        /// </summary>
        public const string PublishedDataItemsType = "PublishedDataItemsType";

        /// <summary>
        /// The BrowseName for the PublishedDataSetName_Placeholder component.
        /// </summary>
        public const string PublishedDataSetName_Placeholder = "<PublishedDataSetName>";

        /// <summary>
        /// The BrowseName for the PublishedDataSets component.
        /// </summary>
        public const string PublishedDataSets = "PublishedDataSets";

        /// <summary>
        /// The BrowseName for the PublishedDataSetType component.
        /// </summary>
        public const string PublishedDataSetType = "PublishedDataSetType";

        /// <summary>
        /// The BrowseName for the PublishedEventsType component.
        /// </summary>
        public const string PublishedEventsType = "PublishedEventsType";

        /// <summary>
        /// The BrowseName for the PublishedVariableDataType component.
        /// </summary>
        public const string PublishedVariableDataType = "PublishedVariableDataType";

        /// <summary>
        /// The BrowseName for the PublisherId component.
        /// </summary>
        public const string PublisherId = "PublisherId";

        /// <summary>
        /// The BrowseName for the PublishingEnabled component.
        /// </summary>
        public const string PublishingEnabled = "PublishingEnabled";

        /// <summary>
        /// The BrowseName for the PublishingInterval component.
        /// </summary>
        public const string PublishingInterval = "PublishingInterval";

        /// <summary>
        /// The BrowseName for the PublishingIntervalCount component.
        /// </summary>
        public const string PublishingIntervalCount = "PublishingIntervalCount";

        /// <summary>
        /// The BrowseName for the PublishingOffset component.
        /// </summary>
        public const string PublishingOffset = "PublishingOffset";

        /// <summary>
        /// The BrowseName for the PublishRequest component.
        /// </summary>
        public const string PublishRequest = "PublishRequest";

        /// <summary>
        /// The BrowseName for the PublishRequestCount component.
        /// </summary>
        public const string PublishRequestCount = "PublishRequestCount";

        /// <summary>
        /// The BrowseName for the PublishResponse component.
        /// </summary>
        public const string PublishResponse = "PublishResponse";

        /// <summary>
        /// The BrowseName for the PublishSubscribe component.
        /// </summary>
        public const string PublishSubscribe = "PublishSubscribe";

        /// <summary>
        /// The BrowseName for the PublishSubscribeType component.
        /// </summary>
        public const string PublishSubscribeType = "PublishSubscribeType";

        /// <summary>
        /// The BrowseName for the PubSubCommunicationFailureEventType component.
        /// </summary>
        public const string PubSubCommunicationFailureEventType = "PubSubCommunicationFailureEventType";

        /// <summary>
        /// The BrowseName for the PubSubConnectionType component.
        /// </summary>
        public const string PubSubConnectionType = "PubSubConnectionType";

        /// <summary>
        /// The BrowseName for the PubSubGroupType component.
        /// </summary>
        public const string PubSubGroupType = "PubSubGroupType";

        /// <summary>
        /// The BrowseName for the PubSubKeyServiceType component.
        /// </summary>
        public const string PubSubKeyServiceType = "PubSubKeyServiceType";

        /// <summary>
        /// The BrowseName for the PubSubState component.
        /// </summary>
        public const string PubSubState = "PubSubState";

        /// <summary>
        /// The BrowseName for the PubSubStatusEventType component.
        /// </summary>
        public const string PubSubStatusEventType = "PubSubStatusEventType";

        /// <summary>
        /// The BrowseName for the PubSubStatusType component.
        /// </summary>
        public const string PubSubStatusType = "PubSubStatusType";

        /// <summary>
        /// The BrowseName for the PubSubTransportLimitsExceedEventType component.
        /// </summary>
        public const string PubSubTransportLimitsExceedEventType = "PubSubTransportLimitsExceedEventType";

        /// <summary>
        /// The BrowseName for the QualifiedName component.
        /// </summary>
        public const string QualifiedName = "QualifiedName";

        /// <summary>
        /// The BrowseName for the Quality component.
        /// </summary>
        public const string Quality = "Quality";

        /// <summary>
        /// The BrowseName for the QueryDataDescription component.
        /// </summary>
        public const string QueryDataDescription = "QueryDataDescription";

        /// <summary>
        /// The BrowseName for the QueryDataSet component.
        /// </summary>
        public const string QueryDataSet = "QueryDataSet";

        /// <summary>
        /// The BrowseName for the QueryFirstCount component.
        /// </summary>
        public const string QueryFirstCount = "QueryFirstCount";

        /// <summary>
        /// The BrowseName for the QueryFirstRequest component.
        /// </summary>
        public const string QueryFirstRequest = "QueryFirstRequest";

        /// <summary>
        /// The BrowseName for the QueryFirstResponse component.
        /// </summary>
        public const string QueryFirstResponse = "QueryFirstResponse";

        /// <summary>
        /// The BrowseName for the QueryNextCount component.
        /// </summary>
        public const string QueryNextCount = "QueryNextCount";

        /// <summary>
        /// The BrowseName for the QueryNextRequest component.
        /// </summary>
        public const string QueryNextRequest = "QueryNextRequest";

        /// <summary>
        /// The BrowseName for the QueryNextResponse component.
        /// </summary>
        public const string QueryNextResponse = "QueryNextResponse";

        /// <summary>
        /// The BrowseName for the QueueName component.
        /// </summary>
        public const string QueueName = "QueueName";

        /// <summary>
        /// The BrowseName for the Range component.
        /// </summary>
        public const string Range = "Range";

        /// <summary>
        /// The BrowseName for the Read component.
        /// </summary>
        public const string Read = "Read";

        /// <summary>
        /// The BrowseName for the ReadAtTimeDetails component.
        /// </summary>
        public const string ReadAtTimeDetails = "ReadAtTimeDetails";

        /// <summary>
        /// The BrowseName for the ReadCount component.
        /// </summary>
        public const string ReadCount = "ReadCount";

        /// <summary>
        /// The BrowseName for the ReadEventDetails component.
        /// </summary>
        public const string ReadEventDetails = "ReadEventDetails";

        /// <summary>
        /// The BrowseName for the ReadPrepare component.
        /// </summary>
        public const string ReadPrepare = "ReadPrepare";

        /// <summary>
        /// The BrowseName for the ReadPrepareToError component.
        /// </summary>
        public const string ReadPrepareToError = "ReadPrepareToError";

        /// <summary>
        /// The BrowseName for the ReadPrepareToReadTransfer component.
        /// </summary>
        public const string ReadPrepareToReadTransfer = "ReadPrepareToReadTransfer";

        /// <summary>
        /// The BrowseName for the ReadProcessedDetails component.
        /// </summary>
        public const string ReadProcessedDetails = "ReadProcessedDetails";

        /// <summary>
        /// The BrowseName for the ReadRawModifiedDetails component.
        /// </summary>
        public const string ReadRawModifiedDetails = "ReadRawModifiedDetails";

        /// <summary>
        /// The BrowseName for the ReadRequest component.
        /// </summary>
        public const string ReadRequest = "ReadRequest";

        /// <summary>
        /// The BrowseName for the ReadResponse component.
        /// </summary>
        public const string ReadResponse = "ReadResponse";

        /// <summary>
        /// The BrowseName for the ReadTransfer component.
        /// </summary>
        public const string ReadTransfer = "ReadTransfer";

        /// <summary>
        /// The BrowseName for the ReadTransferToError component.
        /// </summary>
        public const string ReadTransferToError = "ReadTransferToError";

        /// <summary>
        /// The BrowseName for the ReadTransferToIdle component.
        /// </summary>
        public const string ReadTransferToIdle = "ReadTransferToIdle";

        /// <summary>
        /// The BrowseName for the ReadValueId component.
        /// </summary>
        public const string ReadValueId = "ReadValueId";

        /// <summary>
        /// The BrowseName for the Ready component.
        /// </summary>
        public const string Ready = "Ready";

        /// <summary>
        /// The BrowseName for the ReadyToHalted component.
        /// </summary>
        public const string ReadyToHalted = "ReadyToHalted";

        /// <summary>
        /// The BrowseName for the ReadyToRunning component.
        /// </summary>
        public const string ReadyToRunning = "ReadyToRunning";

        /// <summary>
        /// The BrowseName for the ReceiveTime component.
        /// </summary>
        public const string ReceiveTime = "ReceiveTime";

        /// <summary>
        /// The BrowseName for the RecycleCount component.
        /// </summary>
        public const string RecycleCount = "RecycleCount";

        /// <summary>
        /// The BrowseName for the RedundancySupport component.
        /// </summary>
        public const string RedundancySupport = "RedundancySupport";

        /// <summary>
        /// The BrowseName for the RedundantServerArray component.
        /// </summary>
        public const string RedundantServerArray = "RedundantServerArray";

        /// <summary>
        /// The BrowseName for the RedundantServerDataType component.
        /// </summary>
        public const string RedundantServerDataType = "RedundantServerDataType";

        /// <summary>
        /// The BrowseName for the ReferenceDescription component.
        /// </summary>
        public const string ReferenceDescription = "ReferenceDescription";

        /// <summary>
        /// The BrowseName for the ReferenceNode component.
        /// </summary>
        public const string ReferenceNode = "ReferenceNode";

        /// <summary>
        /// The BrowseName for the References component.
        /// </summary>
        public const string References = "References";

        /// <summary>
        /// The BrowseName for the ReferencesToAdd component.
        /// </summary>
        public const string ReferencesToAdd = "ReferencesToAdd";

        /// <summary>
        /// The BrowseName for the ReferencesToDelete component.
        /// </summary>
        public const string ReferencesToDelete = "ReferencesToDelete";

        /// <summary>
        /// The BrowseName for the ReferenceTypeAttributes component.
        /// </summary>
        public const string ReferenceTypeAttributes = "ReferenceTypeAttributes";

        /// <summary>
        /// The BrowseName for the ReferenceTypeNode component.
        /// </summary>
        public const string ReferenceTypeNode = "ReferenceTypeNode";

        /// <summary>
        /// The BrowseName for the ReferenceTypesFolder component.
        /// </summary>
        public const string ReferenceTypesFolder = "ReferenceTypes";

        /// <summary>
        /// The BrowseName for the RefreshEndEventType component.
        /// </summary>
        public const string RefreshEndEventType = "RefreshEndEventType";

        /// <summary>
        /// The BrowseName for the RefreshRequiredEventType component.
        /// </summary>
        public const string RefreshRequiredEventType = "RefreshRequiredEventType";

        /// <summary>
        /// The BrowseName for the RefreshStartEventType component.
        /// </summary>
        public const string RefreshStartEventType = "RefreshStartEventType";

        /// <summary>
        /// The BrowseName for the RegisteredServer component.
        /// </summary>
        public const string RegisteredServer = "RegisteredServer";

        /// <summary>
        /// The BrowseName for the RegisterNodesCount component.
        /// </summary>
        public const string RegisterNodesCount = "RegisterNodesCount";

        /// <summary>
        /// The BrowseName for the RegisterNodesRequest component.
        /// </summary>
        public const string RegisterNodesRequest = "RegisterNodesRequest";

        /// <summary>
        /// The BrowseName for the RegisterNodesResponse component.
        /// </summary>
        public const string RegisterNodesResponse = "RegisterNodesResponse";

        /// <summary>
        /// The BrowseName for the RegisterServer2Request component.
        /// </summary>
        public const string RegisterServer2Request = "RegisterServer2Request";

        /// <summary>
        /// The BrowseName for the RegisterServer2Response component.
        /// </summary>
        public const string RegisterServer2Response = "RegisterServer2Response";

        /// <summary>
        /// The BrowseName for the RegisterServerRequest component.
        /// </summary>
        public const string RegisterServerRequest = "RegisterServerRequest";

        /// <summary>
        /// The BrowseName for the RegisterServerResponse component.
        /// </summary>
        public const string RegisterServerResponse = "RegisterServerResponse";

        /// <summary>
        /// The BrowseName for the RejectedRequestsCount component.
        /// </summary>
        public const string RejectedRequestsCount = "RejectedRequestsCount";

        /// <summary>
        /// The BrowseName for the RejectedSessionCount component.
        /// </summary>
        public const string RejectedSessionCount = "RejectedSessionCount";

        /// <summary>
        /// The BrowseName for the RelativePath component.
        /// </summary>
        public const string RelativePath = "RelativePath";

        /// <summary>
        /// The BrowseName for the RelativePathElement component.
        /// </summary>
        public const string RelativePathElement = "RelativePathElement";

        /// <summary>
        /// The BrowseName for the RemoveApplication component.
        /// </summary>
        public const string RemoveApplication = "RemoveApplication";

        /// <summary>
        /// The BrowseName for the RemoveCertificate component.
        /// </summary>
        public const string RemoveCertificate = "RemoveCertificate";

        /// <summary>
        /// The BrowseName for the RemoveConnection component.
        /// </summary>
        public const string RemoveConnection = "RemoveConnection";

        /// <summary>
        /// The BrowseName for the RemoveDataConnections component.
        /// </summary>
        public const string RemoveDataConnections = "RemoveDataConnections";

        /// <summary>
        /// The BrowseName for the RemoveDataSetReader component.
        /// </summary>
        public const string RemoveDataSetReader = "RemoveDataSetReader";

        /// <summary>
        /// The BrowseName for the RemoveDataSetWriter component.
        /// </summary>
        public const string RemoveDataSetWriter = "RemoveDataSetWriter";

        /// <summary>
        /// The BrowseName for the RemoveExtensionField component.
        /// </summary>
        public const string RemoveExtensionField = "RemoveExtensionField";

        /// <summary>
        /// The BrowseName for the RemoveGroup component.
        /// </summary>
        public const string RemoveGroup = "RemoveGroup";

        /// <summary>
        /// The BrowseName for the RemoveIdentity component.
        /// </summary>
        public const string RemoveIdentity = "RemoveIdentity";

        /// <summary>
        /// The BrowseName for the RemovePublishedDataSet component.
        /// </summary>
        public const string RemovePublishedDataSet = "RemovePublishedDataSet";

        /// <summary>
        /// The BrowseName for the RemoveSecurityGroup component.
        /// </summary>
        public const string RemoveSecurityGroup = "RemoveSecurityGroup";

        /// <summary>
        /// The BrowseName for the RemoveVariables component.
        /// </summary>
        public const string RemoveVariables = "RemoveVariables";

        /// <summary>
        /// The BrowseName for the ReplaceDataCapability component.
        /// </summary>
        public const string ReplaceDataCapability = "ReplaceDataCapability";

        /// <summary>
        /// The BrowseName for the ReplaceEventCapability component.
        /// </summary>
        public const string ReplaceEventCapability = "ReplaceEventCapability";

        /// <summary>
        /// The BrowseName for the RepublishCount component.
        /// </summary>
        public const string RepublishCount = "RepublishCount";

        /// <summary>
        /// The BrowseName for the RepublishMessageCount component.
        /// </summary>
        public const string RepublishMessageCount = "RepublishMessageCount";

        /// <summary>
        /// The BrowseName for the RepublishMessageRequestCount component.
        /// </summary>
        public const string RepublishMessageRequestCount = "RepublishMessageRequestCount";

        /// <summary>
        /// The BrowseName for the RepublishRequest component.
        /// </summary>
        public const string RepublishRequest = "RepublishRequest";

        /// <summary>
        /// The BrowseName for the RepublishRequestCount component.
        /// </summary>
        public const string RepublishRequestCount = "RepublishRequestCount";

        /// <summary>
        /// The BrowseName for the RepublishResponse component.
        /// </summary>
        public const string RepublishResponse = "RepublishResponse";

        /// <summary>
        /// The BrowseName for the ReqTimes component.
        /// </summary>
        public const string ReqTimes = "ReqTimes";

        /// <summary>
        /// The BrowseName for the RequestedLifetime component.
        /// </summary>
        public const string RequestedLifetime = "RequestedLifetime";

        /// <summary>
        /// The BrowseName for the RequestHandle component.
        /// </summary>
        public const string RequestHandle = "RequestHandle";

        /// <summary>
        /// The BrowseName for the RequestHeader component.
        /// </summary>
        public const string RequestHeader = "RequestHeader";

        /// <summary>
        /// The BrowseName for the RequestServerStateChange component.
        /// </summary>
        public const string RequestServerStateChange = "RequestServerStateChange";

        /// <summary>
        /// The BrowseName for the RequestType component.
        /// </summary>
        public const string RequestType = "RequestType";

        /// <summary>
        /// The BrowseName for the ResendData component.
        /// </summary>
        public const string ResendData = "ResendData";

        /// <summary>
        /// The BrowseName for the Reset component.
        /// </summary>
        public const string Reset = "Reset";

        /// <summary>
        /// The BrowseName for the Respond component.
        /// </summary>
        public const string Respond = "Respond";

        /// <summary>
        /// The BrowseName for the ResponseHeader component.
        /// </summary>
        public const string ResponseHeader = "ResponseHeader";

        /// <summary>
        /// The BrowseName for the ResponseOptionSet component.
        /// </summary>
        public const string ResponseOptionSet = "ResponseOptionSet";

        /// <summary>
        /// The BrowseName for the Resume component.
        /// </summary>
        public const string Resume = "Resume";

        /// <summary>
        /// The BrowseName for the Retain component.
        /// </summary>
        public const string Retain = "Retain";

        /// <summary>
        /// The BrowseName for the RevisedSessionTimeout component.
        /// </summary>
        public const string RevisedSessionTimeout = "RevisedSessionTimeout";

        /// <summary>
        /// The BrowseName for the RoleFolderType component.
        /// </summary>
        public const string RoleFolderType = "RoleFolderType";

        /// <summary>
        /// The BrowseName for the RoleName_Placeholder component.
        /// </summary>
        public const string RoleName_Placeholder = "<RoleName>";

        /// <summary>
        /// The BrowseName for the Roles component.
        /// </summary>
        public const string Roles = "Roles";

        /// <summary>
        /// The BrowseName for the RoleType component.
        /// </summary>
        public const string RoleType = "RoleType";

        /// <summary>
        /// The BrowseName for the RootFolder component.
        /// </summary>
        public const string RootFolder = "Root";

        /// <summary>
        /// The BrowseName for the RsaMinApplicationCertificateType component.
        /// </summary>
        public const string RsaMinApplicationCertificateType = "RsaMinApplicationCertificateType";

        /// <summary>
        /// The BrowseName for the RsaSha256ApplicationCertificateType component.
        /// </summary>
        public const string RsaSha256ApplicationCertificateType = "RsaSha256ApplicationCertificateType";

        /// <summary>
        /// The BrowseName for the Running component.
        /// </summary>
        public const string Running = "Running";

        /// <summary>
        /// The BrowseName for the RunningToHalted component.
        /// </summary>
        public const string RunningToHalted = "RunningToHalted";

        /// <summary>
        /// The BrowseName for the RunningToReady component.
        /// </summary>
        public const string RunningToReady = "RunningToReady";

        /// <summary>
        /// The BrowseName for the RunningToSuspended component.
        /// </summary>
        public const string RunningToSuspended = "RunningToSuspended";

        /// <summary>
        /// The BrowseName for the SampledMonitoredItemsCount component.
        /// </summary>
        public const string SampledMonitoredItemsCount = "SampledMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the SamplingInterval component.
        /// </summary>
        public const string SamplingInterval = "SamplingInterval";

        /// <summary>
        /// The BrowseName for the SamplingIntervalDiagnostics component.
        /// </summary>
        public const string SamplingIntervalDiagnostics = "SamplingIntervalDiagnostics";

        /// <summary>
        /// The BrowseName for the SamplingIntervalDiagnosticsArray component.
        /// </summary>
        public const string SamplingIntervalDiagnosticsArray = "SamplingIntervalDiagnosticsArray";

        /// <summary>
        /// The BrowseName for the SamplingIntervalDiagnosticsArrayType component.
        /// </summary>
        public const string SamplingIntervalDiagnosticsArrayType = "SamplingIntervalDiagnosticsArrayType";

        /// <summary>
        /// The BrowseName for the SamplingIntervalDiagnosticsDataType component.
        /// </summary>
        public const string SamplingIntervalDiagnosticsDataType = "SamplingIntervalDiagnosticsDataType";

        /// <summary>
        /// The BrowseName for the SamplingIntervalDiagnosticsType component.
        /// </summary>
        public const string SamplingIntervalDiagnosticsType = "SamplingIntervalDiagnosticsType";

        /// <summary>
        /// The BrowseName for the SamplingOffset component.
        /// </summary>
        public const string SamplingOffset = "SamplingOffset";

        /// <summary>
        /// The BrowseName for the SByte component.
        /// </summary>
        public const string SByte = "SByte";

        /// <summary>
        /// The BrowseName for the SecondsTillShutdown component.
        /// </summary>
        public const string SecondsTillShutdown = "SecondsTillShutdown";

        /// <summary>
        /// The BrowseName for the SecureChannelId component.
        /// </summary>
        public const string SecureChannelId = "SecureChannelId";

        /// <summary>
        /// The BrowseName for the SecurityAdmin component.
        /// </summary>
        public const string SecurityAdmin = "SecurityAdmin";

        /// <summary>
        /// The BrowseName for the SecurityGroupFolderName_Placeholder component.
        /// </summary>
        public const string SecurityGroupFolderName_Placeholder = "<SecurityGroupFolderName>";

        /// <summary>
        /// The BrowseName for the SecurityGroupFolderType component.
        /// </summary>
        public const string SecurityGroupFolderType = "SecurityGroupFolderType";

        /// <summary>
        /// The BrowseName for the SecurityGroupId component.
        /// </summary>
        public const string SecurityGroupId = "SecurityGroupId";

        /// <summary>
        /// The BrowseName for the SecurityGroupName_Placeholder component.
        /// </summary>
        public const string SecurityGroupName_Placeholder = "<SecurityGroupName>";

        /// <summary>
        /// The BrowseName for the SecurityGroups component.
        /// </summary>
        public const string SecurityGroups = "SecurityGroups";

        /// <summary>
        /// The BrowseName for the SecurityGroupType component.
        /// </summary>
        public const string SecurityGroupType = "SecurityGroupType";

        /// <summary>
        /// The BrowseName for the SecurityKeyServices component.
        /// </summary>
        public const string SecurityKeyServices = "SecurityKeyServices";

        /// <summary>
        /// The BrowseName for the SecurityMode component.
        /// </summary>
        public const string SecurityMode = "SecurityMode";

        /// <summary>
        /// The BrowseName for the SecurityPolicyUri component.
        /// </summary>
        public const string SecurityPolicyUri = "SecurityPolicyUri";

        /// <summary>
        /// The BrowseName for the SecurityRejectedRequestsCount component.
        /// </summary>
        public const string SecurityRejectedRequestsCount = "SecurityRejectedRequestsCount";

        /// <summary>
        /// The BrowseName for the SecurityRejectedSessionCount component.
        /// </summary>
        public const string SecurityRejectedSessionCount = "SecurityRejectedSessionCount";

        /// <summary>
        /// The BrowseName for the SecurityTokenRequestType component.
        /// </summary>
        public const string SecurityTokenRequestType = "SecurityTokenRequestType";

        /// <summary>
        /// The BrowseName for the SelectedFields component.
        /// </summary>
        public const string SelectedFields = "SelectedFields";

        /// <summary>
        /// The BrowseName for the SelectedResponse component.
        /// </summary>
        public const string SelectedResponse = "SelectedResponse";

        /// <summary>
        /// The BrowseName for the SemanticChangeEventType component.
        /// </summary>
        public const string SemanticChangeEventType = "SemanticChangeEventType";

        /// <summary>
        /// The BrowseName for the SemanticChangeStructureDataType component.
        /// </summary>
        public const string SemanticChangeStructureDataType = "SemanticChangeStructureDataType";

        /// <summary>
        /// The BrowseName for the Server component.
        /// </summary>
        public const string Server = "Server";

        /// <summary>
        /// The BrowseName for the ServerArray component.
        /// </summary>
        public const string ServerArray = "ServerArray";

        /// <summary>
        /// The BrowseName for the ServerCapabilities component.
        /// </summary>
        public const string ServerCapabilities = "ServerCapabilities";

        /// <summary>
        /// The BrowseName for the ServerCapabilitiesType component.
        /// </summary>
        public const string ServerCapabilitiesType = "ServerCapabilitiesType";

        /// <summary>
        /// The BrowseName for the ServerConfiguration component.
        /// </summary>
        public const string ServerConfiguration = "ServerConfiguration";

        /// <summary>
        /// The BrowseName for the ServerConfigurationType component.
        /// </summary>
        public const string ServerConfigurationType = "ServerConfigurationType";

        /// <summary>
        /// The BrowseName for the ServerDiagnostics component.
        /// </summary>
        public const string ServerDiagnostics = "ServerDiagnostics";

        /// <summary>
        /// The BrowseName for the ServerDiagnosticsSummary component.
        /// </summary>
        public const string ServerDiagnosticsSummary = "ServerDiagnosticsSummary";

        /// <summary>
        /// The BrowseName for the ServerDiagnosticsSummaryDataType component.
        /// </summary>
        public const string ServerDiagnosticsSummaryDataType = "ServerDiagnosticsSummaryDataType";

        /// <summary>
        /// The BrowseName for the ServerDiagnosticsSummaryType component.
        /// </summary>
        public const string ServerDiagnosticsSummaryType = "ServerDiagnosticsSummaryType";

        /// <summary>
        /// The BrowseName for the ServerDiagnosticsType component.
        /// </summary>
        public const string ServerDiagnosticsType = "ServerDiagnosticsType";

        /// <summary>
        /// The BrowseName for the ServerId component.
        /// </summary>
        public const string ServerId = "ServerId";

        /// <summary>
        /// The BrowseName for the ServerNetworkGroups component.
        /// </summary>
        public const string ServerNetworkGroups = "ServerNetworkGroups";

        /// <summary>
        /// The BrowseName for the ServerOnNetwork component.
        /// </summary>
        public const string ServerOnNetwork = "ServerOnNetwork";

        /// <summary>
        /// The BrowseName for the ServerProfileArray component.
        /// </summary>
        public const string ServerProfileArray = "ServerProfileArray";

        /// <summary>
        /// The BrowseName for the ServerRedundancy component.
        /// </summary>
        public const string ServerRedundancy = "ServerRedundancy";

        /// <summary>
        /// The BrowseName for the ServerRedundancyType component.
        /// </summary>
        public const string ServerRedundancyType = "ServerRedundancyType";

        /// <summary>
        /// The BrowseName for the ServerState component.
        /// </summary>
        public const string ServerState = "ServerState";

        /// <summary>
        /// The BrowseName for the ServerStatus component.
        /// </summary>
        public const string ServerStatus = "ServerStatus";

        /// <summary>
        /// The BrowseName for the ServerStatusDataType component.
        /// </summary>
        public const string ServerStatusDataType = "ServerStatusDataType";

        /// <summary>
        /// The BrowseName for the ServerStatusType component.
        /// </summary>
        public const string ServerStatusType = "ServerStatusType";

        /// <summary>
        /// The BrowseName for the ServerType component.
        /// </summary>
        public const string ServerType = "ServerType";

        /// <summary>
        /// The BrowseName for the ServerUri component.
        /// </summary>
        public const string ServerUri = "ServerUri";

        /// <summary>
        /// The BrowseName for the ServerUriArray component.
        /// </summary>
        public const string ServerUriArray = "ServerUriArray";

        /// <summary>
        /// The BrowseName for the ServerVendorCapabilityType component.
        /// </summary>
        public const string ServerVendorCapabilityType = "ServerVendorCapabilityType";

        /// <summary>
        /// The BrowseName for the ServerViewCount component.
        /// </summary>
        public const string ServerViewCount = "ServerViewCount";

        /// <summary>
        /// The BrowseName for the ServiceCounterDataType component.
        /// </summary>
        public const string ServiceCounterDataType = "ServiceCounterDataType";

        /// <summary>
        /// The BrowseName for the ServiceFault component.
        /// </summary>
        public const string ServiceFault = "ServiceFault";

        /// <summary>
        /// The BrowseName for the ServiceLevel component.
        /// </summary>
        public const string ServiceLevel = "ServiceLevel";

        /// <summary>
        /// The BrowseName for the SessionAbortCount component.
        /// </summary>
        public const string SessionAbortCount = "SessionAbortCount";

        /// <summary>
        /// The BrowseName for the SessionAuthenticationToken component.
        /// </summary>
        public const string SessionAuthenticationToken = "SessionAuthenticationToken";

        /// <summary>
        /// The BrowseName for the SessionDiagnostics component.
        /// </summary>
        public const string SessionDiagnostics = "SessionDiagnostics";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsArray component.
        /// </summary>
        public const string SessionDiagnosticsArray = "SessionDiagnosticsArray";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsArrayType component.
        /// </summary>
        public const string SessionDiagnosticsArrayType = "SessionDiagnosticsArrayType";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsDataType component.
        /// </summary>
        public const string SessionDiagnosticsDataType = "SessionDiagnosticsDataType";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsObjectType component.
        /// </summary>
        public const string SessionDiagnosticsObjectType = "SessionDiagnosticsObjectType";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsVariableType component.
        /// </summary>
        public const string SessionDiagnosticsVariableType = "SessionDiagnosticsVariableType";

        /// <summary>
        /// The BrowseName for the SessionId component.
        /// </summary>
        public const string SessionId = "SessionId";

        /// <summary>
        /// The BrowseName for the SessionLessServiceMessageType component.
        /// </summary>
        public const string SessionLessServiceMessageType = "SessionLessServiceMessageType";

        /// <summary>
        /// The BrowseName for the SessionName component.
        /// </summary>
        public const string SessionName = "SessionName";

        /// <summary>
        /// The BrowseName for the SessionsDiagnosticsSummary component.
        /// </summary>
        public const string SessionsDiagnosticsSummary = "SessionsDiagnosticsSummary";

        /// <summary>
        /// The BrowseName for the SessionsDiagnosticsSummaryType component.
        /// </summary>
        public const string SessionsDiagnosticsSummaryType = "SessionsDiagnosticsSummaryType";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnostics component.
        /// </summary>
        public const string SessionSecurityDiagnostics = "SessionSecurityDiagnostics";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnosticsArray component.
        /// </summary>
        public const string SessionSecurityDiagnosticsArray = "SessionSecurityDiagnosticsArray";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnosticsArrayType component.
        /// </summary>
        public const string SessionSecurityDiagnosticsArrayType = "SessionSecurityDiagnosticsArrayType";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnosticsDataType component.
        /// </summary>
        public const string SessionSecurityDiagnosticsDataType = "SessionSecurityDiagnosticsDataType";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnosticsType component.
        /// </summary>
        public const string SessionSecurityDiagnosticsType = "SessionSecurityDiagnosticsType";

        /// <summary>
        /// The BrowseName for the SessionTimeoutCount component.
        /// </summary>
        public const string SessionTimeoutCount = "SessionTimeoutCount";

        /// <summary>
        /// The BrowseName for the SetConnectVariables component.
        /// </summary>
        public const string SetConnectVariables = "SetConnectVariables";

        /// <summary>
        /// The BrowseName for the SetDataSetMirror component.
        /// </summary>
        public const string SetDataSetMirror = "SetDataSetMirror";

        /// <summary>
        /// The BrowseName for the SetMonitoringModeCount component.
        /// </summary>
        public const string SetMonitoringModeCount = "SetMonitoringModeCount";

        /// <summary>
        /// The BrowseName for the SetMonitoringModeRequest component.
        /// </summary>
        public const string SetMonitoringModeRequest = "SetMonitoringModeRequest";

        /// <summary>
        /// The BrowseName for the SetMonitoringModeResponse component.
        /// </summary>
        public const string SetMonitoringModeResponse = "SetMonitoringModeResponse";

        /// <summary>
        /// The BrowseName for the SetpointNode component.
        /// </summary>
        public const string SetpointNode = "SetpointNode";

        /// <summary>
        /// The BrowseName for the SetPosition component.
        /// </summary>
        public const string SetPosition = "SetPosition";

        /// <summary>
        /// The BrowseName for the SetPublishingModeCount component.
        /// </summary>
        public const string SetPublishingModeCount = "SetPublishingModeCount";

        /// <summary>
        /// The BrowseName for the SetPublishingModeRequest component.
        /// </summary>
        public const string SetPublishingModeRequest = "SetPublishingModeRequest";

        /// <summary>
        /// The BrowseName for the SetPublishingModeResponse component.
        /// </summary>
        public const string SetPublishingModeResponse = "SetPublishingModeResponse";

        /// <summary>
        /// The BrowseName for the SetSubscriptionDurable component.
        /// </summary>
        public const string SetSubscriptionDurable = "SetSubscriptionDurable";

        /// <summary>
        /// The BrowseName for the SetTriggeringCount component.
        /// </summary>
        public const string SetTriggeringCount = "SetTriggeringCount";

        /// <summary>
        /// The BrowseName for the SetTriggeringRequest component.
        /// </summary>
        public const string SetTriggeringRequest = "SetTriggeringRequest";

        /// <summary>
        /// The BrowseName for the SetTriggeringResponse component.
        /// </summary>
        public const string SetTriggeringResponse = "SetTriggeringResponse";

        /// <summary>
        /// The BrowseName for the Severity component.
        /// </summary>
        public const string Severity = "Severity";

        /// <summary>
        /// The BrowseName for the ShelvedStateMachineType component.
        /// </summary>
        public const string ShelvedStateMachineType = "ShelvedStateMachineType";

        /// <summary>
        /// The BrowseName for the ShelvingState component.
        /// </summary>
        public const string ShelvingState = "ShelvingState";

        /// <summary>
        /// The BrowseName for the ShelvingTime component.
        /// </summary>
        public const string ShelvingTime = "ShelvingTime";

        /// <summary>
        /// The BrowseName for the ShutdownReason component.
        /// </summary>
        public const string ShutdownReason = "ShutdownReason";

        /// <summary>
        /// The BrowseName for the SignatureData component.
        /// </summary>
        public const string SignatureData = "SignatureData";

        /// <summary>
        /// The BrowseName for the SignedSoftwareCertificate component.
        /// </summary>
        public const string SignedSoftwareCertificate = "SignedSoftwareCertificate";

        /// <summary>
        /// The BrowseName for the SimpleAttributeOperand component.
        /// </summary>
        public const string SimpleAttributeOperand = "SimpleAttributeOperand";

        /// <summary>
        /// The BrowseName for the Size component.
        /// </summary>
        public const string Size = "Size";

        /// <summary>
        /// The BrowseName for the SoftwareCertificates component.
        /// </summary>
        public const string SoftwareCertificates = "SoftwareCertificates";

        /// <summary>
        /// The BrowseName for the SoftwareVersion component.
        /// </summary>
        public const string SoftwareVersion = "SoftwareVersion";

        /// <summary>
        /// The BrowseName for the SourceName component.
        /// </summary>
        public const string SourceName = "SourceName";

        /// <summary>
        /// The BrowseName for the SourceNode component.
        /// </summary>
        public const string SourceNode = "SourceNode";

        /// <summary>
        /// The BrowseName for the SourceTimestamp component.
        /// </summary>
        public const string SourceTimestamp = "SourceTimestamp";

        /// <summary>
        /// The BrowseName for the Start component.
        /// </summary>
        public const string Start = "Start";

        /// <summary>
        /// The BrowseName for the StartOfArchive component.
        /// </summary>
        public const string StartOfArchive = "StartOfArchive";

        /// <summary>
        /// The BrowseName for the StartOfOnlineArchive component.
        /// </summary>
        public const string StartOfOnlineArchive = "StartOfOnlineArchive";

        /// <summary>
        /// The BrowseName for the StartTime component.
        /// </summary>
        public const string StartTime = "StartTime";

        /// <summary>
        /// The BrowseName for the State component.
        /// </summary>
        public const string State = "State";

        /// <summary>
        /// The BrowseName for the StateMachineType component.
        /// </summary>
        public const string StateMachineType = "StateMachineType";

        /// <summary>
        /// The BrowseName for the StateNumber component.
        /// </summary>
        public const string StateNumber = "StateNumber";

        /// <summary>
        /// The BrowseName for the StateType component.
        /// </summary>
        public const string StateType = "StateType";

        /// <summary>
        /// The BrowseName for the StateVariableType component.
        /// </summary>
        public const string StateVariableType = "StateVariableType";

        /// <summary>
        /// The BrowseName for the StaticNodeIdTypes component.
        /// </summary>
        public const string StaticNodeIdTypes = "StaticNodeIdTypes";

        /// <summary>
        /// The BrowseName for the StaticNumericNodeIdRange component.
        /// </summary>
        public const string StaticNumericNodeIdRange = "StaticNumericNodeIdRange";

        /// <summary>
        /// The BrowseName for the StaticStringNodeIdPattern component.
        /// </summary>
        public const string StaticStringNodeIdPattern = "StaticStringNodeIdPattern";

        /// <summary>
        /// The BrowseName for the Status component.
        /// </summary>
        public const string Status = "Status";

        /// <summary>
        /// The BrowseName for the StatusChangeNotification component.
        /// </summary>
        public const string StatusChangeNotification = "StatusChangeNotification";

        /// <summary>
        /// The BrowseName for the StatusCode component.
        /// </summary>
        public const string StatusCode = "StatusCode";

        /// <summary>
        /// The BrowseName for the StatusResult component.
        /// </summary>
        public const string StatusResult = "StatusResult";

        /// <summary>
        /// The BrowseName for the Stepped component.
        /// </summary>
        public const string Stepped = "Stepped";

        /// <summary>
        /// The BrowseName for the String component.
        /// </summary>
        public const string String = "String";

        /// <summary>
        /// The BrowseName for the Structure component.
        /// </summary>
        public const string Structure = "Structure";

        /// <summary>
        /// The BrowseName for the StructureDefinition component.
        /// </summary>
        public const string StructureDefinition = "StructureDefinition";

        /// <summary>
        /// The BrowseName for the StructureDescription component.
        /// </summary>
        public const string StructureDescription = "StructureDescription";

        /// <summary>
        /// The BrowseName for the StructureField component.
        /// </summary>
        public const string StructureField = "StructureField";

        /// <summary>
        /// The BrowseName for the StructureType component.
        /// </summary>
        public const string StructureType = "StructureType";

        /// <summary>
        /// The BrowseName for the SubscribedDataSet component.
        /// </summary>
        public const string SubscribedDataSet = "SubscribedDataSet";

        /// <summary>
        /// The BrowseName for the SubscribedDataSetMirrorType component.
        /// </summary>
        public const string SubscribedDataSetMirrorType = "SubscribedDataSetMirrorType";

        /// <summary>
        /// The BrowseName for the SubscribedDataSetType component.
        /// </summary>
        public const string SubscribedDataSetType = "SubscribedDataSetType";

        /// <summary>
        /// The BrowseName for the SubscriptionAcknowledgement component.
        /// </summary>
        public const string SubscriptionAcknowledgement = "SubscriptionAcknowledgement";

        /// <summary>
        /// The BrowseName for the SubscriptionDiagnostics component.
        /// </summary>
        public const string SubscriptionDiagnostics = "SubscriptionDiagnostics";

        /// <summary>
        /// The BrowseName for the SubscriptionDiagnosticsArray component.
        /// </summary>
        public const string SubscriptionDiagnosticsArray = "SubscriptionDiagnosticsArray";

        /// <summary>
        /// The BrowseName for the SubscriptionDiagnosticsArrayType component.
        /// </summary>
        public const string SubscriptionDiagnosticsArrayType = "SubscriptionDiagnosticsArrayType";

        /// <summary>
        /// The BrowseName for the SubscriptionDiagnosticsDataType component.
        /// </summary>
        public const string SubscriptionDiagnosticsDataType = "SubscriptionDiagnosticsDataType";

        /// <summary>
        /// The BrowseName for the SubscriptionDiagnosticsType component.
        /// </summary>
        public const string SubscriptionDiagnosticsType = "SubscriptionDiagnosticsType";

        /// <summary>
        /// The BrowseName for the SubscriptionId component.
        /// </summary>
        public const string SubscriptionId = "SubscriptionId";

        /// <summary>
        /// The BrowseName for the Supervisor component.
        /// </summary>
        public const string Supervisor = "Supervisor";

        /// <summary>
        /// The BrowseName for the SupportedPrivateKeyFormats component.
        /// </summary>
        public const string SupportedPrivateKeyFormats = "SupportedPrivateKeyFormats";

        /// <summary>
        /// The BrowseName for the SuppressedOrShelved component.
        /// </summary>
        public const string SuppressedOrShelved = "SuppressedOrShelved";

        /// <summary>
        /// The BrowseName for the SuppressedState component.
        /// </summary>
        public const string SuppressedState = "SuppressedState";

        /// <summary>
        /// The BrowseName for the Suspend component.
        /// </summary>
        public const string Suspend = "Suspend";

        /// <summary>
        /// The BrowseName for the Suspended component.
        /// </summary>
        public const string Suspended = "Suspended";

        /// <summary>
        /// The BrowseName for the SuspendedToHalted component.
        /// </summary>
        public const string SuspendedToHalted = "SuspendedToHalted";

        /// <summary>
        /// The BrowseName for the SuspendedToReady component.
        /// </summary>
        public const string SuspendedToReady = "SuspendedToReady";

        /// <summary>
        /// The BrowseName for the SuspendedToRunning component.
        /// </summary>
        public const string SuspendedToRunning = "SuspendedToRunning";

        /// <summary>
        /// The BrowseName for the SystemConditionClassType component.
        /// </summary>
        public const string SystemConditionClassType = "SystemConditionClassType";

        /// <summary>
        /// The BrowseName for the SystemEventType component.
        /// </summary>
        public const string SystemEventType = "SystemEventType";

        /// <summary>
        /// The BrowseName for the SystemOffNormalAlarmType component.
        /// </summary>
        public const string SystemOffNormalAlarmType = "SystemOffNormalAlarmType";

        /// <summary>
        /// The BrowseName for the SystemState component.
        /// </summary>
        public const string SystemState = "SystemState";

        /// <summary>
        /// The BrowseName for the SystemStatusChangeEventType component.
        /// </summary>
        public const string SystemStatusChangeEventType = "SystemStatusChangeEventType";

        /// <summary>
        /// The BrowseName for the TemporaryFileTransferType component.
        /// </summary>
        public const string TemporaryFileTransferType = "TemporaryFileTransferType";

        /// <summary>
        /// The BrowseName for the Time component.
        /// </summary>
        public const string Time = "Time";

        /// <summary>
        /// The BrowseName for the TimedShelve component.
        /// </summary>
        public const string TimedShelve = "TimedShelve";

        /// <summary>
        /// The BrowseName for the TimedShelved component.
        /// </summary>
        public const string TimedShelved = "TimedShelved";

        /// <summary>
        /// The BrowseName for the TimedShelvedToOneShotShelved component.
        /// </summary>
        public const string TimedShelvedToOneShotShelved = "TimedShelvedToOneShotShelved";

        /// <summary>
        /// The BrowseName for the TimedShelvedToUnshelved component.
        /// </summary>
        public const string TimedShelvedToUnshelved = "TimedShelvedToUnshelved";

        /// <summary>
        /// The BrowseName for the TimestampsToReturn component.
        /// </summary>
        public const string TimestampsToReturn = "TimestampsToReturn";

        /// <summary>
        /// The BrowseName for the TimeString component.
        /// </summary>
        public const string TimeString = "TimeString";

        /// <summary>
        /// The BrowseName for the TimeToLive component.
        /// </summary>
        public const string TimeToLive = "TimeToLive";

        /// <summary>
        /// The BrowseName for the TimeZoneDataType component.
        /// </summary>
        public const string TimeZoneDataType = "TimeZoneDataType";

        /// <summary>
        /// The BrowseName for the Title component.
        /// </summary>
        public const string Title = "Title";

        /// <summary>
        /// The BrowseName for the ToState component.
        /// </summary>
        public const string ToState = "ToState";

        /// <summary>
        /// The BrowseName for the TotalRequestCount component.
        /// </summary>
        public const string TotalRequestCount = "TotalRequestCount";

        /// <summary>
        /// The BrowseName for the TransferredToAltClientCount component.
        /// </summary>
        public const string TransferredToAltClientCount = "TransferredToAltClientCount";

        /// <summary>
        /// The BrowseName for the TransferredToSameClientCount component.
        /// </summary>
        public const string TransferredToSameClientCount = "TransferredToSameClientCount";

        /// <summary>
        /// The BrowseName for the TransferRequestCount component.
        /// </summary>
        public const string TransferRequestCount = "TransferRequestCount";

        /// <summary>
        /// The BrowseName for the TransferResult component.
        /// </summary>
        public const string TransferResult = "TransferResult";

        /// <summary>
        /// The BrowseName for the TransferState_Placeholder component.
        /// </summary>
        public const string TransferState_Placeholder = "<TransferState>";

        /// <summary>
        /// The BrowseName for the TransferSubscriptionsCount component.
        /// </summary>
        public const string TransferSubscriptionsCount = "TransferSubscriptionsCount";

        /// <summary>
        /// The BrowseName for the TransferSubscriptionsRequest component.
        /// </summary>
        public const string TransferSubscriptionsRequest = "TransferSubscriptionsRequest";

        /// <summary>
        /// The BrowseName for the TransferSubscriptionsResponse component.
        /// </summary>
        public const string TransferSubscriptionsResponse = "TransferSubscriptionsResponse";

        /// <summary>
        /// The BrowseName for the Transition component.
        /// </summary>
        public const string Transition = "Transition";

        /// <summary>
        /// The BrowseName for the TransitionEventType component.
        /// </summary>
        public const string TransitionEventType = "TransitionEventType";

        /// <summary>
        /// The BrowseName for the TransitionNumber component.
        /// </summary>
        public const string TransitionNumber = "TransitionNumber";

        /// <summary>
        /// The BrowseName for the TransitionTime component.
        /// </summary>
        public const string TransitionTime = "TransitionTime";

        /// <summary>
        /// The BrowseName for the TransitionType component.
        /// </summary>
        public const string TransitionType = "TransitionType";

        /// <summary>
        /// The BrowseName for the TransitionVariableType component.
        /// </summary>
        public const string TransitionVariableType = "TransitionVariableType";

        /// <summary>
        /// The BrowseName for the TranslateBrowsePathsToNodeIdsCount component.
        /// </summary>
        public const string TranslateBrowsePathsToNodeIdsCount = "TranslateBrowsePathsToNodeIdsCount";

        /// <summary>
        /// The BrowseName for the TranslateBrowsePathsToNodeIdsRequest component.
        /// </summary>
        public const string TranslateBrowsePathsToNodeIdsRequest = "TranslateBrowsePathsToNodeIdsRequest";

        /// <summary>
        /// The BrowseName for the TranslateBrowsePathsToNodeIdsResponse component.
        /// </summary>
        public const string TranslateBrowsePathsToNodeIdsResponse = "TranslateBrowsePathsToNodeIdsResponse";

        /// <summary>
        /// The BrowseName for the TransparentRedundancyType component.
        /// </summary>
        public const string TransparentRedundancyType = "TransparentRedundancyType";

        /// <summary>
        /// The BrowseName for the TransportProtocol component.
        /// </summary>
        public const string TransportProtocol = "TransportProtocol";

        /// <summary>
        /// The BrowseName for the TransportSettings component.
        /// </summary>
        public const string TransportSettings = "TransportSettings";

        /// <summary>
        /// The BrowseName for the TreatUncertainAsBad component.
        /// </summary>
        public const string TreatUncertainAsBad = "TreatUncertainAsBad";

        /// <summary>
        /// The BrowseName for the TripAlarmType component.
        /// </summary>
        public const string TripAlarmType = "TripAlarmType";

        /// <summary>
        /// The BrowseName for the TrueState component.
        /// </summary>
        public const string TrueState = "TrueState";

        /// <summary>
        /// The BrowseName for the TrustList component.
        /// </summary>
        public const string TrustList = "TrustList";

        /// <summary>
        /// The BrowseName for the TrustListDataType component.
        /// </summary>
        public const string TrustListDataType = "TrustListDataType";

        /// <summary>
        /// The BrowseName for the TrustListMasks component.
        /// </summary>
        public const string TrustListMasks = "TrustListMasks";

        /// <summary>
        /// The BrowseName for the TrustListType component.
        /// </summary>
        public const string TrustListType = "TrustListType";

        /// <summary>
        /// The BrowseName for the TrustListUpdatedAuditEventType component.
        /// </summary>
        public const string TrustListUpdatedAuditEventType = "TrustListUpdatedAuditEventType";

        /// <summary>
        /// The BrowseName for the TwoStateDiscreteType component.
        /// </summary>
        public const string TwoStateDiscreteType = "TwoStateDiscreteType";

        /// <summary>
        /// The BrowseName for the TwoStateVariableType component.
        /// </summary>
        public const string TwoStateVariableType = "TwoStateVariableType";

        /// <summary>
        /// The BrowseName for the TypeNode component.
        /// </summary>
        public const string TypeNode = "TypeNode";

        /// <summary>
        /// The BrowseName for the TypesFolder component.
        /// </summary>
        public const string TypesFolder = "Types";

        /// <summary>
        /// The BrowseName for the UadpConnectionType component.
        /// </summary>
        public const string UadpConnectionType = "UadpConnectionType";

        /// <summary>
        /// The BrowseName for the UadpGroupType component.
        /// </summary>
        public const string UadpGroupType = "UadpGroupType";

        /// <summary>
        /// The BrowseName for the UadpReaderTransportType component.
        /// </summary>
        public const string UadpReaderTransportType = "UadpReaderTransportType";

        /// <summary>
        /// The BrowseName for the UadpStreamAddress component.
        /// </summary>
        public const string UadpStreamAddress = "UadpStreamAddress";

        /// <summary>
        /// The BrowseName for the UadpWriterTransportType component.
        /// </summary>
        public const string UadpWriterTransportType = "UadpWriterTransportType";

        /// <summary>
        /// The BrowseName for the UInt16 component.
        /// </summary>
        public const string UInt16 = "UInt16";

        /// <summary>
        /// The BrowseName for the UInt32 component.
        /// </summary>
        public const string UInt32 = "UInt32";

        /// <summary>
        /// The BrowseName for the UInt64 component.
        /// </summary>
        public const string UInt64 = "UInt64";

        /// <summary>
        /// The BrowseName for the UInteger component.
        /// </summary>
        public const string UInteger = "UInteger";

        /// <summary>
        /// The BrowseName for the UnacknowledgedMessageCount component.
        /// </summary>
        public const string UnacknowledgedMessageCount = "UnacknowledgedMessageCount";

        /// <summary>
        /// The BrowseName for the UnauthorizedRequestCount component.
        /// </summary>
        public const string UnauthorizedRequestCount = "UnauthorizedRequestCount";

        /// <summary>
        /// The BrowseName for the Union component.
        /// </summary>
        public const string Union = "Union";

        /// <summary>
        /// The BrowseName for the UnregisterNodesCount component.
        /// </summary>
        public const string UnregisterNodesCount = "UnregisterNodesCount";

        /// <summary>
        /// The BrowseName for the UnregisterNodesRequest component.
        /// </summary>
        public const string UnregisterNodesRequest = "UnregisterNodesRequest";

        /// <summary>
        /// The BrowseName for the UnregisterNodesResponse component.
        /// </summary>
        public const string UnregisterNodesResponse = "UnregisterNodesResponse";

        /// <summary>
        /// The BrowseName for the Unshelve component.
        /// </summary>
        public const string Unshelve = "Unshelve";

        /// <summary>
        /// The BrowseName for the Unshelved component.
        /// </summary>
        public const string Unshelved = "Unshelved";

        /// <summary>
        /// The BrowseName for the UnshelvedToOneShotShelved component.
        /// </summary>
        public const string UnshelvedToOneShotShelved = "UnshelvedToOneShotShelved";

        /// <summary>
        /// The BrowseName for the UnshelvedToTimedShelved component.
        /// </summary>
        public const string UnshelvedToTimedShelved = "UnshelvedToTimedShelved";

        /// <summary>
        /// The BrowseName for the UnshelveTime component.
        /// </summary>
        public const string UnshelveTime = "UnshelveTime";

        /// <summary>
        /// The BrowseName for the UpdateCertificate component.
        /// </summary>
        public const string UpdateCertificate = "UpdateCertificate";

        /// <summary>
        /// The BrowseName for the UpdateDataCapability component.
        /// </summary>
        public const string UpdateDataCapability = "UpdateDataCapability";

        /// <summary>
        /// The BrowseName for the UpdateDataDetails component.
        /// </summary>
        public const string UpdateDataDetails = "UpdateDataDetails";

        /// <summary>
        /// The BrowseName for the UpdatedNode component.
        /// </summary>
        public const string UpdatedNode = "UpdatedNode";

        /// <summary>
        /// The BrowseName for the UpdateEventCapability component.
        /// </summary>
        public const string UpdateEventCapability = "UpdateEventCapability";

        /// <summary>
        /// The BrowseName for the UpdateEventDetails component.
        /// </summary>
        public const string UpdateEventDetails = "UpdateEventDetails";

        /// <summary>
        /// The BrowseName for the UpdateStructureDataDetails component.
        /// </summary>
        public const string UpdateStructureDataDetails = "UpdateStructureDataDetails";

        /// <summary>
        /// The BrowseName for the UserIdentityToken component.
        /// </summary>
        public const string UserIdentityToken = "UserIdentityToken";

        /// <summary>
        /// The BrowseName for the UserNameIdentityToken component.
        /// </summary>
        public const string UserNameIdentityToken = "UserNameIdentityToken";

        /// <summary>
        /// The BrowseName for the UserTokenPolicy component.
        /// </summary>
        public const string UserTokenPolicy = "UserTokenPolicy";

        /// <summary>
        /// The BrowseName for the UserTokenType component.
        /// </summary>
        public const string UserTokenType = "UserTokenType";

        /// <summary>
        /// The BrowseName for the UserWritable component.
        /// </summary>
        public const string UserWritable = "UserWritable";

        /// <summary>
        /// The BrowseName for the UseSlopedExtrapolation component.
        /// </summary>
        public const string UseSlopedExtrapolation = "UseSlopedExtrapolation";

        /// <summary>
        /// The BrowseName for the UtcTime component.
        /// </summary>
        public const string UtcTime = "UtcTime";

        /// <summary>
        /// The BrowseName for the ValueAsText component.
        /// </summary>
        public const string ValueAsText = "ValueAsText";

        /// <summary>
        /// The BrowseName for the ValuePrecision component.
        /// </summary>
        public const string ValuePrecision = "ValuePrecision";

        /// <summary>
        /// The BrowseName for the VariableAttributes component.
        /// </summary>
        public const string VariableAttributes = "VariableAttributes";

        /// <summary>
        /// The BrowseName for the VariableNode component.
        /// </summary>
        public const string VariableNode = "VariableNode";

        /// <summary>
        /// The BrowseName for the VariableTypeAttributes component.
        /// </summary>
        public const string VariableTypeAttributes = "VariableTypeAttributes";

        /// <summary>
        /// The BrowseName for the VariableTypeNode component.
        /// </summary>
        public const string VariableTypeNode = "VariableTypeNode";

        /// <summary>
        /// The BrowseName for the VariableTypesFolder component.
        /// </summary>
        public const string VariableTypesFolder = "VariableTypes";

        /// <summary>
        /// The BrowseName for the VendorCapability_Placeholder component.
        /// </summary>
        public const string VendorCapability_Placeholder = "<VendorCapability>";

        /// <summary>
        /// The BrowseName for the VendorServerInfo component.
        /// </summary>
        public const string VendorServerInfo = "VendorServerInfo";

        /// <summary>
        /// The BrowseName for the VendorServerInfoType component.
        /// </summary>
        public const string VendorServerInfoType = "VendorServerInfoType";

        /// <summary>
        /// The BrowseName for the ViewAttributes component.
        /// </summary>
        public const string ViewAttributes = "ViewAttributes";

        /// <summary>
        /// The BrowseName for the ViewDescription component.
        /// </summary>
        public const string ViewDescription = "ViewDescription";

        /// <summary>
        /// The BrowseName for the ViewNode component.
        /// </summary>
        public const string ViewNode = "ViewNode";

        /// <summary>
        /// The BrowseName for the ViewsFolder component.
        /// </summary>
        public const string ViewsFolder = "Views";

        /// <summary>
        /// The BrowseName for the ViewVersion component.
        /// </summary>
        public const string ViewVersion = "ViewVersion";

        /// <summary>
        /// The BrowseName for the Writable component.
        /// </summary>
        public const string Writable = "Writable";

        /// <summary>
        /// The BrowseName for the Write component.
        /// </summary>
        public const string Write = "Write";

        /// <summary>
        /// The BrowseName for the WriteCount component.
        /// </summary>
        public const string WriteCount = "WriteCount";

        /// <summary>
        /// The BrowseName for the WriteRequest component.
        /// </summary>
        public const string WriteRequest = "WriteRequest";

        /// <summary>
        /// The BrowseName for the WriteResponse component.
        /// </summary>
        public const string WriteResponse = "WriteResponse";

        /// <summary>
        /// The BrowseName for the WriteValue component.
        /// </summary>
        public const string WriteValue = "WriteValue";

        /// <summary>
        /// The BrowseName for the X509IdentityToken component.
        /// </summary>
        public const string X509IdentityToken = "X509IdentityToken";

        /// <summary>
        /// The BrowseName for the XAxisDefinition component.
        /// </summary>
        public const string XAxisDefinition = "XAxisDefinition";

        /// <summary>
        /// The BrowseName for the XmlElement component.
        /// </summary>
        public const string XmlElement = "XmlElement";

        /// <summary>
        /// The BrowseName for the XmlSchema_TypeSystem component.
        /// </summary>
        public const string XmlSchema_TypeSystem = "XML Schema";

        /// <summary>
        /// The BrowseName for the XVType component.
        /// </summary>
        public const string XVType = "XVType";

        /// <summary>
        /// The BrowseName for the XYArrayItemType component.
        /// </summary>
        public const string XYArrayItemType = "XYArrayItemType";

        /// <summary>
        /// The BrowseName for the YArrayItemType component.
        /// </summary>
        public const string YArrayItemType = "YArrayItemType";

        /// <summary>
        /// The BrowseName for the YAxisDefinition component.
        /// </summary>
        public const string YAxisDefinition = "YAxisDefinition";

        /// <summary>
        /// The BrowseName for the ZAxisDefinition component.
        /// </summary>
        public const string ZAxisDefinition = "ZAxisDefinition";
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the model design.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the OpcUaXsd namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUaXsd = "http://opcfoundation.org/UA/2008/02/Types.xsd";
    }
    #endregion
}