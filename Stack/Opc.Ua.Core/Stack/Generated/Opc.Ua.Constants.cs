/* ========================================================================
 * Copyright (c) 2005-2022 The OPC Foundation, Inc. All rights reserved.
 *
 * OPC Foundation MIT License 1.00
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * The complete license agreement can be found here:
 * http://opcfoundation.org/License/MIT/1.00/
 * ======================================================================*/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;

namespace Opc.Ua
{
    #region DataType Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class DataTypes
    {
        /// <remarks />
        public const uint BaseDataType = 24;

        /// <remarks />
        public const uint Number = 26;

        /// <remarks />
        public const uint Integer = 27;

        /// <remarks />
        public const uint UInteger = 28;

        /// <remarks />
        public const uint Enumeration = 29;

        /// <remarks />
        public const uint Boolean = 1;

        /// <remarks />
        public const uint SByte = 2;

        /// <remarks />
        public const uint Byte = 3;

        /// <remarks />
        public const uint Int16 = 4;

        /// <remarks />
        public const uint UInt16 = 5;

        /// <remarks />
        public const uint Int32 = 6;

        /// <remarks />
        public const uint UInt32 = 7;

        /// <remarks />
        public const uint Int64 = 8;

        /// <remarks />
        public const uint UInt64 = 9;

        /// <remarks />
        public const uint Float = 10;

        /// <remarks />
        public const uint Double = 11;

        /// <remarks />
        public const uint String = 12;

        /// <remarks />
        public const uint DateTime = 13;

        /// <remarks />
        public const uint Guid = 14;

        /// <remarks />
        public const uint ByteString = 15;

        /// <remarks />
        public const uint XmlElement = 16;

        /// <remarks />
        public const uint NodeId = 17;

        /// <remarks />
        public const uint ExpandedNodeId = 18;

        /// <remarks />
        public const uint StatusCode = 19;

        /// <remarks />
        public const uint QualifiedName = 20;

        /// <remarks />
        public const uint LocalizedText = 21;

        /// <remarks />
        public const uint Structure = 22;

        /// <remarks />
        public const uint DataValue = 23;

        /// <remarks />
        public const uint DiagnosticInfo = 25;

        /// <remarks />
        public const uint Image = 30;

        /// <remarks />
        public const uint Decimal = 50;

        /// <remarks />
        public const uint NamingRuleType = 120;

        /// <remarks />
        public const uint ImageBMP = 2000;

        /// <remarks />
        public const uint ImageGIF = 2001;

        /// <remarks />
        public const uint ImageJPG = 2002;

        /// <remarks />
        public const uint ImagePNG = 2003;

        /// <remarks />
        public const uint AudioDataType = 16307;

        /// <remarks />
        public const uint Union = 12756;

        /// <remarks />
        public const uint BitFieldMaskDataType = 11737;

        /// <remarks />
        public const uint KeyValuePair = 14533;

        /// <remarks />
        public const uint AdditionalParametersType = 16313;

        /// <remarks />
        public const uint EphemeralKeyType = 17548;

        /// <remarks />
        public const uint EndpointType = 15528;

        /// <remarks />
        public const uint RationalNumber = 18806;

        /// <remarks />
        public const uint Vector = 18807;

        /// <remarks />
        public const uint ThreeDVector = 18808;

        /// <remarks />
        public const uint CartesianCoordinates = 18809;

        /// <remarks />
        public const uint ThreeDCartesianCoordinates = 18810;

        /// <remarks />
        public const uint Orientation = 18811;

        /// <remarks />
        public const uint ThreeDOrientation = 18812;

        /// <remarks />
        public const uint Frame = 18813;

        /// <remarks />
        public const uint ThreeDFrame = 18814;

        /// <remarks />
        public const uint OpenFileMode = 11939;

        /// <remarks />
        public const uint IdentityCriteriaType = 15632;

        /// <remarks />
        public const uint IdentityMappingRuleType = 15634;

        /// <remarks />
        public const uint CurrencyUnitType = 23498;

        /// <remarks />
        public const uint TrustListMasks = 12552;

        /// <remarks />
        public const uint TrustListDataType = 12554;

        /// <remarks />
        public const uint DecimalDataType = 17861;

        /// <remarks />
        public const uint DataTypeSchemaHeader = 15534;

        /// <remarks />
        public const uint DataTypeDescription = 14525;

        /// <remarks />
        public const uint StructureDescription = 15487;

        /// <remarks />
        public const uint EnumDescription = 15488;

        /// <remarks />
        public const uint SimpleTypeDescription = 15005;

        /// <remarks />
        public const uint UABinaryFileDataType = 15006;

        /// <remarks />
        public const uint PubSubState = 14647;

        /// <remarks />
        public const uint DataSetMetaDataType = 14523;

        /// <remarks />
        public const uint FieldMetaData = 14524;

        /// <remarks />
        public const uint DataSetFieldFlags = 15904;

        /// <remarks />
        public const uint ConfigurationVersionDataType = 14593;

        /// <remarks />
        public const uint PublishedDataSetDataType = 15578;

        /// <remarks />
        public const uint PublishedDataSetSourceDataType = 15580;

        /// <remarks />
        public const uint PublishedVariableDataType = 14273;

        /// <remarks />
        public const uint PublishedDataItemsDataType = 15581;

        /// <remarks />
        public const uint PublishedEventsDataType = 15582;

        /// <remarks />
        public const uint DataSetFieldContentMask = 15583;

        /// <remarks />
        public const uint DataSetWriterDataType = 15597;

        /// <remarks />
        public const uint DataSetWriterTransportDataType = 15598;

        /// <remarks />
        public const uint DataSetWriterMessageDataType = 15605;

        /// <remarks />
        public const uint PubSubGroupDataType = 15609;

        /// <remarks />
        public const uint WriterGroupDataType = 15480;

        /// <remarks />
        public const uint WriterGroupTransportDataType = 15611;

        /// <remarks />
        public const uint WriterGroupMessageDataType = 15616;

        /// <remarks />
        public const uint PubSubConnectionDataType = 15617;

        /// <remarks />
        public const uint ConnectionTransportDataType = 15618;

        /// <remarks />
        public const uint NetworkAddressDataType = 15502;

        /// <remarks />
        public const uint NetworkAddressUrlDataType = 15510;

        /// <remarks />
        public const uint ReaderGroupDataType = 15520;

        /// <remarks />
        public const uint ReaderGroupTransportDataType = 15621;

        /// <remarks />
        public const uint ReaderGroupMessageDataType = 15622;

        /// <remarks />
        public const uint DataSetReaderDataType = 15623;

        /// <remarks />
        public const uint DataSetReaderTransportDataType = 15628;

        /// <remarks />
        public const uint DataSetReaderMessageDataType = 15629;

        /// <remarks />
        public const uint SubscribedDataSetDataType = 15630;

        /// <remarks />
        public const uint TargetVariablesDataType = 15631;

        /// <remarks />
        public const uint FieldTargetDataType = 14744;

        /// <remarks />
        public const uint OverrideValueHandling = 15874;

        /// <remarks />
        public const uint SubscribedDataSetMirrorDataType = 15635;

        /// <remarks />
        public const uint PubSubConfigurationDataType = 15530;

        /// <remarks />
        public const uint DataSetOrderingType = 20408;

        /// <remarks />
        public const uint UadpNetworkMessageContentMask = 15642;

        /// <remarks />
        public const uint UadpWriterGroupMessageDataType = 15645;

        /// <remarks />
        public const uint UadpDataSetMessageContentMask = 15646;

        /// <remarks />
        public const uint UadpDataSetWriterMessageDataType = 15652;

        /// <remarks />
        public const uint UadpDataSetReaderMessageDataType = 15653;

        /// <remarks />
        public const uint JsonNetworkMessageContentMask = 15654;

        /// <remarks />
        public const uint JsonWriterGroupMessageDataType = 15657;

        /// <remarks />
        public const uint JsonDataSetMessageContentMask = 15658;

        /// <remarks />
        public const uint JsonDataSetWriterMessageDataType = 15664;

        /// <remarks />
        public const uint JsonDataSetReaderMessageDataType = 15665;

        /// <remarks />
        public const uint DatagramConnectionTransportDataType = 17467;

        /// <remarks />
        public const uint DatagramWriterGroupTransportDataType = 15532;

        /// <remarks />
        public const uint BrokerConnectionTransportDataType = 15007;

        /// <remarks />
        public const uint BrokerTransportQualityOfService = 15008;

        /// <remarks />
        public const uint BrokerWriterGroupTransportDataType = 15667;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportDataType = 15669;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportDataType = 15670;

        /// <remarks />
        public const uint DiagnosticsLevel = 19723;

        /// <remarks />
        public const uint PubSubDiagnosticsCounterClassification = 19730;

        /// <remarks />
        public const uint AliasNameDataType = 23468;

        /// <remarks />
        public const uint Duplex = 24210;

        /// <remarks />
        public const uint InterfaceAdminStatus = 24212;

        /// <remarks />
        public const uint InterfaceOperStatus = 24214;

        /// <remarks />
        public const uint NegotiationStatus = 24216;

        /// <remarks />
        public const uint TsnFailureCode = 24218;

        /// <remarks />
        public const uint TsnStreamState = 24220;

        /// <remarks />
        public const uint TsnTalkerStatus = 24222;

        /// <remarks />
        public const uint TsnListenerStatus = 24224;

        /// <remarks />
        public const uint UnsignedRationalNumber = 24107;

        /// <remarks />
        public const uint IdType = 256;

        /// <remarks />
        public const uint NodeClass = 257;

        /// <remarks />
        public const uint PermissionType = 94;

        /// <remarks />
        public const uint AccessLevelType = 15031;

        /// <remarks />
        public const uint AccessLevelExType = 15406;

        /// <remarks />
        public const uint EventNotifierType = 15033;

        /// <remarks />
        public const uint AccessRestrictionType = 95;

        /// <remarks />
        public const uint RolePermissionType = 96;

        /// <remarks />
        public const uint DataTypeDefinition = 97;

        /// <remarks />
        public const uint StructureType = 98;

        /// <remarks />
        public const uint StructureField = 101;

        /// <remarks />
        public const uint StructureDefinition = 99;

        /// <remarks />
        public const uint EnumDefinition = 100;

        /// <remarks />
        public const uint Node = 258;

        /// <remarks />
        public const uint InstanceNode = 11879;

        /// <remarks />
        public const uint TypeNode = 11880;

        /// <remarks />
        public const uint ObjectNode = 261;

        /// <remarks />
        public const uint ObjectTypeNode = 264;

        /// <remarks />
        public const uint VariableNode = 267;

        /// <remarks />
        public const uint VariableTypeNode = 270;

        /// <remarks />
        public const uint ReferenceTypeNode = 273;

        /// <remarks />
        public const uint MethodNode = 276;

        /// <remarks />
        public const uint ViewNode = 279;

        /// <remarks />
        public const uint DataTypeNode = 282;

        /// <remarks />
        public const uint ReferenceNode = 285;

        /// <remarks />
        public const uint Argument = 296;

        /// <remarks />
        public const uint EnumValueType = 7594;

        /// <remarks />
        public const uint EnumField = 102;

        /// <remarks />
        public const uint OptionSet = 12755;

        /// <remarks />
        public const uint NormalizedString = 12877;

        /// <remarks />
        public const uint DecimalString = 12878;

        /// <remarks />
        public const uint DurationString = 12879;

        /// <remarks />
        public const uint TimeString = 12880;

        /// <remarks />
        public const uint DateString = 12881;

        /// <remarks />
        public const uint Duration = 290;

        /// <remarks />
        public const uint UtcTime = 294;

        /// <remarks />
        public const uint Time = 292;

        /// <remarks />
        public const uint Date = 293;

        /// <remarks />
        public const uint LocaleId = 295;

        /// <remarks />
        public const uint TimeZoneDataType = 8912;

        /// <remarks />
        public const uint Index = 17588;

        /// <remarks />
        public const uint IntegerId = 288;

        /// <remarks />
        public const uint ApplicationType = 307;

        /// <remarks />
        public const uint ApplicationDescription = 308;

        /// <remarks />
        public const uint RequestHeader = 389;

        /// <remarks />
        public const uint ResponseHeader = 392;

        /// <remarks />
        public const uint VersionTime = 20998;

        /// <remarks />
        public const uint ServiceFault = 395;

        /// <remarks />
        public const uint SessionlessInvokeRequestType = 15901;

        /// <remarks />
        public const uint SessionlessInvokeResponseType = 20999;

        /// <remarks />
        public const uint FindServersRequest = 420;

        /// <remarks />
        public const uint FindServersResponse = 423;

        /// <remarks />
        public const uint ServerOnNetwork = 12189;

        /// <remarks />
        public const uint FindServersOnNetworkRequest = 12190;

        /// <remarks />
        public const uint FindServersOnNetworkResponse = 12191;

        /// <remarks />
        public const uint ApplicationInstanceCertificate = 311;

        /// <remarks />
        public const uint MessageSecurityMode = 302;

        /// <remarks />
        public const uint UserTokenType = 303;

        /// <remarks />
        public const uint UserTokenPolicy = 304;

        /// <remarks />
        public const uint EndpointDescription = 312;

        /// <remarks />
        public const uint GetEndpointsRequest = 426;

        /// <remarks />
        public const uint GetEndpointsResponse = 429;

        /// <remarks />
        public const uint RegisteredServer = 432;

        /// <remarks />
        public const uint RegisterServerRequest = 435;

        /// <remarks />
        public const uint RegisterServerResponse = 438;

        /// <remarks />
        public const uint DiscoveryConfiguration = 12890;

        /// <remarks />
        public const uint MdnsDiscoveryConfiguration = 12891;

        /// <remarks />
        public const uint RegisterServer2Request = 12193;

        /// <remarks />
        public const uint RegisterServer2Response = 12194;

        /// <remarks />
        public const uint SecurityTokenRequestType = 315;

        /// <remarks />
        public const uint ChannelSecurityToken = 441;

        /// <remarks />
        public const uint OpenSecureChannelRequest = 444;

        /// <remarks />
        public const uint OpenSecureChannelResponse = 447;

        /// <remarks />
        public const uint CloseSecureChannelRequest = 450;

        /// <remarks />
        public const uint CloseSecureChannelResponse = 453;

        /// <remarks />
        public const uint SignedSoftwareCertificate = 344;

        /// <remarks />
        public const uint SessionAuthenticationToken = 388;

        /// <remarks />
        public const uint SignatureData = 456;

        /// <remarks />
        public const uint CreateSessionRequest = 459;

        /// <remarks />
        public const uint CreateSessionResponse = 462;

        /// <remarks />
        public const uint UserIdentityToken = 316;

        /// <remarks />
        public const uint AnonymousIdentityToken = 319;

        /// <remarks />
        public const uint UserNameIdentityToken = 322;

        /// <remarks />
        public const uint X509IdentityToken = 325;

        /// <remarks />
        public const uint IssuedIdentityToken = 938;

        /// <remarks />
        public const uint RsaEncryptedSecret = 17545;

        /// <remarks />
        public const uint EccEncryptedSecret = 17546;

        /// <remarks />
        public const uint ActivateSessionRequest = 465;

        /// <remarks />
        public const uint ActivateSessionResponse = 468;

        /// <remarks />
        public const uint CloseSessionRequest = 471;

        /// <remarks />
        public const uint CloseSessionResponse = 474;

        /// <remarks />
        public const uint CancelRequest = 477;

        /// <remarks />
        public const uint CancelResponse = 480;

        /// <remarks />
        public const uint NodeAttributesMask = 348;

        /// <remarks />
        public const uint NodeAttributes = 349;

        /// <remarks />
        public const uint ObjectAttributes = 352;

        /// <remarks />
        public const uint VariableAttributes = 355;

        /// <remarks />
        public const uint MethodAttributes = 358;

        /// <remarks />
        public const uint ObjectTypeAttributes = 361;

        /// <remarks />
        public const uint VariableTypeAttributes = 364;

        /// <remarks />
        public const uint ReferenceTypeAttributes = 367;

        /// <remarks />
        public const uint DataTypeAttributes = 370;

        /// <remarks />
        public const uint ViewAttributes = 373;

        /// <remarks />
        public const uint GenericAttributeValue = 17606;

        /// <remarks />
        public const uint GenericAttributes = 17607;

        /// <remarks />
        public const uint AddNodesItem = 376;

        /// <remarks />
        public const uint AddNodesResult = 483;

        /// <remarks />
        public const uint AddNodesRequest = 486;

        /// <remarks />
        public const uint AddNodesResponse = 489;

        /// <remarks />
        public const uint AddReferencesItem = 379;

        /// <remarks />
        public const uint AddReferencesRequest = 492;

        /// <remarks />
        public const uint AddReferencesResponse = 495;

        /// <remarks />
        public const uint DeleteNodesItem = 382;

        /// <remarks />
        public const uint DeleteNodesRequest = 498;

        /// <remarks />
        public const uint DeleteNodesResponse = 501;

        /// <remarks />
        public const uint DeleteReferencesItem = 385;

        /// <remarks />
        public const uint DeleteReferencesRequest = 504;

        /// <remarks />
        public const uint DeleteReferencesResponse = 507;

        /// <remarks />
        public const uint AttributeWriteMask = 347;

        /// <remarks />
        public const uint BrowseDirection = 510;

        /// <remarks />
        public const uint ViewDescription = 511;

        /// <remarks />
        public const uint BrowseDescription = 514;

        /// <remarks />
        public const uint BrowseResultMask = 517;

        /// <remarks />
        public const uint ReferenceDescription = 518;

        /// <remarks />
        public const uint ContinuationPoint = 521;

        /// <remarks />
        public const uint BrowseResult = 522;

        /// <remarks />
        public const uint BrowseRequest = 525;

        /// <remarks />
        public const uint BrowseResponse = 528;

        /// <remarks />
        public const uint BrowseNextRequest = 531;

        /// <remarks />
        public const uint BrowseNextResponse = 534;

        /// <remarks />
        public const uint RelativePathElement = 537;

        /// <remarks />
        public const uint RelativePath = 540;

        /// <remarks />
        public const uint BrowsePath = 543;

        /// <remarks />
        public const uint BrowsePathTarget = 546;

        /// <remarks />
        public const uint BrowsePathResult = 549;

        /// <remarks />
        public const uint TranslateBrowsePathsToNodeIdsRequest = 552;

        /// <remarks />
        public const uint TranslateBrowsePathsToNodeIdsResponse = 555;

        /// <remarks />
        public const uint RegisterNodesRequest = 558;

        /// <remarks />
        public const uint RegisterNodesResponse = 561;

        /// <remarks />
        public const uint UnregisterNodesRequest = 564;

        /// <remarks />
        public const uint UnregisterNodesResponse = 567;

        /// <remarks />
        public const uint Counter = 289;

        /// <remarks />
        public const uint NumericRange = 291;

        /// <remarks />
        public const uint EndpointConfiguration = 331;

        /// <remarks />
        public const uint QueryDataDescription = 570;

        /// <remarks />
        public const uint NodeTypeDescription = 573;

        /// <remarks />
        public const uint FilterOperator = 576;

        /// <remarks />
        public const uint QueryDataSet = 577;

        /// <remarks />
        public const uint NodeReference = 580;

        /// <remarks />
        public const uint ContentFilterElement = 583;

        /// <remarks />
        public const uint ContentFilter = 586;

        /// <remarks />
        public const uint FilterOperand = 589;

        /// <remarks />
        public const uint ElementOperand = 592;

        /// <remarks />
        public const uint LiteralOperand = 595;

        /// <remarks />
        public const uint AttributeOperand = 598;

        /// <remarks />
        public const uint SimpleAttributeOperand = 601;

        /// <remarks />
        public const uint ContentFilterElementResult = 604;

        /// <remarks />
        public const uint ContentFilterResult = 607;

        /// <remarks />
        public const uint ParsingResult = 610;

        /// <remarks />
        public const uint QueryFirstRequest = 613;

        /// <remarks />
        public const uint QueryFirstResponse = 616;

        /// <remarks />
        public const uint QueryNextRequest = 619;

        /// <remarks />
        public const uint QueryNextResponse = 622;

        /// <remarks />
        public const uint TimestampsToReturn = 625;

        /// <remarks />
        public const uint ReadValueId = 626;

        /// <remarks />
        public const uint ReadRequest = 629;

        /// <remarks />
        public const uint ReadResponse = 632;

        /// <remarks />
        public const uint HistoryReadValueId = 635;

        /// <remarks />
        public const uint HistoryReadResult = 638;

        /// <remarks />
        public const uint HistoryReadDetails = 641;

        /// <remarks />
        public const uint ReadEventDetails = 644;

        /// <remarks />
        public const uint ReadRawModifiedDetails = 647;

        /// <remarks />
        public const uint ReadProcessedDetails = 650;

        /// <remarks />
        public const uint ReadAtTimeDetails = 653;

        /// <remarks />
        public const uint ReadAnnotationDataDetails = 23497;

        /// <remarks />
        public const uint HistoryData = 656;

        /// <remarks />
        public const uint ModificationInfo = 11216;

        /// <remarks />
        public const uint HistoryModifiedData = 11217;

        /// <remarks />
        public const uint HistoryEvent = 659;

        /// <remarks />
        public const uint HistoryReadRequest = 662;

        /// <remarks />
        public const uint HistoryReadResponse = 665;

        /// <remarks />
        public const uint WriteValue = 668;

        /// <remarks />
        public const uint WriteRequest = 671;

        /// <remarks />
        public const uint WriteResponse = 674;

        /// <remarks />
        public const uint HistoryUpdateDetails = 677;

        /// <remarks />
        public const uint HistoryUpdateType = 11234;

        /// <remarks />
        public const uint PerformUpdateType = 11293;

        /// <remarks />
        public const uint UpdateDataDetails = 680;

        /// <remarks />
        public const uint UpdateStructureDataDetails = 11295;

        /// <remarks />
        public const uint UpdateEventDetails = 683;

        /// <remarks />
        public const uint DeleteRawModifiedDetails = 686;

        /// <remarks />
        public const uint DeleteAtTimeDetails = 689;

        /// <remarks />
        public const uint DeleteEventDetails = 692;

        /// <remarks />
        public const uint HistoryUpdateResult = 695;

        /// <remarks />
        public const uint HistoryUpdateRequest = 698;

        /// <remarks />
        public const uint HistoryUpdateResponse = 701;

        /// <remarks />
        public const uint CallMethodRequest = 704;

        /// <remarks />
        public const uint CallMethodResult = 707;

        /// <remarks />
        public const uint CallRequest = 710;

        /// <remarks />
        public const uint CallResponse = 713;

        /// <remarks />
        public const uint MonitoringMode = 716;

        /// <remarks />
        public const uint DataChangeTrigger = 717;

        /// <remarks />
        public const uint DeadbandType = 718;

        /// <remarks />
        public const uint MonitoringFilter = 719;

        /// <remarks />
        public const uint DataChangeFilter = 722;

        /// <remarks />
        public const uint EventFilter = 725;

        /// <remarks />
        public const uint AggregateConfiguration = 948;

        /// <remarks />
        public const uint AggregateFilter = 728;

        /// <remarks />
        public const uint MonitoringFilterResult = 731;

        /// <remarks />
        public const uint EventFilterResult = 734;

        /// <remarks />
        public const uint AggregateFilterResult = 737;

        /// <remarks />
        public const uint MonitoringParameters = 740;

        /// <remarks />
        public const uint MonitoredItemCreateRequest = 743;

        /// <remarks />
        public const uint MonitoredItemCreateResult = 746;

        /// <remarks />
        public const uint CreateMonitoredItemsRequest = 749;

        /// <remarks />
        public const uint CreateMonitoredItemsResponse = 752;

        /// <remarks />
        public const uint MonitoredItemModifyRequest = 755;

        /// <remarks />
        public const uint MonitoredItemModifyResult = 758;

        /// <remarks />
        public const uint ModifyMonitoredItemsRequest = 761;

        /// <remarks />
        public const uint ModifyMonitoredItemsResponse = 764;

        /// <remarks />
        public const uint SetMonitoringModeRequest = 767;

        /// <remarks />
        public const uint SetMonitoringModeResponse = 770;

        /// <remarks />
        public const uint SetTriggeringRequest = 773;

        /// <remarks />
        public const uint SetTriggeringResponse = 776;

        /// <remarks />
        public const uint DeleteMonitoredItemsRequest = 779;

        /// <remarks />
        public const uint DeleteMonitoredItemsResponse = 782;

        /// <remarks />
        public const uint CreateSubscriptionRequest = 785;

        /// <remarks />
        public const uint CreateSubscriptionResponse = 788;

        /// <remarks />
        public const uint ModifySubscriptionRequest = 791;

        /// <remarks />
        public const uint ModifySubscriptionResponse = 794;

        /// <remarks />
        public const uint SetPublishingModeRequest = 797;

        /// <remarks />
        public const uint SetPublishingModeResponse = 800;

        /// <remarks />
        public const uint NotificationMessage = 803;

        /// <remarks />
        public const uint NotificationData = 945;

        /// <remarks />
        public const uint DataChangeNotification = 809;

        /// <remarks />
        public const uint MonitoredItemNotification = 806;

        /// <remarks />
        public const uint EventNotificationList = 914;

        /// <remarks />
        public const uint EventFieldList = 917;

        /// <remarks />
        public const uint HistoryEventFieldList = 920;

        /// <remarks />
        public const uint StatusChangeNotification = 818;

        /// <remarks />
        public const uint SubscriptionAcknowledgement = 821;

        /// <remarks />
        public const uint PublishRequest = 824;

        /// <remarks />
        public const uint PublishResponse = 827;

        /// <remarks />
        public const uint RepublishRequest = 830;

        /// <remarks />
        public const uint RepublishResponse = 833;

        /// <remarks />
        public const uint TransferResult = 836;

        /// <remarks />
        public const uint TransferSubscriptionsRequest = 839;

        /// <remarks />
        public const uint TransferSubscriptionsResponse = 842;

        /// <remarks />
        public const uint DeleteSubscriptionsRequest = 845;

        /// <remarks />
        public const uint DeleteSubscriptionsResponse = 848;

        /// <remarks />
        public const uint BuildInfo = 338;

        /// <remarks />
        public const uint RedundancySupport = 851;

        /// <remarks />
        public const uint ServerState = 852;

        /// <remarks />
        public const uint RedundantServerDataType = 853;

        /// <remarks />
        public const uint EndpointUrlListDataType = 11943;

        /// <remarks />
        public const uint NetworkGroupDataType = 11944;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsDataType = 856;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryDataType = 859;

        /// <remarks />
        public const uint ServerStatusDataType = 862;

        /// <remarks />
        public const uint SessionDiagnosticsDataType = 865;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsDataType = 868;

        /// <remarks />
        public const uint ServiceCounterDataType = 871;

        /// <remarks />
        public const uint StatusResult = 299;

        /// <remarks />
        public const uint SubscriptionDiagnosticsDataType = 874;

        /// <remarks />
        public const uint ModelChangeStructureVerbMask = 11941;

        /// <remarks />
        public const uint ModelChangeStructureDataType = 877;

        /// <remarks />
        public const uint SemanticChangeStructureDataType = 897;

        /// <remarks />
        public const uint Range = 884;

        /// <remarks />
        public const uint EUInformation = 887;

        /// <remarks />
        public const uint AxisScaleEnumeration = 12077;

        /// <remarks />
        public const uint ComplexNumberType = 12171;

        /// <remarks />
        public const uint DoubleComplexNumberType = 12172;

        /// <remarks />
        public const uint AxisInformation = 12079;

        /// <remarks />
        public const uint XVType = 12080;

        /// <remarks />
        public const uint ProgramDiagnosticDataType = 894;

        /// <remarks />
        public const uint ProgramDiagnostic2DataType = 24033;

        /// <remarks />
        public const uint Annotation = 891;

        /// <remarks />
        public const uint ExceptionDeviationFormat = 890;
    }
    #endregion

    #region Method Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Methods
    {
        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Open = 15971;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Close = 15974;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Read = 15976;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Write = 15979;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_GetPosition = 15981;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_SetPosition = 15984;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_RoleSet_AddRole = 16290;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_RoleSet_RemoveRole = 16293;

        /// <remarks />
        public const uint ServerType_GetMonitoredItems = 11489;

        /// <remarks />
        public const uint ServerType_ResendData = 12871;

        /// <remarks />
        public const uint ServerType_SetSubscriptionDurable = 12746;

        /// <remarks />
        public const uint ServerType_RequestServerStateChange = 12883;

        /// <remarks />
        public const uint ServerCapabilitiesType_RoleSet_AddRole = 16296;

        /// <remarks />
        public const uint ServerCapabilitiesType_RoleSet_RemoveRole = 16299;

        /// <remarks />
        public const uint FileType_Open = 11580;

        /// <remarks />
        public const uint FileType_Close = 11583;

        /// <remarks />
        public const uint FileType_Read = 11585;

        /// <remarks />
        public const uint FileType_Write = 11588;

        /// <remarks />
        public const uint FileType_GetPosition = 11590;

        /// <remarks />
        public const uint FileType_SetPosition = 11593;

        /// <remarks />
        public const uint AddressSpaceFileType_ExportNamespace = 11615;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Open = 11629;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Close = 11632;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Read = 11634;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Write = 11637;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_GetPosition = 11639;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_SetPosition = 11642;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open = 11659;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close = 11662;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read = 11664;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write = 11667;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition = 11669;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition = 11672;

        /// <remarks />
        public const uint Server_ServerCapabilities_RoleSet_AddRole = 16301;

        /// <remarks />
        public const uint Server_ServerCapabilities_RoleSet_RemoveRole = 16304;

        /// <remarks />
        public const uint Server_GetMonitoredItems = 11492;

        /// <remarks />
        public const uint Server_ResendData = 12873;

        /// <remarks />
        public const uint Server_SetSubscriptionDurable = 12749;

        /// <remarks />
        public const uint Server_RequestServerStateChange = 12886;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory = 13355;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateFile = 13358;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject = 17718;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy = 13363;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Open = 13372;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Close = 13375;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Read = 13377;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Write = 13380;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_GetPosition = 13382;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_SetPosition = 13385;

        /// <remarks />
        public const uint FileDirectoryType_CreateDirectory = 13387;

        /// <remarks />
        public const uint FileDirectoryType_CreateFile = 13390;

        /// <remarks />
        public const uint FileDirectoryType_DeleteFileSystemObject = 13393;

        /// <remarks />
        public const uint FileDirectoryType_MoveOrCopy = 13395;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_CreateDirectory = 16316;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_CreateFile = 16319;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject = 17722;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_MoveOrCopy = 16324;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Open = 16333;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Close = 16336;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Read = 16338;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Write = 16341;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_GetPosition = 16343;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_SetPosition = 16346;

        /// <remarks />
        public const uint FileSystem_CreateDirectory = 16348;

        /// <remarks />
        public const uint FileSystem_CreateFile = 16351;

        /// <remarks />
        public const uint FileSystem_DeleteFileSystemObject = 16354;

        /// <remarks />
        public const uint FileSystem_MoveOrCopy = 16356;

        /// <remarks />
        public const uint TemporaryFileTransferType_GenerateFileForRead = 15746;

        /// <remarks />
        public const uint TemporaryFileTransferType_GenerateFileForWrite = 15749;

        /// <remarks />
        public const uint TemporaryFileTransferType_CloseAndCommit = 15751;

        /// <remarks />
        public const uint TemporaryFileTransferType_TransferState_Placeholder_Reset = 15794;

        /// <remarks />
        public const uint FileTransferStateMachineType_Reset = 15843;

        /// <remarks />
        public const uint RoleSetType_AddRole = 15997;

        /// <remarks />
        public const uint RoleSetType_RemoveRole = 16000;

        /// <remarks />
        public const uint RoleType_AddIdentity = 15624;

        /// <remarks />
        public const uint RoleType_RemoveIdentity = 15626;

        /// <remarks />
        public const uint RoleType_AddApplication = 16176;

        /// <remarks />
        public const uint RoleType_RemoveApplication = 16178;

        /// <remarks />
        public const uint RoleType_AddEndpoint = 16180;

        /// <remarks />
        public const uint RoleType_RemoveEndpoint = 16182;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_AddIdentity = 15648;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_RemoveIdentity = 15650;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_AddApplication = 16195;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_RemoveApplication = 16197;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_AddEndpoint = 16199;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_RemoveEndpoint = 16201;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_AddIdentity = 15660;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_RemoveIdentity = 15662;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_AddApplication = 16206;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_RemoveApplication = 16208;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_AddEndpoint = 16210;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_RemoveEndpoint = 16212;

        /// <remarks />
        public const uint WellKnownRole_Observer_AddIdentity = 15672;

        /// <remarks />
        public const uint WellKnownRole_Observer_RemoveIdentity = 15674;

        /// <remarks />
        public const uint WellKnownRole_Observer_AddApplication = 16217;

        /// <remarks />
        public const uint WellKnownRole_Observer_RemoveApplication = 16219;

        /// <remarks />
        public const uint WellKnownRole_Observer_AddEndpoint = 16221;

        /// <remarks />
        public const uint WellKnownRole_Observer_RemoveEndpoint = 16223;

        /// <remarks />
        public const uint WellKnownRole_Operator_AddIdentity = 15684;

        /// <remarks />
        public const uint WellKnownRole_Operator_RemoveIdentity = 15686;

        /// <remarks />
        public const uint WellKnownRole_Operator_AddApplication = 16228;

        /// <remarks />
        public const uint WellKnownRole_Operator_RemoveApplication = 16230;

        /// <remarks />
        public const uint WellKnownRole_Operator_AddEndpoint = 16232;

        /// <remarks />
        public const uint WellKnownRole_Operator_RemoveEndpoint = 16234;

        /// <remarks />
        public const uint WellKnownRole_Engineer_AddIdentity = 16041;

        /// <remarks />
        public const uint WellKnownRole_Engineer_RemoveIdentity = 16043;

        /// <remarks />
        public const uint WellKnownRole_Engineer_AddApplication = 16239;

        /// <remarks />
        public const uint WellKnownRole_Engineer_RemoveApplication = 16241;

        /// <remarks />
        public const uint WellKnownRole_Engineer_AddEndpoint = 16243;

        /// <remarks />
        public const uint WellKnownRole_Engineer_RemoveEndpoint = 16245;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_AddIdentity = 15696;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_RemoveIdentity = 15698;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_AddApplication = 16250;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_RemoveApplication = 16252;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_AddEndpoint = 16254;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_RemoveEndpoint = 16256;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_AddIdentity = 15720;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_RemoveIdentity = 15722;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_AddApplication = 16272;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_RemoveApplication = 16274;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_AddEndpoint = 16276;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_RemoveEndpoint = 16278;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_AddIdentity = 15708;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_RemoveIdentity = 15710;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_AddApplication = 16261;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_RemoveApplication = 16263;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_AddEndpoint = 16265;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_RemoveEndpoint = 16267;

        /// <remarks />
        public const uint ConditionType_Disable = 9028;

        /// <remarks />
        public const uint ConditionType_Enable = 9027;

        /// <remarks />
        public const uint ConditionType_AddComment = 9029;

        /// <remarks />
        public const uint ConditionType_ConditionRefresh = 3875;

        /// <remarks />
        public const uint ConditionType_ConditionRefresh2 = 12912;

        /// <remarks />
        public const uint DialogConditionType_Respond = 9069;

        /// <remarks />
        public const uint AcknowledgeableConditionType_Acknowledge = 9111;

        /// <remarks />
        public const uint AcknowledgeableConditionType_Confirm = 9113;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_TimedShelve = 9213;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_Unshelve = 9211;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_OneShotShelve = 9212;

        /// <remarks />
        public const uint AlarmConditionType_Silence = 16402;

        /// <remarks />
        public const uint AlarmConditionType_Suppress = 16403;

        /// <remarks />
        public const uint AlarmConditionType_Unsuppress = 17868;

        /// <remarks />
        public const uint AlarmConditionType_RemoveFromService = 17869;

        /// <remarks />
        public const uint AlarmConditionType_PlaceInService = 17870;

        /// <remarks />
        public const uint AlarmConditionType_Reset = 18199;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Disable = 16439;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Enable = 16440;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment = 16441;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge = 16461;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve = 16517;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_Unshelve = 16515;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_OneShotShelve = 16516;

        /// <remarks />
        public const uint ShelvedStateMachineType_TimedShelve = 2949;

        /// <remarks />
        public const uint ShelvedStateMachineType_Unshelve = 2947;

        /// <remarks />
        public const uint ShelvedStateMachineType_OneShotShelve = 2948;

        /// <remarks />
        public const uint LimitAlarmType_ShelvingState_TimedShelve = 9314;

        /// <remarks />
        public const uint LimitAlarmType_ShelvingState_Unshelve = 9312;

        /// <remarks />
        public const uint LimitAlarmType_ShelvingState_OneShotShelve = 9313;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ShelvingState_TimedShelve = 9451;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ShelvingState_Unshelve = 9449;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ShelvingState_OneShotShelve = 9450;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ShelvingState_TimedShelve = 10016;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ShelvingState_Unshelve = 10014;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve = 10015;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ShelvingState_TimedShelve = 10170;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ShelvingState_Unshelve = 10168;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve = 10169;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ShelvingState_TimedShelve = 9592;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ShelvingState_Unshelve = 9590;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ShelvingState_OneShotShelve = 9591;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve = 10478;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_Unshelve = 10476;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve = 10477;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve = 10324;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve = 10322;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve = 10323;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ShelvingState_TimedShelve = 9874;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ShelvingState_Unshelve = 9872;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve = 9873;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve = 9733;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve = 9731;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve = 9732;

        /// <remarks />
        public const uint DiscreteAlarmType_ShelvingState_TimedShelve = 10633;

        /// <remarks />
        public const uint DiscreteAlarmType_ShelvingState_Unshelve = 10631;

        /// <remarks />
        public const uint DiscreteAlarmType_ShelvingState_OneShotShelve = 10632;

        /// <remarks />
        public const uint OffNormalAlarmType_ShelvingState_TimedShelve = 10747;

        /// <remarks />
        public const uint OffNormalAlarmType_ShelvingState_Unshelve = 10745;

        /// <remarks />
        public const uint OffNormalAlarmType_ShelvingState_OneShotShelve = 10746;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ShelvingState_TimedShelve = 11846;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ShelvingState_Unshelve = 11844;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ShelvingState_OneShotShelve = 11845;

        /// <remarks />
        public const uint TripAlarmType_ShelvingState_TimedShelve = 10861;

        /// <remarks />
        public const uint TripAlarmType_ShelvingState_Unshelve = 10859;

        /// <remarks />
        public const uint TripAlarmType_ShelvingState_OneShotShelve = 10860;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve = 18453;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ShelvingState_Unshelve = 18455;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ShelvingState_OneShotShelve = 18456;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ShelvingState_TimedShelve = 18602;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ShelvingState_Unshelve = 18604;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ShelvingState_OneShotShelve = 18605;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ShelvingState_TimedShelve = 13320;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ShelvingState_Unshelve = 13318;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ShelvingState_OneShotShelve = 13319;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ShelvingState_TimedShelve = 17195;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ShelvingState_Unshelve = 17193;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ShelvingState_OneShotShelve = 17194;

        /// <remarks />
        public const uint AlarmMetricsType_Reset = 18666;

        /// <remarks />
        public const uint ProgramStateMachineType_Start = 2426;

        /// <remarks />
        public const uint ProgramStateMachineType_Suspend = 2427;

        /// <remarks />
        public const uint ProgramStateMachineType_Resume = 2428;

        /// <remarks />
        public const uint ProgramStateMachineType_Halt = 2429;

        /// <remarks />
        public const uint ProgramStateMachineType_Reset = 2430;

        /// <remarks />
        public const uint TrustListType_OpenWithMasks = 12543;

        /// <remarks />
        public const uint TrustListType_CloseAndUpdate = 12546;

        /// <remarks />
        public const uint TrustListType_AddCertificate = 12548;

        /// <remarks />
        public const uint TrustListType_RemoveCertificate = 12550;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ShelvingState_TimedShelve = 19403;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ShelvingState_Unshelve = 19405;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ShelvingState_OneShotShelve = 19406;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Open = 13605;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Close = 13608;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Read = 13610;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Write = 13613;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_GetPosition = 13615;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_SetPosition = 13618;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_OpenWithMasks = 13621;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Disable = 19483;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Enable = 19484;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_AddComment = 19485;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Acknowledge = 19505;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ShelvingState_TimedShelve = 20097;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ShelvingState_Unshelve = 20099;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ShelvingState_OneShotShelve = 20100;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Disable = 20176;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Enable = 20177;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_AddComment = 20178;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Acknowledge = 20198;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ShelvingState_TimedShelve = 20245;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ShelvingState_Unshelve = 20247;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ShelvingState_OneShotShelve = 20248;

        /// <remarks />
        public const uint CertificateGroupType_GetRejectedList = 23526;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open = 13821;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close = 13824;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read = 13826;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write = 13829;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition = 13831;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition = 13834;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks = 13837;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Disable = 20324;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Enable = 20325;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AddComment = 20326;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Acknowledge = 20346;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve = 20393;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_Unshelve = 20395;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_OneShotShelve = 20396;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Disable = 20474;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Enable = 20475;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AddComment = 20476;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge = 20496;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve = 20543;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_Unshelve = 20545;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = 20546;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open = 13855;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close = 13858;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read = 13860;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write = 13863;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition = 13865;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition = 13868;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks = 13871;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Disable = 20622;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Enable = 20623;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AddComment = 20624;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Acknowledge = 20644;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve = 20691;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_Unshelve = 20693;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_OneShotShelve = 20694;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Disable = 20770;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Enable = 20771;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AddComment = 20772;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge = 20792;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve = 20839;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_Unshelve = 20841;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = 20842;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open = 13889;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close = 13892;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read = 13894;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write = 13897;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition = 13899;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition = 13902;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks = 13905;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Disable = 20918;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Enable = 20919;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AddComment = 20920;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Acknowledge = 20940;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve = 20987;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_Unshelve = 20989;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_OneShotShelve = 20990;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Disable = 21269;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Enable = 21270;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AddComment = 21271;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge = 21291;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve = 21338;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_Unshelve = 21340;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = 21341;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open = 13923;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close = 13926;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read = 13928;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write = 13931;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition = 13933;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition = 13936;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks = 13939;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Disable = 21417;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Enable = 21418;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AddComment = 21419;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Acknowledge = 21439;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_TimedShelve = 21486;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_Unshelve = 21488;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_OneShotShelve = 21489;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Disable = 21565;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Enable = 21566;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AddComment = 21567;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Acknowledge = 21587;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_TimedShelve = 21634;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_Unshelve = 21636;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_OneShotShelve = 21637;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open = 13958;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close = 13961;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read = 13963;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write = 13966;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition = 13968;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition = 13971;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks = 13974;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Disable = 21713;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Enable = 21714;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment = 21715;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge = 21735;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve = 21782;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_Unshelve = 21784;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_OneShotShelve = 21785;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Disable = 21861;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Enable = 21862;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment = 21863;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge = 21883;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve = 21930;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_Unshelve = 21932;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = 21933;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open = 13992;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close = 13995;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read = 13997;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write = 14000;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition = 14002;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition = 14005;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks = 14008;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Disable = 22009;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Enable = 22010;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment = 22011;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge = 22031;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve = 22078;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_Unshelve = 22080;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_OneShotShelve = 22081;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Disable = 22157;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Enable = 22158;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment = 22159;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge = 22179;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve = 22226;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_Unshelve = 22228;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = 22229;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open = 14026;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close = 14029;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read = 14031;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write = 14034;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition = 14036;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition = 14039;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks = 14042;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Disable = 22305;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Enable = 22306;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment = 22307;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge = 22327;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve = 22374;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_Unshelve = 22376;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_OneShotShelve = 22377;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Disable = 22453;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Enable = 22454;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment = 22455;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge = 22475;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve = 22522;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_Unshelve = 22524;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = 22525;

        /// <remarks />
        public const uint ServerConfigurationType_UpdateCertificate = 12616;

        /// <remarks />
        public const uint ServerConfigurationType_ApplyChanges = 12734;

        /// <remarks />
        public const uint ServerConfigurationType_CreateSigningRequest = 12731;

        /// <remarks />
        public const uint ServerConfigurationType_GetRejectedList = 12775;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open = 12647;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close = 12650;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read = 12652;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write = 12655;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition = 12657;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition = 12660;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks = 12663;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate = 12666;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate = 12668;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate = 12670;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Disable = 22601;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Enable = 22602;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment = 22603;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge = 22623;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve = 22670;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_Unshelve = 22672;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_OneShotShelve = 22673;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Disable = 22749;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Enable = 22750;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment = 22751;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge = 22771;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve = 22818;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_Unshelve = 22820;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = 22821;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open = 14095;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close = 14098;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read = 14100;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write = 14103;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition = 14105;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition = 14108;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks = 14111;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate = 14114;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate = 14117;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate = 14119;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Disable = 22897;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Enable = 22898;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment = 22899;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge = 22919;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve = 22966;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_Unshelve = 22968;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_OneShotShelve = 22969;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Disable = 23045;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Enable = 23046;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment = 23047;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge = 23067;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve = 23114;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_Unshelve = 23116;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = 23117;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open = 14129;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close = 14132;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read = 14134;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write = 14137;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition = 14139;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition = 14142;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks = 14145;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate = 14148;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate = 14151;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate = 14153;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Disable = 23193;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Enable = 23194;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment = 23195;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge = 23215;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve = 23262;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_Unshelve = 23264;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_OneShotShelve = 23265;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Disable = 23341;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Enable = 23342;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment = 23343;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge = 23363;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve = 23410;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_Unshelve = 23412;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = 23413;

        /// <remarks />
        public const uint ServerConfiguration_UpdateCertificate = 13737;

        /// <remarks />
        public const uint ServerConfiguration_ApplyChanges = 12740;

        /// <remarks />
        public const uint ServerConfiguration_CreateSigningRequest = 12737;

        /// <remarks />
        public const uint ServerConfiguration_GetRejectedList = 12777;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType_CreateCredential = 17522;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_GetEncryptingKey = 17534;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_UpdateCredential = 18006;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_DeleteCredential = 18008;

        /// <remarks />
        public const uint PubSubKeyServiceType_GetSecurityKeys = 15907;

        /// <remarks />
        public const uint PubSubKeyServiceType_GetSecurityGroup = 15910;

        /// <remarks />
        public const uint PubSubKeyServiceType_SecurityGroups_AddSecurityGroup = 15914;

        /// <remarks />
        public const uint PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup = 15917;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup = 15454;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup = 15457;

        /// <remarks />
        public const uint SecurityGroupFolderType_AddSecurityGroup = 15461;

        /// <remarks />
        public const uint SecurityGroupFolderType_RemoveSecurityGroup = 15464;

        /// <remarks />
        public const uint PublishSubscribeType_SecurityGroups_AddSecurityGroup = 15435;

        /// <remarks />
        public const uint PublishSubscribeType_SecurityGroups_RemoveSecurityGroup = 15438;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Reset = 18679;

        /// <remarks />
        public const uint PublishSubscribeType_SetSecurityKeys = 17296;

        /// <remarks />
        public const uint PublishSubscribeType_AddConnection = 16598;

        /// <remarks />
        public const uint PublishSubscribeType_RemoveConnection = 14432;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Reset = 18727;

        /// <remarks />
        public const uint PublishSubscribe_GetSecurityKeys = 15215;

        /// <remarks />
        public const uint PublishSubscribe_GetSecurityGroup = 15440;

        /// <remarks />
        public const uint PublishSubscribe_SecurityGroups_AddSecurityGroup = 15444;

        /// <remarks />
        public const uint PublishSubscribe_SecurityGroups_RemoveSecurityGroup = 15447;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Reset = 16076;

        /// <remarks />
        public const uint PublishSubscribe_AddConnection = 17366;

        /// <remarks />
        public const uint PublishSubscribe_RemoveConnection = 17369;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Reset = 17421;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Reset = 18883;

        /// <remarks />
        public const uint PublishedDataSetType_ExtensionFields_AddExtensionField = 15482;

        /// <remarks />
        public const uint PublishedDataSetType_ExtensionFields_RemoveExtensionField = 15485;

        /// <remarks />
        public const uint ExtensionFieldsType_AddExtensionField = 15491;

        /// <remarks />
        public const uint ExtensionFieldsType_RemoveExtensionField = 15494;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Reset = 18942;

        /// <remarks />
        public const uint PublishedDataItemsType_ExtensionFields_AddExtensionField = 15504;

        /// <remarks />
        public const uint PublishedDataItemsType_ExtensionFields_RemoveExtensionField = 15507;

        /// <remarks />
        public const uint PublishedDataItemsType_AddVariables = 14555;

        /// <remarks />
        public const uint PublishedDataItemsType_RemoveVariables = 14558;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Reset = 19001;

        /// <remarks />
        public const uint PublishedEventsType_ExtensionFields_AddExtensionField = 15512;

        /// <remarks />
        public const uint PublishedEventsType_ExtensionFields_RemoveExtensionField = 15515;

        /// <remarks />
        public const uint PublishedEventsType_ModifyFieldSelection = 15052;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems = 14479;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents = 14482;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItemsTemplate = 16842;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEventsTemplate = 16881;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet = 14485;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddDataSetFolder = 16884;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_RemoveDataSetFolder = 16923;

        /// <remarks />
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField = 15474;

        /// <remarks />
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField = 15477;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedDataItems = 14493;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedEvents = 14496;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedDataItemsTemplate = 16935;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedEventsTemplate = 16960;

        /// <remarks />
        public const uint DataSetFolderType_RemovePublishedDataSet = 14499;

        /// <remarks />
        public const uint DataSetFolderType_AddDataSetFolder = 16994;

        /// <remarks />
        public const uint DataSetFolderType_RemoveDataSetFolder = 16997;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Reset = 19119;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Reset = 19188;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Reset = 19253;

        /// <remarks />
        public const uint PubSubConnectionType_AddWriterGroup = 17427;

        /// <remarks />
        public const uint PubSubConnectionType_AddReaderGroup = 17465;

        /// <remarks />
        public const uint PubSubConnectionType_RemoveGroup = 14225;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Reset = 17765;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Reset = 17824;

        /// <remarks />
        public const uint WriterGroupType_AddDataSetWriter = 17969;

        /// <remarks />
        public const uint WriterGroupType_RemoveDataSetWriter = 17992;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Reset = 18104;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Reset = 21027;

        /// <remarks />
        public const uint ReaderGroupType_AddDataSetReader = 21082;

        /// <remarks />
        public const uint ReaderGroupType_RemoveDataSetReader = 21085;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Reset = 19562;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Reset = 19621;

        /// <remarks />
        public const uint DataSetReaderType_CreateTargetVariables = 17386;

        /// <remarks />
        public const uint DataSetReaderType_CreateDataSetMirror = 17389;

        /// <remarks />
        public const uint TargetVariablesType_AddTargetVariables = 15115;

        /// <remarks />
        public const uint TargetVariablesType_RemoveTargetVariables = 15118;

        /// <remarks />
        public const uint PubSubStatusType_Enable = 14645;

        /// <remarks />
        public const uint PubSubStatusType_Disable = 14646;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Reset = 19689;

        /// <remarks />
        public const uint AliasNameCategoryType_SubAliasNameCategories_Placeholder_FindAlias = 23459;

        /// <remarks />
        public const uint AliasNameCategoryType_FindAlias = 23462;

        /// <remarks />
        public const uint Aliases_SubAliasNameCategories_Placeholder_FindAlias = 23473;

        /// <remarks />
        public const uint Aliases_FindAlias = 23476;

        /// <remarks />
        public const uint TagVariables_SubAliasNameCategories_Placeholder_FindAlias = 23482;

        /// <remarks />
        public const uint TagVariables_FindAlias = 23485;

        /// <remarks />
        public const uint Topics_SubAliasNameCategories_Placeholder_FindAlias = 23491;

        /// <remarks />
        public const uint Topics_FindAlias = 23494;
    }
    #endregion

    #region Object Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Objects
    {
        /// <remarks />
        public const uint DefaultBinary = 3062;

        /// <remarks />
        public const uint DefaultXml = 3063;

        /// <remarks />
        public const uint ModellingRule_Mandatory = 78;

        /// <remarks />
        public const uint ModellingRule_Optional = 80;

        /// <remarks />
        public const uint ModellingRule_ExposesItsArray = 83;

        /// <remarks />
        public const uint ModellingRule_OptionalPlaceholder = 11508;

        /// <remarks />
        public const uint ModellingRule_MandatoryPlaceholder = 11510;

        /// <remarks />
        public const uint RootFolder = 84;

        /// <remarks />
        public const uint ObjectsFolder = 85;

        /// <remarks />
        public const uint TypesFolder = 86;

        /// <remarks />
        public const uint ViewsFolder = 87;

        /// <remarks />
        public const uint ObjectTypesFolder = 88;

        /// <remarks />
        public const uint VariableTypesFolder = 89;

        /// <remarks />
        public const uint DataTypesFolder = 90;

        /// <remarks />
        public const uint ReferenceTypesFolder = 91;

        /// <remarks />
        public const uint XmlSchema_TypeSystem = 92;

        /// <remarks />
        public const uint OPCBinarySchema_TypeSystem = 93;

        /// <remarks />
        public const uint OPCUANamespaceMetadata = 15957;

        /// <remarks />
        public const uint ServerType_ServerCapabilities = 2009;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_ModellingRules = 3093;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_AggregateFunctions = 3094;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics = 2010;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_SessionsDiagnosticsSummary = 3111;

        /// <remarks />
        public const uint ServerType_VendorServerInfo = 2011;

        /// <remarks />
        public const uint ServerType_ServerRedundancy = 2012;

        /// <remarks />
        public const uint ServerType_Namespaces = 11527;

        /// <remarks />
        public const uint ServerCapabilitiesType_OperationLimits = 11551;

        /// <remarks />
        public const uint ServerCapabilitiesType_ModellingRules = 2019;

        /// <remarks />
        public const uint ServerCapabilitiesType_AggregateFunctions = 2754;

        /// <remarks />
        public const uint ServerCapabilitiesType_RoleSet = 16295;

        /// <remarks />
        public const uint ServerDiagnosticsType_SessionsDiagnosticsSummary = 2744;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder = 12097;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile = 11624;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder = 11646;

        /// <remarks />
        public const uint EventTypesFolder = 3048;

        /// <remarks />
        public const uint Server = 2253;

        /// <remarks />
        public const uint Server_ServerCapabilities = 2268;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits = 11704;

        /// <remarks />
        public const uint Server_ServerCapabilities_ModellingRules = 2996;

        /// <remarks />
        public const uint Server_ServerCapabilities_AggregateFunctions = 2997;

        /// <remarks />
        public const uint Server_ServerCapabilities_RoleSet = 15606;

        /// <remarks />
        public const uint Server_ServerDiagnostics = 2274;

        /// <remarks />
        public const uint Server_ServerDiagnostics_SessionsDiagnosticsSummary = 3706;

        /// <remarks />
        public const uint Server_VendorServerInfo = 2295;

        /// <remarks />
        public const uint Server_ServerRedundancy = 2296;

        /// <remarks />
        public const uint Server_Namespaces = 11715;

        /// <remarks />
        public const uint HistoryServerCapabilities = 11192;

        /// <remarks />
        public const uint HistoryServerCapabilities_AggregateFunctions = 11201;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder = 13354;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder = 13366;

        /// <remarks />
        public const uint FileSystem = 16314;

        /// <remarks />
        public const uint TemporaryFileTransferType_TransferState_Placeholder = 15754;

        /// <remarks />
        public const uint FileTransferStateMachineType_Idle = 15815;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadPrepare = 15817;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadTransfer = 15819;

        /// <remarks />
        public const uint FileTransferStateMachineType_ApplyWrite = 15821;

        /// <remarks />
        public const uint FileTransferStateMachineType_Error = 15823;

        /// <remarks />
        public const uint FileTransferStateMachineType_IdleToReadPrepare = 15825;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadPrepareToReadTransfer = 15827;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadTransferToIdle = 15829;

        /// <remarks />
        public const uint FileTransferStateMachineType_IdleToApplyWrite = 15831;

        /// <remarks />
        public const uint FileTransferStateMachineType_ApplyWriteToIdle = 15833;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadPrepareToError = 15835;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadTransferToError = 15837;

        /// <remarks />
        public const uint FileTransferStateMachineType_ApplyWriteToError = 15839;

        /// <remarks />
        public const uint FileTransferStateMachineType_ErrorToIdle = 15841;

        /// <remarks />
        public const uint RoleSetType_RoleName_Placeholder = 15608;

        /// <remarks />
        public const uint WellKnownRole_Anonymous = 15644;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser = 15656;

        /// <remarks />
        public const uint WellKnownRole_Observer = 15668;

        /// <remarks />
        public const uint WellKnownRole_Operator = 15680;

        /// <remarks />
        public const uint WellKnownRole_Engineer = 16036;

        /// <remarks />
        public const uint WellKnownRole_Supervisor = 15692;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin = 15716;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin = 15704;

        /// <remarks />
        public const uint DictionaryEntryType_DictionaryEntryName_Placeholder = 17590;

        /// <remarks />
        public const uint DictionaryFolderType_DictionaryFolderName_Placeholder = 17592;

        /// <remarks />
        public const uint DictionaryFolderType_DictionaryEntryName_Placeholder = 17593;

        /// <remarks />
        public const uint Dictionaries = 17594;

        /// <remarks />
        public const uint InterfaceTypes = 17708;

        /// <remarks />
        public const uint OrderedListType_OrderedObject_Placeholder = 23519;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState = 9178;

        /// <remarks />
        public const uint AlarmConditionType_FirstInGroup = 16398;

        /// <remarks />
        public const uint AlarmConditionType_AlarmGroup_Placeholder = 16399;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder = 16406;

        /// <remarks />
        public const uint ShelvedStateMachineType_Unshelved = 2930;

        /// <remarks />
        public const uint ShelvedStateMachineType_TimedShelved = 2932;

        /// <remarks />
        public const uint ShelvedStateMachineType_OneShotShelved = 2933;

        /// <remarks />
        public const uint ShelvedStateMachineType_UnshelvedToTimedShelved = 2935;

        /// <remarks />
        public const uint ShelvedStateMachineType_UnshelvedToOneShotShelved = 2936;

        /// <remarks />
        public const uint ShelvedStateMachineType_TimedShelvedToUnshelved = 2940;

        /// <remarks />
        public const uint ShelvedStateMachineType_TimedShelvedToOneShotShelved = 2942;

        /// <remarks />
        public const uint ShelvedStateMachineType_OneShotShelvedToUnshelved = 2943;

        /// <remarks />
        public const uint ShelvedStateMachineType_OneShotShelvedToTimedShelved = 2945;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_HighHigh = 9329;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_High = 9331;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_Low = 9333;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_LowLow = 9335;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_LowLowToLow = 9337;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_LowToLowLow = 9338;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_HighHighToHigh = 9339;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_HighToHighHigh = 9340;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_LimitState = 9455;

        /// <remarks />
        public const uint ProgramStateMachineType_FinalResultData = 3850;

        /// <remarks />
        public const uint ProgramStateMachineType_Halted = 2406;

        /// <remarks />
        public const uint ProgramStateMachineType_Ready = 2400;

        /// <remarks />
        public const uint ProgramStateMachineType_Running = 2402;

        /// <remarks />
        public const uint ProgramStateMachineType_Suspended = 2404;

        /// <remarks />
        public const uint ProgramStateMachineType_HaltedToReady = 2408;

        /// <remarks />
        public const uint ProgramStateMachineType_ReadyToRunning = 2410;

        /// <remarks />
        public const uint ProgramStateMachineType_RunningToHalted = 2412;

        /// <remarks />
        public const uint ProgramStateMachineType_RunningToReady = 2414;

        /// <remarks />
        public const uint ProgramStateMachineType_RunningToSuspended = 2416;

        /// <remarks />
        public const uint ProgramStateMachineType_SuspendedToRunning = 2418;

        /// <remarks />
        public const uint ProgramStateMachineType_SuspendedToHalted = 2420;

        /// <remarks />
        public const uint ProgramStateMachineType_SuspendedToReady = 2422;

        /// <remarks />
        public const uint ProgramStateMachineType_ReadyToHalted = 2424;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_AggregateConfiguration = 3059;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_AggregateFunctions = 11876;

        /// <remarks />
        public const uint HAConfiguration = 11202;

        /// <remarks />
        public const uint HAConfiguration_AggregateConfiguration = 11203;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_AggregateFunctions = 11172;

        /// <remarks />
        public const uint CertificateGroupType_TrustList = 13599;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired = 19450;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate = 20143;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup = 13814;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList = 13815;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup = 13848;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList = 13849;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup = 13882;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList = 13883;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder = 13916;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList = 13917;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups = 13950;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup = 13951;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList = 13952;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList = 13986;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList = 14020;

        /// <remarks />
        public const uint ServerConfiguration = 12637;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups = 14053;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup = 14156;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList = 12642;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup = 14088;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList = 14089;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup = 14122;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList = 14123;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType_ServiceName_Placeholder = 17511;

        /// <remarks />
        public const uint KeyCredentialConfiguration = 18155;

        /// <remarks />
        public const uint AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder = 23557;

        /// <remarks />
        public const uint AuthorizationServices = 17732;

        /// <remarks />
        public const uint AggregateFunction_Interpolative = 2341;

        /// <remarks />
        public const uint AggregateFunction_Average = 2342;

        /// <remarks />
        public const uint AggregateFunction_TimeAverage = 2343;

        /// <remarks />
        public const uint AggregateFunction_TimeAverage2 = 11285;

        /// <remarks />
        public const uint AggregateFunction_Total = 2344;

        /// <remarks />
        public const uint AggregateFunction_Total2 = 11304;

        /// <remarks />
        public const uint AggregateFunction_Minimum = 2346;

        /// <remarks />
        public const uint AggregateFunction_Maximum = 2347;

        /// <remarks />
        public const uint AggregateFunction_MinimumActualTime = 2348;

        /// <remarks />
        public const uint AggregateFunction_MaximumActualTime = 2349;

        /// <remarks />
        public const uint AggregateFunction_Range = 2350;

        /// <remarks />
        public const uint AggregateFunction_Minimum2 = 11286;

        /// <remarks />
        public const uint AggregateFunction_Maximum2 = 11287;

        /// <remarks />
        public const uint AggregateFunction_MinimumActualTime2 = 11305;

        /// <remarks />
        public const uint AggregateFunction_MaximumActualTime2 = 11306;

        /// <remarks />
        public const uint AggregateFunction_Range2 = 11288;

        /// <remarks />
        public const uint AggregateFunction_AnnotationCount = 2351;

        /// <remarks />
        public const uint AggregateFunction_Count = 2352;

        /// <remarks />
        public const uint AggregateFunction_DurationInStateZero = 11307;

        /// <remarks />
        public const uint AggregateFunction_DurationInStateNonZero = 11308;

        /// <remarks />
        public const uint AggregateFunction_NumberOfTransitions = 2355;

        /// <remarks />
        public const uint AggregateFunction_Start = 2357;

        /// <remarks />
        public const uint AggregateFunction_End = 2358;

        /// <remarks />
        public const uint AggregateFunction_Delta = 2359;

        /// <remarks />
        public const uint AggregateFunction_StartBound = 11505;

        /// <remarks />
        public const uint AggregateFunction_EndBound = 11506;

        /// <remarks />
        public const uint AggregateFunction_DeltaBounds = 11507;

        /// <remarks />
        public const uint AggregateFunction_DurationGood = 2360;

        /// <remarks />
        public const uint AggregateFunction_DurationBad = 2361;

        /// <remarks />
        public const uint AggregateFunction_PercentGood = 2362;

        /// <remarks />
        public const uint AggregateFunction_PercentBad = 2363;

        /// <remarks />
        public const uint AggregateFunction_WorstQuality = 2364;

        /// <remarks />
        public const uint AggregateFunction_WorstQuality2 = 11292;

        /// <remarks />
        public const uint AggregateFunction_StandardDeviationSample = 11426;

        /// <remarks />
        public const uint AggregateFunction_StandardDeviationPopulation = 11427;

        /// <remarks />
        public const uint AggregateFunction_VarianceSample = 11428;

        /// <remarks />
        public const uint AggregateFunction_VariancePopulation = 11429;

        /// <remarks />
        public const uint PubSubKeyServiceType_SecurityGroups = 15913;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder = 15453;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupName_Placeholder = 15459;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder = 14417;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Address = 14423;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Status = 14419;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters = 18681;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_LiveValues = 18712;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets = 14434;

        /// <remarks />
        public const uint PublishSubscribeType_Status = 15844;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics = 18715;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters = 18729;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_LiveValues = 18760;

        /// <remarks />
        public const uint PublishSubscribe = 14443;

        /// <remarks />
        public const uint PublishSubscribe_SecurityGroups = 15443;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Address = 15851;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Status = 15865;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters = 16102;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_LiveValues = 17352;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets = 17371;

        /// <remarks />
        public const uint PublishSubscribe_Status = 17405;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics = 17409;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters = 17423;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_LiveValues = 17457;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder = 15222;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Status = 15223;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters = 18885;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues = 18916;

        /// <remarks />
        public const uint PublishedDataSetType_ExtensionFields = 15481;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Status = 15231;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters = 18944;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues = 18975;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Status = 15239;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters = 19003;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues = 19034;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder = 14478;

        /// <remarks />
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder = 14487;

        /// <remarks />
        public const uint PubSubConnectionType_Address = 14221;

        /// <remarks />
        public const uint PubSubConnectionType_TransportSettings = 17203;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder = 17310;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Status = 17314;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters = 19121;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues = 19152;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder = 17325;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Status = 17329;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters = 19190;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues = 19221;

        /// <remarks />
        public const uint PubSubConnectionType_Status = 14600;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics = 19241;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters = 19255;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_LiveValues = 19286;

        /// <remarks />
        public const uint PubSubGroupType_Status = 15265;

        /// <remarks />
        public const uint WriterGroupType_TransportSettings = 17741;

        /// <remarks />
        public const uint WriterGroupType_MessageSettings = 17742;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder = 17743;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Status = 17749;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters = 17767;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues = 17798;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics = 17812;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters = 17826;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_LiveValues = 17858;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder = 18076;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Status = 18088;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters = 18106;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues = 18137;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_SubscribedDataSet = 21006;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics = 21015;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters = 21029;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_LiveValues = 21060;

        /// <remarks />
        public const uint ReaderGroupType_TransportSettings = 21080;

        /// <remarks />
        public const uint ReaderGroupType_MessageSettings = 21081;

        /// <remarks />
        public const uint DataSetWriterType_TransportSettings = 15303;

        /// <remarks />
        public const uint DataSetWriterType_MessageSettings = 21095;

        /// <remarks />
        public const uint DataSetWriterType_Status = 15299;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics = 19550;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters = 19564;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_LiveValues = 19595;

        /// <remarks />
        public const uint DataSetReaderType_TransportSettings = 15311;

        /// <remarks />
        public const uint DataSetReaderType_MessageSettings = 21103;

        /// <remarks />
        public const uint DataSetReaderType_Status = 15307;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics = 19609;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters = 19623;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_LiveValues = 19654;

        /// <remarks />
        public const uint DataSetReaderType_SubscribedDataSet = 15316;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters = 19691;

        /// <remarks />
        public const uint PubSubDiagnosticsType_LiveValues = 19722;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_LiveValues = 19777;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_LiveValues = 19831;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters = 19848;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_LiveValues = 19879;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters = 19917;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_LiveValues = 19948;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters = 19982;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_LiveValues = 20013;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters = 20041;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues = 20072;

        /// <remarks />
        public const uint DatagramConnectionTransportType_DiscoveryAddress = 15072;

        /// <remarks />
        public const uint AliasNameCategoryType_Alias_Placeholder = 23457;

        /// <remarks />
        public const uint AliasNameCategoryType_SubAliasNameCategories_Placeholder = 23458;

        /// <remarks />
        public const uint Aliases = 23470;

        /// <remarks />
        public const uint TagVariables = 23479;

        /// <remarks />
        public const uint Topics = 23488;

        /// <remarks />
        public const uint Resources = 24226;

        /// <remarks />
        public const uint Communication = 24227;

        /// <remarks />
        public const uint MappingTables = 24228;

        /// <remarks />
        public const uint NetworkInterfaces = 24229;

        /// <remarks />
        public const uint Streams = 24230;

        /// <remarks />
        public const uint TalkerStreams = 24231;

        /// <remarks />
        public const uint ListenerStreams = 24232;

        /// <remarks />
        public const uint Union_Encoding_DefaultBinary = 12766;

        /// <remarks />
        public const uint KeyValuePair_Encoding_DefaultBinary = 14846;

        /// <remarks />
        public const uint AdditionalParametersType_Encoding_DefaultBinary = 17537;

        /// <remarks />
        public const uint EphemeralKeyType_Encoding_DefaultBinary = 17549;

        /// <remarks />
        public const uint EndpointType_Encoding_DefaultBinary = 15671;

        /// <remarks />
        public const uint RationalNumber_Encoding_DefaultBinary = 18815;

        /// <remarks />
        public const uint Vector_Encoding_DefaultBinary = 18816;

        /// <remarks />
        public const uint ThreeDVector_Encoding_DefaultBinary = 18817;

        /// <remarks />
        public const uint CartesianCoordinates_Encoding_DefaultBinary = 18818;

        /// <remarks />
        public const uint ThreeDCartesianCoordinates_Encoding_DefaultBinary = 18819;

        /// <remarks />
        public const uint Orientation_Encoding_DefaultBinary = 18820;

        /// <remarks />
        public const uint ThreeDOrientation_Encoding_DefaultBinary = 18821;

        /// <remarks />
        public const uint Frame_Encoding_DefaultBinary = 18822;

        /// <remarks />
        public const uint ThreeDFrame_Encoding_DefaultBinary = 18823;

        /// <remarks />
        public const uint IdentityMappingRuleType_Encoding_DefaultBinary = 15736;

        /// <remarks />
        public const uint CurrencyUnitType_Encoding_DefaultBinary = 23507;

        /// <remarks />
        public const uint TrustListDataType_Encoding_DefaultBinary = 12680;

        /// <remarks />
        public const uint DecimalDataType_Encoding_DefaultBinary = 17863;

        /// <remarks />
        public const uint DataTypeSchemaHeader_Encoding_DefaultBinary = 15676;

        /// <remarks />
        public const uint DataTypeDescription_Encoding_DefaultBinary = 125;

        /// <remarks />
        public const uint StructureDescription_Encoding_DefaultBinary = 126;

        /// <remarks />
        public const uint EnumDescription_Encoding_DefaultBinary = 127;

        /// <remarks />
        public const uint SimpleTypeDescription_Encoding_DefaultBinary = 15421;

        /// <remarks />
        public const uint UABinaryFileDataType_Encoding_DefaultBinary = 15422;

        /// <remarks />
        public const uint DataSetMetaDataType_Encoding_DefaultBinary = 124;

        /// <remarks />
        public const uint FieldMetaData_Encoding_DefaultBinary = 14839;

        /// <remarks />
        public const uint ConfigurationVersionDataType_Encoding_DefaultBinary = 14847;

        /// <remarks />
        public const uint PublishedDataSetDataType_Encoding_DefaultBinary = 15677;

        /// <remarks />
        public const uint PublishedDataSetSourceDataType_Encoding_DefaultBinary = 15678;

        /// <remarks />
        public const uint PublishedVariableDataType_Encoding_DefaultBinary = 14323;

        /// <remarks />
        public const uint PublishedDataItemsDataType_Encoding_DefaultBinary = 15679;

        /// <remarks />
        public const uint PublishedEventsDataType_Encoding_DefaultBinary = 15681;

        /// <remarks />
        public const uint DataSetWriterDataType_Encoding_DefaultBinary = 15682;

        /// <remarks />
        public const uint DataSetWriterTransportDataType_Encoding_DefaultBinary = 15683;

        /// <remarks />
        public const uint DataSetWriterMessageDataType_Encoding_DefaultBinary = 15688;

        /// <remarks />
        public const uint PubSubGroupDataType_Encoding_DefaultBinary = 15689;

        /// <remarks />
        public const uint WriterGroupDataType_Encoding_DefaultBinary = 21150;

        /// <remarks />
        public const uint WriterGroupTransportDataType_Encoding_DefaultBinary = 15691;

        /// <remarks />
        public const uint WriterGroupMessageDataType_Encoding_DefaultBinary = 15693;

        /// <remarks />
        public const uint PubSubConnectionDataType_Encoding_DefaultBinary = 15694;

        /// <remarks />
        public const uint ConnectionTransportDataType_Encoding_DefaultBinary = 15695;

        /// <remarks />
        public const uint NetworkAddressDataType_Encoding_DefaultBinary = 21151;

        /// <remarks />
        public const uint NetworkAddressUrlDataType_Encoding_DefaultBinary = 21152;

        /// <remarks />
        public const uint ReaderGroupDataType_Encoding_DefaultBinary = 21153;

        /// <remarks />
        public const uint ReaderGroupTransportDataType_Encoding_DefaultBinary = 15701;

        /// <remarks />
        public const uint ReaderGroupMessageDataType_Encoding_DefaultBinary = 15702;

        /// <remarks />
        public const uint DataSetReaderDataType_Encoding_DefaultBinary = 15703;

        /// <remarks />
        public const uint DataSetReaderTransportDataType_Encoding_DefaultBinary = 15705;

        /// <remarks />
        public const uint DataSetReaderMessageDataType_Encoding_DefaultBinary = 15706;

        /// <remarks />
        public const uint SubscribedDataSetDataType_Encoding_DefaultBinary = 15707;

        /// <remarks />
        public const uint TargetVariablesDataType_Encoding_DefaultBinary = 15712;

        /// <remarks />
        public const uint FieldTargetDataType_Encoding_DefaultBinary = 14848;

        /// <remarks />
        public const uint SubscribedDataSetMirrorDataType_Encoding_DefaultBinary = 15713;

        /// <remarks />
        public const uint PubSubConfigurationDataType_Encoding_DefaultBinary = 21154;

        /// <remarks />
        public const uint UadpWriterGroupMessageDataType_Encoding_DefaultBinary = 15715;

        /// <remarks />
        public const uint UadpDataSetWriterMessageDataType_Encoding_DefaultBinary = 15717;

        /// <remarks />
        public const uint UadpDataSetReaderMessageDataType_Encoding_DefaultBinary = 15718;

        /// <remarks />
        public const uint JsonWriterGroupMessageDataType_Encoding_DefaultBinary = 15719;

        /// <remarks />
        public const uint JsonDataSetWriterMessageDataType_Encoding_DefaultBinary = 15724;

        /// <remarks />
        public const uint JsonDataSetReaderMessageDataType_Encoding_DefaultBinary = 15725;

        /// <remarks />
        public const uint DatagramConnectionTransportDataType_Encoding_DefaultBinary = 17468;

        /// <remarks />
        public const uint DatagramWriterGroupTransportDataType_Encoding_DefaultBinary = 21155;

        /// <remarks />
        public const uint BrokerConnectionTransportDataType_Encoding_DefaultBinary = 15479;

        /// <remarks />
        public const uint BrokerWriterGroupTransportDataType_Encoding_DefaultBinary = 15727;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportDataType_Encoding_DefaultBinary = 15729;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportDataType_Encoding_DefaultBinary = 15733;

        /// <remarks />
        public const uint AliasNameDataType_Encoding_DefaultBinary = 23499;

        /// <remarks />
        public const uint UnsignedRationalNumber_Encoding_DefaultBinary = 24110;

        /// <remarks />
        public const uint RolePermissionType_Encoding_DefaultBinary = 128;

        /// <remarks />
        public const uint DataTypeDefinition_Encoding_DefaultBinary = 121;

        /// <remarks />
        public const uint StructureField_Encoding_DefaultBinary = 14844;

        /// <remarks />
        public const uint StructureDefinition_Encoding_DefaultBinary = 122;

        /// <remarks />
        public const uint EnumDefinition_Encoding_DefaultBinary = 123;

        /// <remarks />
        public const uint Node_Encoding_DefaultBinary = 260;

        /// <remarks />
        public const uint InstanceNode_Encoding_DefaultBinary = 11889;

        /// <remarks />
        public const uint TypeNode_Encoding_DefaultBinary = 11890;

        /// <remarks />
        public const uint ObjectNode_Encoding_DefaultBinary = 263;

        /// <remarks />
        public const uint ObjectTypeNode_Encoding_DefaultBinary = 266;

        /// <remarks />
        public const uint VariableNode_Encoding_DefaultBinary = 269;

        /// <remarks />
        public const uint VariableTypeNode_Encoding_DefaultBinary = 272;

        /// <remarks />
        public const uint ReferenceTypeNode_Encoding_DefaultBinary = 275;

        /// <remarks />
        public const uint MethodNode_Encoding_DefaultBinary = 278;

        /// <remarks />
        public const uint ViewNode_Encoding_DefaultBinary = 281;

        /// <remarks />
        public const uint DataTypeNode_Encoding_DefaultBinary = 284;

        /// <remarks />
        public const uint ReferenceNode_Encoding_DefaultBinary = 287;

        /// <remarks />
        public const uint Argument_Encoding_DefaultBinary = 298;

        /// <remarks />
        public const uint EnumValueType_Encoding_DefaultBinary = 8251;

        /// <remarks />
        public const uint EnumField_Encoding_DefaultBinary = 14845;

        /// <remarks />
        public const uint OptionSet_Encoding_DefaultBinary = 12765;

        /// <remarks />
        public const uint TimeZoneDataType_Encoding_DefaultBinary = 8917;

        /// <remarks />
        public const uint ApplicationDescription_Encoding_DefaultBinary = 310;

        /// <remarks />
        public const uint RequestHeader_Encoding_DefaultBinary = 391;

        /// <remarks />
        public const uint ResponseHeader_Encoding_DefaultBinary = 394;

        /// <remarks />
        public const uint ServiceFault_Encoding_DefaultBinary = 397;

        /// <remarks />
        public const uint SessionlessInvokeRequestType_Encoding_DefaultBinary = 15903;

        /// <remarks />
        public const uint SessionlessInvokeResponseType_Encoding_DefaultBinary = 21001;

        /// <remarks />
        public const uint FindServersRequest_Encoding_DefaultBinary = 422;

        /// <remarks />
        public const uint FindServersResponse_Encoding_DefaultBinary = 425;

        /// <remarks />
        public const uint ServerOnNetwork_Encoding_DefaultBinary = 12207;

        /// <remarks />
        public const uint FindServersOnNetworkRequest_Encoding_DefaultBinary = 12208;

        /// <remarks />
        public const uint FindServersOnNetworkResponse_Encoding_DefaultBinary = 12209;

        /// <remarks />
        public const uint UserTokenPolicy_Encoding_DefaultBinary = 306;

        /// <remarks />
        public const uint EndpointDescription_Encoding_DefaultBinary = 314;

        /// <remarks />
        public const uint GetEndpointsRequest_Encoding_DefaultBinary = 428;

        /// <remarks />
        public const uint GetEndpointsResponse_Encoding_DefaultBinary = 431;

        /// <remarks />
        public const uint RegisteredServer_Encoding_DefaultBinary = 434;

        /// <remarks />
        public const uint RegisterServerRequest_Encoding_DefaultBinary = 437;

        /// <remarks />
        public const uint RegisterServerResponse_Encoding_DefaultBinary = 440;

        /// <remarks />
        public const uint DiscoveryConfiguration_Encoding_DefaultBinary = 12900;

        /// <remarks />
        public const uint MdnsDiscoveryConfiguration_Encoding_DefaultBinary = 12901;

        /// <remarks />
        public const uint RegisterServer2Request_Encoding_DefaultBinary = 12211;

        /// <remarks />
        public const uint RegisterServer2Response_Encoding_DefaultBinary = 12212;

        /// <remarks />
        public const uint ChannelSecurityToken_Encoding_DefaultBinary = 443;

        /// <remarks />
        public const uint OpenSecureChannelRequest_Encoding_DefaultBinary = 446;

        /// <remarks />
        public const uint OpenSecureChannelResponse_Encoding_DefaultBinary = 449;

        /// <remarks />
        public const uint CloseSecureChannelRequest_Encoding_DefaultBinary = 452;

        /// <remarks />
        public const uint CloseSecureChannelResponse_Encoding_DefaultBinary = 455;

        /// <remarks />
        public const uint SignedSoftwareCertificate_Encoding_DefaultBinary = 346;

        /// <remarks />
        public const uint SignatureData_Encoding_DefaultBinary = 458;

        /// <remarks />
        public const uint CreateSessionRequest_Encoding_DefaultBinary = 461;

        /// <remarks />
        public const uint CreateSessionResponse_Encoding_DefaultBinary = 464;

        /// <remarks />
        public const uint UserIdentityToken_Encoding_DefaultBinary = 318;

        /// <remarks />
        public const uint AnonymousIdentityToken_Encoding_DefaultBinary = 321;

        /// <remarks />
        public const uint UserNameIdentityToken_Encoding_DefaultBinary = 324;

        /// <remarks />
        public const uint X509IdentityToken_Encoding_DefaultBinary = 327;

        /// <remarks />
        public const uint IssuedIdentityToken_Encoding_DefaultBinary = 940;

        /// <remarks />
        public const uint ActivateSessionRequest_Encoding_DefaultBinary = 467;

        /// <remarks />
        public const uint ActivateSessionResponse_Encoding_DefaultBinary = 470;

        /// <remarks />
        public const uint CloseSessionRequest_Encoding_DefaultBinary = 473;

        /// <remarks />
        public const uint CloseSessionResponse_Encoding_DefaultBinary = 476;

        /// <remarks />
        public const uint CancelRequest_Encoding_DefaultBinary = 479;

        /// <remarks />
        public const uint CancelResponse_Encoding_DefaultBinary = 482;

        /// <remarks />
        public const uint NodeAttributes_Encoding_DefaultBinary = 351;

        /// <remarks />
        public const uint ObjectAttributes_Encoding_DefaultBinary = 354;

        /// <remarks />
        public const uint VariableAttributes_Encoding_DefaultBinary = 357;

        /// <remarks />
        public const uint MethodAttributes_Encoding_DefaultBinary = 360;

        /// <remarks />
        public const uint ObjectTypeAttributes_Encoding_DefaultBinary = 363;

        /// <remarks />
        public const uint VariableTypeAttributes_Encoding_DefaultBinary = 366;

        /// <remarks />
        public const uint ReferenceTypeAttributes_Encoding_DefaultBinary = 369;

        /// <remarks />
        public const uint DataTypeAttributes_Encoding_DefaultBinary = 372;

        /// <remarks />
        public const uint ViewAttributes_Encoding_DefaultBinary = 375;

        /// <remarks />
        public const uint GenericAttributeValue_Encoding_DefaultBinary = 17610;

        /// <remarks />
        public const uint GenericAttributes_Encoding_DefaultBinary = 17611;

        /// <remarks />
        public const uint AddNodesItem_Encoding_DefaultBinary = 378;

        /// <remarks />
        public const uint AddNodesResult_Encoding_DefaultBinary = 485;

        /// <remarks />
        public const uint AddNodesRequest_Encoding_DefaultBinary = 488;

        /// <remarks />
        public const uint AddNodesResponse_Encoding_DefaultBinary = 491;

        /// <remarks />
        public const uint AddReferencesItem_Encoding_DefaultBinary = 381;

        /// <remarks />
        public const uint AddReferencesRequest_Encoding_DefaultBinary = 494;

        /// <remarks />
        public const uint AddReferencesResponse_Encoding_DefaultBinary = 497;

        /// <remarks />
        public const uint DeleteNodesItem_Encoding_DefaultBinary = 384;

        /// <remarks />
        public const uint DeleteNodesRequest_Encoding_DefaultBinary = 500;

        /// <remarks />
        public const uint DeleteNodesResponse_Encoding_DefaultBinary = 503;

        /// <remarks />
        public const uint DeleteReferencesItem_Encoding_DefaultBinary = 387;

        /// <remarks />
        public const uint DeleteReferencesRequest_Encoding_DefaultBinary = 506;

        /// <remarks />
        public const uint DeleteReferencesResponse_Encoding_DefaultBinary = 509;

        /// <remarks />
        public const uint ViewDescription_Encoding_DefaultBinary = 513;

        /// <remarks />
        public const uint BrowseDescription_Encoding_DefaultBinary = 516;

        /// <remarks />
        public const uint ReferenceDescription_Encoding_DefaultBinary = 520;

        /// <remarks />
        public const uint BrowseResult_Encoding_DefaultBinary = 524;

        /// <remarks />
        public const uint BrowseRequest_Encoding_DefaultBinary = 527;

        /// <remarks />
        public const uint BrowseResponse_Encoding_DefaultBinary = 530;

        /// <remarks />
        public const uint BrowseNextRequest_Encoding_DefaultBinary = 533;

        /// <remarks />
        public const uint BrowseNextResponse_Encoding_DefaultBinary = 536;

        /// <remarks />
        public const uint RelativePathElement_Encoding_DefaultBinary = 539;

        /// <remarks />
        public const uint RelativePath_Encoding_DefaultBinary = 542;

        /// <remarks />
        public const uint BrowsePath_Encoding_DefaultBinary = 545;

        /// <remarks />
        public const uint BrowsePathTarget_Encoding_DefaultBinary = 548;

        /// <remarks />
        public const uint BrowsePathResult_Encoding_DefaultBinary = 551;

        /// <remarks />
        public const uint TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary = 554;

        /// <remarks />
        public const uint TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary = 557;

        /// <remarks />
        public const uint RegisterNodesRequest_Encoding_DefaultBinary = 560;

        /// <remarks />
        public const uint RegisterNodesResponse_Encoding_DefaultBinary = 563;

        /// <remarks />
        public const uint UnregisterNodesRequest_Encoding_DefaultBinary = 566;

        /// <remarks />
        public const uint UnregisterNodesResponse_Encoding_DefaultBinary = 569;

        /// <remarks />
        public const uint EndpointConfiguration_Encoding_DefaultBinary = 333;

        /// <remarks />
        public const uint QueryDataDescription_Encoding_DefaultBinary = 572;

        /// <remarks />
        public const uint NodeTypeDescription_Encoding_DefaultBinary = 575;

        /// <remarks />
        public const uint QueryDataSet_Encoding_DefaultBinary = 579;

        /// <remarks />
        public const uint NodeReference_Encoding_DefaultBinary = 582;

        /// <remarks />
        public const uint ContentFilterElement_Encoding_DefaultBinary = 585;

        /// <remarks />
        public const uint ContentFilter_Encoding_DefaultBinary = 588;

        /// <remarks />
        public const uint FilterOperand_Encoding_DefaultBinary = 591;

        /// <remarks />
        public const uint ElementOperand_Encoding_DefaultBinary = 594;

        /// <remarks />
        public const uint LiteralOperand_Encoding_DefaultBinary = 597;

        /// <remarks />
        public const uint AttributeOperand_Encoding_DefaultBinary = 600;

        /// <remarks />
        public const uint SimpleAttributeOperand_Encoding_DefaultBinary = 603;

        /// <remarks />
        public const uint ContentFilterElementResult_Encoding_DefaultBinary = 606;

        /// <remarks />
        public const uint ContentFilterResult_Encoding_DefaultBinary = 609;

        /// <remarks />
        public const uint ParsingResult_Encoding_DefaultBinary = 612;

        /// <remarks />
        public const uint QueryFirstRequest_Encoding_DefaultBinary = 615;

        /// <remarks />
        public const uint QueryFirstResponse_Encoding_DefaultBinary = 618;

        /// <remarks />
        public const uint QueryNextRequest_Encoding_DefaultBinary = 621;

        /// <remarks />
        public const uint QueryNextResponse_Encoding_DefaultBinary = 624;

        /// <remarks />
        public const uint ReadValueId_Encoding_DefaultBinary = 628;

        /// <remarks />
        public const uint ReadRequest_Encoding_DefaultBinary = 631;

        /// <remarks />
        public const uint ReadResponse_Encoding_DefaultBinary = 634;

        /// <remarks />
        public const uint HistoryReadValueId_Encoding_DefaultBinary = 637;

        /// <remarks />
        public const uint HistoryReadResult_Encoding_DefaultBinary = 640;

        /// <remarks />
        public const uint HistoryReadDetails_Encoding_DefaultBinary = 643;

        /// <remarks />
        public const uint ReadEventDetails_Encoding_DefaultBinary = 646;

        /// <remarks />
        public const uint ReadRawModifiedDetails_Encoding_DefaultBinary = 649;

        /// <remarks />
        public const uint ReadProcessedDetails_Encoding_DefaultBinary = 652;

        /// <remarks />
        public const uint ReadAtTimeDetails_Encoding_DefaultBinary = 655;

        /// <remarks />
        public const uint ReadAnnotationDataDetails_Encoding_DefaultBinary = 23500;

        /// <remarks />
        public const uint HistoryData_Encoding_DefaultBinary = 658;

        /// <remarks />
        public const uint ModificationInfo_Encoding_DefaultBinary = 11226;

        /// <remarks />
        public const uint HistoryModifiedData_Encoding_DefaultBinary = 11227;

        /// <remarks />
        public const uint HistoryEvent_Encoding_DefaultBinary = 661;

        /// <remarks />
        public const uint HistoryReadRequest_Encoding_DefaultBinary = 664;

        /// <remarks />
        public const uint HistoryReadResponse_Encoding_DefaultBinary = 667;

        /// <remarks />
        public const uint WriteValue_Encoding_DefaultBinary = 670;

        /// <remarks />
        public const uint WriteRequest_Encoding_DefaultBinary = 673;

        /// <remarks />
        public const uint WriteResponse_Encoding_DefaultBinary = 676;

        /// <remarks />
        public const uint HistoryUpdateDetails_Encoding_DefaultBinary = 679;

        /// <remarks />
        public const uint UpdateDataDetails_Encoding_DefaultBinary = 682;

        /// <remarks />
        public const uint UpdateStructureDataDetails_Encoding_DefaultBinary = 11300;

        /// <remarks />
        public const uint UpdateEventDetails_Encoding_DefaultBinary = 685;

        /// <remarks />
        public const uint DeleteRawModifiedDetails_Encoding_DefaultBinary = 688;

        /// <remarks />
        public const uint DeleteAtTimeDetails_Encoding_DefaultBinary = 691;

        /// <remarks />
        public const uint DeleteEventDetails_Encoding_DefaultBinary = 694;

        /// <remarks />
        public const uint HistoryUpdateResult_Encoding_DefaultBinary = 697;

        /// <remarks />
        public const uint HistoryUpdateRequest_Encoding_DefaultBinary = 700;

        /// <remarks />
        public const uint HistoryUpdateResponse_Encoding_DefaultBinary = 703;

        /// <remarks />
        public const uint CallMethodRequest_Encoding_DefaultBinary = 706;

        /// <remarks />
        public const uint CallMethodResult_Encoding_DefaultBinary = 709;

        /// <remarks />
        public const uint CallRequest_Encoding_DefaultBinary = 712;

        /// <remarks />
        public const uint CallResponse_Encoding_DefaultBinary = 715;

        /// <remarks />
        public const uint MonitoringFilter_Encoding_DefaultBinary = 721;

        /// <remarks />
        public const uint DataChangeFilter_Encoding_DefaultBinary = 724;

        /// <remarks />
        public const uint EventFilter_Encoding_DefaultBinary = 727;

        /// <remarks />
        public const uint AggregateConfiguration_Encoding_DefaultBinary = 950;

        /// <remarks />
        public const uint AggregateFilter_Encoding_DefaultBinary = 730;

        /// <remarks />
        public const uint MonitoringFilterResult_Encoding_DefaultBinary = 733;

        /// <remarks />
        public const uint EventFilterResult_Encoding_DefaultBinary = 736;

        /// <remarks />
        public const uint AggregateFilterResult_Encoding_DefaultBinary = 739;

        /// <remarks />
        public const uint MonitoringParameters_Encoding_DefaultBinary = 742;

        /// <remarks />
        public const uint MonitoredItemCreateRequest_Encoding_DefaultBinary = 745;

        /// <remarks />
        public const uint MonitoredItemCreateResult_Encoding_DefaultBinary = 748;

        /// <remarks />
        public const uint CreateMonitoredItemsRequest_Encoding_DefaultBinary = 751;

        /// <remarks />
        public const uint CreateMonitoredItemsResponse_Encoding_DefaultBinary = 754;

        /// <remarks />
        public const uint MonitoredItemModifyRequest_Encoding_DefaultBinary = 757;

        /// <remarks />
        public const uint MonitoredItemModifyResult_Encoding_DefaultBinary = 760;

        /// <remarks />
        public const uint ModifyMonitoredItemsRequest_Encoding_DefaultBinary = 763;

        /// <remarks />
        public const uint ModifyMonitoredItemsResponse_Encoding_DefaultBinary = 766;

        /// <remarks />
        public const uint SetMonitoringModeRequest_Encoding_DefaultBinary = 769;

        /// <remarks />
        public const uint SetMonitoringModeResponse_Encoding_DefaultBinary = 772;

        /// <remarks />
        public const uint SetTriggeringRequest_Encoding_DefaultBinary = 775;

        /// <remarks />
        public const uint SetTriggeringResponse_Encoding_DefaultBinary = 778;

        /// <remarks />
        public const uint DeleteMonitoredItemsRequest_Encoding_DefaultBinary = 781;

        /// <remarks />
        public const uint DeleteMonitoredItemsResponse_Encoding_DefaultBinary = 784;

        /// <remarks />
        public const uint CreateSubscriptionRequest_Encoding_DefaultBinary = 787;

        /// <remarks />
        public const uint CreateSubscriptionResponse_Encoding_DefaultBinary = 790;

        /// <remarks />
        public const uint ModifySubscriptionRequest_Encoding_DefaultBinary = 793;

        /// <remarks />
        public const uint ModifySubscriptionResponse_Encoding_DefaultBinary = 796;

        /// <remarks />
        public const uint SetPublishingModeRequest_Encoding_DefaultBinary = 799;

        /// <remarks />
        public const uint SetPublishingModeResponse_Encoding_DefaultBinary = 802;

        /// <remarks />
        public const uint NotificationMessage_Encoding_DefaultBinary = 805;

        /// <remarks />
        public const uint NotificationData_Encoding_DefaultBinary = 947;

        /// <remarks />
        public const uint DataChangeNotification_Encoding_DefaultBinary = 811;

        /// <remarks />
        public const uint MonitoredItemNotification_Encoding_DefaultBinary = 808;

        /// <remarks />
        public const uint EventNotificationList_Encoding_DefaultBinary = 916;

        /// <remarks />
        public const uint EventFieldList_Encoding_DefaultBinary = 919;

        /// <remarks />
        public const uint HistoryEventFieldList_Encoding_DefaultBinary = 922;

        /// <remarks />
        public const uint StatusChangeNotification_Encoding_DefaultBinary = 820;

        /// <remarks />
        public const uint SubscriptionAcknowledgement_Encoding_DefaultBinary = 823;

        /// <remarks />
        public const uint PublishRequest_Encoding_DefaultBinary = 826;

        /// <remarks />
        public const uint PublishResponse_Encoding_DefaultBinary = 829;

        /// <remarks />
        public const uint RepublishRequest_Encoding_DefaultBinary = 832;

        /// <remarks />
        public const uint RepublishResponse_Encoding_DefaultBinary = 835;

        /// <remarks />
        public const uint TransferResult_Encoding_DefaultBinary = 838;

        /// <remarks />
        public const uint TransferSubscriptionsRequest_Encoding_DefaultBinary = 841;

        /// <remarks />
        public const uint TransferSubscriptionsResponse_Encoding_DefaultBinary = 844;

        /// <remarks />
        public const uint DeleteSubscriptionsRequest_Encoding_DefaultBinary = 847;

        /// <remarks />
        public const uint DeleteSubscriptionsResponse_Encoding_DefaultBinary = 850;

        /// <remarks />
        public const uint BuildInfo_Encoding_DefaultBinary = 340;

        /// <remarks />
        public const uint RedundantServerDataType_Encoding_DefaultBinary = 855;

        /// <remarks />
        public const uint EndpointUrlListDataType_Encoding_DefaultBinary = 11957;

        /// <remarks />
        public const uint NetworkGroupDataType_Encoding_DefaultBinary = 11958;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary = 858;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary = 861;

        /// <remarks />
        public const uint ServerStatusDataType_Encoding_DefaultBinary = 864;

        /// <remarks />
        public const uint SessionDiagnosticsDataType_Encoding_DefaultBinary = 867;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary = 870;

        /// <remarks />
        public const uint ServiceCounterDataType_Encoding_DefaultBinary = 873;

        /// <remarks />
        public const uint StatusResult_Encoding_DefaultBinary = 301;

        /// <remarks />
        public const uint SubscriptionDiagnosticsDataType_Encoding_DefaultBinary = 876;

        /// <remarks />
        public const uint ModelChangeStructureDataType_Encoding_DefaultBinary = 879;

        /// <remarks />
        public const uint SemanticChangeStructureDataType_Encoding_DefaultBinary = 899;

        /// <remarks />
        public const uint Range_Encoding_DefaultBinary = 886;

        /// <remarks />
        public const uint EUInformation_Encoding_DefaultBinary = 889;

        /// <remarks />
        public const uint ComplexNumberType_Encoding_DefaultBinary = 12181;

        /// <remarks />
        public const uint DoubleComplexNumberType_Encoding_DefaultBinary = 12182;

        /// <remarks />
        public const uint AxisInformation_Encoding_DefaultBinary = 12089;

        /// <remarks />
        public const uint XVType_Encoding_DefaultBinary = 12090;

        /// <remarks />
        public const uint ProgramDiagnosticDataType_Encoding_DefaultBinary = 896;

        /// <remarks />
        public const uint ProgramDiagnostic2DataType_Encoding_DefaultBinary = 24034;

        /// <remarks />
        public const uint Annotation_Encoding_DefaultBinary = 893;

        /// <remarks />
        public const uint Union_Encoding_DefaultXml = 12758;

        /// <remarks />
        public const uint KeyValuePair_Encoding_DefaultXml = 14802;

        /// <remarks />
        public const uint AdditionalParametersType_Encoding_DefaultXml = 17541;

        /// <remarks />
        public const uint EphemeralKeyType_Encoding_DefaultXml = 17553;

        /// <remarks />
        public const uint EndpointType_Encoding_DefaultXml = 15949;

        /// <remarks />
        public const uint RationalNumber_Encoding_DefaultXml = 18851;

        /// <remarks />
        public const uint Vector_Encoding_DefaultXml = 18852;

        /// <remarks />
        public const uint ThreeDVector_Encoding_DefaultXml = 18853;

        /// <remarks />
        public const uint CartesianCoordinates_Encoding_DefaultXml = 18854;

        /// <remarks />
        public const uint ThreeDCartesianCoordinates_Encoding_DefaultXml = 18855;

        /// <remarks />
        public const uint Orientation_Encoding_DefaultXml = 18856;

        /// <remarks />
        public const uint ThreeDOrientation_Encoding_DefaultXml = 18857;

        /// <remarks />
        public const uint Frame_Encoding_DefaultXml = 18858;

        /// <remarks />
        public const uint ThreeDFrame_Encoding_DefaultXml = 18859;

        /// <remarks />
        public const uint IdentityMappingRuleType_Encoding_DefaultXml = 15728;

        /// <remarks />
        public const uint CurrencyUnitType_Encoding_DefaultXml = 23520;

        /// <remarks />
        public const uint TrustListDataType_Encoding_DefaultXml = 12676;

        /// <remarks />
        public const uint DecimalDataType_Encoding_DefaultXml = 17862;

        /// <remarks />
        public const uint DataTypeSchemaHeader_Encoding_DefaultXml = 15950;

        /// <remarks />
        public const uint DataTypeDescription_Encoding_DefaultXml = 14796;

        /// <remarks />
        public const uint StructureDescription_Encoding_DefaultXml = 15589;

        /// <remarks />
        public const uint EnumDescription_Encoding_DefaultXml = 15590;

        /// <remarks />
        public const uint SimpleTypeDescription_Encoding_DefaultXml = 15529;

        /// <remarks />
        public const uint UABinaryFileDataType_Encoding_DefaultXml = 15531;

        /// <remarks />
        public const uint DataSetMetaDataType_Encoding_DefaultXml = 14794;

        /// <remarks />
        public const uint FieldMetaData_Encoding_DefaultXml = 14795;

        /// <remarks />
        public const uint ConfigurationVersionDataType_Encoding_DefaultXml = 14803;

        /// <remarks />
        public const uint PublishedDataSetDataType_Encoding_DefaultXml = 15951;

        /// <remarks />
        public const uint PublishedDataSetSourceDataType_Encoding_DefaultXml = 15952;

        /// <remarks />
        public const uint PublishedVariableDataType_Encoding_DefaultXml = 14319;

        /// <remarks />
        public const uint PublishedDataItemsDataType_Encoding_DefaultXml = 15953;

        /// <remarks />
        public const uint PublishedEventsDataType_Encoding_DefaultXml = 15954;

        /// <remarks />
        public const uint DataSetWriterDataType_Encoding_DefaultXml = 15955;

        /// <remarks />
        public const uint DataSetWriterTransportDataType_Encoding_DefaultXml = 15956;

        /// <remarks />
        public const uint DataSetWriterMessageDataType_Encoding_DefaultXml = 15987;

        /// <remarks />
        public const uint PubSubGroupDataType_Encoding_DefaultXml = 15988;

        /// <remarks />
        public const uint WriterGroupDataType_Encoding_DefaultXml = 21174;

        /// <remarks />
        public const uint WriterGroupTransportDataType_Encoding_DefaultXml = 15990;

        /// <remarks />
        public const uint WriterGroupMessageDataType_Encoding_DefaultXml = 15991;

        /// <remarks />
        public const uint PubSubConnectionDataType_Encoding_DefaultXml = 15992;

        /// <remarks />
        public const uint ConnectionTransportDataType_Encoding_DefaultXml = 15993;

        /// <remarks />
        public const uint NetworkAddressDataType_Encoding_DefaultXml = 21175;

        /// <remarks />
        public const uint NetworkAddressUrlDataType_Encoding_DefaultXml = 21176;

        /// <remarks />
        public const uint ReaderGroupDataType_Encoding_DefaultXml = 21177;

        /// <remarks />
        public const uint ReaderGroupTransportDataType_Encoding_DefaultXml = 15995;

        /// <remarks />
        public const uint ReaderGroupMessageDataType_Encoding_DefaultXml = 15996;

        /// <remarks />
        public const uint DataSetReaderDataType_Encoding_DefaultXml = 16007;

        /// <remarks />
        public const uint DataSetReaderTransportDataType_Encoding_DefaultXml = 16008;

        /// <remarks />
        public const uint DataSetReaderMessageDataType_Encoding_DefaultXml = 16009;

        /// <remarks />
        public const uint SubscribedDataSetDataType_Encoding_DefaultXml = 16010;

        /// <remarks />
        public const uint TargetVariablesDataType_Encoding_DefaultXml = 16011;

        /// <remarks />
        public const uint FieldTargetDataType_Encoding_DefaultXml = 14804;

        /// <remarks />
        public const uint SubscribedDataSetMirrorDataType_Encoding_DefaultXml = 16012;

        /// <remarks />
        public const uint PubSubConfigurationDataType_Encoding_DefaultXml = 21178;

        /// <remarks />
        public const uint UadpWriterGroupMessageDataType_Encoding_DefaultXml = 16014;

        /// <remarks />
        public const uint UadpDataSetWriterMessageDataType_Encoding_DefaultXml = 16015;

        /// <remarks />
        public const uint UadpDataSetReaderMessageDataType_Encoding_DefaultXml = 16016;

        /// <remarks />
        public const uint JsonWriterGroupMessageDataType_Encoding_DefaultXml = 16017;

        /// <remarks />
        public const uint JsonDataSetWriterMessageDataType_Encoding_DefaultXml = 16018;

        /// <remarks />
        public const uint JsonDataSetReaderMessageDataType_Encoding_DefaultXml = 16019;

        /// <remarks />
        public const uint DatagramConnectionTransportDataType_Encoding_DefaultXml = 17472;

        /// <remarks />
        public const uint DatagramWriterGroupTransportDataType_Encoding_DefaultXml = 21179;

        /// <remarks />
        public const uint BrokerConnectionTransportDataType_Encoding_DefaultXml = 15579;

        /// <remarks />
        public const uint BrokerWriterGroupTransportDataType_Encoding_DefaultXml = 16021;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportDataType_Encoding_DefaultXml = 16022;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportDataType_Encoding_DefaultXml = 16023;

        /// <remarks />
        public const uint AliasNameDataType_Encoding_DefaultXml = 23505;

        /// <remarks />
        public const uint UnsignedRationalNumber_Encoding_DefaultXml = 24122;

        /// <remarks />
        public const uint RolePermissionType_Encoding_DefaultXml = 16126;

        /// <remarks />
        public const uint DataTypeDefinition_Encoding_DefaultXml = 14797;

        /// <remarks />
        public const uint StructureField_Encoding_DefaultXml = 14800;

        /// <remarks />
        public const uint StructureDefinition_Encoding_DefaultXml = 14798;

        /// <remarks />
        public const uint EnumDefinition_Encoding_DefaultXml = 14799;

        /// <remarks />
        public const uint Node_Encoding_DefaultXml = 259;

        /// <remarks />
        public const uint InstanceNode_Encoding_DefaultXml = 11887;

        /// <remarks />
        public const uint TypeNode_Encoding_DefaultXml = 11888;

        /// <remarks />
        public const uint ObjectNode_Encoding_DefaultXml = 262;

        /// <remarks />
        public const uint ObjectTypeNode_Encoding_DefaultXml = 265;

        /// <remarks />
        public const uint VariableNode_Encoding_DefaultXml = 268;

        /// <remarks />
        public const uint VariableTypeNode_Encoding_DefaultXml = 271;

        /// <remarks />
        public const uint ReferenceTypeNode_Encoding_DefaultXml = 274;

        /// <remarks />
        public const uint MethodNode_Encoding_DefaultXml = 277;

        /// <remarks />
        public const uint ViewNode_Encoding_DefaultXml = 280;

        /// <remarks />
        public const uint DataTypeNode_Encoding_DefaultXml = 283;

        /// <remarks />
        public const uint ReferenceNode_Encoding_DefaultXml = 286;

        /// <remarks />
        public const uint Argument_Encoding_DefaultXml = 297;

        /// <remarks />
        public const uint EnumValueType_Encoding_DefaultXml = 7616;

        /// <remarks />
        public const uint EnumField_Encoding_DefaultXml = 14801;

        /// <remarks />
        public const uint OptionSet_Encoding_DefaultXml = 12757;

        /// <remarks />
        public const uint TimeZoneDataType_Encoding_DefaultXml = 8913;

        /// <remarks />
        public const uint ApplicationDescription_Encoding_DefaultXml = 309;

        /// <remarks />
        public const uint RequestHeader_Encoding_DefaultXml = 390;

        /// <remarks />
        public const uint ResponseHeader_Encoding_DefaultXml = 393;

        /// <remarks />
        public const uint ServiceFault_Encoding_DefaultXml = 396;

        /// <remarks />
        public const uint SessionlessInvokeRequestType_Encoding_DefaultXml = 15902;

        /// <remarks />
        public const uint SessionlessInvokeResponseType_Encoding_DefaultXml = 21000;

        /// <remarks />
        public const uint FindServersRequest_Encoding_DefaultXml = 421;

        /// <remarks />
        public const uint FindServersResponse_Encoding_DefaultXml = 424;

        /// <remarks />
        public const uint ServerOnNetwork_Encoding_DefaultXml = 12195;

        /// <remarks />
        public const uint FindServersOnNetworkRequest_Encoding_DefaultXml = 12196;

        /// <remarks />
        public const uint FindServersOnNetworkResponse_Encoding_DefaultXml = 12197;

        /// <remarks />
        public const uint UserTokenPolicy_Encoding_DefaultXml = 305;

        /// <remarks />
        public const uint EndpointDescription_Encoding_DefaultXml = 313;

        /// <remarks />
        public const uint GetEndpointsRequest_Encoding_DefaultXml = 427;

        /// <remarks />
        public const uint GetEndpointsResponse_Encoding_DefaultXml = 430;

        /// <remarks />
        public const uint RegisteredServer_Encoding_DefaultXml = 433;

        /// <remarks />
        public const uint RegisterServerRequest_Encoding_DefaultXml = 436;

        /// <remarks />
        public const uint RegisterServerResponse_Encoding_DefaultXml = 439;

        /// <remarks />
        public const uint DiscoveryConfiguration_Encoding_DefaultXml = 12892;

        /// <remarks />
        public const uint MdnsDiscoveryConfiguration_Encoding_DefaultXml = 12893;

        /// <remarks />
        public const uint RegisterServer2Request_Encoding_DefaultXml = 12199;

        /// <remarks />
        public const uint RegisterServer2Response_Encoding_DefaultXml = 12200;

        /// <remarks />
        public const uint ChannelSecurityToken_Encoding_DefaultXml = 442;

        /// <remarks />
        public const uint OpenSecureChannelRequest_Encoding_DefaultXml = 445;

        /// <remarks />
        public const uint OpenSecureChannelResponse_Encoding_DefaultXml = 448;

        /// <remarks />
        public const uint CloseSecureChannelRequest_Encoding_DefaultXml = 451;

        /// <remarks />
        public const uint CloseSecureChannelResponse_Encoding_DefaultXml = 454;

        /// <remarks />
        public const uint SignedSoftwareCertificate_Encoding_DefaultXml = 345;

        /// <remarks />
        public const uint SignatureData_Encoding_DefaultXml = 457;

        /// <remarks />
        public const uint CreateSessionRequest_Encoding_DefaultXml = 460;

        /// <remarks />
        public const uint CreateSessionResponse_Encoding_DefaultXml = 463;

        /// <remarks />
        public const uint UserIdentityToken_Encoding_DefaultXml = 317;

        /// <remarks />
        public const uint AnonymousIdentityToken_Encoding_DefaultXml = 320;

        /// <remarks />
        public const uint UserNameIdentityToken_Encoding_DefaultXml = 323;

        /// <remarks />
        public const uint X509IdentityToken_Encoding_DefaultXml = 326;

        /// <remarks />
        public const uint IssuedIdentityToken_Encoding_DefaultXml = 939;

        /// <remarks />
        public const uint ActivateSessionRequest_Encoding_DefaultXml = 466;

        /// <remarks />
        public const uint ActivateSessionResponse_Encoding_DefaultXml = 469;

        /// <remarks />
        public const uint CloseSessionRequest_Encoding_DefaultXml = 472;

        /// <remarks />
        public const uint CloseSessionResponse_Encoding_DefaultXml = 475;

        /// <remarks />
        public const uint CancelRequest_Encoding_DefaultXml = 478;

        /// <remarks />
        public const uint CancelResponse_Encoding_DefaultXml = 481;

        /// <remarks />
        public const uint NodeAttributes_Encoding_DefaultXml = 350;

        /// <remarks />
        public const uint ObjectAttributes_Encoding_DefaultXml = 353;

        /// <remarks />
        public const uint VariableAttributes_Encoding_DefaultXml = 356;

        /// <remarks />
        public const uint MethodAttributes_Encoding_DefaultXml = 359;

        /// <remarks />
        public const uint ObjectTypeAttributes_Encoding_DefaultXml = 362;

        /// <remarks />
        public const uint VariableTypeAttributes_Encoding_DefaultXml = 365;

        /// <remarks />
        public const uint ReferenceTypeAttributes_Encoding_DefaultXml = 368;

        /// <remarks />
        public const uint DataTypeAttributes_Encoding_DefaultXml = 371;

        /// <remarks />
        public const uint ViewAttributes_Encoding_DefaultXml = 374;

        /// <remarks />
        public const uint GenericAttributeValue_Encoding_DefaultXml = 17608;

        /// <remarks />
        public const uint GenericAttributes_Encoding_DefaultXml = 17609;

        /// <remarks />
        public const uint AddNodesItem_Encoding_DefaultXml = 377;

        /// <remarks />
        public const uint AddNodesResult_Encoding_DefaultXml = 484;

        /// <remarks />
        public const uint AddNodesRequest_Encoding_DefaultXml = 487;

        /// <remarks />
        public const uint AddNodesResponse_Encoding_DefaultXml = 490;

        /// <remarks />
        public const uint AddReferencesItem_Encoding_DefaultXml = 380;

        /// <remarks />
        public const uint AddReferencesRequest_Encoding_DefaultXml = 493;

        /// <remarks />
        public const uint AddReferencesResponse_Encoding_DefaultXml = 496;

        /// <remarks />
        public const uint DeleteNodesItem_Encoding_DefaultXml = 383;

        /// <remarks />
        public const uint DeleteNodesRequest_Encoding_DefaultXml = 499;

        /// <remarks />
        public const uint DeleteNodesResponse_Encoding_DefaultXml = 502;

        /// <remarks />
        public const uint DeleteReferencesItem_Encoding_DefaultXml = 386;

        /// <remarks />
        public const uint DeleteReferencesRequest_Encoding_DefaultXml = 505;

        /// <remarks />
        public const uint DeleteReferencesResponse_Encoding_DefaultXml = 508;

        /// <remarks />
        public const uint ViewDescription_Encoding_DefaultXml = 512;

        /// <remarks />
        public const uint BrowseDescription_Encoding_DefaultXml = 515;

        /// <remarks />
        public const uint ReferenceDescription_Encoding_DefaultXml = 519;

        /// <remarks />
        public const uint BrowseResult_Encoding_DefaultXml = 523;

        /// <remarks />
        public const uint BrowseRequest_Encoding_DefaultXml = 526;

        /// <remarks />
        public const uint BrowseResponse_Encoding_DefaultXml = 529;

        /// <remarks />
        public const uint BrowseNextRequest_Encoding_DefaultXml = 532;

        /// <remarks />
        public const uint BrowseNextResponse_Encoding_DefaultXml = 535;

        /// <remarks />
        public const uint RelativePathElement_Encoding_DefaultXml = 538;

        /// <remarks />
        public const uint RelativePath_Encoding_DefaultXml = 541;

        /// <remarks />
        public const uint BrowsePath_Encoding_DefaultXml = 544;

        /// <remarks />
        public const uint BrowsePathTarget_Encoding_DefaultXml = 547;

        /// <remarks />
        public const uint BrowsePathResult_Encoding_DefaultXml = 550;

        /// <remarks />
        public const uint TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml = 553;

        /// <remarks />
        public const uint TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml = 556;

        /// <remarks />
        public const uint RegisterNodesRequest_Encoding_DefaultXml = 559;

        /// <remarks />
        public const uint RegisterNodesResponse_Encoding_DefaultXml = 562;

        /// <remarks />
        public const uint UnregisterNodesRequest_Encoding_DefaultXml = 565;

        /// <remarks />
        public const uint UnregisterNodesResponse_Encoding_DefaultXml = 568;

        /// <remarks />
        public const uint EndpointConfiguration_Encoding_DefaultXml = 332;

        /// <remarks />
        public const uint QueryDataDescription_Encoding_DefaultXml = 571;

        /// <remarks />
        public const uint NodeTypeDescription_Encoding_DefaultXml = 574;

        /// <remarks />
        public const uint QueryDataSet_Encoding_DefaultXml = 578;

        /// <remarks />
        public const uint NodeReference_Encoding_DefaultXml = 581;

        /// <remarks />
        public const uint ContentFilterElement_Encoding_DefaultXml = 584;

        /// <remarks />
        public const uint ContentFilter_Encoding_DefaultXml = 587;

        /// <remarks />
        public const uint FilterOperand_Encoding_DefaultXml = 590;

        /// <remarks />
        public const uint ElementOperand_Encoding_DefaultXml = 593;

        /// <remarks />
        public const uint LiteralOperand_Encoding_DefaultXml = 596;

        /// <remarks />
        public const uint AttributeOperand_Encoding_DefaultXml = 599;

        /// <remarks />
        public const uint SimpleAttributeOperand_Encoding_DefaultXml = 602;

        /// <remarks />
        public const uint ContentFilterElementResult_Encoding_DefaultXml = 605;

        /// <remarks />
        public const uint ContentFilterResult_Encoding_DefaultXml = 608;

        /// <remarks />
        public const uint ParsingResult_Encoding_DefaultXml = 611;

        /// <remarks />
        public const uint QueryFirstRequest_Encoding_DefaultXml = 614;

        /// <remarks />
        public const uint QueryFirstResponse_Encoding_DefaultXml = 617;

        /// <remarks />
        public const uint QueryNextRequest_Encoding_DefaultXml = 620;

        /// <remarks />
        public const uint QueryNextResponse_Encoding_DefaultXml = 623;

        /// <remarks />
        public const uint ReadValueId_Encoding_DefaultXml = 627;

        /// <remarks />
        public const uint ReadRequest_Encoding_DefaultXml = 630;

        /// <remarks />
        public const uint ReadResponse_Encoding_DefaultXml = 633;

        /// <remarks />
        public const uint HistoryReadValueId_Encoding_DefaultXml = 636;

        /// <remarks />
        public const uint HistoryReadResult_Encoding_DefaultXml = 639;

        /// <remarks />
        public const uint HistoryReadDetails_Encoding_DefaultXml = 642;

        /// <remarks />
        public const uint ReadEventDetails_Encoding_DefaultXml = 645;

        /// <remarks />
        public const uint ReadRawModifiedDetails_Encoding_DefaultXml = 648;

        /// <remarks />
        public const uint ReadProcessedDetails_Encoding_DefaultXml = 651;

        /// <remarks />
        public const uint ReadAtTimeDetails_Encoding_DefaultXml = 654;

        /// <remarks />
        public const uint ReadAnnotationDataDetails_Encoding_DefaultXml = 23506;

        /// <remarks />
        public const uint HistoryData_Encoding_DefaultXml = 657;

        /// <remarks />
        public const uint ModificationInfo_Encoding_DefaultXml = 11218;

        /// <remarks />
        public const uint HistoryModifiedData_Encoding_DefaultXml = 11219;

        /// <remarks />
        public const uint HistoryEvent_Encoding_DefaultXml = 660;

        /// <remarks />
        public const uint HistoryReadRequest_Encoding_DefaultXml = 663;

        /// <remarks />
        public const uint HistoryReadResponse_Encoding_DefaultXml = 666;

        /// <remarks />
        public const uint WriteValue_Encoding_DefaultXml = 669;

        /// <remarks />
        public const uint WriteRequest_Encoding_DefaultXml = 672;

        /// <remarks />
        public const uint WriteResponse_Encoding_DefaultXml = 675;

        /// <remarks />
        public const uint HistoryUpdateDetails_Encoding_DefaultXml = 678;

        /// <remarks />
        public const uint UpdateDataDetails_Encoding_DefaultXml = 681;

        /// <remarks />
        public const uint UpdateStructureDataDetails_Encoding_DefaultXml = 11296;

        /// <remarks />
        public const uint UpdateEventDetails_Encoding_DefaultXml = 684;

        /// <remarks />
        public const uint DeleteRawModifiedDetails_Encoding_DefaultXml = 687;

        /// <remarks />
        public const uint DeleteAtTimeDetails_Encoding_DefaultXml = 690;

        /// <remarks />
        public const uint DeleteEventDetails_Encoding_DefaultXml = 693;

        /// <remarks />
        public const uint HistoryUpdateResult_Encoding_DefaultXml = 696;

        /// <remarks />
        public const uint HistoryUpdateRequest_Encoding_DefaultXml = 699;

        /// <remarks />
        public const uint HistoryUpdateResponse_Encoding_DefaultXml = 702;

        /// <remarks />
        public const uint CallMethodRequest_Encoding_DefaultXml = 705;

        /// <remarks />
        public const uint CallMethodResult_Encoding_DefaultXml = 708;

        /// <remarks />
        public const uint CallRequest_Encoding_DefaultXml = 711;

        /// <remarks />
        public const uint CallResponse_Encoding_DefaultXml = 714;

        /// <remarks />
        public const uint MonitoringFilter_Encoding_DefaultXml = 720;

        /// <remarks />
        public const uint DataChangeFilter_Encoding_DefaultXml = 723;

        /// <remarks />
        public const uint EventFilter_Encoding_DefaultXml = 726;

        /// <remarks />
        public const uint AggregateConfiguration_Encoding_DefaultXml = 949;

        /// <remarks />
        public const uint AggregateFilter_Encoding_DefaultXml = 729;

        /// <remarks />
        public const uint MonitoringFilterResult_Encoding_DefaultXml = 732;

        /// <remarks />
        public const uint EventFilterResult_Encoding_DefaultXml = 735;

        /// <remarks />
        public const uint AggregateFilterResult_Encoding_DefaultXml = 738;

        /// <remarks />
        public const uint MonitoringParameters_Encoding_DefaultXml = 741;

        /// <remarks />
        public const uint MonitoredItemCreateRequest_Encoding_DefaultXml = 744;

        /// <remarks />
        public const uint MonitoredItemCreateResult_Encoding_DefaultXml = 747;

        /// <remarks />
        public const uint CreateMonitoredItemsRequest_Encoding_DefaultXml = 750;

        /// <remarks />
        public const uint CreateMonitoredItemsResponse_Encoding_DefaultXml = 753;

        /// <remarks />
        public const uint MonitoredItemModifyRequest_Encoding_DefaultXml = 756;

        /// <remarks />
        public const uint MonitoredItemModifyResult_Encoding_DefaultXml = 759;

        /// <remarks />
        public const uint ModifyMonitoredItemsRequest_Encoding_DefaultXml = 762;

        /// <remarks />
        public const uint ModifyMonitoredItemsResponse_Encoding_DefaultXml = 765;

        /// <remarks />
        public const uint SetMonitoringModeRequest_Encoding_DefaultXml = 768;

        /// <remarks />
        public const uint SetMonitoringModeResponse_Encoding_DefaultXml = 771;

        /// <remarks />
        public const uint SetTriggeringRequest_Encoding_DefaultXml = 774;

        /// <remarks />
        public const uint SetTriggeringResponse_Encoding_DefaultXml = 777;

        /// <remarks />
        public const uint DeleteMonitoredItemsRequest_Encoding_DefaultXml = 780;

        /// <remarks />
        public const uint DeleteMonitoredItemsResponse_Encoding_DefaultXml = 783;

        /// <remarks />
        public const uint CreateSubscriptionRequest_Encoding_DefaultXml = 786;

        /// <remarks />
        public const uint CreateSubscriptionResponse_Encoding_DefaultXml = 789;

        /// <remarks />
        public const uint ModifySubscriptionRequest_Encoding_DefaultXml = 792;

        /// <remarks />
        public const uint ModifySubscriptionResponse_Encoding_DefaultXml = 795;

        /// <remarks />
        public const uint SetPublishingModeRequest_Encoding_DefaultXml = 798;

        /// <remarks />
        public const uint SetPublishingModeResponse_Encoding_DefaultXml = 801;

        /// <remarks />
        public const uint NotificationMessage_Encoding_DefaultXml = 804;

        /// <remarks />
        public const uint NotificationData_Encoding_DefaultXml = 946;

        /// <remarks />
        public const uint DataChangeNotification_Encoding_DefaultXml = 810;

        /// <remarks />
        public const uint MonitoredItemNotification_Encoding_DefaultXml = 807;

        /// <remarks />
        public const uint EventNotificationList_Encoding_DefaultXml = 915;

        /// <remarks />
        public const uint EventFieldList_Encoding_DefaultXml = 918;

        /// <remarks />
        public const uint HistoryEventFieldList_Encoding_DefaultXml = 921;

        /// <remarks />
        public const uint StatusChangeNotification_Encoding_DefaultXml = 819;

        /// <remarks />
        public const uint SubscriptionAcknowledgement_Encoding_DefaultXml = 822;

        /// <remarks />
        public const uint PublishRequest_Encoding_DefaultXml = 825;

        /// <remarks />
        public const uint PublishResponse_Encoding_DefaultXml = 828;

        /// <remarks />
        public const uint RepublishRequest_Encoding_DefaultXml = 831;

        /// <remarks />
        public const uint RepublishResponse_Encoding_DefaultXml = 834;

        /// <remarks />
        public const uint TransferResult_Encoding_DefaultXml = 837;

        /// <remarks />
        public const uint TransferSubscriptionsRequest_Encoding_DefaultXml = 840;

        /// <remarks />
        public const uint TransferSubscriptionsResponse_Encoding_DefaultXml = 843;

        /// <remarks />
        public const uint DeleteSubscriptionsRequest_Encoding_DefaultXml = 846;

        /// <remarks />
        public const uint DeleteSubscriptionsResponse_Encoding_DefaultXml = 849;

        /// <remarks />
        public const uint BuildInfo_Encoding_DefaultXml = 339;

        /// <remarks />
        public const uint RedundantServerDataType_Encoding_DefaultXml = 854;

        /// <remarks />
        public const uint EndpointUrlListDataType_Encoding_DefaultXml = 11949;

        /// <remarks />
        public const uint NetworkGroupDataType_Encoding_DefaultXml = 11950;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml = 857;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryDataType_Encoding_DefaultXml = 860;

        /// <remarks />
        public const uint ServerStatusDataType_Encoding_DefaultXml = 863;

        /// <remarks />
        public const uint SessionDiagnosticsDataType_Encoding_DefaultXml = 866;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsDataType_Encoding_DefaultXml = 869;

        /// <remarks />
        public const uint ServiceCounterDataType_Encoding_DefaultXml = 872;

        /// <remarks />
        public const uint StatusResult_Encoding_DefaultXml = 300;

        /// <remarks />
        public const uint SubscriptionDiagnosticsDataType_Encoding_DefaultXml = 875;

        /// <remarks />
        public const uint ModelChangeStructureDataType_Encoding_DefaultXml = 878;

        /// <remarks />
        public const uint SemanticChangeStructureDataType_Encoding_DefaultXml = 898;

        /// <remarks />
        public const uint Range_Encoding_DefaultXml = 885;

        /// <remarks />
        public const uint EUInformation_Encoding_DefaultXml = 888;

        /// <remarks />
        public const uint ComplexNumberType_Encoding_DefaultXml = 12173;

        /// <remarks />
        public const uint DoubleComplexNumberType_Encoding_DefaultXml = 12174;

        /// <remarks />
        public const uint AxisInformation_Encoding_DefaultXml = 12081;

        /// <remarks />
        public const uint XVType_Encoding_DefaultXml = 12082;

        /// <remarks />
        public const uint ProgramDiagnosticDataType_Encoding_DefaultXml = 895;

        /// <remarks />
        public const uint ProgramDiagnostic2DataType_Encoding_DefaultXml = 24038;

        /// <remarks />
        public const uint Annotation_Encoding_DefaultXml = 892;

        /// <remarks />
        public const uint Union_Encoding_DefaultJson = 15085;

        /// <remarks />
        public const uint KeyValuePair_Encoding_DefaultJson = 15041;

        /// <remarks />
        public const uint AdditionalParametersType_Encoding_DefaultJson = 17547;

        /// <remarks />
        public const uint EphemeralKeyType_Encoding_DefaultJson = 17557;

        /// <remarks />
        public const uint EndpointType_Encoding_DefaultJson = 16150;

        /// <remarks />
        public const uint RationalNumber_Encoding_DefaultJson = 19064;

        /// <remarks />
        public const uint Vector_Encoding_DefaultJson = 19065;

        /// <remarks />
        public const uint ThreeDVector_Encoding_DefaultJson = 19066;

        /// <remarks />
        public const uint CartesianCoordinates_Encoding_DefaultJson = 19067;

        /// <remarks />
        public const uint ThreeDCartesianCoordinates_Encoding_DefaultJson = 19068;

        /// <remarks />
        public const uint Orientation_Encoding_DefaultJson = 19069;

        /// <remarks />
        public const uint ThreeDOrientation_Encoding_DefaultJson = 19070;

        /// <remarks />
        public const uint Frame_Encoding_DefaultJson = 19071;

        /// <remarks />
        public const uint ThreeDFrame_Encoding_DefaultJson = 19072;

        /// <remarks />
        public const uint IdentityMappingRuleType_Encoding_DefaultJson = 15042;

        /// <remarks />
        public const uint CurrencyUnitType_Encoding_DefaultJson = 23528;

        /// <remarks />
        public const uint TrustListDataType_Encoding_DefaultJson = 15044;

        /// <remarks />
        public const uint DecimalDataType_Encoding_DefaultJson = 15045;

        /// <remarks />
        public const uint DataTypeSchemaHeader_Encoding_DefaultJson = 16151;

        /// <remarks />
        public const uint DataTypeDescription_Encoding_DefaultJson = 15057;

        /// <remarks />
        public const uint StructureDescription_Encoding_DefaultJson = 15058;

        /// <remarks />
        public const uint EnumDescription_Encoding_DefaultJson = 15059;

        /// <remarks />
        public const uint SimpleTypeDescription_Encoding_DefaultJson = 15700;

        /// <remarks />
        public const uint UABinaryFileDataType_Encoding_DefaultJson = 15714;

        /// <remarks />
        public const uint DataSetMetaDataType_Encoding_DefaultJson = 15050;

        /// <remarks />
        public const uint FieldMetaData_Encoding_DefaultJson = 15051;

        /// <remarks />
        public const uint ConfigurationVersionDataType_Encoding_DefaultJson = 15049;

        /// <remarks />
        public const uint PublishedDataSetDataType_Encoding_DefaultJson = 16152;

        /// <remarks />
        public const uint PublishedDataSetSourceDataType_Encoding_DefaultJson = 16153;

        /// <remarks />
        public const uint PublishedVariableDataType_Encoding_DefaultJson = 15060;

        /// <remarks />
        public const uint PublishedDataItemsDataType_Encoding_DefaultJson = 16154;

        /// <remarks />
        public const uint PublishedEventsDataType_Encoding_DefaultJson = 16155;

        /// <remarks />
        public const uint DataSetWriterDataType_Encoding_DefaultJson = 16156;

        /// <remarks />
        public const uint DataSetWriterTransportDataType_Encoding_DefaultJson = 16157;

        /// <remarks />
        public const uint DataSetWriterMessageDataType_Encoding_DefaultJson = 16158;

        /// <remarks />
        public const uint PubSubGroupDataType_Encoding_DefaultJson = 16159;

        /// <remarks />
        public const uint WriterGroupDataType_Encoding_DefaultJson = 21198;

        /// <remarks />
        public const uint WriterGroupTransportDataType_Encoding_DefaultJson = 16161;

        /// <remarks />
        public const uint WriterGroupMessageDataType_Encoding_DefaultJson = 16280;

        /// <remarks />
        public const uint PubSubConnectionDataType_Encoding_DefaultJson = 16281;

        /// <remarks />
        public const uint ConnectionTransportDataType_Encoding_DefaultJson = 16282;

        /// <remarks />
        public const uint NetworkAddressDataType_Encoding_DefaultJson = 21199;

        /// <remarks />
        public const uint NetworkAddressUrlDataType_Encoding_DefaultJson = 21200;

        /// <remarks />
        public const uint ReaderGroupDataType_Encoding_DefaultJson = 21201;

        /// <remarks />
        public const uint ReaderGroupTransportDataType_Encoding_DefaultJson = 16284;

        /// <remarks />
        public const uint ReaderGroupMessageDataType_Encoding_DefaultJson = 16285;

        /// <remarks />
        public const uint DataSetReaderDataType_Encoding_DefaultJson = 16286;

        /// <remarks />
        public const uint DataSetReaderTransportDataType_Encoding_DefaultJson = 16287;

        /// <remarks />
        public const uint DataSetReaderMessageDataType_Encoding_DefaultJson = 16288;

        /// <remarks />
        public const uint SubscribedDataSetDataType_Encoding_DefaultJson = 16308;

        /// <remarks />
        public const uint TargetVariablesDataType_Encoding_DefaultJson = 16310;

        /// <remarks />
        public const uint FieldTargetDataType_Encoding_DefaultJson = 15061;

        /// <remarks />
        public const uint SubscribedDataSetMirrorDataType_Encoding_DefaultJson = 16311;

        /// <remarks />
        public const uint PubSubConfigurationDataType_Encoding_DefaultJson = 21202;

        /// <remarks />
        public const uint UadpWriterGroupMessageDataType_Encoding_DefaultJson = 16323;

        /// <remarks />
        public const uint UadpDataSetWriterMessageDataType_Encoding_DefaultJson = 16391;

        /// <remarks />
        public const uint UadpDataSetReaderMessageDataType_Encoding_DefaultJson = 16392;

        /// <remarks />
        public const uint JsonWriterGroupMessageDataType_Encoding_DefaultJson = 16393;

        /// <remarks />
        public const uint JsonDataSetWriterMessageDataType_Encoding_DefaultJson = 16394;

        /// <remarks />
        public const uint JsonDataSetReaderMessageDataType_Encoding_DefaultJson = 16404;

        /// <remarks />
        public const uint DatagramConnectionTransportDataType_Encoding_DefaultJson = 17476;

        /// <remarks />
        public const uint DatagramWriterGroupTransportDataType_Encoding_DefaultJson = 21203;

        /// <remarks />
        public const uint BrokerConnectionTransportDataType_Encoding_DefaultJson = 15726;

        /// <remarks />
        public const uint BrokerWriterGroupTransportDataType_Encoding_DefaultJson = 16524;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportDataType_Encoding_DefaultJson = 16525;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportDataType_Encoding_DefaultJson = 16526;

        /// <remarks />
        public const uint AliasNameDataType_Encoding_DefaultJson = 23511;

        /// <remarks />
        public const uint UnsignedRationalNumber_Encoding_DefaultJson = 24134;

        /// <remarks />
        public const uint RolePermissionType_Encoding_DefaultJson = 15062;

        /// <remarks />
        public const uint DataTypeDefinition_Encoding_DefaultJson = 15063;

        /// <remarks />
        public const uint StructureField_Encoding_DefaultJson = 15065;

        /// <remarks />
        public const uint StructureDefinition_Encoding_DefaultJson = 15066;

        /// <remarks />
        public const uint EnumDefinition_Encoding_DefaultJson = 15067;

        /// <remarks />
        public const uint Node_Encoding_DefaultJson = 15068;

        /// <remarks />
        public const uint InstanceNode_Encoding_DefaultJson = 15069;

        /// <remarks />
        public const uint TypeNode_Encoding_DefaultJson = 15070;

        /// <remarks />
        public const uint ObjectNode_Encoding_DefaultJson = 15071;

        /// <remarks />
        public const uint ObjectTypeNode_Encoding_DefaultJson = 15073;

        /// <remarks />
        public const uint VariableNode_Encoding_DefaultJson = 15074;

        /// <remarks />
        public const uint VariableTypeNode_Encoding_DefaultJson = 15075;

        /// <remarks />
        public const uint ReferenceTypeNode_Encoding_DefaultJson = 15076;

        /// <remarks />
        public const uint MethodNode_Encoding_DefaultJson = 15077;

        /// <remarks />
        public const uint ViewNode_Encoding_DefaultJson = 15078;

        /// <remarks />
        public const uint DataTypeNode_Encoding_DefaultJson = 15079;

        /// <remarks />
        public const uint ReferenceNode_Encoding_DefaultJson = 15080;

        /// <remarks />
        public const uint Argument_Encoding_DefaultJson = 15081;

        /// <remarks />
        public const uint EnumValueType_Encoding_DefaultJson = 15082;

        /// <remarks />
        public const uint EnumField_Encoding_DefaultJson = 15083;

        /// <remarks />
        public const uint OptionSet_Encoding_DefaultJson = 15084;

        /// <remarks />
        public const uint TimeZoneDataType_Encoding_DefaultJson = 15086;

        /// <remarks />
        public const uint ApplicationDescription_Encoding_DefaultJson = 15087;

        /// <remarks />
        public const uint RequestHeader_Encoding_DefaultJson = 15088;

        /// <remarks />
        public const uint ResponseHeader_Encoding_DefaultJson = 15089;

        /// <remarks />
        public const uint ServiceFault_Encoding_DefaultJson = 15090;

        /// <remarks />
        public const uint SessionlessInvokeRequestType_Encoding_DefaultJson = 15091;

        /// <remarks />
        public const uint SessionlessInvokeResponseType_Encoding_DefaultJson = 15092;

        /// <remarks />
        public const uint FindServersRequest_Encoding_DefaultJson = 15093;

        /// <remarks />
        public const uint FindServersResponse_Encoding_DefaultJson = 15094;

        /// <remarks />
        public const uint ServerOnNetwork_Encoding_DefaultJson = 15095;

        /// <remarks />
        public const uint FindServersOnNetworkRequest_Encoding_DefaultJson = 15096;

        /// <remarks />
        public const uint FindServersOnNetworkResponse_Encoding_DefaultJson = 15097;

        /// <remarks />
        public const uint UserTokenPolicy_Encoding_DefaultJson = 15098;

        /// <remarks />
        public const uint EndpointDescription_Encoding_DefaultJson = 15099;

        /// <remarks />
        public const uint GetEndpointsRequest_Encoding_DefaultJson = 15100;

        /// <remarks />
        public const uint GetEndpointsResponse_Encoding_DefaultJson = 15101;

        /// <remarks />
        public const uint RegisteredServer_Encoding_DefaultJson = 15102;

        /// <remarks />
        public const uint RegisterServerRequest_Encoding_DefaultJson = 15103;

        /// <remarks />
        public const uint RegisterServerResponse_Encoding_DefaultJson = 15104;

        /// <remarks />
        public const uint DiscoveryConfiguration_Encoding_DefaultJson = 15105;

        /// <remarks />
        public const uint MdnsDiscoveryConfiguration_Encoding_DefaultJson = 15106;

        /// <remarks />
        public const uint RegisterServer2Request_Encoding_DefaultJson = 15107;

        /// <remarks />
        public const uint RegisterServer2Response_Encoding_DefaultJson = 15130;

        /// <remarks />
        public const uint ChannelSecurityToken_Encoding_DefaultJson = 15131;

        /// <remarks />
        public const uint OpenSecureChannelRequest_Encoding_DefaultJson = 15132;

        /// <remarks />
        public const uint OpenSecureChannelResponse_Encoding_DefaultJson = 15133;

        /// <remarks />
        public const uint CloseSecureChannelRequest_Encoding_DefaultJson = 15134;

        /// <remarks />
        public const uint CloseSecureChannelResponse_Encoding_DefaultJson = 15135;

        /// <remarks />
        public const uint SignedSoftwareCertificate_Encoding_DefaultJson = 15136;

        /// <remarks />
        public const uint SignatureData_Encoding_DefaultJson = 15137;

        /// <remarks />
        public const uint CreateSessionRequest_Encoding_DefaultJson = 15138;

        /// <remarks />
        public const uint CreateSessionResponse_Encoding_DefaultJson = 15139;

        /// <remarks />
        public const uint UserIdentityToken_Encoding_DefaultJson = 15140;

        /// <remarks />
        public const uint AnonymousIdentityToken_Encoding_DefaultJson = 15141;

        /// <remarks />
        public const uint UserNameIdentityToken_Encoding_DefaultJson = 15142;

        /// <remarks />
        public const uint X509IdentityToken_Encoding_DefaultJson = 15143;

        /// <remarks />
        public const uint IssuedIdentityToken_Encoding_DefaultJson = 15144;

        /// <remarks />
        public const uint ActivateSessionRequest_Encoding_DefaultJson = 15145;

        /// <remarks />
        public const uint ActivateSessionResponse_Encoding_DefaultJson = 15146;

        /// <remarks />
        public const uint CloseSessionRequest_Encoding_DefaultJson = 15147;

        /// <remarks />
        public const uint CloseSessionResponse_Encoding_DefaultJson = 15148;

        /// <remarks />
        public const uint CancelRequest_Encoding_DefaultJson = 15149;

        /// <remarks />
        public const uint CancelResponse_Encoding_DefaultJson = 15150;

        /// <remarks />
        public const uint NodeAttributes_Encoding_DefaultJson = 15151;

        /// <remarks />
        public const uint ObjectAttributes_Encoding_DefaultJson = 15152;

        /// <remarks />
        public const uint VariableAttributes_Encoding_DefaultJson = 15153;

        /// <remarks />
        public const uint MethodAttributes_Encoding_DefaultJson = 15157;

        /// <remarks />
        public const uint ObjectTypeAttributes_Encoding_DefaultJson = 15158;

        /// <remarks />
        public const uint VariableTypeAttributes_Encoding_DefaultJson = 15159;

        /// <remarks />
        public const uint ReferenceTypeAttributes_Encoding_DefaultJson = 15160;

        /// <remarks />
        public const uint DataTypeAttributes_Encoding_DefaultJson = 15161;

        /// <remarks />
        public const uint ViewAttributes_Encoding_DefaultJson = 15162;

        /// <remarks />
        public const uint GenericAttributeValue_Encoding_DefaultJson = 15163;

        /// <remarks />
        public const uint GenericAttributes_Encoding_DefaultJson = 15164;

        /// <remarks />
        public const uint AddNodesItem_Encoding_DefaultJson = 15165;

        /// <remarks />
        public const uint AddNodesResult_Encoding_DefaultJson = 15166;

        /// <remarks />
        public const uint AddNodesRequest_Encoding_DefaultJson = 15167;

        /// <remarks />
        public const uint AddNodesResponse_Encoding_DefaultJson = 15168;

        /// <remarks />
        public const uint AddReferencesItem_Encoding_DefaultJson = 15169;

        /// <remarks />
        public const uint AddReferencesRequest_Encoding_DefaultJson = 15170;

        /// <remarks />
        public const uint AddReferencesResponse_Encoding_DefaultJson = 15171;

        /// <remarks />
        public const uint DeleteNodesItem_Encoding_DefaultJson = 15172;

        /// <remarks />
        public const uint DeleteNodesRequest_Encoding_DefaultJson = 15173;

        /// <remarks />
        public const uint DeleteNodesResponse_Encoding_DefaultJson = 15174;

        /// <remarks />
        public const uint DeleteReferencesItem_Encoding_DefaultJson = 15175;

        /// <remarks />
        public const uint DeleteReferencesRequest_Encoding_DefaultJson = 15176;

        /// <remarks />
        public const uint DeleteReferencesResponse_Encoding_DefaultJson = 15177;

        /// <remarks />
        public const uint ViewDescription_Encoding_DefaultJson = 15179;

        /// <remarks />
        public const uint BrowseDescription_Encoding_DefaultJson = 15180;

        /// <remarks />
        public const uint ReferenceDescription_Encoding_DefaultJson = 15182;

        /// <remarks />
        public const uint BrowseResult_Encoding_DefaultJson = 15183;

        /// <remarks />
        public const uint BrowseRequest_Encoding_DefaultJson = 15184;

        /// <remarks />
        public const uint BrowseResponse_Encoding_DefaultJson = 15185;

        /// <remarks />
        public const uint BrowseNextRequest_Encoding_DefaultJson = 15186;

        /// <remarks />
        public const uint BrowseNextResponse_Encoding_DefaultJson = 15187;

        /// <remarks />
        public const uint RelativePathElement_Encoding_DefaultJson = 15188;

        /// <remarks />
        public const uint RelativePath_Encoding_DefaultJson = 15189;

        /// <remarks />
        public const uint BrowsePath_Encoding_DefaultJson = 15190;

        /// <remarks />
        public const uint BrowsePathTarget_Encoding_DefaultJson = 15191;

        /// <remarks />
        public const uint BrowsePathResult_Encoding_DefaultJson = 15192;

        /// <remarks />
        public const uint TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultJson = 15193;

        /// <remarks />
        public const uint TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultJson = 15194;

        /// <remarks />
        public const uint RegisterNodesRequest_Encoding_DefaultJson = 15195;

        /// <remarks />
        public const uint RegisterNodesResponse_Encoding_DefaultJson = 15196;

        /// <remarks />
        public const uint UnregisterNodesRequest_Encoding_DefaultJson = 15197;

        /// <remarks />
        public const uint UnregisterNodesResponse_Encoding_DefaultJson = 15198;

        /// <remarks />
        public const uint EndpointConfiguration_Encoding_DefaultJson = 15199;

        /// <remarks />
        public const uint QueryDataDescription_Encoding_DefaultJson = 15200;

        /// <remarks />
        public const uint NodeTypeDescription_Encoding_DefaultJson = 15201;

        /// <remarks />
        public const uint QueryDataSet_Encoding_DefaultJson = 15202;

        /// <remarks />
        public const uint NodeReference_Encoding_DefaultJson = 15203;

        /// <remarks />
        public const uint ContentFilterElement_Encoding_DefaultJson = 15204;

        /// <remarks />
        public const uint ContentFilter_Encoding_DefaultJson = 15205;

        /// <remarks />
        public const uint FilterOperand_Encoding_DefaultJson = 15206;

        /// <remarks />
        public const uint ElementOperand_Encoding_DefaultJson = 15207;

        /// <remarks />
        public const uint LiteralOperand_Encoding_DefaultJson = 15208;

        /// <remarks />
        public const uint AttributeOperand_Encoding_DefaultJson = 15209;

        /// <remarks />
        public const uint SimpleAttributeOperand_Encoding_DefaultJson = 15210;

        /// <remarks />
        public const uint ContentFilterElementResult_Encoding_DefaultJson = 15211;

        /// <remarks />
        public const uint ContentFilterResult_Encoding_DefaultJson = 15228;

        /// <remarks />
        public const uint ParsingResult_Encoding_DefaultJson = 15236;

        /// <remarks />
        public const uint QueryFirstRequest_Encoding_DefaultJson = 15244;

        /// <remarks />
        public const uint QueryFirstResponse_Encoding_DefaultJson = 15252;

        /// <remarks />
        public const uint QueryNextRequest_Encoding_DefaultJson = 15254;

        /// <remarks />
        public const uint QueryNextResponse_Encoding_DefaultJson = 15255;

        /// <remarks />
        public const uint ReadValueId_Encoding_DefaultJson = 15256;

        /// <remarks />
        public const uint ReadRequest_Encoding_DefaultJson = 15257;

        /// <remarks />
        public const uint ReadResponse_Encoding_DefaultJson = 15258;

        /// <remarks />
        public const uint HistoryReadValueId_Encoding_DefaultJson = 15259;

        /// <remarks />
        public const uint HistoryReadResult_Encoding_DefaultJson = 15260;

        /// <remarks />
        public const uint HistoryReadDetails_Encoding_DefaultJson = 15261;

        /// <remarks />
        public const uint ReadEventDetails_Encoding_DefaultJson = 15262;

        /// <remarks />
        public const uint ReadRawModifiedDetails_Encoding_DefaultJson = 15263;

        /// <remarks />
        public const uint ReadProcessedDetails_Encoding_DefaultJson = 15264;

        /// <remarks />
        public const uint ReadAtTimeDetails_Encoding_DefaultJson = 15269;

        /// <remarks />
        public const uint ReadAnnotationDataDetails_Encoding_DefaultJson = 23512;

        /// <remarks />
        public const uint HistoryData_Encoding_DefaultJson = 15270;

        /// <remarks />
        public const uint ModificationInfo_Encoding_DefaultJson = 15271;

        /// <remarks />
        public const uint HistoryModifiedData_Encoding_DefaultJson = 15272;

        /// <remarks />
        public const uint HistoryEvent_Encoding_DefaultJson = 15273;

        /// <remarks />
        public const uint HistoryReadRequest_Encoding_DefaultJson = 15274;

        /// <remarks />
        public const uint HistoryReadResponse_Encoding_DefaultJson = 15275;

        /// <remarks />
        public const uint WriteValue_Encoding_DefaultJson = 15276;

        /// <remarks />
        public const uint WriteRequest_Encoding_DefaultJson = 15277;

        /// <remarks />
        public const uint WriteResponse_Encoding_DefaultJson = 15278;

        /// <remarks />
        public const uint HistoryUpdateDetails_Encoding_DefaultJson = 15279;

        /// <remarks />
        public const uint UpdateDataDetails_Encoding_DefaultJson = 15280;

        /// <remarks />
        public const uint UpdateStructureDataDetails_Encoding_DefaultJson = 15281;

        /// <remarks />
        public const uint UpdateEventDetails_Encoding_DefaultJson = 15282;

        /// <remarks />
        public const uint DeleteRawModifiedDetails_Encoding_DefaultJson = 15283;

        /// <remarks />
        public const uint DeleteAtTimeDetails_Encoding_DefaultJson = 15284;

        /// <remarks />
        public const uint DeleteEventDetails_Encoding_DefaultJson = 15285;

        /// <remarks />
        public const uint HistoryUpdateResult_Encoding_DefaultJson = 15286;

        /// <remarks />
        public const uint HistoryUpdateRequest_Encoding_DefaultJson = 15287;

        /// <remarks />
        public const uint HistoryUpdateResponse_Encoding_DefaultJson = 15288;

        /// <remarks />
        public const uint CallMethodRequest_Encoding_DefaultJson = 15289;

        /// <remarks />
        public const uint CallMethodResult_Encoding_DefaultJson = 15290;

        /// <remarks />
        public const uint CallRequest_Encoding_DefaultJson = 15291;

        /// <remarks />
        public const uint CallResponse_Encoding_DefaultJson = 15292;

        /// <remarks />
        public const uint MonitoringFilter_Encoding_DefaultJson = 15293;

        /// <remarks />
        public const uint DataChangeFilter_Encoding_DefaultJson = 15294;

        /// <remarks />
        public const uint EventFilter_Encoding_DefaultJson = 15295;

        /// <remarks />
        public const uint AggregateConfiguration_Encoding_DefaultJson = 15304;

        /// <remarks />
        public const uint AggregateFilter_Encoding_DefaultJson = 15312;

        /// <remarks />
        public const uint MonitoringFilterResult_Encoding_DefaultJson = 15313;

        /// <remarks />
        public const uint EventFilterResult_Encoding_DefaultJson = 15314;

        /// <remarks />
        public const uint AggregateFilterResult_Encoding_DefaultJson = 15315;

        /// <remarks />
        public const uint MonitoringParameters_Encoding_DefaultJson = 15320;

        /// <remarks />
        public const uint MonitoredItemCreateRequest_Encoding_DefaultJson = 15321;

        /// <remarks />
        public const uint MonitoredItemCreateResult_Encoding_DefaultJson = 15322;

        /// <remarks />
        public const uint CreateMonitoredItemsRequest_Encoding_DefaultJson = 15323;

        /// <remarks />
        public const uint CreateMonitoredItemsResponse_Encoding_DefaultJson = 15324;

        /// <remarks />
        public const uint MonitoredItemModifyRequest_Encoding_DefaultJson = 15325;

        /// <remarks />
        public const uint MonitoredItemModifyResult_Encoding_DefaultJson = 15326;

        /// <remarks />
        public const uint ModifyMonitoredItemsRequest_Encoding_DefaultJson = 15327;

        /// <remarks />
        public const uint ModifyMonitoredItemsResponse_Encoding_DefaultJson = 15328;

        /// <remarks />
        public const uint SetMonitoringModeRequest_Encoding_DefaultJson = 15329;

        /// <remarks />
        public const uint SetMonitoringModeResponse_Encoding_DefaultJson = 15331;

        /// <remarks />
        public const uint SetTriggeringRequest_Encoding_DefaultJson = 15332;

        /// <remarks />
        public const uint SetTriggeringResponse_Encoding_DefaultJson = 15333;

        /// <remarks />
        public const uint DeleteMonitoredItemsRequest_Encoding_DefaultJson = 15335;

        /// <remarks />
        public const uint DeleteMonitoredItemsResponse_Encoding_DefaultJson = 15336;

        /// <remarks />
        public const uint CreateSubscriptionRequest_Encoding_DefaultJson = 15337;

        /// <remarks />
        public const uint CreateSubscriptionResponse_Encoding_DefaultJson = 15338;

        /// <remarks />
        public const uint ModifySubscriptionRequest_Encoding_DefaultJson = 15339;

        /// <remarks />
        public const uint ModifySubscriptionResponse_Encoding_DefaultJson = 15340;

        /// <remarks />
        public const uint SetPublishingModeRequest_Encoding_DefaultJson = 15341;

        /// <remarks />
        public const uint SetPublishingModeResponse_Encoding_DefaultJson = 15342;

        /// <remarks />
        public const uint NotificationMessage_Encoding_DefaultJson = 15343;

        /// <remarks />
        public const uint NotificationData_Encoding_DefaultJson = 15344;

        /// <remarks />
        public const uint DataChangeNotification_Encoding_DefaultJson = 15345;

        /// <remarks />
        public const uint MonitoredItemNotification_Encoding_DefaultJson = 15346;

        /// <remarks />
        public const uint EventNotificationList_Encoding_DefaultJson = 15347;

        /// <remarks />
        public const uint EventFieldList_Encoding_DefaultJson = 15348;

        /// <remarks />
        public const uint HistoryEventFieldList_Encoding_DefaultJson = 15349;

        /// <remarks />
        public const uint StatusChangeNotification_Encoding_DefaultJson = 15350;

        /// <remarks />
        public const uint SubscriptionAcknowledgement_Encoding_DefaultJson = 15351;

        /// <remarks />
        public const uint PublishRequest_Encoding_DefaultJson = 15352;

        /// <remarks />
        public const uint PublishResponse_Encoding_DefaultJson = 15353;

        /// <remarks />
        public const uint RepublishRequest_Encoding_DefaultJson = 15354;

        /// <remarks />
        public const uint RepublishResponse_Encoding_DefaultJson = 15355;

        /// <remarks />
        public const uint TransferResult_Encoding_DefaultJson = 15356;

        /// <remarks />
        public const uint TransferSubscriptionsRequest_Encoding_DefaultJson = 15357;

        /// <remarks />
        public const uint TransferSubscriptionsResponse_Encoding_DefaultJson = 15358;

        /// <remarks />
        public const uint DeleteSubscriptionsRequest_Encoding_DefaultJson = 15359;

        /// <remarks />
        public const uint DeleteSubscriptionsResponse_Encoding_DefaultJson = 15360;

        /// <remarks />
        public const uint BuildInfo_Encoding_DefaultJson = 15361;

        /// <remarks />
        public const uint RedundantServerDataType_Encoding_DefaultJson = 15362;

        /// <remarks />
        public const uint EndpointUrlListDataType_Encoding_DefaultJson = 15363;

        /// <remarks />
        public const uint NetworkGroupDataType_Encoding_DefaultJson = 15364;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsDataType_Encoding_DefaultJson = 15365;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryDataType_Encoding_DefaultJson = 15366;

        /// <remarks />
        public const uint ServerStatusDataType_Encoding_DefaultJson = 15367;

        /// <remarks />
        public const uint SessionDiagnosticsDataType_Encoding_DefaultJson = 15368;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsDataType_Encoding_DefaultJson = 15369;

        /// <remarks />
        public const uint ServiceCounterDataType_Encoding_DefaultJson = 15370;

        /// <remarks />
        public const uint StatusResult_Encoding_DefaultJson = 15371;

        /// <remarks />
        public const uint SubscriptionDiagnosticsDataType_Encoding_DefaultJson = 15372;

        /// <remarks />
        public const uint ModelChangeStructureDataType_Encoding_DefaultJson = 15373;

        /// <remarks />
        public const uint SemanticChangeStructureDataType_Encoding_DefaultJson = 15374;

        /// <remarks />
        public const uint Range_Encoding_DefaultJson = 15375;

        /// <remarks />
        public const uint EUInformation_Encoding_DefaultJson = 15376;

        /// <remarks />
        public const uint ComplexNumberType_Encoding_DefaultJson = 15377;

        /// <remarks />
        public const uint DoubleComplexNumberType_Encoding_DefaultJson = 15378;

        /// <remarks />
        public const uint AxisInformation_Encoding_DefaultJson = 15379;

        /// <remarks />
        public const uint XVType_Encoding_DefaultJson = 15380;

        /// <remarks />
        public const uint ProgramDiagnosticDataType_Encoding_DefaultJson = 15381;

        /// <remarks />
        public const uint ProgramDiagnostic2DataType_Encoding_DefaultJson = 24042;

        /// <remarks />
        public const uint Annotation_Encoding_DefaultJson = 15382;
    }
    #endregion

    #region ObjectType Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectTypes
    {
        /// <remarks />
        public const uint BaseObjectType = 58;

        /// <remarks />
        public const uint FolderType = 61;

        /// <remarks />
        public const uint DataTypeSystemType = 75;

        /// <remarks />
        public const uint DataTypeEncodingType = 76;

        /// <remarks />
        public const uint ModellingRuleType = 77;

        /// <remarks />
        public const uint ServerType = 2004;

        /// <remarks />
        public const uint ServerCapabilitiesType = 2013;

        /// <remarks />
        public const uint ServerDiagnosticsType = 2020;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType = 2026;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType = 2029;

        /// <remarks />
        public const uint VendorServerInfoType = 2033;

        /// <remarks />
        public const uint ServerRedundancyType = 2034;

        /// <remarks />
        public const uint TransparentRedundancyType = 2036;

        /// <remarks />
        public const uint NonTransparentRedundancyType = 2039;

        /// <remarks />
        public const uint NonTransparentNetworkRedundancyType = 11945;

        /// <remarks />
        public const uint OperationLimitsType = 11564;

        /// <remarks />
        public const uint FileType = 11575;

        /// <remarks />
        public const uint AddressSpaceFileType = 11595;

        /// <remarks />
        public const uint NamespaceMetadataType = 11616;

        /// <remarks />
        public const uint NamespacesType = 11645;

        /// <remarks />
        public const uint BaseEventType = 2041;

        /// <remarks />
        public const uint AuditEventType = 2052;

        /// <remarks />
        public const uint AuditSecurityEventType = 2058;

        /// <remarks />
        public const uint AuditChannelEventType = 2059;

        /// <remarks />
        public const uint AuditOpenSecureChannelEventType = 2060;

        /// <remarks />
        public const uint AuditSessionEventType = 2069;

        /// <remarks />
        public const uint AuditCreateSessionEventType = 2071;

        /// <remarks />
        public const uint AuditUrlMismatchEventType = 2748;

        /// <remarks />
        public const uint AuditActivateSessionEventType = 2075;

        /// <remarks />
        public const uint AuditCancelEventType = 2078;

        /// <remarks />
        public const uint AuditCertificateEventType = 2080;

        /// <remarks />
        public const uint AuditCertificateDataMismatchEventType = 2082;

        /// <remarks />
        public const uint AuditCertificateExpiredEventType = 2085;

        /// <remarks />
        public const uint AuditCertificateInvalidEventType = 2086;

        /// <remarks />
        public const uint AuditCertificateUntrustedEventType = 2087;

        /// <remarks />
        public const uint AuditCertificateRevokedEventType = 2088;

        /// <remarks />
        public const uint AuditCertificateMismatchEventType = 2089;

        /// <remarks />
        public const uint AuditNodeManagementEventType = 2090;

        /// <remarks />
        public const uint AuditAddNodesEventType = 2091;

        /// <remarks />
        public const uint AuditDeleteNodesEventType = 2093;

        /// <remarks />
        public const uint AuditAddReferencesEventType = 2095;

        /// <remarks />
        public const uint AuditDeleteReferencesEventType = 2097;

        /// <remarks />
        public const uint AuditUpdateEventType = 2099;

        /// <remarks />
        public const uint AuditWriteUpdateEventType = 2100;

        /// <remarks />
        public const uint AuditHistoryUpdateEventType = 2104;

        /// <remarks />
        public const uint AuditUpdateMethodEventType = 2127;

        /// <remarks />
        public const uint SystemEventType = 2130;

        /// <remarks />
        public const uint DeviceFailureEventType = 2131;

        /// <remarks />
        public const uint SystemStatusChangeEventType = 11446;

        /// <remarks />
        public const uint BaseModelChangeEventType = 2132;

        /// <remarks />
        public const uint GeneralModelChangeEventType = 2133;

        /// <remarks />
        public const uint SemanticChangeEventType = 2738;

        /// <remarks />
        public const uint EventQueueOverflowEventType = 3035;

        /// <remarks />
        public const uint ProgressEventType = 11436;

        /// <remarks />
        public const uint AggregateFunctionType = 2340;

        /// <remarks />
        public const uint StateMachineType = 2299;

        /// <remarks />
        public const uint FiniteStateMachineType = 2771;

        /// <remarks />
        public const uint StateType = 2307;

        /// <remarks />
        public const uint InitialStateType = 2309;

        /// <remarks />
        public const uint TransitionType = 2310;

        /// <remarks />
        public const uint ChoiceStateType = 15109;

        /// <remarks />
        public const uint TransitionEventType = 2311;

        /// <remarks />
        public const uint AuditUpdateStateEventType = 2315;

        /// <remarks />
        public const uint FileDirectoryType = 13353;

        /// <remarks />
        public const uint TemporaryFileTransferType = 15744;

        /// <remarks />
        public const uint FileTransferStateMachineType = 15803;

        /// <remarks />
        public const uint RoleSetType = 15607;

        /// <remarks />
        public const uint RoleType = 15620;

        /// <remarks />
        public const uint RoleMappingRuleChangedAuditEventType = 17641;

        /// <remarks />
        public const uint DictionaryEntryType = 17589;

        /// <remarks />
        public const uint DictionaryFolderType = 17591;

        /// <remarks />
        public const uint IrdiDictionaryEntryType = 17598;

        /// <remarks />
        public const uint UriDictionaryEntryType = 17600;

        /// <remarks />
        public const uint BaseInterfaceType = 17602;

        /// <remarks />
        public const uint IOrderedObjectType = 23513;

        /// <remarks />
        public const uint OrderedListType = 23518;

        /// <remarks />
        public const uint ConditionType = 2782;

        /// <remarks />
        public const uint DialogConditionType = 2830;

        /// <remarks />
        public const uint AcknowledgeableConditionType = 2881;

        /// <remarks />
        public const uint AlarmConditionType = 2915;

        /// <remarks />
        public const uint AlarmGroupType = 16405;

        /// <remarks />
        public const uint ShelvedStateMachineType = 2929;

        /// <remarks />
        public const uint LimitAlarmType = 2955;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType = 9318;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType = 9341;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType = 9906;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType = 10060;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType = 9482;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType = 10368;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType = 10214;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType = 9764;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType = 9623;

        /// <remarks />
        public const uint DiscreteAlarmType = 10523;

        /// <remarks />
        public const uint OffNormalAlarmType = 10637;

        /// <remarks />
        public const uint SystemOffNormalAlarmType = 11753;

        /// <remarks />
        public const uint TripAlarmType = 10751;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType = 18347;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType = 18496;

        /// <remarks />
        public const uint CertificateExpirationAlarmType = 13225;

        /// <remarks />
        public const uint DiscrepancyAlarmType = 17080;

        /// <remarks />
        public const uint BaseConditionClassType = 11163;

        /// <remarks />
        public const uint ProcessConditionClassType = 11164;

        /// <remarks />
        public const uint MaintenanceConditionClassType = 11165;

        /// <remarks />
        public const uint SystemConditionClassType = 11166;

        /// <remarks />
        public const uint SafetyConditionClassType = 17218;

        /// <remarks />
        public const uint HighlyManagedAlarmConditionClassType = 17219;

        /// <remarks />
        public const uint TrainingConditionClassType = 17220;

        /// <remarks />
        public const uint StatisticalConditionClassType = 18665;

        /// <remarks />
        public const uint TestingConditionClassType = 17221;

        /// <remarks />
        public const uint AuditConditionEventType = 2790;

        /// <remarks />
        public const uint AuditConditionEnableEventType = 2803;

        /// <remarks />
        public const uint AuditConditionCommentEventType = 2829;

        /// <remarks />
        public const uint AuditConditionRespondEventType = 8927;

        /// <remarks />
        public const uint AuditConditionAcknowledgeEventType = 8944;

        /// <remarks />
        public const uint AuditConditionConfirmEventType = 8961;

        /// <remarks />
        public const uint AuditConditionShelvingEventType = 11093;

        /// <remarks />
        public const uint AuditConditionSuppressionEventType = 17225;

        /// <remarks />
        public const uint AuditConditionSilenceEventType = 17242;

        /// <remarks />
        public const uint AuditConditionResetEventType = 15013;

        /// <remarks />
        public const uint AuditConditionOutOfServiceEventType = 17259;

        /// <remarks />
        public const uint RefreshStartEventType = 2787;

        /// <remarks />
        public const uint RefreshEndEventType = 2788;

        /// <remarks />
        public const uint RefreshRequiredEventType = 2789;

        /// <remarks />
        public const uint AlarmMetricsType = 17279;

        /// <remarks />
        public const uint ProgramStateMachineType = 2391;

        /// <remarks />
        public const uint ProgramTransitionEventType = 2378;

        /// <remarks />
        public const uint AuditProgramTransitionEventType = 11856;

        /// <remarks />
        public const uint ProgramTransitionAuditEventType = 3806;

        /// <remarks />
        public const uint HistoricalDataConfigurationType = 2318;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType = 2330;

        /// <remarks />
        public const uint AuditHistoryEventUpdateEventType = 2999;

        /// <remarks />
        public const uint AuditHistoryValueUpdateEventType = 3006;

        /// <remarks />
        public const uint AuditHistoryAnnotationUpdateEventType = 19095;

        /// <remarks />
        public const uint AuditHistoryDeleteEventType = 3012;

        /// <remarks />
        public const uint AuditHistoryRawModifyDeleteEventType = 3014;

        /// <remarks />
        public const uint AuditHistoryAtTimeDeleteEventType = 3019;

        /// <remarks />
        public const uint AuditHistoryEventDeleteEventType = 3022;

        /// <remarks />
        public const uint TrustListType = 12522;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType = 19297;

        /// <remarks />
        public const uint CertificateGroupType = 12555;

        /// <remarks />
        public const uint CertificateGroupFolderType = 13813;

        /// <remarks />
        public const uint CertificateType = 12556;

        /// <remarks />
        public const uint ApplicationCertificateType = 12557;

        /// <remarks />
        public const uint HttpsCertificateType = 12558;

        /// <remarks />
        public const uint UserCredentialCertificateType = 15181;

        /// <remarks />
        public const uint RsaMinApplicationCertificateType = 12559;

        /// <remarks />
        public const uint RsaSha256ApplicationCertificateType = 12560;

        /// <remarks />
        public const uint EccApplicationCertificateType = 23537;

        /// <remarks />
        public const uint EccNistP256ApplicationCertificateType = 23538;

        /// <remarks />
        public const uint EccNistP384ApplicationCertificateType = 23539;

        /// <remarks />
        public const uint EccBrainpoolP256r1ApplicationCertificateType = 23540;

        /// <remarks />
        public const uint EccBrainpoolP384r1ApplicationCertificateType = 23541;

        /// <remarks />
        public const uint EccCurve25519ApplicationCertificateType = 23542;

        /// <remarks />
        public const uint EccCurve448ApplicationCertificateType = 23543;

        /// <remarks />
        public const uint TrustListUpdatedAuditEventType = 12561;

        /// <remarks />
        public const uint ServerConfigurationType = 12581;

        /// <remarks />
        public const uint CertificateUpdatedAuditEventType = 12620;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType = 17496;

        /// <remarks />
        public const uint KeyCredentialConfigurationType = 18001;

        /// <remarks />
        public const uint KeyCredentialAuditEventType = 18011;

        /// <remarks />
        public const uint KeyCredentialUpdatedAuditEventType = 18029;

        /// <remarks />
        public const uint KeyCredentialDeletedAuditEventType = 18047;

        /// <remarks />
        public const uint AuthorizationServicesConfigurationFolderType = 23556;

        /// <remarks />
        public const uint AuthorizationServiceConfigurationType = 17852;

        /// <remarks />
        public const uint AggregateConfigurationType = 11187;

        /// <remarks />
        public const uint PubSubKeyServiceType = 15906;

        /// <remarks />
        public const uint SecurityGroupFolderType = 15452;

        /// <remarks />
        public const uint SecurityGroupType = 15471;

        /// <remarks />
        public const uint PublishSubscribeType = 14416;

        /// <remarks />
        public const uint PublishedDataSetType = 14509;

        /// <remarks />
        public const uint ExtensionFieldsType = 15489;

        /// <remarks />
        public const uint PublishedDataItemsType = 14534;

        /// <remarks />
        public const uint PublishedEventsType = 14572;

        /// <remarks />
        public const uint DataSetFolderType = 14477;

        /// <remarks />
        public const uint PubSubConnectionType = 14209;

        /// <remarks />
        public const uint ConnectionTransportType = 17721;

        /// <remarks />
        public const uint PubSubGroupType = 14232;

        /// <remarks />
        public const uint WriterGroupType = 17725;

        /// <remarks />
        public const uint WriterGroupTransportType = 17997;

        /// <remarks />
        public const uint WriterGroupMessageType = 17998;

        /// <remarks />
        public const uint ReaderGroupType = 17999;

        /// <remarks />
        public const uint ReaderGroupTransportType = 21090;

        /// <remarks />
        public const uint ReaderGroupMessageType = 21091;

        /// <remarks />
        public const uint DataSetWriterType = 15298;

        /// <remarks />
        public const uint DataSetWriterTransportType = 15305;

        /// <remarks />
        public const uint DataSetWriterMessageType = 21096;

        /// <remarks />
        public const uint DataSetReaderType = 15306;

        /// <remarks />
        public const uint DataSetReaderTransportType = 15319;

        /// <remarks />
        public const uint DataSetReaderMessageType = 21104;

        /// <remarks />
        public const uint SubscribedDataSetType = 15108;

        /// <remarks />
        public const uint TargetVariablesType = 15111;

        /// <remarks />
        public const uint SubscribedDataSetMirrorType = 15127;

        /// <remarks />
        public const uint PubSubStatusType = 14643;

        /// <remarks />
        public const uint PubSubDiagnosticsType = 19677;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType = 19732;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType = 19786;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType = 19834;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType = 19903;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType = 19968;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType = 20027;

        /// <remarks />
        public const uint PubSubStatusEventType = 15535;

        /// <remarks />
        public const uint PubSubTransportLimitsExceedEventType = 15548;

        /// <remarks />
        public const uint PubSubCommunicationFailureEventType = 15563;

        /// <remarks />
        public const uint UadpWriterGroupMessageType = 21105;

        /// <remarks />
        public const uint UadpDataSetWriterMessageType = 21111;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType = 21116;

        /// <remarks />
        public const uint JsonWriterGroupMessageType = 21126;

        /// <remarks />
        public const uint JsonDataSetWriterMessageType = 21128;

        /// <remarks />
        public const uint JsonDataSetReaderMessageType = 21130;

        /// <remarks />
        public const uint DatagramConnectionTransportType = 15064;

        /// <remarks />
        public const uint DatagramWriterGroupTransportType = 21133;

        /// <remarks />
        public const uint BrokerConnectionTransportType = 15155;

        /// <remarks />
        public const uint BrokerWriterGroupTransportType = 21136;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportType = 21138;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportType = 21142;

        /// <remarks />
        public const uint NetworkAddressType = 21145;

        /// <remarks />
        public const uint NetworkAddressUrlType = 21147;

        /// <remarks />
        public const uint AliasNameType = 23455;

        /// <remarks />
        public const uint AliasNameCategoryType = 23456;

        /// <remarks />
        public const uint IIetfBaseNetworkInterfaceType = 24148;

        /// <remarks />
        public const uint IIeeeBaseEthernetPortType = 24158;

        /// <remarks />
        public const uint IIeeeAutoNegotiationStatusType = 24233;

        /// <remarks />
        public const uint IBaseEthernetCapabilitiesType = 24167;

        /// <remarks />
        public const uint ISrClassType = 24169;

        /// <remarks />
        public const uint IIeeeBaseTsnStreamType = 24173;

        /// <remarks />
        public const uint IIeeeBaseTsnTrafficSpecificationType = 24179;

        /// <remarks />
        public const uint IIeeeBaseTsnStatusStreamType = 24183;

        /// <remarks />
        public const uint IIeeeTsnInterfaceConfigurationType = 24188;

        /// <remarks />
        public const uint IIeeeTsnInterfaceConfigurationTalkerType = 24191;

        /// <remarks />
        public const uint IIeeeTsnInterfaceConfigurationListenerType = 24195;

        /// <remarks />
        public const uint IIeeeTsnMacAddressType = 24199;

        /// <remarks />
        public const uint IIeeeTsnVlanTagType = 24202;

        /// <remarks />
        public const uint IPriorityMappingEntryType = 24205;
    }
    #endregion

    #region ReferenceType Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ReferenceTypes
    {
        /// <remarks />
        public const uint References = 31;

        /// <remarks />
        public const uint NonHierarchicalReferences = 32;

        /// <remarks />
        public const uint HierarchicalReferences = 33;

        /// <remarks />
        public const uint HasChild = 34;

        /// <remarks />
        public const uint Organizes = 35;

        /// <remarks />
        public const uint HasEventSource = 36;

        /// <remarks />
        public const uint HasModellingRule = 37;

        /// <remarks />
        public const uint HasEncoding = 38;

        /// <remarks />
        public const uint HasDescription = 39;

        /// <remarks />
        public const uint HasTypeDefinition = 40;

        /// <remarks />
        public const uint GeneratesEvent = 41;

        /// <remarks />
        public const uint AlwaysGeneratesEvent = 3065;

        /// <remarks />
        public const uint Aggregates = 44;

        /// <remarks />
        public const uint HasSubtype = 45;

        /// <remarks />
        public const uint HasProperty = 46;

        /// <remarks />
        public const uint HasComponent = 47;

        /// <remarks />
        public const uint HasNotifier = 48;

        /// <remarks />
        public const uint HasOrderedComponent = 49;

        /// <remarks />
        public const uint FromState = 51;

        /// <remarks />
        public const uint ToState = 52;

        /// <remarks />
        public const uint HasCause = 53;

        /// <remarks />
        public const uint HasEffect = 54;

        /// <remarks />
        public const uint HasSubStateMachine = 117;

        /// <remarks />
        public const uint HasHistoricalConfiguration = 56;

        /// <remarks />
        public const uint HasArgumentDescription = 129;

        /// <remarks />
        public const uint HasOptionalInputArgumentDescription = 131;

        /// <remarks />
        public const uint HasGuard = 15112;

        /// <remarks />
        public const uint HasDictionaryEntry = 17597;

        /// <remarks />
        public const uint HasInterface = 17603;

        /// <remarks />
        public const uint HasAddIn = 17604;

        /// <remarks />
        public const uint HasTrueSubState = 9004;

        /// <remarks />
        public const uint HasFalseSubState = 9005;

        /// <remarks />
        public const uint HasAlarmSuppressionGroup = 16361;

        /// <remarks />
        public const uint AlarmGroupMember = 16362;

        /// <remarks />
        public const uint HasCondition = 9006;

        /// <remarks />
        public const uint HasEffectDisable = 17276;

        /// <remarks />
        public const uint HasEffectEnable = 17983;

        /// <remarks />
        public const uint HasEffectSuppressed = 17984;

        /// <remarks />
        public const uint HasEffectUnsuppressed = 17985;

        /// <remarks />
        public const uint HasPubSubConnection = 14476;

        /// <remarks />
        public const uint DataSetToWriter = 14936;

        /// <remarks />
        public const uint HasDataSetWriter = 15296;

        /// <remarks />
        public const uint HasWriterGroup = 18804;

        /// <remarks />
        public const uint HasDataSetReader = 15297;

        /// <remarks />
        public const uint HasReaderGroup = 18805;

        /// <remarks />
        public const uint AliasFor = 23469;
    }
    #endregion

    #region Variable Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Variables
    {
        /// <remarks />
        public const uint DataTypeDescriptionType_DataTypeVersion = 104;

        /// <remarks />
        public const uint DataTypeDescriptionType_DictionaryFragment = 105;

        /// <remarks />
        public const uint DataTypeDictionaryType_DataTypeVersion = 106;

        /// <remarks />
        public const uint DataTypeDictionaryType_NamespaceUri = 107;

        /// <remarks />
        public const uint DataTypeDictionaryType_Deprecated = 15001;

        /// <remarks />
        public const uint NamingRuleType_EnumValues = 12169;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceUri = 15958;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceVersion = 15959;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespacePublicationDate = 15960;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_IsNamespaceSubset = 15961;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_StaticNodeIdTypes = 15962;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_StaticNumericNodeIdRange = 15963;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_StaticStringNodeIdPattern = 15964;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Size = 15966;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Writable = 15967;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_UserWritable = 15968;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_OpenCount = 15969;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Open_InputArguments = 15972;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Open_OutputArguments = 15973;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Close_InputArguments = 15975;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Read_InputArguments = 15977;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Read_OutputArguments = 15978;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_Write_InputArguments = 15980;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_GetPosition_InputArguments = 15982;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_GetPosition_OutputArguments = 15983;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_NamespaceFile_SetPosition_InputArguments = 15985;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_DefaultRolePermissions = 16134;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_DefaultUserRolePermissions = 16135;

        /// <remarks />
        public const uint OPCUANamespaceMetadata_DefaultAccessRestrictions = 16136;

        /// <remarks />
        public const uint NodeVersion = 3068;

        /// <remarks />
        public const uint ViewVersion = 12170;

        /// <remarks />
        public const uint Icon = 3067;

        /// <remarks />
        public const uint LocalTime = 3069;

        /// <remarks />
        public const uint AllowNulls = 3070;

        /// <remarks />
        public const uint ValueAsText = 11433;

        /// <remarks />
        public const uint MaxStringLength = 11498;

        /// <remarks />
        public const uint MaxCharacters = 15002;

        /// <remarks />
        public const uint MaxByteStringLength = 12908;

        /// <remarks />
        public const uint MaxArrayLength = 11512;

        /// <remarks />
        public const uint EngineeringUnits = 11513;

        /// <remarks />
        public const uint EnumStrings = 11432;

        /// <remarks />
        public const uint EnumValues = 3071;

        /// <remarks />
        public const uint OptionSetValues = 12745;

        /// <remarks />
        public const uint InputArguments = 3072;

        /// <remarks />
        public const uint OutputArguments = 3073;

        /// <remarks />
        public const uint DefaultInstanceBrowseName = 17605;

        /// <remarks />
        public const uint ServerType_ServerArray = 2005;

        /// <remarks />
        public const uint ServerType_NamespaceArray = 2006;

        /// <remarks />
        public const uint ServerType_UrisVersion = 15003;

        /// <remarks />
        public const uint ServerType_ServerStatus = 2007;

        /// <remarks />
        public const uint ServerType_ServerStatus_StartTime = 3074;

        /// <remarks />
        public const uint ServerType_ServerStatus_CurrentTime = 3075;

        /// <remarks />
        public const uint ServerType_ServerStatus_State = 3076;

        /// <remarks />
        public const uint ServerType_ServerStatus_BuildInfo = 3077;

        /// <remarks />
        public const uint ServerType_ServerStatus_BuildInfo_ProductUri = 3078;

        /// <remarks />
        public const uint ServerType_ServerStatus_BuildInfo_ManufacturerName = 3079;

        /// <remarks />
        public const uint ServerType_ServerStatus_BuildInfo_ProductName = 3080;

        /// <remarks />
        public const uint ServerType_ServerStatus_BuildInfo_SoftwareVersion = 3081;

        /// <remarks />
        public const uint ServerType_ServerStatus_BuildInfo_BuildNumber = 3082;

        /// <remarks />
        public const uint ServerType_ServerStatus_BuildInfo_BuildDate = 3083;

        /// <remarks />
        public const uint ServerType_ServerStatus_SecondsTillShutdown = 3084;

        /// <remarks />
        public const uint ServerType_ServerStatus_ShutdownReason = 3085;

        /// <remarks />
        public const uint ServerType_ServiceLevel = 2008;

        /// <remarks />
        public const uint ServerType_Auditing = 2742;

        /// <remarks />
        public const uint ServerType_EstimatedReturnTime = 12882;

        /// <remarks />
        public const uint ServerType_LocalTime = 17612;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_ServerProfileArray = 3086;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_LocaleIdArray = 3087;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_MinSupportedSampleRate = 3088;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_MaxBrowseContinuationPoints = 3089;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_MaxQueryContinuationPoints = 3090;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_MaxHistoryContinuationPoints = 3091;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_SoftwareCertificates = 3092;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_RoleSet_AddRole_InputArguments = 16291;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_RoleSet_AddRole_OutputArguments = 16292;

        /// <remarks />
        public const uint ServerType_ServerCapabilities_RoleSet_RemoveRole_InputArguments = 16294;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary = 3095;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = 3096;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = 3097;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = 3098;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = 3099;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = 3100;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = 3101;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = 3102;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = 3104;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = 3105;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = 3106;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = 3107;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = 3108;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray = 3110;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = 3112;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = 3113;

        /// <remarks />
        public const uint ServerType_ServerDiagnostics_EnabledFlag = 3114;

        /// <remarks />
        public const uint ServerType_ServerRedundancy_RedundancySupport = 3115;

        /// <remarks />
        public const uint ServerType_GetMonitoredItems_InputArguments = 11490;

        /// <remarks />
        public const uint ServerType_GetMonitoredItems_OutputArguments = 11491;

        /// <remarks />
        public const uint ServerType_ResendData_InputArguments = 12872;

        /// <remarks />
        public const uint ServerType_SetSubscriptionDurable_InputArguments = 12747;

        /// <remarks />
        public const uint ServerType_SetSubscriptionDurable_OutputArguments = 12748;

        /// <remarks />
        public const uint ServerType_RequestServerStateChange_InputArguments = 12884;

        /// <remarks />
        public const uint ServerCapabilitiesType_ServerProfileArray = 2014;

        /// <remarks />
        public const uint ServerCapabilitiesType_LocaleIdArray = 2016;

        /// <remarks />
        public const uint ServerCapabilitiesType_MinSupportedSampleRate = 2017;

        /// <remarks />
        public const uint ServerCapabilitiesType_MaxBrowseContinuationPoints = 2732;

        /// <remarks />
        public const uint ServerCapabilitiesType_MaxQueryContinuationPoints = 2733;

        /// <remarks />
        public const uint ServerCapabilitiesType_MaxHistoryContinuationPoints = 2734;

        /// <remarks />
        public const uint ServerCapabilitiesType_SoftwareCertificates = 3049;

        /// <remarks />
        public const uint ServerCapabilitiesType_MaxArrayLength = 11549;

        /// <remarks />
        public const uint ServerCapabilitiesType_MaxStringLength = 11550;

        /// <remarks />
        public const uint ServerCapabilitiesType_MaxByteStringLength = 12910;

        /// <remarks />
        public const uint ServerCapabilitiesType_VendorCapability_Placeholder = 11562;

        /// <remarks />
        public const uint ServerCapabilitiesType_RoleSet_AddRole_InputArguments = 16297;

        /// <remarks />
        public const uint ServerCapabilitiesType_RoleSet_AddRole_OutputArguments = 16298;

        /// <remarks />
        public const uint ServerCapabilitiesType_RoleSet_RemoveRole_InputArguments = 16300;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary = 2021;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount = 3116;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount = 3117;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount = 3118;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount = 3119;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount = 3120;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount = 3121;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount = 3122;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount = 3124;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount = 3125;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount = 3126;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = 3127;

        /// <remarks />
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount = 3128;

        /// <remarks />
        public const uint ServerDiagnosticsType_SamplingIntervalDiagnosticsArray = 2022;

        /// <remarks />
        public const uint ServerDiagnosticsType_SubscriptionDiagnosticsArray = 2023;

        /// <remarks />
        public const uint ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray = 3129;

        /// <remarks />
        public const uint ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = 3130;

        /// <remarks />
        public const uint ServerDiagnosticsType_EnabledFlag = 2025;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_SessionDiagnosticsArray = 2027;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray = 2028;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics = 12098;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId = 12099;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName = 12100;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription = 12101;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri = 12102;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl = 12103;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds = 12104;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout = 12105;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize = 12106;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime = 12107;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime = 12108;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount = 12109;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount = 12110;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue = 12111;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount = 12112;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount = 12113;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount = 12114;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount = 12115;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount = 12116;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount = 12117;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount = 12118;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount = 12119;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount = 12120;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount = 12121;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount = 12122;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount = 12123;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount = 12124;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount = 12125;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount = 12126;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount = 12127;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount = 12128;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount = 12129;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount = 12130;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount = 12131;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount = 12132;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount = 12133;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount = 12134;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount = 12135;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount = 12136;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = 12137;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount = 12138;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount = 12139;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount = 12140;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount = 12141;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics = 12142;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId = 12143;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession = 12144;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory = 12145;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism = 12146;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding = 12147;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol = 12148;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode = 12149;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri = 12150;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate = 12151;

        /// <remarks />
        public const uint SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray = 12152;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics = 2030;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SessionId = 3131;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SessionName = 3132;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription = 3133;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri = 3134;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl = 3135;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds = 3136;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout = 3137;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize = 3138;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime = 3139;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime = 3140;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount = 3141;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount = 3142;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue = 3143;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount = 8898;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount = 11891;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount = 3151;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount = 3152;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount = 3153;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount = 3154;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CallCount = 3155;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount = 3156;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount = 3157;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount = 3158;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount = 3159;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount = 3160;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount = 3161;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount = 3162;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount = 3163;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount = 3164;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount = 3165;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount = 3166;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount = 3167;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount = 3168;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount = 3169;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount = 3170;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount = 3171;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount = 3172;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount = 3173;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = 3174;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount = 3175;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount = 3176;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount = 3177;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount = 3178;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics = 2031;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId = 3179;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession = 3180;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory = 3181;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism = 3182;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding = 3183;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol = 3184;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode = 3185;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri = 3186;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate = 3187;

        /// <remarks />
        public const uint SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray = 2032;

        /// <remarks />
        public const uint ServerRedundancyType_RedundancySupport = 2035;

        /// <remarks />
        public const uint TransparentRedundancyType_CurrentServerId = 2037;

        /// <remarks />
        public const uint TransparentRedundancyType_RedundantServerArray = 2038;

        /// <remarks />
        public const uint NonTransparentRedundancyType_ServerUriArray = 2040;

        /// <remarks />
        public const uint NonTransparentNetworkRedundancyType_ServerNetworkGroups = 11948;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerRead = 11565;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerHistoryReadData = 12161;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerHistoryReadEvents = 12162;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerWrite = 11567;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerHistoryUpdateData = 12163;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerHistoryUpdateEvents = 12164;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerMethodCall = 11569;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerBrowse = 11570;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerRegisterNodes = 11571;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds = 11572;

        /// <remarks />
        public const uint OperationLimitsType_MaxNodesPerNodeManagement = 11573;

        /// <remarks />
        public const uint OperationLimitsType_MaxMonitoredItemsPerCall = 11574;

        /// <remarks />
        public const uint FileType_Size = 11576;

        /// <remarks />
        public const uint FileType_Writable = 12686;

        /// <remarks />
        public const uint FileType_UserWritable = 12687;

        /// <remarks />
        public const uint FileType_OpenCount = 11579;

        /// <remarks />
        public const uint FileType_MimeType = 13341;

        /// <remarks />
        public const uint FileType_MaxByteStringLength = 24244;

        /// <remarks />
        public const uint FileType_Open_InputArguments = 11581;

        /// <remarks />
        public const uint FileType_Open_OutputArguments = 11582;

        /// <remarks />
        public const uint FileType_Close_InputArguments = 11584;

        /// <remarks />
        public const uint FileType_Read_InputArguments = 11586;

        /// <remarks />
        public const uint FileType_Read_OutputArguments = 11587;

        /// <remarks />
        public const uint FileType_Write_InputArguments = 11589;

        /// <remarks />
        public const uint FileType_GetPosition_InputArguments = 11591;

        /// <remarks />
        public const uint FileType_GetPosition_OutputArguments = 11592;

        /// <remarks />
        public const uint FileType_SetPosition_InputArguments = 11594;

        /// <remarks />
        public const uint AddressSpaceFileType_Open_InputArguments = 11601;

        /// <remarks />
        public const uint AddressSpaceFileType_Open_OutputArguments = 11602;

        /// <remarks />
        public const uint AddressSpaceFileType_Close_InputArguments = 11604;

        /// <remarks />
        public const uint AddressSpaceFileType_Read_InputArguments = 11606;

        /// <remarks />
        public const uint AddressSpaceFileType_Read_OutputArguments = 11607;

        /// <remarks />
        public const uint AddressSpaceFileType_Write_InputArguments = 11609;

        /// <remarks />
        public const uint AddressSpaceFileType_GetPosition_InputArguments = 11611;

        /// <remarks />
        public const uint AddressSpaceFileType_GetPosition_OutputArguments = 11612;

        /// <remarks />
        public const uint AddressSpaceFileType_SetPosition_InputArguments = 11614;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceUri = 11617;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceVersion = 11618;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespacePublicationDate = 11619;

        /// <remarks />
        public const uint NamespaceMetadataType_IsNamespaceSubset = 11620;

        /// <remarks />
        public const uint NamespaceMetadataType_StaticNodeIdTypes = 11621;

        /// <remarks />
        public const uint NamespaceMetadataType_StaticNumericNodeIdRange = 11622;

        /// <remarks />
        public const uint NamespaceMetadataType_StaticStringNodeIdPattern = 11623;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Size = 11625;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Writable = 12690;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_UserWritable = 12691;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_OpenCount = 11628;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Open_InputArguments = 11630;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Open_OutputArguments = 11631;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Close_InputArguments = 11633;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Read_InputArguments = 11635;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Read_OutputArguments = 11636;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_Write_InputArguments = 11638;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments = 11640;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments = 11641;

        /// <remarks />
        public const uint NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments = 11643;

        /// <remarks />
        public const uint NamespaceMetadataType_DefaultRolePermissions = 16137;

        /// <remarks />
        public const uint NamespaceMetadataType_DefaultUserRolePermissions = 16138;

        /// <remarks />
        public const uint NamespaceMetadataType_DefaultAccessRestrictions = 16139;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri = 11647;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion = 11648;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate = 11649;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset = 11650;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes = 11651;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange = 11652;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern = 11653;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size = 11655;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable = 12692;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable = 12693;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount = 11658;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments = 11660;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments = 11661;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments = 11663;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments = 11665;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments = 11666;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments = 11668;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments = 11670;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments = 11671;

        /// <remarks />
        public const uint NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments = 11673;

        /// <remarks />
        public const uint BaseEventType_EventId = 2042;

        /// <remarks />
        public const uint BaseEventType_EventType = 2043;

        /// <remarks />
        public const uint BaseEventType_SourceNode = 2044;

        /// <remarks />
        public const uint BaseEventType_SourceName = 2045;

        /// <remarks />
        public const uint BaseEventType_Time = 2046;

        /// <remarks />
        public const uint BaseEventType_ReceiveTime = 2047;

        /// <remarks />
        public const uint BaseEventType_LocalTime = 3190;

        /// <remarks />
        public const uint BaseEventType_Message = 2050;

        /// <remarks />
        public const uint BaseEventType_Severity = 2051;

        /// <remarks />
        public const uint AuditEventType_ActionTimeStamp = 2053;

        /// <remarks />
        public const uint AuditEventType_Status = 2054;

        /// <remarks />
        public const uint AuditEventType_ServerId = 2055;

        /// <remarks />
        public const uint AuditEventType_ClientAuditEntryId = 2056;

        /// <remarks />
        public const uint AuditEventType_ClientUserId = 2057;

        /// <remarks />
        public const uint AuditSecurityEventType_StatusCodeId = 17615;

        /// <remarks />
        public const uint AuditChannelEventType_SecureChannelId = 2745;

        /// <remarks />
        public const uint AuditOpenSecureChannelEventType_ClientCertificate = 2061;

        /// <remarks />
        public const uint AuditOpenSecureChannelEventType_ClientCertificateThumbprint = 2746;

        /// <remarks />
        public const uint AuditOpenSecureChannelEventType_RequestType = 2062;

        /// <remarks />
        public const uint AuditOpenSecureChannelEventType_SecurityPolicyUri = 2063;

        /// <remarks />
        public const uint AuditOpenSecureChannelEventType_SecurityMode = 2065;

        /// <remarks />
        public const uint AuditOpenSecureChannelEventType_RequestedLifetime = 2066;

        /// <remarks />
        public const uint AuditOpenSecureChannelEventType_CertificateErrorEventId = 24135;

        /// <remarks />
        public const uint AuditSessionEventType_SessionId = 2070;

        /// <remarks />
        public const uint AuditCreateSessionEventType_SecureChannelId = 2072;

        /// <remarks />
        public const uint AuditCreateSessionEventType_ClientCertificate = 2073;

        /// <remarks />
        public const uint AuditCreateSessionEventType_ClientCertificateThumbprint = 2747;

        /// <remarks />
        public const uint AuditCreateSessionEventType_RevisedSessionTimeout = 2074;

        /// <remarks />
        public const uint AuditUrlMismatchEventType_EndpointUrl = 2749;

        /// <remarks />
        public const uint AuditActivateSessionEventType_ClientSoftwareCertificates = 2076;

        /// <remarks />
        public const uint AuditActivateSessionEventType_UserIdentityToken = 2077;

        /// <remarks />
        public const uint AuditActivateSessionEventType_SecureChannelId = 11485;

        /// <remarks />
        public const uint AuditCancelEventType_RequestHandle = 2079;

        /// <remarks />
        public const uint AuditCertificateEventType_Certificate = 2081;

        /// <remarks />
        public const uint AuditCertificateDataMismatchEventType_InvalidHostname = 2083;

        /// <remarks />
        public const uint AuditCertificateDataMismatchEventType_InvalidUri = 2084;

        /// <remarks />
        public const uint AuditAddNodesEventType_NodesToAdd = 2092;

        /// <remarks />
        public const uint AuditDeleteNodesEventType_NodesToDelete = 2094;

        /// <remarks />
        public const uint AuditAddReferencesEventType_ReferencesToAdd = 2096;

        /// <remarks />
        public const uint AuditDeleteReferencesEventType_ReferencesToDelete = 2098;

        /// <remarks />
        public const uint AuditWriteUpdateEventType_AttributeId = 2750;

        /// <remarks />
        public const uint AuditWriteUpdateEventType_IndexRange = 2101;

        /// <remarks />
        public const uint AuditWriteUpdateEventType_OldValue = 2102;

        /// <remarks />
        public const uint AuditWriteUpdateEventType_NewValue = 2103;

        /// <remarks />
        public const uint AuditHistoryUpdateEventType_ParameterDataTypeId = 2751;

        /// <remarks />
        public const uint AuditUpdateMethodEventType_MethodId = 2128;

        /// <remarks />
        public const uint AuditUpdateMethodEventType_InputArguments = 2129;

        /// <remarks />
        public const uint SystemStatusChangeEventType_SystemState = 11696;

        /// <remarks />
        public const uint GeneralModelChangeEventType_Changes = 2134;

        /// <remarks />
        public const uint SemanticChangeEventType_Changes = 2739;

        /// <remarks />
        public const uint ProgressEventType_Context = 12502;

        /// <remarks />
        public const uint ProgressEventType_Progress = 12503;

        /// <remarks />
        public const uint ServerStatusType_StartTime = 2139;

        /// <remarks />
        public const uint ServerStatusType_CurrentTime = 2140;

        /// <remarks />
        public const uint ServerStatusType_State = 2141;

        /// <remarks />
        public const uint ServerStatusType_BuildInfo = 2142;

        /// <remarks />
        public const uint ServerStatusType_BuildInfo_ProductUri = 3698;

        /// <remarks />
        public const uint ServerStatusType_BuildInfo_ManufacturerName = 3699;

        /// <remarks />
        public const uint ServerStatusType_BuildInfo_ProductName = 3700;

        /// <remarks />
        public const uint ServerStatusType_BuildInfo_SoftwareVersion = 3701;

        /// <remarks />
        public const uint ServerStatusType_BuildInfo_BuildNumber = 3702;

        /// <remarks />
        public const uint ServerStatusType_BuildInfo_BuildDate = 3703;

        /// <remarks />
        public const uint ServerStatusType_SecondsTillShutdown = 2752;

        /// <remarks />
        public const uint ServerStatusType_ShutdownReason = 2753;

        /// <remarks />
        public const uint BuildInfoType_ProductUri = 3052;

        /// <remarks />
        public const uint BuildInfoType_ManufacturerName = 3053;

        /// <remarks />
        public const uint BuildInfoType_ProductName = 3054;

        /// <remarks />
        public const uint BuildInfoType_SoftwareVersion = 3055;

        /// <remarks />
        public const uint BuildInfoType_BuildNumber = 3056;

        /// <remarks />
        public const uint BuildInfoType_BuildDate = 3057;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_ServerViewCount = 2151;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_CurrentSessionCount = 2152;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_CumulatedSessionCount = 2153;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_SecurityRejectedSessionCount = 2154;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_RejectedSessionCount = 2155;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_SessionTimeoutCount = 2156;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_SessionAbortCount = 2157;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_PublishingIntervalCount = 2159;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_CurrentSubscriptionCount = 2160;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_CumulatedSubscriptionCount = 2161;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount = 2162;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType_RejectedRequestsCount = 2163;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics = 12779;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval = 12780;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount = 12781;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount = 12782;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount = 12783;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsType_SamplingInterval = 2166;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount = 11697;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount = 11698;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount = 11699;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics = 12784;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId = 12785;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId = 12786;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority = 12787;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval = 12788;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount = 12789;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount = 12790;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish = 12791;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled = 12792;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount = 12793;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount = 12794;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount = 12795;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount = 12796;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount = 12797;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount = 12798;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount = 12799;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount = 12800;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount = 12801;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount = 12802;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount = 12803;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount = 12804;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount = 12805;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount = 12806;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount = 12807;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount = 12808;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount = 12809;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount = 12810;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount = 12811;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount = 12812;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount = 12813;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber = 12814;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount = 12815;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_SessionId = 2173;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_SubscriptionId = 2174;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_Priority = 2175;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_PublishingInterval = 2176;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_MaxKeepAliveCount = 2177;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_MaxLifetimeCount = 8888;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_MaxNotificationsPerPublish = 2179;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_PublishingEnabled = 2180;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_ModifyCount = 2181;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_EnableCount = 2182;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_DisableCount = 2183;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_RepublishRequestCount = 2184;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_RepublishMessageRequestCount = 2185;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_RepublishMessageCount = 2186;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_TransferRequestCount = 2187;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_TransferredToAltClientCount = 2188;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_TransferredToSameClientCount = 2189;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_PublishRequestCount = 2190;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_DataChangeNotificationsCount = 2191;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_EventNotificationsCount = 2998;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_NotificationsCount = 2193;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_LatePublishRequestCount = 8889;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_CurrentKeepAliveCount = 8890;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_CurrentLifetimeCount = 8891;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_UnacknowledgedMessageCount = 8892;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_DiscardedMessageCount = 8893;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_MonitoredItemCount = 8894;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_DisabledMonitoredItemCount = 8895;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_MonitoringQueueOverflowCount = 8896;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_NextSequenceNumber = 8897;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType_EventQueueOverflowCount = 8902;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics = 12816;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SessionId = 12817;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SessionName = 12818;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription = 12819;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri = 12820;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl = 12821;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds = 12822;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout = 12823;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize = 12824;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime = 12825;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime = 12826;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount = 12827;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount = 12828;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue = 12829;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount = 12830;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount = 12831;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount = 12832;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount = 12833;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount = 12834;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount = 12835;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CallCount = 12836;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount = 12837;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount = 12838;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount = 12839;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount = 12840;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount = 12841;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount = 12842;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount = 12843;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount = 12844;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount = 12845;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount = 12846;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount = 12847;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount = 12848;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount = 12849;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount = 12850;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount = 12851;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount = 12852;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount = 12853;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount = 12854;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = 12855;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount = 12856;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount = 12857;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount = 12858;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount = 12859;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_SessionId = 2198;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_SessionName = 2199;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_ClientDescription = 2200;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_ServerUri = 2201;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_EndpointUrl = 2202;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_LocaleIds = 2203;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_ActualSessionTimeout = 2204;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_MaxResponseMessageSize = 3050;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_ClientConnectionTime = 2205;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_ClientLastContactTime = 2206;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_CurrentSubscriptionsCount = 2207;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_CurrentMonitoredItemsCount = 2208;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue = 2209;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_TotalRequestCount = 8900;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_UnauthorizedRequestCount = 11892;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_ReadCount = 2217;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_HistoryReadCount = 2218;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_WriteCount = 2219;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_HistoryUpdateCount = 2220;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_CallCount = 2221;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_CreateMonitoredItemsCount = 2222;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_ModifyMonitoredItemsCount = 2223;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_SetMonitoringModeCount = 2224;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_SetTriggeringCount = 2225;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_DeleteMonitoredItemsCount = 2226;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_CreateSubscriptionCount = 2227;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_ModifySubscriptionCount = 2228;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_SetPublishingModeCount = 2229;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_PublishCount = 2230;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_RepublishCount = 2231;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_TransferSubscriptionsCount = 2232;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_DeleteSubscriptionsCount = 2233;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_AddNodesCount = 2234;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_AddReferencesCount = 2235;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_DeleteNodesCount = 2236;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_DeleteReferencesCount = 2237;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_BrowseCount = 2238;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_BrowseNextCount = 2239;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount = 2240;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_QueryFirstCount = 2241;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_QueryNextCount = 2242;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_RegisterNodesCount = 2730;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType_UnregisterNodesCount = 2731;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics = 12860;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId = 12861;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession = 12862;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory = 12863;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism = 12864;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding = 12865;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol = 12866;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode = 12867;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri = 12868;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate = 12869;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType_SessionId = 2245;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType_ClientUserIdOfSession = 2246;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType_ClientUserIdHistory = 2247;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType_AuthenticationMechanism = 2248;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType_Encoding = 2249;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType_TransportProtocol = 2250;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType_SecurityMode = 2251;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType_SecurityPolicyUri = 2252;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType_ClientCertificate = 3058;

        /// <remarks />
        public const uint OptionSetType_OptionSetValues = 11488;

        /// <remarks />
        public const uint OptionSetType_BitMask = 11701;

        /// <remarks />
        public const uint SelectionListType_Selections = 17632;

        /// <remarks />
        public const uint SelectionListType_SelectionDescriptions = 17633;

        /// <remarks />
        public const uint SelectionListType_RestrictToList = 16312;

        /// <remarks />
        public const uint AudioVariableType_ListId = 17988;

        /// <remarks />
        public const uint AudioVariableType_AgencyId = 17989;

        /// <remarks />
        public const uint AudioVariableType_VersionId = 17990;

        /// <remarks />
        public const uint Server_ServerArray = 2254;

        /// <remarks />
        public const uint Server_NamespaceArray = 2255;

        /// <remarks />
        public const uint Server_ServerStatus = 2256;

        /// <remarks />
        public const uint Server_ServerStatus_StartTime = 2257;

        /// <remarks />
        public const uint Server_ServerStatus_CurrentTime = 2258;

        /// <remarks />
        public const uint Server_ServerStatus_State = 2259;

        /// <remarks />
        public const uint Server_ServerStatus_BuildInfo = 2260;

        /// <remarks />
        public const uint Server_ServerStatus_BuildInfo_ProductUri = 2262;

        /// <remarks />
        public const uint Server_ServerStatus_BuildInfo_ManufacturerName = 2263;

        /// <remarks />
        public const uint Server_ServerStatus_BuildInfo_ProductName = 2261;

        /// <remarks />
        public const uint Server_ServerStatus_BuildInfo_SoftwareVersion = 2264;

        /// <remarks />
        public const uint Server_ServerStatus_BuildInfo_BuildNumber = 2265;

        /// <remarks />
        public const uint Server_ServerStatus_BuildInfo_BuildDate = 2266;

        /// <remarks />
        public const uint Server_ServerStatus_SecondsTillShutdown = 2992;

        /// <remarks />
        public const uint Server_ServerStatus_ShutdownReason = 2993;

        /// <remarks />
        public const uint Server_ServiceLevel = 2267;

        /// <remarks />
        public const uint Server_Auditing = 2994;

        /// <remarks />
        public const uint Server_EstimatedReturnTime = 12885;

        /// <remarks />
        public const uint Server_LocalTime = 17634;

        /// <remarks />
        public const uint Server_ServerCapabilities_ServerProfileArray = 2269;

        /// <remarks />
        public const uint Server_ServerCapabilities_LocaleIdArray = 2271;

        /// <remarks />
        public const uint Server_ServerCapabilities_MinSupportedSampleRate = 2272;

        /// <remarks />
        public const uint Server_ServerCapabilities_MaxBrowseContinuationPoints = 2735;

        /// <remarks />
        public const uint Server_ServerCapabilities_MaxQueryContinuationPoints = 2736;

        /// <remarks />
        public const uint Server_ServerCapabilities_MaxHistoryContinuationPoints = 2737;

        /// <remarks />
        public const uint Server_ServerCapabilities_SoftwareCertificates = 3704;

        /// <remarks />
        public const uint Server_ServerCapabilities_MaxArrayLength = 11702;

        /// <remarks />
        public const uint Server_ServerCapabilities_MaxStringLength = 11703;

        /// <remarks />
        public const uint Server_ServerCapabilities_MaxByteStringLength = 12911;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerRead = 11705;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData = 12165;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents = 12166;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite = 11707;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData = 12167;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents = 12168;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall = 11709;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse = 11710;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes = 11711;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds = 11712;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement = 11713;

        /// <remarks />
        public const uint Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall = 11714;

        /// <remarks />
        public const uint Server_ServerCapabilities_RoleSet_AddRole_InputArguments = 16302;

        /// <remarks />
        public const uint Server_ServerCapabilities_RoleSet_AddRole_OutputArguments = 16303;

        /// <remarks />
        public const uint Server_ServerCapabilities_RoleSet_RemoveRole_InputArguments = 16305;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary = 2275;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = 2276;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = 2277;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = 2278;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = 2279;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = 3705;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = 2281;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = 2282;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = 2284;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = 2285;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = 2286;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = 2287;

        /// <remarks />
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = 2288;

        /// <remarks />
        public const uint Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray = 2289;

        /// <remarks />
        public const uint Server_ServerDiagnostics_SubscriptionDiagnosticsArray = 2290;

        /// <remarks />
        public const uint Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = 3707;

        /// <remarks />
        public const uint Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = 3708;

        /// <remarks />
        public const uint Server_ServerDiagnostics_EnabledFlag = 2294;

        /// <remarks />
        public const uint Server_ServerRedundancy_RedundancySupport = 3709;

        /// <remarks />
        public const uint Server_GetMonitoredItems_InputArguments = 11493;

        /// <remarks />
        public const uint Server_GetMonitoredItems_OutputArguments = 11494;

        /// <remarks />
        public const uint Server_ResendData_InputArguments = 12874;

        /// <remarks />
        public const uint Server_SetSubscriptionDurable_InputArguments = 12750;

        /// <remarks />
        public const uint Server_SetSubscriptionDurable_OutputArguments = 12751;

        /// <remarks />
        public const uint Server_RequestServerStateChange_InputArguments = 12887;

        /// <remarks />
        public const uint Server_ServerRedundancy_CurrentServerId = 11312;

        /// <remarks />
        public const uint Server_ServerRedundancy_RedundantServerArray = 11313;

        /// <remarks />
        public const uint Server_ServerRedundancy_ServerUriArray = 11314;

        /// <remarks />
        public const uint Server_ServerRedundancy_ServerNetworkGroups = 14415;

        /// <remarks />
        public const uint HistoryServerCapabilities_AccessHistoryDataCapability = 11193;

        /// <remarks />
        public const uint HistoryServerCapabilities_AccessHistoryEventsCapability = 11242;

        /// <remarks />
        public const uint HistoryServerCapabilities_MaxReturnDataValues = 11273;

        /// <remarks />
        public const uint HistoryServerCapabilities_MaxReturnEventValues = 11274;

        /// <remarks />
        public const uint HistoryServerCapabilities_InsertDataCapability = 11196;

        /// <remarks />
        public const uint HistoryServerCapabilities_ReplaceDataCapability = 11197;

        /// <remarks />
        public const uint HistoryServerCapabilities_UpdateDataCapability = 11198;

        /// <remarks />
        public const uint HistoryServerCapabilities_DeleteRawCapability = 11199;

        /// <remarks />
        public const uint HistoryServerCapabilities_DeleteAtTimeCapability = 11200;

        /// <remarks />
        public const uint HistoryServerCapabilities_InsertEventCapability = 11281;

        /// <remarks />
        public const uint HistoryServerCapabilities_ReplaceEventCapability = 11282;

        /// <remarks />
        public const uint HistoryServerCapabilities_UpdateEventCapability = 11283;

        /// <remarks />
        public const uint HistoryServerCapabilities_DeleteEventCapability = 11502;

        /// <remarks />
        public const uint HistoryServerCapabilities_InsertAnnotationCapability = 11275;

        /// <remarks />
        public const uint HistoryServerCapabilities_ServerTimestampSupported = 19091;

        /// <remarks />
        public const uint StateMachineType_CurrentState = 2769;

        /// <remarks />
        public const uint StateMachineType_CurrentState_Id = 3720;

        /// <remarks />
        public const uint StateMachineType_LastTransition = 2770;

        /// <remarks />
        public const uint StateMachineType_LastTransition_Id = 3724;

        /// <remarks />
        public const uint StateVariableType_Id = 2756;

        /// <remarks />
        public const uint StateVariableType_Name = 2757;

        /// <remarks />
        public const uint StateVariableType_Number = 2758;

        /// <remarks />
        public const uint StateVariableType_EffectiveDisplayName = 2759;

        /// <remarks />
        public const uint TransitionVariableType_Id = 2763;

        /// <remarks />
        public const uint TransitionVariableType_Name = 2764;

        /// <remarks />
        public const uint TransitionVariableType_Number = 2765;

        /// <remarks />
        public const uint TransitionVariableType_TransitionTime = 2766;

        /// <remarks />
        public const uint TransitionVariableType_EffectiveTransitionTime = 11456;

        /// <remarks />
        public const uint FiniteStateMachineType_CurrentState = 2772;

        /// <remarks />
        public const uint FiniteStateMachineType_CurrentState_Id = 3728;

        /// <remarks />
        public const uint FiniteStateMachineType_LastTransition = 2773;

        /// <remarks />
        public const uint FiniteStateMachineType_LastTransition_Id = 3732;

        /// <remarks />
        public const uint FiniteStateMachineType_AvailableStates = 17635;

        /// <remarks />
        public const uint FiniteStateMachineType_AvailableTransitions = 17636;

        /// <remarks />
        public const uint FiniteStateVariableType_Id = 2761;

        /// <remarks />
        public const uint FiniteTransitionVariableType_Id = 2768;

        /// <remarks />
        public const uint StateType_StateNumber = 2308;

        /// <remarks />
        public const uint TransitionType_TransitionNumber = 2312;

        /// <remarks />
        public const uint ExpressionGuardVariableType_Expression = 15129;

        /// <remarks />
        public const uint RationalNumberType_Numerator = 17712;

        /// <remarks />
        public const uint RationalNumberType_Denominator = 17713;

        /// <remarks />
        public const uint VectorType_VectorUnit = 17715;

        /// <remarks />
        public const uint ThreeDVectorType_X = 18769;

        /// <remarks />
        public const uint ThreeDVectorType_Y = 18770;

        /// <remarks />
        public const uint ThreeDVectorType_Z = 18771;

        /// <remarks />
        public const uint CartesianCoordinatesType_LengthUnit = 18773;

        /// <remarks />
        public const uint ThreeDCartesianCoordinatesType_X = 18776;

        /// <remarks />
        public const uint ThreeDCartesianCoordinatesType_Y = 18777;

        /// <remarks />
        public const uint ThreeDCartesianCoordinatesType_Z = 18778;

        /// <remarks />
        public const uint OrientationType_AngleUnit = 18780;

        /// <remarks />
        public const uint ThreeDOrientationType_A = 18783;

        /// <remarks />
        public const uint ThreeDOrientationType_B = 18784;

        /// <remarks />
        public const uint ThreeDOrientationType_C = 18785;

        /// <remarks />
        public const uint FrameType_CartesianCoordinates = 18801;

        /// <remarks />
        public const uint FrameType_Orientation = 18787;

        /// <remarks />
        public const uint FrameType_Constant = 18788;

        /// <remarks />
        public const uint FrameType_BaseFrame = 18789;

        /// <remarks />
        public const uint FrameType_FixedBase = 18790;

        /// <remarks />
        public const uint ThreeDFrameType_CartesianCoordinates = 18796;

        /// <remarks />
        public const uint ThreeDFrameType_Orientation = 18792;

        /// <remarks />
        public const uint ThreeDFrameType_CartesianCoordinates_X = 18798;

        /// <remarks />
        public const uint ThreeDFrameType_CartesianCoordinates_Y = 18799;

        /// <remarks />
        public const uint ThreeDFrameType_CartesianCoordinates_Z = 18800;

        /// <remarks />
        public const uint ThreeDFrameType_Orientation_A = 19074;

        /// <remarks />
        public const uint ThreeDFrameType_Orientation_B = 19075;

        /// <remarks />
        public const uint ThreeDFrameType_Orientation_C = 19076;

        /// <remarks />
        public const uint TransitionEventType_Transition = 2774;

        /// <remarks />
        public const uint TransitionEventType_Transition_Id = 3754;

        /// <remarks />
        public const uint TransitionEventType_FromState = 2775;

        /// <remarks />
        public const uint TransitionEventType_FromState_Id = 3746;

        /// <remarks />
        public const uint TransitionEventType_ToState = 2776;

        /// <remarks />
        public const uint TransitionEventType_ToState_Id = 3750;

        /// <remarks />
        public const uint AuditUpdateStateEventType_OldStateId = 2777;

        /// <remarks />
        public const uint AuditUpdateStateEventType_NewStateId = 2778;

        /// <remarks />
        public const uint OpenFileMode_EnumValues = 11940;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments = 13356;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments = 13357;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments = 13359;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments = 13360;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments = 17719;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments = 13364;

        /// <remarks />
        public const uint FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments = 13365;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Size = 13367;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Writable = 13368;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_UserWritable = 13369;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_OpenCount = 13370;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Open_InputArguments = 13373;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Open_OutputArguments = 13374;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Close_InputArguments = 13376;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Read_InputArguments = 13378;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Read_OutputArguments = 13379;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_Write_InputArguments = 13381;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments = 13383;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments = 13384;

        /// <remarks />
        public const uint FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments = 13386;

        /// <remarks />
        public const uint FileDirectoryType_CreateDirectory_InputArguments = 13388;

        /// <remarks />
        public const uint FileDirectoryType_CreateDirectory_OutputArguments = 13389;

        /// <remarks />
        public const uint FileDirectoryType_CreateFile_InputArguments = 13391;

        /// <remarks />
        public const uint FileDirectoryType_CreateFile_OutputArguments = 13392;

        /// <remarks />
        public const uint FileDirectoryType_DeleteFileSystemObject_InputArguments = 13394;

        /// <remarks />
        public const uint FileDirectoryType_MoveOrCopy_InputArguments = 13396;

        /// <remarks />
        public const uint FileDirectoryType_MoveOrCopy_OutputArguments = 13397;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_CreateDirectory_InputArguments = 16317;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments = 16318;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_CreateFile_InputArguments = 16320;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_CreateFile_OutputArguments = 16321;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments = 17723;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments = 16325;

        /// <remarks />
        public const uint FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments = 16326;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Size = 16328;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Writable = 16329;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_UserWritable = 16330;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_OpenCount = 16331;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Open_InputArguments = 16334;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Open_OutputArguments = 16335;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Close_InputArguments = 16337;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Read_InputArguments = 16339;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Read_OutputArguments = 16340;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_Write_InputArguments = 16342;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_GetPosition_InputArguments = 16344;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_GetPosition_OutputArguments = 16345;

        /// <remarks />
        public const uint FileSystem_FileName_Placeholder_SetPosition_InputArguments = 16347;

        /// <remarks />
        public const uint FileSystem_CreateDirectory_InputArguments = 16349;

        /// <remarks />
        public const uint FileSystem_CreateDirectory_OutputArguments = 16350;

        /// <remarks />
        public const uint FileSystem_CreateFile_InputArguments = 16352;

        /// <remarks />
        public const uint FileSystem_CreateFile_OutputArguments = 16353;

        /// <remarks />
        public const uint FileSystem_DeleteFileSystemObject_InputArguments = 16355;

        /// <remarks />
        public const uint FileSystem_MoveOrCopy_InputArguments = 16357;

        /// <remarks />
        public const uint FileSystem_MoveOrCopy_OutputArguments = 16358;

        /// <remarks />
        public const uint TemporaryFileTransferType_ClientProcessingTimeout = 15745;

        /// <remarks />
        public const uint TemporaryFileTransferType_GenerateFileForRead_InputArguments = 15747;

        /// <remarks />
        public const uint TemporaryFileTransferType_GenerateFileForRead_OutputArguments = 15748;

        /// <remarks />
        public const uint TemporaryFileTransferType_GenerateFileForWrite_InputArguments = 16359;

        /// <remarks />
        public const uint TemporaryFileTransferType_GenerateFileForWrite_OutputArguments = 15750;

        /// <remarks />
        public const uint TemporaryFileTransferType_CloseAndCommit_InputArguments = 15752;

        /// <remarks />
        public const uint TemporaryFileTransferType_CloseAndCommit_OutputArguments = 15753;

        /// <remarks />
        public const uint TemporaryFileTransferType_TransferState_Placeholder_CurrentState = 15755;

        /// <remarks />
        public const uint TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id = 15756;

        /// <remarks />
        public const uint TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id = 15761;

        /// <remarks />
        public const uint FileTransferStateMachineType_CurrentState_Id = 15805;

        /// <remarks />
        public const uint FileTransferStateMachineType_LastTransition_Id = 15810;

        /// <remarks />
        public const uint FileTransferStateMachineType_Idle_StateNumber = 15816;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadPrepare_StateNumber = 15818;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadTransfer_StateNumber = 15820;

        /// <remarks />
        public const uint FileTransferStateMachineType_ApplyWrite_StateNumber = 15822;

        /// <remarks />
        public const uint FileTransferStateMachineType_Error_StateNumber = 15824;

        /// <remarks />
        public const uint FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber = 15826;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber = 15828;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber = 15830;

        /// <remarks />
        public const uint FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber = 15832;

        /// <remarks />
        public const uint FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber = 15834;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadPrepareToError_TransitionNumber = 15836;

        /// <remarks />
        public const uint FileTransferStateMachineType_ReadTransferToError_TransitionNumber = 15838;

        /// <remarks />
        public const uint FileTransferStateMachineType_ApplyWriteToError_TransitionNumber = 15840;

        /// <remarks />
        public const uint FileTransferStateMachineType_ErrorToIdle_TransitionNumber = 15842;

        /// <remarks />
        public const uint RoleSetType_RoleName_Placeholder_Identities = 16162;

        /// <remarks />
        public const uint RoleSetType_RoleName_Placeholder_AddIdentity_InputArguments = 15613;

        /// <remarks />
        public const uint RoleSetType_RoleName_Placeholder_RemoveIdentity_InputArguments = 15615;

        /// <remarks />
        public const uint RoleSetType_RoleName_Placeholder_AddApplication_InputArguments = 16166;

        /// <remarks />
        public const uint RoleSetType_RoleName_Placeholder_RemoveApplication_InputArguments = 16168;

        /// <remarks />
        public const uint RoleSetType_RoleName_Placeholder_AddEndpoint_InputArguments = 16170;

        /// <remarks />
        public const uint RoleSetType_RoleName_Placeholder_RemoveEndpoint_InputArguments = 16172;

        /// <remarks />
        public const uint RoleSetType_AddRole_InputArguments = 15998;

        /// <remarks />
        public const uint RoleSetType_AddRole_OutputArguments = 15999;

        /// <remarks />
        public const uint RoleSetType_RemoveRole_InputArguments = 16001;

        /// <remarks />
        public const uint RoleType_Identities = 16173;

        /// <remarks />
        public const uint RoleType_Applications = 16174;

        /// <remarks />
        public const uint RoleType_ApplicationsExclude = 15410;

        /// <remarks />
        public const uint RoleType_Endpoints = 16175;

        /// <remarks />
        public const uint RoleType_EndpointsExclude = 15411;

        /// <remarks />
        public const uint RoleType_AddIdentity_InputArguments = 15625;

        /// <remarks />
        public const uint RoleType_RemoveIdentity_InputArguments = 15627;

        /// <remarks />
        public const uint RoleType_AddApplication_InputArguments = 16177;

        /// <remarks />
        public const uint RoleType_RemoveApplication_InputArguments = 16179;

        /// <remarks />
        public const uint RoleType_AddEndpoint_InputArguments = 16181;

        /// <remarks />
        public const uint RoleType_RemoveEndpoint_InputArguments = 16183;

        /// <remarks />
        public const uint IdentityCriteriaType_EnumValues = 15633;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_Identities = 16192;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_Applications = 16193;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_ApplicationsExclude = 15412;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_Endpoints = 16194;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_EndpointsExclude = 15413;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_AddIdentity_InputArguments = 15649;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_RemoveIdentity_InputArguments = 15651;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_AddApplication_InputArguments = 16196;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_RemoveApplication_InputArguments = 16198;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_AddEndpoint_InputArguments = 16200;

        /// <remarks />
        public const uint WellKnownRole_Anonymous_RemoveEndpoint_InputArguments = 16202;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_Identities = 16203;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_Applications = 16204;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_ApplicationsExclude = 15414;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_Endpoints = 16205;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_EndpointsExclude = 15415;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_AddIdentity_InputArguments = 15661;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_RemoveIdentity_InputArguments = 15663;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_AddApplication_InputArguments = 16207;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_RemoveApplication_InputArguments = 16209;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_AddEndpoint_InputArguments = 16211;

        /// <remarks />
        public const uint WellKnownRole_AuthenticatedUser_RemoveEndpoint_InputArguments = 16213;

        /// <remarks />
        public const uint WellKnownRole_Observer_Identities = 16214;

        /// <remarks />
        public const uint WellKnownRole_Observer_Applications = 16215;

        /// <remarks />
        public const uint WellKnownRole_Observer_ApplicationsExclude = 15416;

        /// <remarks />
        public const uint WellKnownRole_Observer_Endpoints = 16216;

        /// <remarks />
        public const uint WellKnownRole_Observer_EndpointsExclude = 15417;

        /// <remarks />
        public const uint WellKnownRole_Observer_AddIdentity_InputArguments = 15673;

        /// <remarks />
        public const uint WellKnownRole_Observer_RemoveIdentity_InputArguments = 15675;

        /// <remarks />
        public const uint WellKnownRole_Observer_AddApplication_InputArguments = 16218;

        /// <remarks />
        public const uint WellKnownRole_Observer_RemoveApplication_InputArguments = 16220;

        /// <remarks />
        public const uint WellKnownRole_Observer_AddEndpoint_InputArguments = 16222;

        /// <remarks />
        public const uint WellKnownRole_Observer_RemoveEndpoint_InputArguments = 16224;

        /// <remarks />
        public const uint WellKnownRole_Operator_Identities = 16225;

        /// <remarks />
        public const uint WellKnownRole_Operator_Applications = 16226;

        /// <remarks />
        public const uint WellKnownRole_Operator_ApplicationsExclude = 15418;

        /// <remarks />
        public const uint WellKnownRole_Operator_Endpoints = 16227;

        /// <remarks />
        public const uint WellKnownRole_Operator_EndpointsExclude = 15423;

        /// <remarks />
        public const uint WellKnownRole_Operator_AddIdentity_InputArguments = 15685;

        /// <remarks />
        public const uint WellKnownRole_Operator_RemoveIdentity_InputArguments = 15687;

        /// <remarks />
        public const uint WellKnownRole_Operator_AddApplication_InputArguments = 16229;

        /// <remarks />
        public const uint WellKnownRole_Operator_RemoveApplication_InputArguments = 16231;

        /// <remarks />
        public const uint WellKnownRole_Operator_AddEndpoint_InputArguments = 16233;

        /// <remarks />
        public const uint WellKnownRole_Operator_RemoveEndpoint_InputArguments = 16235;

        /// <remarks />
        public const uint WellKnownRole_Engineer_Identities = 16236;

        /// <remarks />
        public const uint WellKnownRole_Engineer_Applications = 16237;

        /// <remarks />
        public const uint WellKnownRole_Engineer_ApplicationsExclude = 15424;

        /// <remarks />
        public const uint WellKnownRole_Engineer_Endpoints = 16238;

        /// <remarks />
        public const uint WellKnownRole_Engineer_EndpointsExclude = 15425;

        /// <remarks />
        public const uint WellKnownRole_Engineer_AddIdentity_InputArguments = 16042;

        /// <remarks />
        public const uint WellKnownRole_Engineer_RemoveIdentity_InputArguments = 16044;

        /// <remarks />
        public const uint WellKnownRole_Engineer_AddApplication_InputArguments = 16240;

        /// <remarks />
        public const uint WellKnownRole_Engineer_RemoveApplication_InputArguments = 16242;

        /// <remarks />
        public const uint WellKnownRole_Engineer_AddEndpoint_InputArguments = 16244;

        /// <remarks />
        public const uint WellKnownRole_Engineer_RemoveEndpoint_InputArguments = 16246;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_Identities = 16247;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_Applications = 16248;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_ApplicationsExclude = 15426;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_Endpoints = 16249;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_EndpointsExclude = 15427;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_AddIdentity_InputArguments = 15697;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_RemoveIdentity_InputArguments = 15699;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_AddApplication_InputArguments = 16251;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_RemoveApplication_InputArguments = 16253;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_AddEndpoint_InputArguments = 16255;

        /// <remarks />
        public const uint WellKnownRole_Supervisor_RemoveEndpoint_InputArguments = 16257;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_Identities = 16269;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_Applications = 16270;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_ApplicationsExclude = 15428;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_Endpoints = 16271;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_EndpointsExclude = 15429;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_AddIdentity_InputArguments = 15721;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_RemoveIdentity_InputArguments = 15723;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_AddApplication_InputArguments = 16273;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_RemoveApplication_InputArguments = 16275;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_AddEndpoint_InputArguments = 16277;

        /// <remarks />
        public const uint WellKnownRole_ConfigureAdmin_RemoveEndpoint_InputArguments = 16279;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_Identities = 16258;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_Applications = 16259;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_ApplicationsExclude = 15430;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_Endpoints = 16260;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_EndpointsExclude = 15527;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_AddIdentity_InputArguments = 15709;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_RemoveIdentity_InputArguments = 15711;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_AddApplication_InputArguments = 16262;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_RemoveApplication_InputArguments = 16264;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_AddEndpoint_InputArguments = 16266;

        /// <remarks />
        public const uint WellKnownRole_SecurityAdmin_RemoveEndpoint_InputArguments = 16268;

        /// <remarks />
        public const uint CurrencyUnit = 23501;

        /// <remarks />
        public const uint IOrderedObjectType_NumberInList = 23517;

        /// <remarks />
        public const uint OrderedListType_OrderedObject_Placeholder_NumberInList = 23521;

        /// <remarks />
        public const uint OrderedListType_NodeVersion = 23525;

        /// <remarks />
        public const uint DataItemType_Definition = 2366;

        /// <remarks />
        public const uint DataItemType_ValuePrecision = 2367;

        /// <remarks />
        public const uint BaseAnalogType_InstrumentRange = 17567;

        /// <remarks />
        public const uint BaseAnalogType_EURange = 17568;

        /// <remarks />
        public const uint BaseAnalogType_EngineeringUnits = 17569;

        /// <remarks />
        public const uint AnalogItemType_EURange = 2369;

        /// <remarks />
        public const uint AnalogUnitType_EngineeringUnits = 17502;

        /// <remarks />
        public const uint AnalogUnitRangeType_EngineeringUnits = 17575;

        /// <remarks />
        public const uint TwoStateDiscreteType_FalseState = 2374;

        /// <remarks />
        public const uint TwoStateDiscreteType_TrueState = 2375;

        /// <remarks />
        public const uint MultiStateDiscreteType_EnumStrings = 2377;

        /// <remarks />
        public const uint MultiStateValueDiscreteType_EnumValues = 11241;

        /// <remarks />
        public const uint MultiStateValueDiscreteType_ValueAsText = 11461;

        /// <remarks />
        public const uint ArrayItemType_InstrumentRange = 12024;

        /// <remarks />
        public const uint ArrayItemType_EURange = 12025;

        /// <remarks />
        public const uint ArrayItemType_EngineeringUnits = 12026;

        /// <remarks />
        public const uint ArrayItemType_Title = 12027;

        /// <remarks />
        public const uint ArrayItemType_AxisScaleType = 12028;

        /// <remarks />
        public const uint YArrayItemType_XAxisDefinition = 12037;

        /// <remarks />
        public const uint XYArrayItemType_XAxisDefinition = 12046;

        /// <remarks />
        public const uint ImageItemType_XAxisDefinition = 12055;

        /// <remarks />
        public const uint ImageItemType_YAxisDefinition = 12056;

        /// <remarks />
        public const uint CubeItemType_XAxisDefinition = 12065;

        /// <remarks />
        public const uint CubeItemType_YAxisDefinition = 12066;

        /// <remarks />
        public const uint CubeItemType_ZAxisDefinition = 12067;

        /// <remarks />
        public const uint NDimensionArrayItemType_AxisDefinition = 12076;

        /// <remarks />
        public const uint TwoStateVariableType_Id = 8996;

        /// <remarks />
        public const uint TwoStateVariableType_TransitionTime = 9000;

        /// <remarks />
        public const uint TwoStateVariableType_EffectiveTransitionTime = 9001;

        /// <remarks />
        public const uint TwoStateVariableType_TrueState = 11110;

        /// <remarks />
        public const uint TwoStateVariableType_FalseState = 11111;

        /// <remarks />
        public const uint ConditionVariableType_SourceTimestamp = 9003;

        /// <remarks />
        public const uint ConditionType_ConditionClassId = 11112;

        /// <remarks />
        public const uint ConditionType_ConditionClassName = 11113;

        /// <remarks />
        public const uint ConditionType_ConditionSubClassId = 16363;

        /// <remarks />
        public const uint ConditionType_ConditionSubClassName = 16364;

        /// <remarks />
        public const uint ConditionType_ConditionName = 9009;

        /// <remarks />
        public const uint ConditionType_BranchId = 9010;

        /// <remarks />
        public const uint ConditionType_Retain = 3874;

        /// <remarks />
        public const uint ConditionType_EnabledState = 9011;

        /// <remarks />
        public const uint ConditionType_EnabledState_Id = 9012;

        /// <remarks />
        public const uint ConditionType_EnabledState_EffectiveDisplayName = 9015;

        /// <remarks />
        public const uint ConditionType_EnabledState_TransitionTime = 9016;

        /// <remarks />
        public const uint ConditionType_EnabledState_EffectiveTransitionTime = 9017;

        /// <remarks />
        public const uint ConditionType_EnabledState_TrueState = 9018;

        /// <remarks />
        public const uint ConditionType_EnabledState_FalseState = 9019;

        /// <remarks />
        public const uint ConditionType_Quality = 9020;

        /// <remarks />
        public const uint ConditionType_Quality_SourceTimestamp = 9021;

        /// <remarks />
        public const uint ConditionType_LastSeverity = 9022;

        /// <remarks />
        public const uint ConditionType_LastSeverity_SourceTimestamp = 9023;

        /// <remarks />
        public const uint ConditionType_Comment = 9024;

        /// <remarks />
        public const uint ConditionType_Comment_SourceTimestamp = 9025;

        /// <remarks />
        public const uint ConditionType_ClientUserId = 9026;

        /// <remarks />
        public const uint ConditionType_AddComment_InputArguments = 9030;

        /// <remarks />
        public const uint ConditionType_ConditionRefresh_InputArguments = 3876;

        /// <remarks />
        public const uint ConditionType_ConditionRefresh2_InputArguments = 12913;

        /// <remarks />
        public const uint DialogConditionType_EnabledState = 9035;

        /// <remarks />
        public const uint DialogConditionType_EnabledState_Id = 9036;

        /// <remarks />
        public const uint DialogConditionType_Quality_SourceTimestamp = 9045;

        /// <remarks />
        public const uint DialogConditionType_LastSeverity_SourceTimestamp = 9047;

        /// <remarks />
        public const uint DialogConditionType_Comment_SourceTimestamp = 9049;

        /// <remarks />
        public const uint DialogConditionType_AddComment_InputArguments = 9054;

        /// <remarks />
        public const uint DialogConditionType_ConditionRefresh_InputArguments = 4199;

        /// <remarks />
        public const uint DialogConditionType_ConditionRefresh2_InputArguments = 12917;

        /// <remarks />
        public const uint DialogConditionType_DialogState = 9055;

        /// <remarks />
        public const uint DialogConditionType_DialogState_Id = 9056;

        /// <remarks />
        public const uint DialogConditionType_DialogState_TransitionTime = 9060;

        /// <remarks />
        public const uint DialogConditionType_DialogState_TrueState = 9062;

        /// <remarks />
        public const uint DialogConditionType_DialogState_FalseState = 9063;

        /// <remarks />
        public const uint DialogConditionType_Prompt = 2831;

        /// <remarks />
        public const uint DialogConditionType_ResponseOptionSet = 9064;

        /// <remarks />
        public const uint DialogConditionType_DefaultResponse = 9065;

        /// <remarks />
        public const uint DialogConditionType_OkResponse = 9066;

        /// <remarks />
        public const uint DialogConditionType_CancelResponse = 9067;

        /// <remarks />
        public const uint DialogConditionType_LastResponse = 9068;

        /// <remarks />
        public const uint DialogConditionType_Respond_InputArguments = 9070;

        /// <remarks />
        public const uint AcknowledgeableConditionType_EnabledState = 9073;

        /// <remarks />
        public const uint AcknowledgeableConditionType_EnabledState_Id = 9074;

        /// <remarks />
        public const uint AcknowledgeableConditionType_Quality_SourceTimestamp = 9083;

        /// <remarks />
        public const uint AcknowledgeableConditionType_LastSeverity_SourceTimestamp = 9085;

        /// <remarks />
        public const uint AcknowledgeableConditionType_Comment_SourceTimestamp = 9087;

        /// <remarks />
        public const uint AcknowledgeableConditionType_AddComment_InputArguments = 9092;

        /// <remarks />
        public const uint AcknowledgeableConditionType_ConditionRefresh_InputArguments = 5124;

        /// <remarks />
        public const uint AcknowledgeableConditionType_ConditionRefresh2_InputArguments = 12919;

        /// <remarks />
        public const uint AcknowledgeableConditionType_AckedState = 9093;

        /// <remarks />
        public const uint AcknowledgeableConditionType_AckedState_Id = 9094;

        /// <remarks />
        public const uint AcknowledgeableConditionType_AckedState_TransitionTime = 9098;

        /// <remarks />
        public const uint AcknowledgeableConditionType_AckedState_TrueState = 9100;

        /// <remarks />
        public const uint AcknowledgeableConditionType_AckedState_FalseState = 9101;

        /// <remarks />
        public const uint AcknowledgeableConditionType_ConfirmedState = 9102;

        /// <remarks />
        public const uint AcknowledgeableConditionType_ConfirmedState_Id = 9103;

        /// <remarks />
        public const uint AcknowledgeableConditionType_ConfirmedState_TransitionTime = 9107;

        /// <remarks />
        public const uint AcknowledgeableConditionType_ConfirmedState_TrueState = 9109;

        /// <remarks />
        public const uint AcknowledgeableConditionType_ConfirmedState_FalseState = 9110;

        /// <remarks />
        public const uint AcknowledgeableConditionType_Acknowledge_InputArguments = 9112;

        /// <remarks />
        public const uint AcknowledgeableConditionType_Confirm_InputArguments = 9114;

        /// <remarks />
        public const uint AlarmConditionType_EnabledState = 9118;

        /// <remarks />
        public const uint AlarmConditionType_EnabledState_Id = 9119;

        /// <remarks />
        public const uint AlarmConditionType_Quality_SourceTimestamp = 9128;

        /// <remarks />
        public const uint AlarmConditionType_LastSeverity_SourceTimestamp = 9130;

        /// <remarks />
        public const uint AlarmConditionType_Comment_SourceTimestamp = 9132;

        /// <remarks />
        public const uint AlarmConditionType_AddComment_InputArguments = 9137;

        /// <remarks />
        public const uint AlarmConditionType_ConditionRefresh_InputArguments = 5551;

        /// <remarks />
        public const uint AlarmConditionType_ConditionRefresh2_InputArguments = 12985;

        /// <remarks />
        public const uint AlarmConditionType_AckedState_Id = 9139;

        /// <remarks />
        public const uint AlarmConditionType_ConfirmedState_Id = 9148;

        /// <remarks />
        public const uint AlarmConditionType_Acknowledge_InputArguments = 9157;

        /// <remarks />
        public const uint AlarmConditionType_Confirm_InputArguments = 9159;

        /// <remarks />
        public const uint AlarmConditionType_ActiveState = 9160;

        /// <remarks />
        public const uint AlarmConditionType_ActiveState_Id = 9161;

        /// <remarks />
        public const uint AlarmConditionType_ActiveState_EffectiveDisplayName = 9164;

        /// <remarks />
        public const uint AlarmConditionType_ActiveState_TransitionTime = 9165;

        /// <remarks />
        public const uint AlarmConditionType_ActiveState_EffectiveTransitionTime = 9166;

        /// <remarks />
        public const uint AlarmConditionType_ActiveState_TrueState = 9167;

        /// <remarks />
        public const uint AlarmConditionType_ActiveState_FalseState = 9168;

        /// <remarks />
        public const uint AlarmConditionType_InputNode = 11120;

        /// <remarks />
        public const uint AlarmConditionType_SuppressedState = 9169;

        /// <remarks />
        public const uint AlarmConditionType_SuppressedState_Id = 9170;

        /// <remarks />
        public const uint AlarmConditionType_SuppressedState_TransitionTime = 9174;

        /// <remarks />
        public const uint AlarmConditionType_SuppressedState_TrueState = 9176;

        /// <remarks />
        public const uint AlarmConditionType_SuppressedState_FalseState = 9177;

        /// <remarks />
        public const uint AlarmConditionType_OutOfServiceState = 16371;

        /// <remarks />
        public const uint AlarmConditionType_OutOfServiceState_Id = 16372;

        /// <remarks />
        public const uint AlarmConditionType_OutOfServiceState_TransitionTime = 16376;

        /// <remarks />
        public const uint AlarmConditionType_OutOfServiceState_TrueState = 16378;

        /// <remarks />
        public const uint AlarmConditionType_OutOfServiceState_FalseState = 16379;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_CurrentState = 9179;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_CurrentState_Id = 9180;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_LastTransition = 9184;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_LastTransition_Id = 9185;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_LastTransition_TransitionTime = 9188;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_UnshelveTime = 9189;

        /// <remarks />
        public const uint AlarmConditionType_ShelvingState_TimedShelve_InputArguments = 9214;

        /// <remarks />
        public const uint AlarmConditionType_SuppressedOrShelved = 9215;

        /// <remarks />
        public const uint AlarmConditionType_MaxTimeShelved = 9216;

        /// <remarks />
        public const uint AlarmConditionType_AudibleEnabled = 16389;

        /// <remarks />
        public const uint AlarmConditionType_AudibleSound = 16390;

        /// <remarks />
        public const uint AlarmConditionType_SilenceState = 16380;

        /// <remarks />
        public const uint AlarmConditionType_SilenceState_Id = 16381;

        /// <remarks />
        public const uint AlarmConditionType_SilenceState_TransitionTime = 16385;

        /// <remarks />
        public const uint AlarmConditionType_SilenceState_TrueState = 16387;

        /// <remarks />
        public const uint AlarmConditionType_SilenceState_FalseState = 16388;

        /// <remarks />
        public const uint AlarmConditionType_OnDelay = 16395;

        /// <remarks />
        public const uint AlarmConditionType_OffDelay = 16396;

        /// <remarks />
        public const uint AlarmConditionType_FirstInGroupFlag = 16397;

        /// <remarks />
        public const uint AlarmConditionType_LatchedState = 18190;

        /// <remarks />
        public const uint AlarmConditionType_LatchedState_Id = 18191;

        /// <remarks />
        public const uint AlarmConditionType_LatchedState_TransitionTime = 18195;

        /// <remarks />
        public const uint AlarmConditionType_LatchedState_TrueState = 18197;

        /// <remarks />
        public const uint AlarmConditionType_LatchedState_FalseState = 18198;

        /// <remarks />
        public const uint AlarmConditionType_ReAlarmTime = 16400;

        /// <remarks />
        public const uint AlarmConditionType_ReAlarmRepeatCount = 16401;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_EventId = 16407;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_EventType = 16408;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_SourceNode = 16409;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_SourceName = 16410;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Time = 16411;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ReceiveTime = 16412;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Message = 16414;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Severity = 16415;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassId = 16416;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassName = 16417;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionName = 16420;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_BranchId = 16421;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Retain = 16422;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState = 16423;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_Id = 16424;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Quality = 16432;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Quality_SourceTimestamp = 16433;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity = 16434;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity_SourceTimestamp = 16435;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Comment = 16436;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Comment_SourceTimestamp = 16437;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ClientUserId = 16438;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment_InputArguments = 16442;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState = 16443;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_Id = 16444;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_Id = 16453;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge_InputArguments = 16462;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_Confirm_InputArguments = 16464;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState = 16465;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_Id = 16466;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_InputNode = 16474;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_Id = 16476;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_Id = 16485;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState = 16503;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_Id = 16504;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_Id = 16509;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_UnshelveTime = 16514;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve_InputArguments = 16518;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedOrShelved = 16519;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_Id = 16494;

        /// <remarks />
        public const uint AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_Id = 18204;

        /// <remarks />
        public const uint ShelvedStateMachineType_CurrentState_Id = 6089;

        /// <remarks />
        public const uint ShelvedStateMachineType_LastTransition_Id = 6094;

        /// <remarks />
        public const uint ShelvedStateMachineType_UnshelveTime = 9115;

        /// <remarks />
        public const uint ShelvedStateMachineType_Unshelved_StateNumber = 6098;

        /// <remarks />
        public const uint ShelvedStateMachineType_TimedShelved_StateNumber = 6100;

        /// <remarks />
        public const uint ShelvedStateMachineType_OneShotShelved_StateNumber = 6101;

        /// <remarks />
        public const uint ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber = 11322;

        /// <remarks />
        public const uint ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber = 11323;

        /// <remarks />
        public const uint ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber = 11324;

        /// <remarks />
        public const uint ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber = 11325;

        /// <remarks />
        public const uint ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber = 11326;

        /// <remarks />
        public const uint ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber = 11327;

        /// <remarks />
        public const uint ShelvedStateMachineType_TimedShelve_InputArguments = 2991;

        /// <remarks />
        public const uint LimitAlarmType_EnabledState_Id = 9220;

        /// <remarks />
        public const uint LimitAlarmType_Quality_SourceTimestamp = 9229;

        /// <remarks />
        public const uint LimitAlarmType_LastSeverity_SourceTimestamp = 9231;

        /// <remarks />
        public const uint LimitAlarmType_Comment_SourceTimestamp = 9233;

        /// <remarks />
        public const uint LimitAlarmType_AddComment_InputArguments = 9238;

        /// <remarks />
        public const uint LimitAlarmType_ConditionRefresh_InputArguments = 6127;

        /// <remarks />
        public const uint LimitAlarmType_ConditionRefresh2_InputArguments = 12987;

        /// <remarks />
        public const uint LimitAlarmType_AckedState_Id = 9240;

        /// <remarks />
        public const uint LimitAlarmType_ConfirmedState_Id = 9249;

        /// <remarks />
        public const uint LimitAlarmType_Acknowledge_InputArguments = 9258;

        /// <remarks />
        public const uint LimitAlarmType_Confirm_InputArguments = 9260;

        /// <remarks />
        public const uint LimitAlarmType_ActiveState_Id = 9262;

        /// <remarks />
        public const uint LimitAlarmType_SuppressedState_Id = 9271;

        /// <remarks />
        public const uint LimitAlarmType_OutOfServiceState_Id = 16539;

        /// <remarks />
        public const uint LimitAlarmType_ShelvingState_CurrentState = 9280;

        /// <remarks />
        public const uint LimitAlarmType_ShelvingState_CurrentState_Id = 9281;

        /// <remarks />
        public const uint LimitAlarmType_ShelvingState_LastTransition_Id = 9286;

        /// <remarks />
        public const uint LimitAlarmType_ShelvingState_UnshelveTime = 9290;

        /// <remarks />
        public const uint LimitAlarmType_ShelvingState_TimedShelve_InputArguments = 9315;

        /// <remarks />
        public const uint LimitAlarmType_SilenceState_Id = 16548;

        /// <remarks />
        public const uint LimitAlarmType_LatchedState_Id = 18214;

        /// <remarks />
        public const uint LimitAlarmType_HighHighLimit = 11124;

        /// <remarks />
        public const uint LimitAlarmType_HighLimit = 11125;

        /// <remarks />
        public const uint LimitAlarmType_LowLimit = 11126;

        /// <remarks />
        public const uint LimitAlarmType_LowLowLimit = 11127;

        /// <remarks />
        public const uint LimitAlarmType_BaseHighHighLimit = 16572;

        /// <remarks />
        public const uint LimitAlarmType_BaseHighLimit = 16573;

        /// <remarks />
        public const uint LimitAlarmType_BaseLowLimit = 16574;

        /// <remarks />
        public const uint LimitAlarmType_BaseLowLowLimit = 16575;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_CurrentState_Id = 9320;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_LastTransition_Id = 9325;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_HighHigh_StateNumber = 9330;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_High_StateNumber = 9332;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_Low_StateNumber = 9334;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_LowLow_StateNumber = 9336;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber = 11340;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber = 11341;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber = 11342;

        /// <remarks />
        public const uint ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber = 11343;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_EnabledState_Id = 9355;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_Quality_SourceTimestamp = 9364;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp = 9366;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_Comment_SourceTimestamp = 9368;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_AddComment_InputArguments = 9373;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ConditionRefresh_InputArguments = 9375;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments = 12989;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_AckedState_Id = 9377;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ConfirmedState_Id = 9386;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_Acknowledge_InputArguments = 9395;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_Confirm_InputArguments = 9397;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ActiveState = 9398;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ActiveState_Id = 9399;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_SuppressedState_Id = 9408;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_OutOfServiceState_Id = 16579;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ShelvingState_CurrentState = 9417;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id = 9418;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id = 9423;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ShelvingState_UnshelveTime = 9427;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments = 9452;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_SilenceState_Id = 16588;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_LatchedState_Id = 18224;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_LimitState_CurrentState = 9456;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_LimitState_CurrentState_Id = 9457;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_LimitState_LastTransition = 9461;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_LimitState_LastTransition_Id = 9462;

        /// <remarks />
        public const uint ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime = 9465;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_EnabledState_Id = 9920;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_Quality_SourceTimestamp = 9929;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp = 9931;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_Comment_SourceTimestamp = 9933;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_AddComment_InputArguments = 9938;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments = 9940;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments = 12991;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_AckedState_Id = 9942;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ConfirmedState_Id = 9951;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_Acknowledge_InputArguments = 9960;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_Confirm_InputArguments = 9962;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ActiveState = 9963;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ActiveState_Id = 9964;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_SuppressedState_Id = 9973;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_OutOfServiceState_Id = 16619;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ShelvingState_CurrentState = 9982;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id = 9983;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id = 9988;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime = 9992;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments = 10017;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_SilenceState_Id = 16628;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LatchedState_Id = 18234;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighHighState = 10020;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighHighState_Id = 10021;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighHighState_TransitionTime = 10025;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighHighState_TrueState = 10027;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighHighState_FalseState = 10028;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighState = 10029;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighState_Id = 10030;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighState_TransitionTime = 10034;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighState_TrueState = 10036;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_HighState_FalseState = 10037;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowState = 10038;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowState_Id = 10039;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowState_TransitionTime = 10043;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowState_TrueState = 10045;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowState_FalseState = 10046;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowLowState = 10047;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowLowState_Id = 10048;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowLowState_TransitionTime = 10052;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowLowState_TrueState = 10054;

        /// <remarks />
        public const uint NonExclusiveLimitAlarmType_LowLowState_FalseState = 10055;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_EnabledState_Id = 10074;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_Quality_SourceTimestamp = 10083;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp = 10085;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_Comment_SourceTimestamp = 10087;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_AddComment_InputArguments = 10092;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments = 10094;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments = 12993;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_AckedState_Id = 10096;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ConfirmedState_Id = 10105;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_Acknowledge_InputArguments = 10114;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_Confirm_InputArguments = 10116;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ActiveState_Id = 10118;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_SuppressedState_Id = 10127;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_OutOfServiceState_Id = 16659;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ShelvingState_CurrentState = 10136;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id = 10137;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id = 10142;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime = 10146;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments = 10171;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_SilenceState_Id = 16668;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_LatchedState_Id = 18247;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_HighHighState_Id = 10175;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_HighState_Id = 10184;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_LowState_Id = 10193;

        /// <remarks />
        public const uint NonExclusiveLevelAlarmType_LowLowState_Id = 10202;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_EnabledState_Id = 9496;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_Quality_SourceTimestamp = 9505;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp = 9507;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_Comment_SourceTimestamp = 9509;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_AddComment_InputArguments = 9514;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ConditionRefresh_InputArguments = 9516;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments = 12995;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_AckedState_Id = 9518;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ConfirmedState_Id = 9527;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_Acknowledge_InputArguments = 9536;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_Confirm_InputArguments = 9538;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ActiveState_Id = 9540;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_SuppressedState_Id = 9549;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_OutOfServiceState_Id = 16699;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ShelvingState_CurrentState = 9558;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id = 9559;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id = 9564;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ShelvingState_UnshelveTime = 9568;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments = 9593;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_SilenceState_Id = 16708;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_LatchedState_Id = 18258;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_LimitState_CurrentState = 9597;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_LimitState_CurrentState_Id = 9598;

        /// <remarks />
        public const uint ExclusiveLevelAlarmType_LimitState_LastTransition_Id = 9603;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_EnabledState_Id = 10382;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_Quality_SourceTimestamp = 10391;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp = 10393;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_Comment_SourceTimestamp = 10395;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_AddComment_InputArguments = 10400;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments = 10402;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments = 12997;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_AckedState_Id = 10404;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ConfirmedState_Id = 10413;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_Acknowledge_InputArguments = 10422;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_Confirm_InputArguments = 10424;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ActiveState_Id = 10426;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_SuppressedState_Id = 10435;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_OutOfServiceState_Id = 16739;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_CurrentState = 10444;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id = 10445;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id = 10450;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime = 10454;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments = 10479;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_SilenceState_Id = 16748;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_LatchedState_Id = 18268;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_HighHighState_Id = 10483;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_HighState_Id = 10492;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_LowState_Id = 10501;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_LowLowState_Id = 10510;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_SetpointNode = 10522;

        /// <remarks />
        public const uint NonExclusiveDeviationAlarmType_BaseSetpointNode = 16776;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_EnabledState_Id = 10228;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp = 10237;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp = 10239;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp = 10241;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments = 10246;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments = 10248;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments = 13001;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_AckedState_Id = 10250;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id = 10259;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments = 10268;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments = 10270;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ActiveState_Id = 10272;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_SuppressedState_Id = 10281;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_OutOfServiceState_Id = 16821;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState = 10290;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id = 10291;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id = 10296;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime = 10300;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments = 10325;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_SilenceState_Id = 16830;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_LatchedState_Id = 18278;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_HighHighState_Id = 10329;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_HighState_Id = 10338;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_LowState_Id = 10347;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_LowLowState_Id = 10356;

        /// <remarks />
        public const uint NonExclusiveRateOfChangeAlarmType_EngineeringUnits = 16858;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_EnabledState_Id = 9778;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_Quality_SourceTimestamp = 9787;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp = 9789;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_Comment_SourceTimestamp = 9791;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_AddComment_InputArguments = 9796;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments = 9798;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments = 12999;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_AckedState_Id = 9800;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ConfirmedState_Id = 9809;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_Acknowledge_InputArguments = 9818;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_Confirm_InputArguments = 9820;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ActiveState_Id = 9822;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_SuppressedState_Id = 9831;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_OutOfServiceState_Id = 16780;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ShelvingState_CurrentState = 9840;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id = 9841;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id = 9846;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime = 9850;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments = 9875;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_SilenceState_Id = 16789;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_LatchedState_Id = 18288;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_LimitState_CurrentState = 9879;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_LimitState_CurrentState_Id = 9880;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_LimitState_LastTransition_Id = 9885;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_SetpointNode = 9905;

        /// <remarks />
        public const uint ExclusiveDeviationAlarmType_BaseSetpointNode = 16817;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_EnabledState_Id = 9637;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp = 9646;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp = 9648;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp = 9650;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_AddComment_InputArguments = 9655;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments = 9657;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments = 13003;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_AckedState_Id = 9659;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ConfirmedState_Id = 9668;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments = 9677;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_Confirm_InputArguments = 9679;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ActiveState_Id = 9681;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_SuppressedState_Id = 9690;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_OutOfServiceState_Id = 16862;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState = 9699;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id = 9700;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id = 9705;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime = 9709;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments = 9734;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_SilenceState_Id = 16871;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_LatchedState_Id = 18298;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_LimitState_CurrentState = 9738;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id = 9739;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id = 9744;

        /// <remarks />
        public const uint ExclusiveRateOfChangeAlarmType_EngineeringUnits = 16899;

        /// <remarks />
        public const uint DiscreteAlarmType_EnabledState_Id = 10537;

        /// <remarks />
        public const uint DiscreteAlarmType_Quality_SourceTimestamp = 10546;

        /// <remarks />
        public const uint DiscreteAlarmType_LastSeverity_SourceTimestamp = 10548;

        /// <remarks />
        public const uint DiscreteAlarmType_Comment_SourceTimestamp = 10550;

        /// <remarks />
        public const uint DiscreteAlarmType_AddComment_InputArguments = 10555;

        /// <remarks />
        public const uint DiscreteAlarmType_ConditionRefresh_InputArguments = 10557;

        /// <remarks />
        public const uint DiscreteAlarmType_ConditionRefresh2_InputArguments = 13005;

        /// <remarks />
        public const uint DiscreteAlarmType_AckedState_Id = 10559;

        /// <remarks />
        public const uint DiscreteAlarmType_ConfirmedState_Id = 10568;

        /// <remarks />
        public const uint DiscreteAlarmType_Acknowledge_InputArguments = 10577;

        /// <remarks />
        public const uint DiscreteAlarmType_Confirm_InputArguments = 10579;

        /// <remarks />
        public const uint DiscreteAlarmType_ActiveState_Id = 10581;

        /// <remarks />
        public const uint DiscreteAlarmType_SuppressedState_Id = 10590;

        /// <remarks />
        public const uint DiscreteAlarmType_OutOfServiceState_Id = 16903;

        /// <remarks />
        public const uint DiscreteAlarmType_ShelvingState_CurrentState = 10599;

        /// <remarks />
        public const uint DiscreteAlarmType_ShelvingState_CurrentState_Id = 10600;

        /// <remarks />
        public const uint DiscreteAlarmType_ShelvingState_LastTransition_Id = 10605;

        /// <remarks />
        public const uint DiscreteAlarmType_ShelvingState_UnshelveTime = 10609;

        /// <remarks />
        public const uint DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments = 10634;

        /// <remarks />
        public const uint DiscreteAlarmType_SilenceState_Id = 16912;

        /// <remarks />
        public const uint DiscreteAlarmType_LatchedState_Id = 18308;

        /// <remarks />
        public const uint OffNormalAlarmType_EnabledState_Id = 10651;

        /// <remarks />
        public const uint OffNormalAlarmType_Quality_SourceTimestamp = 10660;

        /// <remarks />
        public const uint OffNormalAlarmType_LastSeverity_SourceTimestamp = 10662;

        /// <remarks />
        public const uint OffNormalAlarmType_Comment_SourceTimestamp = 10664;

        /// <remarks />
        public const uint OffNormalAlarmType_AddComment_InputArguments = 10669;

        /// <remarks />
        public const uint OffNormalAlarmType_ConditionRefresh_InputArguments = 10671;

        /// <remarks />
        public const uint OffNormalAlarmType_ConditionRefresh2_InputArguments = 13007;

        /// <remarks />
        public const uint OffNormalAlarmType_AckedState_Id = 10673;

        /// <remarks />
        public const uint OffNormalAlarmType_ConfirmedState_Id = 10682;

        /// <remarks />
        public const uint OffNormalAlarmType_Acknowledge_InputArguments = 10691;

        /// <remarks />
        public const uint OffNormalAlarmType_Confirm_InputArguments = 10693;

        /// <remarks />
        public const uint OffNormalAlarmType_ActiveState_Id = 10695;

        /// <remarks />
        public const uint OffNormalAlarmType_SuppressedState_Id = 10704;

        /// <remarks />
        public const uint OffNormalAlarmType_OutOfServiceState_Id = 16939;

        /// <remarks />
        public const uint OffNormalAlarmType_ShelvingState_CurrentState = 10713;

        /// <remarks />
        public const uint OffNormalAlarmType_ShelvingState_CurrentState_Id = 10714;

        /// <remarks />
        public const uint OffNormalAlarmType_ShelvingState_LastTransition_Id = 10719;

        /// <remarks />
        public const uint OffNormalAlarmType_ShelvingState_UnshelveTime = 10723;

        /// <remarks />
        public const uint OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments = 10748;

        /// <remarks />
        public const uint OffNormalAlarmType_SilenceState_Id = 16948;

        /// <remarks />
        public const uint OffNormalAlarmType_LatchedState_Id = 18318;

        /// <remarks />
        public const uint OffNormalAlarmType_NormalState = 11158;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_EnabledState_Id = 11769;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_Quality_SourceTimestamp = 11778;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_LastSeverity_SourceTimestamp = 11780;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_Comment_SourceTimestamp = 11782;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_AddComment_InputArguments = 11787;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ConditionRefresh_InputArguments = 11789;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ConditionRefresh2_InputArguments = 13009;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_AckedState_Id = 11791;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ConfirmedState_Id = 11800;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_Acknowledge_InputArguments = 11809;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_Confirm_InputArguments = 11811;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ActiveState_Id = 11813;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_SuppressedState_Id = 11823;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_OutOfServiceState_Id = 16975;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ShelvingState_CurrentState = 11832;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ShelvingState_CurrentState_Id = 11833;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ShelvingState_LastTransition_Id = 11838;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ShelvingState_UnshelveTime = 11843;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments = 11847;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_SilenceState_Id = 16984;

        /// <remarks />
        public const uint SystemOffNormalAlarmType_LatchedState_Id = 18328;

        /// <remarks />
        public const uint TripAlarmType_EnabledState_Id = 10765;

        /// <remarks />
        public const uint TripAlarmType_Quality_SourceTimestamp = 10774;

        /// <remarks />
        public const uint TripAlarmType_LastSeverity_SourceTimestamp = 10776;

        /// <remarks />
        public const uint TripAlarmType_Comment_SourceTimestamp = 10778;

        /// <remarks />
        public const uint TripAlarmType_AddComment_InputArguments = 10783;

        /// <remarks />
        public const uint TripAlarmType_ConditionRefresh_InputArguments = 10785;

        /// <remarks />
        public const uint TripAlarmType_ConditionRefresh2_InputArguments = 13011;

        /// <remarks />
        public const uint TripAlarmType_AckedState_Id = 10787;

        /// <remarks />
        public const uint TripAlarmType_ConfirmedState_Id = 10796;

        /// <remarks />
        public const uint TripAlarmType_Acknowledge_InputArguments = 10805;

        /// <remarks />
        public const uint TripAlarmType_Confirm_InputArguments = 10807;

        /// <remarks />
        public const uint TripAlarmType_ActiveState_Id = 10809;

        /// <remarks />
        public const uint TripAlarmType_SuppressedState_Id = 10818;

        /// <remarks />
        public const uint TripAlarmType_OutOfServiceState_Id = 17011;

        /// <remarks />
        public const uint TripAlarmType_ShelvingState_CurrentState = 10827;

        /// <remarks />
        public const uint TripAlarmType_ShelvingState_CurrentState_Id = 10828;

        /// <remarks />
        public const uint TripAlarmType_ShelvingState_LastTransition_Id = 10833;

        /// <remarks />
        public const uint TripAlarmType_ShelvingState_UnshelveTime = 10837;

        /// <remarks />
        public const uint TripAlarmType_ShelvingState_TimedShelve_InputArguments = 10862;

        /// <remarks />
        public const uint TripAlarmType_SilenceState_Id = 17020;

        /// <remarks />
        public const uint TripAlarmType_LatchedState_Id = 18338;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_EnabledState_Id = 18365;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_Quality_SourceTimestamp = 18374;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_LastSeverity_SourceTimestamp = 18376;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_Comment_SourceTimestamp = 18378;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_AddComment_InputArguments = 18383;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ConditionRefresh_InputArguments = 18385;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ConditionRefresh2_InputArguments = 18387;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_AckedState_Id = 18389;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ConfirmedState_Id = 18398;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_Acknowledge_InputArguments = 18407;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_Confirm_InputArguments = 18409;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ActiveState_Id = 18411;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_SuppressedState_Id = 18421;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_OutOfServiceState_Id = 18430;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ShelvingState_CurrentState = 18439;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_Id = 18440;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_Id = 18445;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ShelvingState_UnshelveTime = 18452;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments = 18454;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_SilenceState_Id = 18465;

        /// <remarks />
        public const uint InstrumentDiagnosticAlarmType_LatchedState_Id = 18478;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_EnabledState_Id = 18514;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_Quality_SourceTimestamp = 18523;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_LastSeverity_SourceTimestamp = 18525;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_Comment_SourceTimestamp = 18527;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_AddComment_InputArguments = 18532;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ConditionRefresh_InputArguments = 18534;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ConditionRefresh2_InputArguments = 18536;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_AckedState_Id = 18538;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ConfirmedState_Id = 18547;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_Acknowledge_InputArguments = 18556;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_Confirm_InputArguments = 18558;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ActiveState_Id = 18560;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_SuppressedState_Id = 18570;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_OutOfServiceState_Id = 18579;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ShelvingState_CurrentState = 18588;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ShelvingState_CurrentState_Id = 18589;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ShelvingState_LastTransition_Id = 18594;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ShelvingState_UnshelveTime = 18601;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments = 18603;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_SilenceState_Id = 18614;

        /// <remarks />
        public const uint SystemDiagnosticAlarmType_LatchedState_Id = 18627;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_EnabledState_Id = 13241;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_Quality_SourceTimestamp = 13250;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_LastSeverity_SourceTimestamp = 13252;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_Comment_SourceTimestamp = 13254;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_AddComment_InputArguments = 13259;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ConditionRefresh_InputArguments = 13261;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ConditionRefresh2_InputArguments = 13263;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_AckedState_Id = 13265;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ConfirmedState_Id = 13274;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_Acknowledge_InputArguments = 13283;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_Confirm_InputArguments = 13285;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ActiveState_Id = 13287;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_SuppressedState_Id = 13297;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_OutOfServiceState_Id = 17047;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ShelvingState_CurrentState = 13306;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ShelvingState_CurrentState_Id = 13307;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ShelvingState_LastTransition_Id = 13312;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ShelvingState_UnshelveTime = 13317;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments = 13321;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_SilenceState_Id = 17056;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_LatchedState_Id = 18646;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ExpirationDate = 13325;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_ExpirationLimit = 14900;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_CertificateType = 13326;

        /// <remarks />
        public const uint CertificateExpirationAlarmType_Certificate = 13327;

        /// <remarks />
        public const uint DiscrepancyAlarmType_EnabledState_Id = 17098;

        /// <remarks />
        public const uint DiscrepancyAlarmType_Quality_SourceTimestamp = 17107;

        /// <remarks />
        public const uint DiscrepancyAlarmType_LastSeverity_SourceTimestamp = 17109;

        /// <remarks />
        public const uint DiscrepancyAlarmType_Comment_SourceTimestamp = 17111;

        /// <remarks />
        public const uint DiscrepancyAlarmType_AddComment_InputArguments = 17116;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ConditionRefresh_InputArguments = 17118;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ConditionRefresh2_InputArguments = 17120;

        /// <remarks />
        public const uint DiscrepancyAlarmType_AckedState_Id = 17122;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ConfirmedState_Id = 17131;

        /// <remarks />
        public const uint DiscrepancyAlarmType_Acknowledge_InputArguments = 17140;

        /// <remarks />
        public const uint DiscrepancyAlarmType_Confirm_InputArguments = 17142;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ActiveState_Id = 17144;

        /// <remarks />
        public const uint DiscrepancyAlarmType_SuppressedState_Id = 17154;

        /// <remarks />
        public const uint DiscrepancyAlarmType_OutOfServiceState_Id = 17163;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ShelvingState_CurrentState = 17181;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ShelvingState_CurrentState_Id = 17182;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ShelvingState_LastTransition_Id = 17187;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ShelvingState_UnshelveTime = 17192;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ShelvingState_TimedShelve_InputArguments = 17196;

        /// <remarks />
        public const uint DiscrepancyAlarmType_SilenceState_Id = 17172;

        /// <remarks />
        public const uint DiscrepancyAlarmType_LatchedState_Id = 18656;

        /// <remarks />
        public const uint DiscrepancyAlarmType_TargetValueNode = 17215;

        /// <remarks />
        public const uint DiscrepancyAlarmType_ExpectedTime = 17216;

        /// <remarks />
        public const uint DiscrepancyAlarmType_Tolerance = 17217;

        /// <remarks />
        public const uint AuditConditionCommentEventType_ConditionEventId = 17222;

        /// <remarks />
        public const uint AuditConditionCommentEventType_Comment = 11851;

        /// <remarks />
        public const uint AuditConditionRespondEventType_SelectedResponse = 11852;

        /// <remarks />
        public const uint AuditConditionAcknowledgeEventType_ConditionEventId = 17223;

        /// <remarks />
        public const uint AuditConditionAcknowledgeEventType_Comment = 11853;

        /// <remarks />
        public const uint AuditConditionConfirmEventType_ConditionEventId = 17224;

        /// <remarks />
        public const uint AuditConditionConfirmEventType_Comment = 11854;

        /// <remarks />
        public const uint AuditConditionShelvingEventType_ShelvingTime = 11855;

        /// <remarks />
        public const uint AlarmMetricsType_AlarmCount = 17280;

        /// <remarks />
        public const uint AlarmMetricsType_StartTime = 17991;

        /// <remarks />
        public const uint AlarmMetricsType_MaximumActiveState = 17281;

        /// <remarks />
        public const uint AlarmMetricsType_MaximumUnAck = 17282;

        /// <remarks />
        public const uint AlarmMetricsType_CurrentAlarmRate = 17284;

        /// <remarks />
        public const uint AlarmMetricsType_CurrentAlarmRate_Rate = 17285;

        /// <remarks />
        public const uint AlarmMetricsType_MaximumAlarmRate = 17286;

        /// <remarks />
        public const uint AlarmMetricsType_MaximumAlarmRate_Rate = 17287;

        /// <remarks />
        public const uint AlarmMetricsType_MaximumReAlarmCount = 17283;

        /// <remarks />
        public const uint AlarmMetricsType_AverageAlarmRate = 17288;

        /// <remarks />
        public const uint AlarmMetricsType_AverageAlarmRate_Rate = 17289;

        /// <remarks />
        public const uint AlarmRateVariableType_Rate = 17278;

        /// <remarks />
        public const uint ProgramStateMachineType_CurrentState = 3830;

        /// <remarks />
        public const uint ProgramStateMachineType_CurrentState_Id = 3831;

        /// <remarks />
        public const uint ProgramStateMachineType_CurrentState_Number = 3833;

        /// <remarks />
        public const uint ProgramStateMachineType_LastTransition = 3835;

        /// <remarks />
        public const uint ProgramStateMachineType_LastTransition_Id = 3836;

        /// <remarks />
        public const uint ProgramStateMachineType_LastTransition_Number = 3838;

        /// <remarks />
        public const uint ProgramStateMachineType_LastTransition_TransitionTime = 3839;

        /// <remarks />
        public const uint ProgramStateMachineType_Creatable = 2392;

        /// <remarks />
        public const uint ProgramStateMachineType_Deletable = 2393;

        /// <remarks />
        public const uint ProgramStateMachineType_AutoDelete = 2394;

        /// <remarks />
        public const uint ProgramStateMachineType_RecycleCount = 2395;

        /// <remarks />
        public const uint ProgramStateMachineType_InstanceCount = 2396;

        /// <remarks />
        public const uint ProgramStateMachineType_MaxInstanceCount = 2397;

        /// <remarks />
        public const uint ProgramStateMachineType_MaxRecycleCount = 2398;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic = 2399;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_CreateSessionId = 3840;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_CreateClientName = 3841;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_InvocationCreationTime = 3842;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_LastTransitionTime = 3843;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_LastMethodCall = 3844;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_LastMethodSessionId = 3845;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_LastMethodInputArguments = 3846;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_LastMethodOutputArguments = 3847;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_LastMethodInputValues = 15038;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_LastMethodOutputValues = 15040;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_LastMethodCallTime = 3848;

        /// <remarks />
        public const uint ProgramStateMachineType_ProgramDiagnostic_LastMethodReturnStatus = 3849;

        /// <remarks />
        public const uint ProgramStateMachineType_Halted_StateNumber = 2407;

        /// <remarks />
        public const uint ProgramStateMachineType_Ready_StateNumber = 2401;

        /// <remarks />
        public const uint ProgramStateMachineType_Running_StateNumber = 2403;

        /// <remarks />
        public const uint ProgramStateMachineType_Suspended_StateNumber = 2405;

        /// <remarks />
        public const uint ProgramStateMachineType_HaltedToReady_TransitionNumber = 2409;

        /// <remarks />
        public const uint ProgramStateMachineType_ReadyToRunning_TransitionNumber = 2411;

        /// <remarks />
        public const uint ProgramStateMachineType_RunningToHalted_TransitionNumber = 2413;

        /// <remarks />
        public const uint ProgramStateMachineType_RunningToReady_TransitionNumber = 2415;

        /// <remarks />
        public const uint ProgramStateMachineType_RunningToSuspended_TransitionNumber = 2417;

        /// <remarks />
        public const uint ProgramStateMachineType_SuspendedToRunning_TransitionNumber = 2419;

        /// <remarks />
        public const uint ProgramStateMachineType_SuspendedToHalted_TransitionNumber = 2421;

        /// <remarks />
        public const uint ProgramStateMachineType_SuspendedToReady_TransitionNumber = 2423;

        /// <remarks />
        public const uint ProgramStateMachineType_ReadyToHalted_TransitionNumber = 2425;

        /// <remarks />
        public const uint ProgramTransitionEventType_Transition_Id = 3802;

        /// <remarks />
        public const uint ProgramTransitionEventType_FromState_Id = 3792;

        /// <remarks />
        public const uint ProgramTransitionEventType_ToState_Id = 3797;

        /// <remarks />
        public const uint ProgramTransitionEventType_IntermediateResult = 2379;

        /// <remarks />
        public const uint AuditProgramTransitionEventType_TransitionNumber = 11875;

        /// <remarks />
        public const uint ProgramTransitionAuditEventType_Transition = 3825;

        /// <remarks />
        public const uint ProgramTransitionAuditEventType_Transition_Id = 3826;

        /// <remarks />
        public const uint ProgramDiagnosticType_CreateSessionId = 2381;

        /// <remarks />
        public const uint ProgramDiagnosticType_CreateClientName = 2382;

        /// <remarks />
        public const uint ProgramDiagnosticType_InvocationCreationTime = 2383;

        /// <remarks />
        public const uint ProgramDiagnosticType_LastTransitionTime = 2384;

        /// <remarks />
        public const uint ProgramDiagnosticType_LastMethodCall = 2385;

        /// <remarks />
        public const uint ProgramDiagnosticType_LastMethodSessionId = 2386;

        /// <remarks />
        public const uint ProgramDiagnosticType_LastMethodInputArguments = 2387;

        /// <remarks />
        public const uint ProgramDiagnosticType_LastMethodOutputArguments = 2388;

        /// <remarks />
        public const uint ProgramDiagnosticType_LastMethodCallTime = 2389;

        /// <remarks />
        public const uint ProgramDiagnosticType_LastMethodReturnStatus = 2390;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_CreateSessionId = 15384;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_CreateClientName = 15385;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_InvocationCreationTime = 15386;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_LastTransitionTime = 15387;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_LastMethodCall = 15388;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_LastMethodSessionId = 15389;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_LastMethodInputArguments = 15390;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_LastMethodOutputArguments = 15391;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_LastMethodInputValues = 15392;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_LastMethodOutputValues = 15393;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_LastMethodCallTime = 15394;

        /// <remarks />
        public const uint ProgramDiagnostic2Type_LastMethodReturnStatus = 15395;

        /// <remarks />
        public const uint Annotations = 11214;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad = 11168;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad = 11169;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood = 11170;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation = 11171;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_Stepped = 2323;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_Definition = 2324;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_MaxTimeInterval = 2325;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_MinTimeInterval = 2326;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_ExceptionDeviation = 2327;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_ExceptionDeviationFormat = 2328;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_StartOfArchive = 11499;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_StartOfOnlineArchive = 11500;

        /// <remarks />
        public const uint HistoricalDataConfigurationType_ServerTimestampSupported = 19092;

        /// <remarks />
        public const uint HAConfiguration_AggregateConfiguration_TreatUncertainAsBad = 11204;

        /// <remarks />
        public const uint HAConfiguration_AggregateConfiguration_PercentDataBad = 11205;

        /// <remarks />
        public const uint HAConfiguration_AggregateConfiguration_PercentDataGood = 11206;

        /// <remarks />
        public const uint HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation = 11207;

        /// <remarks />
        public const uint HAConfiguration_Stepped = 11208;

        /// <remarks />
        public const uint HistoricalEventFilter = 11215;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_AccessHistoryDataCapability = 2331;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_AccessHistoryEventsCapability = 2332;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_MaxReturnDataValues = 11268;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_MaxReturnEventValues = 11269;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_InsertDataCapability = 2334;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_ReplaceDataCapability = 2335;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_UpdateDataCapability = 2336;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_DeleteRawCapability = 2337;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_DeleteAtTimeCapability = 2338;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_InsertEventCapability = 11278;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_ReplaceEventCapability = 11279;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_UpdateEventCapability = 11280;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_DeleteEventCapability = 11501;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_InsertAnnotationCapability = 11270;

        /// <remarks />
        public const uint HistoryServerCapabilitiesType_ServerTimestampSupported = 19094;

        /// <remarks />
        public const uint AuditHistoryEventUpdateEventType_UpdatedNode = 3025;

        /// <remarks />
        public const uint AuditHistoryEventUpdateEventType_PerformInsertReplace = 3028;

        /// <remarks />
        public const uint AuditHistoryEventUpdateEventType_Filter = 3003;

        /// <remarks />
        public const uint AuditHistoryEventUpdateEventType_NewValues = 3029;

        /// <remarks />
        public const uint AuditHistoryEventUpdateEventType_OldValues = 3030;

        /// <remarks />
        public const uint AuditHistoryValueUpdateEventType_UpdatedNode = 3026;

        /// <remarks />
        public const uint AuditHistoryValueUpdateEventType_PerformInsertReplace = 3031;

        /// <remarks />
        public const uint AuditHistoryValueUpdateEventType_NewValues = 3032;

        /// <remarks />
        public const uint AuditHistoryValueUpdateEventType_OldValues = 3033;

        /// <remarks />
        public const uint AuditHistoryAnnotationUpdateEventType_PerformInsertReplace = 19293;

        /// <remarks />
        public const uint AuditHistoryAnnotationUpdateEventType_NewValues = 19294;

        /// <remarks />
        public const uint AuditHistoryAnnotationUpdateEventType_OldValues = 19295;

        /// <remarks />
        public const uint AuditHistoryDeleteEventType_UpdatedNode = 3027;

        /// <remarks />
        public const uint AuditHistoryRawModifyDeleteEventType_IsDeleteModified = 3015;

        /// <remarks />
        public const uint AuditHistoryRawModifyDeleteEventType_StartTime = 3016;

        /// <remarks />
        public const uint AuditHistoryRawModifyDeleteEventType_EndTime = 3017;

        /// <remarks />
        public const uint AuditHistoryRawModifyDeleteEventType_OldValues = 3034;

        /// <remarks />
        public const uint AuditHistoryAtTimeDeleteEventType_ReqTimes = 3020;

        /// <remarks />
        public const uint AuditHistoryAtTimeDeleteEventType_OldValues = 3021;

        /// <remarks />
        public const uint AuditHistoryEventDeleteEventType_EventIds = 3023;

        /// <remarks />
        public const uint AuditHistoryEventDeleteEventType_OldValues = 3024;

        /// <remarks />
        public const uint TrustListType_Open_InputArguments = 12528;

        /// <remarks />
        public const uint TrustListType_Open_OutputArguments = 12529;

        /// <remarks />
        public const uint TrustListType_Close_InputArguments = 12531;

        /// <remarks />
        public const uint TrustListType_Read_InputArguments = 12533;

        /// <remarks />
        public const uint TrustListType_Read_OutputArguments = 12534;

        /// <remarks />
        public const uint TrustListType_Write_InputArguments = 12536;

        /// <remarks />
        public const uint TrustListType_GetPosition_InputArguments = 12538;

        /// <remarks />
        public const uint TrustListType_GetPosition_OutputArguments = 12539;

        /// <remarks />
        public const uint TrustListType_SetPosition_InputArguments = 12541;

        /// <remarks />
        public const uint TrustListType_LastUpdateTime = 12542;

        /// <remarks />
        public const uint TrustListType_UpdateFrequency = 19296;

        /// <remarks />
        public const uint TrustListType_OpenWithMasks_InputArguments = 12544;

        /// <remarks />
        public const uint TrustListType_OpenWithMasks_OutputArguments = 12545;

        /// <remarks />
        public const uint TrustListType_CloseAndUpdate_InputArguments = 12705;

        /// <remarks />
        public const uint TrustListType_CloseAndUpdate_OutputArguments = 12547;

        /// <remarks />
        public const uint TrustListType_AddCertificate_InputArguments = 12549;

        /// <remarks />
        public const uint TrustListType_RemoveCertificate_InputArguments = 12551;

        /// <remarks />
        public const uint TrustListMasks_EnumValues = 12553;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_EnabledState_Id = 19315;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_Quality_SourceTimestamp = 19324;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_LastSeverity_SourceTimestamp = 19326;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_Comment_SourceTimestamp = 19328;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_AddComment_InputArguments = 19333;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ConditionRefresh_InputArguments = 19335;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ConditionRefresh2_InputArguments = 19337;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_AckedState_Id = 19339;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ConfirmedState_Id = 19348;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_Acknowledge_InputArguments = 19357;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_Confirm_InputArguments = 19359;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ActiveState_Id = 19361;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_SuppressedState_Id = 19371;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_OutOfServiceState_Id = 19380;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ShelvingState_CurrentState = 19389;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ShelvingState_CurrentState_Id = 19390;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ShelvingState_LastTransition_Id = 19395;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ShelvingState_UnshelveTime = 19402;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_ShelvingState_TimedShelve_InputArguments = 19404;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_SilenceState_Id = 19415;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_LatchedState_Id = 19428;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_TrustListId = 19446;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_LastUpdateTime = 19447;

        /// <remarks />
        public const uint TrustListOutOfDateAlarmType_UpdateFrequency = 19448;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Size = 13600;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Writable = 13601;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_UserWritable = 13602;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_OpenCount = 13603;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Open_InputArguments = 13606;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Open_OutputArguments = 13607;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Close_InputArguments = 13609;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Read_InputArguments = 13611;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Read_OutputArguments = 13612;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_Write_InputArguments = 13614;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_GetPosition_InputArguments = 13616;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_GetPosition_OutputArguments = 13617;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_SetPosition_InputArguments = 13619;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_LastUpdateTime = 13620;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_OpenWithMasks_InputArguments = 13622;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_OpenWithMasks_OutputArguments = 13623;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_CloseAndUpdate_InputArguments = 13625;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments = 13626;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_AddCertificate_InputArguments = 13628;

        /// <remarks />
        public const uint CertificateGroupType_TrustList_RemoveCertificate_InputArguments = 13630;

        /// <remarks />
        public const uint CertificateGroupType_CertificateTypes = 13631;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_EventId = 19451;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_EventType = 19452;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_SourceNode = 19453;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_SourceName = 19454;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Time = 19455;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ReceiveTime = 19456;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Message = 19458;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Severity = 19459;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ConditionClassId = 19460;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ConditionClassName = 19461;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ConditionName = 19464;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_BranchId = 19465;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Retain = 19466;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_EnabledState = 19467;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_EnabledState_Id = 19468;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Quality = 19476;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Quality_SourceTimestamp = 19477;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_LastSeverity = 19478;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_LastSeverity_SourceTimestamp = 19479;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Comment = 19480;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Comment_SourceTimestamp = 19481;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ClientUserId = 19482;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_AddComment_InputArguments = 19486;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_AckedState = 19487;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_AckedState_Id = 19488;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ConfirmedState_Id = 19497;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Acknowledge_InputArguments = 19506;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Confirm_InputArguments = 19508;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ActiveState = 19509;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ActiveState_Id = 19510;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_InputNode = 19518;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_SuppressedState_Id = 19520;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_OutOfServiceState_Id = 19529;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ShelvingState_CurrentState = 19538;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ShelvingState_CurrentState_Id = 19539;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ShelvingState_LastTransition_Id = 19544;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ShelvingState_UnshelveTime = 20096;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 20098;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_SuppressedOrShelved = 20101;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_SilenceState_Id = 20109;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_LatchedState_Id = 20122;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_NormalState = 20138;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_ExpirationDate = 20139;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_CertificateType = 20141;

        /// <remarks />
        public const uint CertificateGroupType_CertificateExpired_Certificate = 20142;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_EventId = 20144;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_EventType = 20145;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_SourceNode = 20146;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_SourceName = 20147;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Time = 20148;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ReceiveTime = 20149;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Message = 20151;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Severity = 20152;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ConditionClassId = 20153;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ConditionClassName = 20154;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ConditionName = 20157;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_BranchId = 20158;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Retain = 20159;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_EnabledState = 20160;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_EnabledState_Id = 20161;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Quality = 20169;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Quality_SourceTimestamp = 20170;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_LastSeverity = 20171;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_LastSeverity_SourceTimestamp = 20172;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Comment = 20173;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Comment_SourceTimestamp = 20174;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ClientUserId = 20175;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_AddComment_InputArguments = 20179;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_AckedState = 20180;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_AckedState_Id = 20181;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ConfirmedState_Id = 20190;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Acknowledge_InputArguments = 20199;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_Confirm_InputArguments = 20201;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ActiveState = 20202;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ActiveState_Id = 20203;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_InputNode = 20211;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_SuppressedState_Id = 20213;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_OutOfServiceState_Id = 20222;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ShelvingState_CurrentState = 20231;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ShelvingState_CurrentState_Id = 20232;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ShelvingState_LastTransition_Id = 20237;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ShelvingState_UnshelveTime = 20244;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 20246;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_SuppressedOrShelved = 20249;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_SilenceState_Id = 20257;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_LatchedState_Id = 20270;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_NormalState = 20286;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_TrustListId = 20287;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_LastUpdateTime = 20288;

        /// <remarks />
        public const uint CertificateGroupType_TrustListOutOfDate_UpdateFrequency = 20289;

        /// <remarks />
        public const uint CertificateGroupType_GetRejectedList_OutputArguments = 23527;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size = 13816;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable = 13817;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable = 13818;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount = 13819;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments = 13822;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments = 13823;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments = 13825;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments = 13827;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments = 13828;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments = 13830;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = 13832;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = 13833;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = 13835;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime = 13836;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = 13838;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = 13839;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = 13841;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = 13842;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = 13844;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = 13846;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes = 13847;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EventId = 20292;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EventType = 20293;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SourceNode = 20294;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SourceName = 20295;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Time = 20296;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ReceiveTime = 20297;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Message = 20299;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Severity = 20300;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConditionClassId = 20301;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConditionClassName = 20302;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConditionName = 20305;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_BranchId = 20306;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Retain = 20307;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EnabledState = 20308;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EnabledState_Id = 20309;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Quality = 20317;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Quality_SourceTimestamp = 20318;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_LastSeverity = 20319;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_LastSeverity_SourceTimestamp = 20320;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Comment = 20321;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Comment_SourceTimestamp = 20322;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ClientUserId = 20323;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AddComment_InputArguments = 20327;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AckedState = 20328;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AckedState_Id = 20329;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConfirmedState_Id = 20338;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Acknowledge_InputArguments = 20347;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Confirm_InputArguments = 20349;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ActiveState = 20350;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ActiveState_Id = 20351;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_InputNode = 20359;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SuppressedState_Id = 20361;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_OutOfServiceState_Id = 20370;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState = 20379;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState_Id = 20380;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_LastTransition_Id = 20385;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_UnshelveTime = 20392;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 20394;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SuppressedOrShelved = 20397;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SilenceState_Id = 20405;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_LatchedState_Id = 20420;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_NormalState = 20436;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ExpirationDate = 20437;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_CertificateType = 20439;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Certificate = 20440;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EventId = 20442;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EventType = 20443;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SourceNode = 20444;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SourceName = 20445;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Time = 20446;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ReceiveTime = 20447;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Message = 20449;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Severity = 20450;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassId = 20451;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassName = 20452;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConditionName = 20455;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_BranchId = 20456;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Retain = 20457;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EnabledState = 20458;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EnabledState_Id = 20459;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Quality = 20467;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Quality_SourceTimestamp = 20468;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity = 20469;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = 20470;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Comment = 20471;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Comment_SourceTimestamp = 20472;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ClientUserId = 20473;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AddComment_InputArguments = 20477;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AckedState = 20478;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AckedState_Id = 20479;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConfirmedState_Id = 20488;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge_InputArguments = 20497;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Confirm_InputArguments = 20499;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ActiveState = 20500;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ActiveState_Id = 20501;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_InputNode = 20509;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SuppressedState_Id = 20511;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_OutOfServiceState_Id = 20520;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState = 20529;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = 20530;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = 20535;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = 20542;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 20544;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SuppressedOrShelved = 20547;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SilenceState_Id = 20555;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LatchedState_Id = 20568;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_NormalState = 20584;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_TrustListId = 20585;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LastUpdateTime = 20586;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_UpdateFrequency = 20587;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultApplicationGroup_GetRejectedList_OutputArguments = 23530;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size = 13850;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable = 13851;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable = 13852;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount = 13853;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments = 13856;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments = 13857;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments = 13859;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments = 13861;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments = 13862;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments = 13864;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = 13866;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = 13867;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = 13869;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime = 13870;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = 13872;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = 13873;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = 13875;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = 13876;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = 13878;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = 13880;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes = 13881;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EventId = 20590;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EventType = 20591;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SourceNode = 20592;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SourceName = 20593;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Time = 20594;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ReceiveTime = 20595;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Message = 20597;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Severity = 20598;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConditionClassId = 20599;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConditionClassName = 20600;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConditionName = 20603;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_BranchId = 20604;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Retain = 20605;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EnabledState = 20606;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EnabledState_Id = 20607;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Quality = 20615;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Quality_SourceTimestamp = 20616;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_LastSeverity = 20617;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_LastSeverity_SourceTimestamp = 20618;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Comment = 20619;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Comment_SourceTimestamp = 20620;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ClientUserId = 20621;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AddComment_InputArguments = 20625;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AckedState = 20626;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AckedState_Id = 20627;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConfirmedState_Id = 20636;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Acknowledge_InputArguments = 20645;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Confirm_InputArguments = 20647;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ActiveState = 20648;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ActiveState_Id = 20649;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_InputNode = 20657;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SuppressedState_Id = 20659;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_OutOfServiceState_Id = 20668;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState = 20677;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState_Id = 20678;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_LastTransition_Id = 20683;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_UnshelveTime = 20690;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 20692;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SuppressedOrShelved = 20695;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SilenceState_Id = 20703;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_LatchedState_Id = 20716;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_NormalState = 20732;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ExpirationDate = 20733;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_CertificateType = 20735;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Certificate = 20736;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EventId = 20738;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EventType = 20739;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SourceNode = 20740;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SourceName = 20741;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Time = 20742;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ReceiveTime = 20743;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Message = 20745;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Severity = 20746;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassId = 20747;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassName = 20748;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConditionName = 20751;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_BranchId = 20752;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Retain = 20753;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EnabledState = 20754;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EnabledState_Id = 20755;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Quality = 20763;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Quality_SourceTimestamp = 20764;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity = 20765;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = 20766;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Comment = 20767;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Comment_SourceTimestamp = 20768;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ClientUserId = 20769;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AddComment_InputArguments = 20773;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AckedState = 20774;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AckedState_Id = 20775;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConfirmedState_Id = 20784;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge_InputArguments = 20793;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Confirm_InputArguments = 20795;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ActiveState = 20796;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ActiveState_Id = 20797;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_InputNode = 20805;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SuppressedState_Id = 20807;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_OutOfServiceState_Id = 20816;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState = 20825;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = 20826;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = 20831;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = 20838;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 20840;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SuppressedOrShelved = 20843;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SilenceState_Id = 20851;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LatchedState_Id = 20864;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_NormalState = 20880;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_TrustListId = 20881;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LastUpdateTime = 20882;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_UpdateFrequency = 20883;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultHttpsGroup_GetRejectedList_OutputArguments = 23532;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size = 13884;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable = 13885;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable = 13886;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount = 13887;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments = 13890;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments = 13891;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments = 13893;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments = 13895;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments = 13896;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments = 13898;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = 13900;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = 13901;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = 13903;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime = 13904;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = 13906;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = 13907;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = 13909;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = 13910;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = 13912;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = 13914;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes = 13915;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EventId = 20886;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EventType = 20887;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SourceNode = 20888;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SourceName = 20889;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Time = 20890;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ReceiveTime = 20891;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Message = 20893;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Severity = 20894;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConditionClassId = 20895;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConditionClassName = 20896;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConditionName = 20899;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_BranchId = 20900;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Retain = 20901;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EnabledState = 20902;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EnabledState_Id = 20903;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Quality = 20911;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Quality_SourceTimestamp = 20912;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_LastSeverity = 20913;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_LastSeverity_SourceTimestamp = 20914;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Comment = 20915;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Comment_SourceTimestamp = 20916;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ClientUserId = 20917;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AddComment_InputArguments = 20921;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AckedState = 20922;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AckedState_Id = 20923;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConfirmedState_Id = 20932;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Acknowledge_InputArguments = 20941;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Confirm_InputArguments = 20943;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ActiveState = 20944;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ActiveState_Id = 20945;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_InputNode = 20953;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SuppressedState_Id = 20955;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_OutOfServiceState_Id = 20964;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState = 20973;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState_Id = 20974;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_LastTransition_Id = 20979;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_UnshelveTime = 20986;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 20988;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SuppressedOrShelved = 20991;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SilenceState_Id = 21008;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_LatchedState_Id = 21215;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_NormalState = 21231;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ExpirationDate = 21232;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_CertificateType = 21234;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Certificate = 21235;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EventId = 21237;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EventType = 21238;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SourceNode = 21239;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SourceName = 21240;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Time = 21241;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ReceiveTime = 21242;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Message = 21244;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Severity = 21245;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassId = 21246;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassName = 21247;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConditionName = 21250;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_BranchId = 21251;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Retain = 21252;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState = 21253;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState_Id = 21254;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Quality = 21262;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Quality_SourceTimestamp = 21263;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity = 21264;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = 21265;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Comment = 21266;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Comment_SourceTimestamp = 21267;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ClientUserId = 21268;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AddComment_InputArguments = 21272;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AckedState = 21273;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AckedState_Id = 21274;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConfirmedState_Id = 21283;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge_InputArguments = 21292;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Confirm_InputArguments = 21294;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState = 21295;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState_Id = 21296;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_InputNode = 21304;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedState_Id = 21306;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_OutOfServiceState_Id = 21315;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState = 21324;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = 21325;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = 21330;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = 21337;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 21339;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedOrShelved = 21342;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SilenceState_Id = 21350;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LatchedState_Id = 21363;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_NormalState = 21379;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_TrustListId = 21380;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LastUpdateTime = 21381;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_UpdateFrequency = 21382;

        /// <remarks />
        public const uint CertificateGroupFolderType_DefaultUserTokenGroup_GetRejectedList_OutputArguments = 23534;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size = 13918;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable = 13919;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable = 13920;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount = 13921;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments = 13924;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments = 13925;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments = 13927;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments = 13929;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments = 13930;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments = 13932;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments = 13934;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments = 13935;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments = 13937;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime = 13938;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments = 13940;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments = 13941;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments = 13943;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments = 13944;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments = 13946;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments = 13948;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes = 13949;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EventId = 21385;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EventType = 21386;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SourceNode = 21387;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SourceName = 21388;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Time = 21389;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ReceiveTime = 21390;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Message = 21392;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Severity = 21393;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConditionClassId = 21394;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConditionClassName = 21395;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConditionName = 21398;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_BranchId = 21399;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Retain = 21400;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EnabledState = 21401;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EnabledState_Id = 21402;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Quality = 21410;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Quality_SourceTimestamp = 21411;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_LastSeverity = 21412;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_LastSeverity_SourceTimestamp = 21413;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Comment = 21414;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Comment_SourceTimestamp = 21415;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ClientUserId = 21416;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AddComment_InputArguments = 21420;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AckedState = 21421;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AckedState_Id = 21422;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConfirmedState_Id = 21431;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Acknowledge_InputArguments = 21440;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Confirm_InputArguments = 21442;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ActiveState = 21443;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ActiveState_Id = 21444;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_InputNode = 21452;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SuppressedState_Id = 21454;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_OutOfServiceState_Id = 21463;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_CurrentState = 21472;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_CurrentState_Id = 21473;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_LastTransition_Id = 21478;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_UnshelveTime = 21485;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 21487;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SuppressedOrShelved = 21490;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SilenceState_Id = 21498;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_LatchedState_Id = 21511;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_NormalState = 21527;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ExpirationDate = 21528;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_CertificateType = 21530;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Certificate = 21531;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EventId = 21533;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EventType = 21534;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SourceNode = 21535;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SourceName = 21536;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Time = 21537;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ReceiveTime = 21538;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Message = 21540;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Severity = 21541;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConditionClassId = 21542;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConditionClassName = 21543;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConditionName = 21546;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_BranchId = 21547;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Retain = 21548;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EnabledState = 21549;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EnabledState_Id = 21550;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Quality = 21558;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Quality_SourceTimestamp = 21559;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LastSeverity = 21560;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LastSeverity_SourceTimestamp = 21561;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Comment = 21562;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Comment_SourceTimestamp = 21563;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ClientUserId = 21564;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AddComment_InputArguments = 21568;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AckedState = 21569;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AckedState_Id = 21570;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConfirmedState_Id = 21579;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Acknowledge_InputArguments = 21588;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Confirm_InputArguments = 21590;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ActiveState = 21591;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ActiveState_Id = 21592;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_InputNode = 21600;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SuppressedState_Id = 21602;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_OutOfServiceState_Id = 21611;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_CurrentState = 21620;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_CurrentState_Id = 21621;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_LastTransition_Id = 21626;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_UnshelveTime = 21633;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 21635;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SuppressedOrShelved = 21638;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SilenceState_Id = 21646;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LatchedState_Id = 21659;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_NormalState = 21675;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_TrustListId = 21676;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LastUpdateTime = 21677;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_UpdateFrequency = 21678;

        /// <remarks />
        public const uint CertificateGroupFolderType_AdditionalGroup_Placeholder_GetRejectedList_OutputArguments = 23536;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size = 13953;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable = 13954;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable = 13955;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount = 13956;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments = 13959;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments = 13960;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments = 13962;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments = 13964;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments = 13965;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments = 13967;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = 13969;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = 13970;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = 13972;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime = 13973;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = 13975;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = 13976;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = 13978;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = 13979;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = 13981;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = 13983;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes = 13984;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventId = 21681;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventType = 21682;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceNode = 21683;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceName = 21684;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Time = 21685;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ReceiveTime = 21686;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Message = 21688;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Severity = 21689;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassId = 21690;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassName = 21691;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionName = 21694;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_BranchId = 21695;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Retain = 21696;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState = 21697;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState_Id = 21698;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality = 21706;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality_SourceTimestamp = 21707;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity = 21708;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity_SourceTimestamp = 21709;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment = 21710;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment_SourceTimestamp = 21711;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ClientUserId = 21712;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment_InputArguments = 21716;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState = 21717;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState_Id = 21718;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConfirmedState_Id = 21727;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge_InputArguments = 21736;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Confirm_InputArguments = 21738;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState = 21739;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState_Id = 21740;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_InputNode = 21748;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedState_Id = 21750;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_OutOfServiceState_Id = 21759;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState = 21768;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState_Id = 21769;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_LastTransition_Id = 21774;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_UnshelveTime = 21781;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 21783;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedOrShelved = 21786;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SilenceState_Id = 21794;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LatchedState_Id = 21807;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_NormalState = 21823;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ExpirationDate = 21824;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_CertificateType = 21826;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Certificate = 21827;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventId = 21829;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventType = 21830;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceNode = 21831;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceName = 21832;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Time = 21833;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ReceiveTime = 21834;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Message = 21836;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Severity = 21837;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassId = 21838;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassName = 21839;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionName = 21842;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_BranchId = 21843;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Retain = 21844;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState = 21845;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState_Id = 21846;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality = 21854;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality_SourceTimestamp = 21855;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity = 21856;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = 21857;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment = 21858;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment_SourceTimestamp = 21859;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ClientUserId = 21860;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment_InputArguments = 21864;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState = 21865;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState_Id = 21866;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConfirmedState_Id = 21875;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge_InputArguments = 21884;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Confirm_InputArguments = 21886;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState = 21887;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState_Id = 21888;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_InputNode = 21896;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedState_Id = 21898;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_OutOfServiceState_Id = 21907;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState = 21916;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = 21917;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = 21922;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = 21929;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 21931;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedOrShelved = 21934;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SilenceState_Id = 21942;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LatchedState_Id = 21955;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_NormalState = 21971;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_TrustListId = 21972;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastUpdateTime = 21973;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_UpdateFrequency = 21974;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_GetRejectedList_OutputArguments = 23545;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size = 13987;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable = 13988;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable = 13989;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount = 13990;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments = 13993;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments = 13994;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments = 13996;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments = 13998;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments = 13999;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments = 14001;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = 14003;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = 14004;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = 14006;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime = 14007;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = 14009;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = 14010;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = 14012;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = 14013;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = 14015;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = 14017;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes = 14018;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventId = 21977;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventType = 21978;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceNode = 21979;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceName = 21980;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Time = 21981;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ReceiveTime = 21982;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Message = 21984;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Severity = 21985;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassId = 21986;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassName = 21987;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionName = 21990;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_BranchId = 21991;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Retain = 21992;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState = 21993;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState_Id = 21994;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality = 22002;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality_SourceTimestamp = 22003;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity = 22004;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity_SourceTimestamp = 22005;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment = 22006;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment_SourceTimestamp = 22007;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ClientUserId = 22008;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment_InputArguments = 22012;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState = 22013;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState_Id = 22014;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConfirmedState_Id = 22023;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge_InputArguments = 22032;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Confirm_InputArguments = 22034;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState = 22035;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState_Id = 22036;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_InputNode = 22044;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedState_Id = 22046;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_OutOfServiceState_Id = 22055;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState = 22064;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState_Id = 22065;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_LastTransition_Id = 22070;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_UnshelveTime = 22077;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 22079;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedOrShelved = 22082;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SilenceState_Id = 22090;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LatchedState_Id = 22103;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_NormalState = 22119;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ExpirationDate = 22120;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_CertificateType = 22122;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Certificate = 22123;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventId = 22125;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventType = 22126;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceNode = 22127;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceName = 22128;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Time = 22129;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ReceiveTime = 22130;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Message = 22132;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Severity = 22133;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassId = 22134;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassName = 22135;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionName = 22138;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_BranchId = 22139;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Retain = 22140;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState = 22141;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState_Id = 22142;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality = 22150;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality_SourceTimestamp = 22151;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity = 22152;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = 22153;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment = 22154;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment_SourceTimestamp = 22155;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ClientUserId = 22156;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment_InputArguments = 22160;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState = 22161;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState_Id = 22162;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConfirmedState_Id = 22171;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge_InputArguments = 22180;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Confirm_InputArguments = 22182;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState = 22183;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState_Id = 22184;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_InputNode = 22192;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedState_Id = 22194;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_OutOfServiceState_Id = 22203;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState = 22212;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = 22213;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = 22218;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = 22225;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 22227;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedOrShelved = 22230;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SilenceState_Id = 22238;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LatchedState_Id = 22251;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_NormalState = 22267;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_TrustListId = 22268;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastUpdateTime = 22269;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_UpdateFrequency = 22270;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_GetRejectedList_OutputArguments = 23547;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size = 14021;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable = 14022;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable = 14023;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount = 14024;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments = 14027;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments = 14028;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments = 14030;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments = 14032;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments = 14033;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments = 14035;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = 14037;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = 14038;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = 14040;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime = 14041;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = 14043;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = 14044;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = 14046;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = 14047;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = 14049;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = 14051;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes = 14052;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventId = 22273;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventType = 22274;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceNode = 22275;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceName = 22276;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Time = 22277;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ReceiveTime = 22278;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Message = 22280;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Severity = 22281;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassId = 22282;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassName = 22283;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionName = 22286;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_BranchId = 22287;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Retain = 22288;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState = 22289;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState_Id = 22290;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality = 22298;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality_SourceTimestamp = 22299;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity = 22300;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity_SourceTimestamp = 22301;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment = 22302;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment_SourceTimestamp = 22303;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ClientUserId = 22304;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment_InputArguments = 22308;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState = 22309;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState_Id = 22310;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConfirmedState_Id = 22319;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge_InputArguments = 22328;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Confirm_InputArguments = 22330;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState = 22331;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState_Id = 22332;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_InputNode = 22340;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedState_Id = 22342;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_OutOfServiceState_Id = 22351;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState = 22360;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState_Id = 22361;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_LastTransition_Id = 22366;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_UnshelveTime = 22373;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 22375;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedOrShelved = 22378;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SilenceState_Id = 22386;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LatchedState_Id = 22399;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_NormalState = 22415;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ExpirationDate = 22416;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_CertificateType = 22418;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Certificate = 22419;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventId = 22421;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventType = 22422;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceNode = 22423;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceName = 22424;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Time = 22425;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ReceiveTime = 22426;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Message = 22428;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Severity = 22429;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassId = 22430;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassName = 22431;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionName = 22434;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_BranchId = 22435;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Retain = 22436;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState = 22437;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState_Id = 22438;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality = 22446;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality_SourceTimestamp = 22447;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity = 22448;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = 22449;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment = 22450;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment_SourceTimestamp = 22451;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ClientUserId = 22452;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment_InputArguments = 22456;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState = 22457;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState_Id = 22458;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConfirmedState_Id = 22467;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge_InputArguments = 22476;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Confirm_InputArguments = 22478;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState = 22479;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState_Id = 22480;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_InputNode = 22488;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedState_Id = 22490;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_OutOfServiceState_Id = 22499;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState = 22508;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = 22509;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = 22514;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = 22521;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 22523;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedOrShelved = 22526;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SilenceState_Id = 22534;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LatchedState_Id = 22547;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_NormalState = 22563;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_TrustListId = 22564;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastUpdateTime = 22565;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_UpdateFrequency = 22566;

        /// <remarks />
        public const uint ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_GetRejectedList_OutputArguments = 23549;

        /// <remarks />
        public const uint ServerConfigurationType_ServerCapabilities = 12708;

        /// <remarks />
        public const uint ServerConfigurationType_SupportedPrivateKeyFormats = 12583;

        /// <remarks />
        public const uint ServerConfigurationType_MaxTrustListSize = 12584;

        /// <remarks />
        public const uint ServerConfigurationType_MulticastDnsEnabled = 12585;

        /// <remarks />
        public const uint ServerConfigurationType_UpdateCertificate_InputArguments = 12617;

        /// <remarks />
        public const uint ServerConfigurationType_UpdateCertificate_OutputArguments = 12618;

        /// <remarks />
        public const uint ServerConfigurationType_CreateSigningRequest_InputArguments = 12732;

        /// <remarks />
        public const uint ServerConfigurationType_CreateSigningRequest_OutputArguments = 12733;

        /// <remarks />
        public const uint ServerConfigurationType_GetRejectedList_OutputArguments = 12776;

        /// <remarks />
        public const uint CertificateUpdatedAuditEventType_CertificateGroup = 13735;

        /// <remarks />
        public const uint CertificateUpdatedAuditEventType_CertificateType = 13736;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size = 12643;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable = 14157;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable = 14158;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount = 12646;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments = 12648;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments = 12649;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments = 12651;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments = 12653;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments = 12654;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments = 12656;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = 12658;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = 12659;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = 12661;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime = 12662;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = 12664;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = 12665;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = 14160;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = 12667;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = 12669;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = 12671;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes = 14161;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventId = 22569;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventType = 22570;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceNode = 22571;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceName = 22572;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Time = 22573;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ReceiveTime = 22574;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Message = 22576;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Severity = 22577;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassId = 22578;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassName = 22579;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionName = 22582;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_BranchId = 22583;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Retain = 22584;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState = 22585;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState_Id = 22586;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality = 22594;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality_SourceTimestamp = 22595;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity = 22596;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity_SourceTimestamp = 22597;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment = 22598;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment_SourceTimestamp = 22599;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ClientUserId = 22600;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment_InputArguments = 22604;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState = 22605;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState_Id = 22606;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConfirmedState_Id = 22615;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge_InputArguments = 22624;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Confirm_InputArguments = 22626;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState = 22627;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState_Id = 22628;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_InputNode = 22636;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedState_Id = 22638;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_OutOfServiceState_Id = 22647;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState = 22656;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState_Id = 22657;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_LastTransition_Id = 22662;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_UnshelveTime = 22669;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 22671;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedOrShelved = 22674;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SilenceState_Id = 22682;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LatchedState_Id = 22695;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_NormalState = 22711;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ExpirationDate = 22712;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_CertificateType = 22714;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Certificate = 22715;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventId = 22717;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventType = 22718;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceNode = 22719;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceName = 22720;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Time = 22721;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ReceiveTime = 22722;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Message = 22724;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Severity = 22725;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassId = 22726;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassName = 22727;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionName = 22730;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_BranchId = 22731;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Retain = 22732;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState = 22733;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState_Id = 22734;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality = 22742;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality_SourceTimestamp = 22743;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity = 22744;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = 22745;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment = 22746;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment_SourceTimestamp = 22747;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ClientUserId = 22748;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment_InputArguments = 22752;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState = 22753;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState_Id = 22754;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConfirmedState_Id = 22763;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge_InputArguments = 22772;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Confirm_InputArguments = 22774;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState = 22775;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState_Id = 22776;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_InputNode = 22784;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedState_Id = 22786;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_OutOfServiceState_Id = 22795;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState = 22804;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = 22805;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = 22810;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = 22817;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 22819;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedOrShelved = 22822;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SilenceState_Id = 22830;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LatchedState_Id = 22843;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_NormalState = 22859;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_TrustListId = 22860;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastUpdateTime = 22861;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_UpdateFrequency = 22862;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultApplicationGroup_GetRejectedList_OutputArguments = 23551;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size = 14090;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable = 14091;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable = 14092;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount = 14093;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments = 14096;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments = 14097;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments = 14099;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments = 14101;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments = 14102;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments = 14104;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = 14106;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = 14107;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = 14109;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime = 14110;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = 14112;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = 14113;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = 14115;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = 14116;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = 14118;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = 14120;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes = 14121;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventId = 22865;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventType = 22866;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceNode = 22867;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceName = 22868;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Time = 22869;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ReceiveTime = 22870;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Message = 22872;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Severity = 22873;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassId = 22874;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassName = 22875;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionName = 22878;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_BranchId = 22879;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Retain = 22880;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState = 22881;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState_Id = 22882;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality = 22890;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality_SourceTimestamp = 22891;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity = 22892;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity_SourceTimestamp = 22893;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment = 22894;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment_SourceTimestamp = 22895;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ClientUserId = 22896;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment_InputArguments = 22900;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState = 22901;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState_Id = 22902;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConfirmedState_Id = 22911;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge_InputArguments = 22920;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Confirm_InputArguments = 22922;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState = 22923;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState_Id = 22924;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_InputNode = 22932;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedState_Id = 22934;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_OutOfServiceState_Id = 22943;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState = 22952;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState_Id = 22953;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_LastTransition_Id = 22958;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_UnshelveTime = 22965;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 22967;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedOrShelved = 22970;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SilenceState_Id = 22978;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LatchedState_Id = 22991;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_NormalState = 23007;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ExpirationDate = 23008;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_CertificateType = 23010;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Certificate = 23011;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventId = 23013;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventType = 23014;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceNode = 23015;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceName = 23016;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Time = 23017;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ReceiveTime = 23018;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Message = 23020;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Severity = 23021;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassId = 23022;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassName = 23023;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionName = 23026;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_BranchId = 23027;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Retain = 23028;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState = 23029;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState_Id = 23030;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality = 23038;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality_SourceTimestamp = 23039;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity = 23040;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = 23041;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment = 23042;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment_SourceTimestamp = 23043;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ClientUserId = 23044;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment_InputArguments = 23048;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState = 23049;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState_Id = 23050;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConfirmedState_Id = 23059;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge_InputArguments = 23068;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Confirm_InputArguments = 23070;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState = 23071;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState_Id = 23072;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_InputNode = 23080;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedState_Id = 23082;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_OutOfServiceState_Id = 23091;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState = 23100;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = 23101;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = 23106;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = 23113;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 23115;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedOrShelved = 23118;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SilenceState_Id = 23126;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LatchedState_Id = 23139;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_NormalState = 23155;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_TrustListId = 23156;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastUpdateTime = 23157;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_UpdateFrequency = 23158;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultHttpsGroup_GetRejectedList_OutputArguments = 23553;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size = 14124;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable = 14125;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable = 14126;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount = 14127;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments = 14130;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments = 14131;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments = 14133;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments = 14135;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments = 14136;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments = 14138;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = 14140;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = 14141;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = 14143;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime = 14144;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = 14146;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = 14147;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = 14149;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = 14150;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = 14152;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = 14154;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes = 14155;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventId = 23161;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventType = 23162;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceNode = 23163;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceName = 23164;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Time = 23165;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ReceiveTime = 23166;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Message = 23168;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Severity = 23169;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassId = 23170;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassName = 23171;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionName = 23174;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_BranchId = 23175;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Retain = 23176;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState = 23177;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState_Id = 23178;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality = 23186;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality_SourceTimestamp = 23187;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity = 23188;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity_SourceTimestamp = 23189;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment = 23190;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment_SourceTimestamp = 23191;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ClientUserId = 23192;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment_InputArguments = 23196;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState = 23197;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState_Id = 23198;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConfirmedState_Id = 23207;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge_InputArguments = 23216;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Confirm_InputArguments = 23218;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState = 23219;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState_Id = 23220;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_InputNode = 23228;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedState_Id = 23230;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_OutOfServiceState_Id = 23239;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState = 23248;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState_Id = 23249;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_LastTransition_Id = 23254;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_UnshelveTime = 23261;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = 23263;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedOrShelved = 23266;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SilenceState_Id = 23274;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LatchedState_Id = 23287;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_NormalState = 23303;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ExpirationDate = 23304;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_CertificateType = 23306;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Certificate = 23307;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventId = 23309;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventType = 23310;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceNode = 23311;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceName = 23312;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Time = 23313;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ReceiveTime = 23314;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Message = 23316;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Severity = 23317;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassId = 23318;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassName = 23319;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionName = 23322;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_BranchId = 23323;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Retain = 23324;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState = 23325;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState_Id = 23326;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality = 23334;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality_SourceTimestamp = 23335;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity = 23336;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = 23337;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment = 23338;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment_SourceTimestamp = 23339;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ClientUserId = 23340;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment_InputArguments = 23344;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState = 23345;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState_Id = 23346;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConfirmedState_Id = 23355;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge_InputArguments = 23364;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Confirm_InputArguments = 23366;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState = 23367;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState_Id = 23368;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_InputNode = 23376;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedState_Id = 23378;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_OutOfServiceState_Id = 23387;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState = 23396;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = 23397;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = 23402;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = 23409;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = 23411;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedOrShelved = 23414;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SilenceState_Id = 23422;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LatchedState_Id = 23435;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_NormalState = 23451;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_TrustListId = 23452;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastUpdateTime = 23453;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_UpdateFrequency = 23454;

        /// <remarks />
        public const uint ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_GetRejectedList_OutputArguments = 23555;

        /// <remarks />
        public const uint ServerConfiguration_ServerCapabilities = 12710;

        /// <remarks />
        public const uint ServerConfiguration_SupportedPrivateKeyFormats = 12639;

        /// <remarks />
        public const uint ServerConfiguration_MaxTrustListSize = 12640;

        /// <remarks />
        public const uint ServerConfiguration_MulticastDnsEnabled = 12641;

        /// <remarks />
        public const uint ServerConfiguration_UpdateCertificate_InputArguments = 13738;

        /// <remarks />
        public const uint ServerConfiguration_UpdateCertificate_OutputArguments = 13739;

        /// <remarks />
        public const uint ServerConfiguration_CreateSigningRequest_InputArguments = 12738;

        /// <remarks />
        public const uint ServerConfiguration_CreateSigningRequest_OutputArguments = 12739;

        /// <remarks />
        public const uint ServerConfiguration_GetRejectedList_OutputArguments = 12778;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType_ServiceName_Placeholder_ResourceUri = 17512;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType_ServiceName_Placeholder_ProfileUri = 17513;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType_ServiceName_Placeholder_GetEncryptingKey_InputArguments = 17517;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType_ServiceName_Placeholder_GetEncryptingKey_OutputArguments = 17518;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType_ServiceName_Placeholder_UpdateCredential_InputArguments = 17520;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType_CreateCredential_InputArguments = 17523;

        /// <remarks />
        public const uint KeyCredentialConfigurationFolderType_CreateCredential_OutputArguments = 17524;

        /// <remarks />
        public const uint KeyCredentialConfiguration_ServiceName_Placeholder_ResourceUri = 18157;

        /// <remarks />
        public const uint KeyCredentialConfiguration_ServiceName_Placeholder_ProfileUri = 18164;

        /// <remarks />
        public const uint KeyCredentialConfiguration_ServiceName_Placeholder_GetEncryptingKey_InputArguments = 17526;

        /// <remarks />
        public const uint KeyCredentialConfiguration_ServiceName_Placeholder_GetEncryptingKey_OutputArguments = 17527;

        /// <remarks />
        public const uint KeyCredentialConfiguration_ServiceName_Placeholder_UpdateCredential_InputArguments = 18162;

        /// <remarks />
        public const uint KeyCredentialConfiguration_CreateCredential_InputArguments = 17529;

        /// <remarks />
        public const uint KeyCredentialConfiguration_CreateCredential_OutputArguments = 17530;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_ResourceUri = 18069;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_ProfileUri = 18165;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_EndpointUrls = 18004;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_ServiceStatus = 18005;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_GetEncryptingKey_InputArguments = 17535;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_GetEncryptingKey_OutputArguments = 17536;

        /// <remarks />
        public const uint KeyCredentialConfigurationType_UpdateCredential_InputArguments = 18007;

        /// <remarks />
        public const uint KeyCredentialAuditEventType_ResourceUri = 18028;

        /// <remarks />
        public const uint AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder_ServiceUri = 23558;

        /// <remarks />
        public const uint AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder_ServiceCertificate = 23559;

        /// <remarks />
        public const uint AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder_IssuerEndpointUrl = 23560;

        /// <remarks />
        public const uint AuthorizationServiceConfigurationType_ServiceUri = 18072;

        /// <remarks />
        public const uint AuthorizationServiceConfigurationType_ServiceCertificate = 17860;

        /// <remarks />
        public const uint AuthorizationServiceConfigurationType_IssuerEndpointUrl = 18073;

        /// <remarks />
        public const uint AggregateConfigurationType_TreatUncertainAsBad = 11188;

        /// <remarks />
        public const uint AggregateConfigurationType_PercentDataBad = 11189;

        /// <remarks />
        public const uint AggregateConfigurationType_PercentDataGood = 11190;

        /// <remarks />
        public const uint AggregateConfigurationType_UseSlopedExtrapolation = 11191;

        /// <remarks />
        public const uint PubSubState_EnumStrings = 14648;

        /// <remarks />
        public const uint DataSetFieldFlags_OptionSetValues = 15577;

        /// <remarks />
        public const uint DataSetFieldContentMask_OptionSetValues = 15584;

        /// <remarks />
        public const uint OverrideValueHandling_EnumStrings = 15875;

        /// <remarks />
        public const uint DataSetOrderingType_EnumStrings = 15641;

        /// <remarks />
        public const uint UadpNetworkMessageContentMask_OptionSetValues = 15643;

        /// <remarks />
        public const uint UadpDataSetMessageContentMask_OptionSetValues = 15647;

        /// <remarks />
        public const uint JsonNetworkMessageContentMask_OptionSetValues = 15655;

        /// <remarks />
        public const uint JsonDataSetMessageContentMask_OptionSetValues = 15659;

        /// <remarks />
        public const uint BrokerTransportQualityOfService_EnumStrings = 15009;

        /// <remarks />
        public const uint PubSubKeyServiceType_GetSecurityKeys_InputArguments = 15908;

        /// <remarks />
        public const uint PubSubKeyServiceType_GetSecurityKeys_OutputArguments = 15909;

        /// <remarks />
        public const uint PubSubKeyServiceType_GetSecurityGroup_InputArguments = 15911;

        /// <remarks />
        public const uint PubSubKeyServiceType_GetSecurityGroup_OutputArguments = 15912;

        /// <remarks />
        public const uint PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_InputArguments = 15915;

        /// <remarks />
        public const uint PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_OutputArguments = 15916;

        /// <remarks />
        public const uint PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup_InputArguments = 15918;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_InputArguments = 15455;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_OutputArguments = 15456;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup_InputArguments = 15458;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityGroupId = 15460;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupName_Placeholder_KeyLifetime = 15010;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityPolicyUri = 15011;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupName_Placeholder_MaxFutureKeyCount = 15012;

        /// <remarks />
        public const uint SecurityGroupFolderType_SecurityGroupName_Placeholder_MaxPastKeyCount = 15043;

        /// <remarks />
        public const uint SecurityGroupFolderType_AddSecurityGroup_InputArguments = 15462;

        /// <remarks />
        public const uint SecurityGroupFolderType_AddSecurityGroup_OutputArguments = 15463;

        /// <remarks />
        public const uint SecurityGroupFolderType_RemoveSecurityGroup_InputArguments = 15465;

        /// <remarks />
        public const uint SecurityGroupType_SecurityGroupId = 15472;

        /// <remarks />
        public const uint SecurityGroupType_KeyLifetime = 15046;

        /// <remarks />
        public const uint SecurityGroupType_SecurityPolicyUri = 15047;

        /// <remarks />
        public const uint SecurityGroupType_MaxFutureKeyCount = 15048;

        /// <remarks />
        public const uint SecurityGroupType_MaxPastKeyCount = 15056;

        /// <remarks />
        public const uint PublishSubscribeType_GetSecurityKeys_InputArguments = 15213;

        /// <remarks />
        public const uint PublishSubscribeType_GetSecurityKeys_OutputArguments = 15214;

        /// <remarks />
        public const uint PublishSubscribeType_GetSecurityGroup_InputArguments = 15432;

        /// <remarks />
        public const uint PublishSubscribeType_GetSecurityGroup_OutputArguments = 15433;

        /// <remarks />
        public const uint PublishSubscribeType_SecurityGroups_AddSecurityGroup_InputArguments = 15436;

        /// <remarks />
        public const uint PublishSubscribeType_SecurityGroups_AddSecurityGroup_OutputArguments = 15437;

        /// <remarks />
        public const uint PublishSubscribeType_SecurityGroups_RemoveSecurityGroup_InputArguments = 15439;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_PublisherId = 14418;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_TransportProfileUri = 17292;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_TransportProfileUri_Selections = 17706;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_ConnectionProperties = 17478;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Address_NetworkInterface = 15533;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Address_NetworkInterface_Selections = 17503;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Status_State = 14420;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_DiagnosticsLevel = 18668;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation = 18669;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation_Active = 18670;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation_Classification = 18671;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = 18672;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError = 18674;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError_Active = 18675;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError_Classification = 18676;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = 18677;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_SubError = 18680;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError = 18682;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Active = 18683;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Classification = 18684;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = 18685;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = 18687;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = 18688;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = 18689;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 18690;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent = 18692;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = 18693;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = 18694;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 18695;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError = 18697;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = 18698;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = 18699;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 18700;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent = 18702;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = 18703;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = 18704;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 18705;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = 18707;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = 18708;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = 18709;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 18710;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress = 18713;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress_DiagnosticsLevel = 18714;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_AddWriterGroup_InputArguments = 16558;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_AddWriterGroup_OutputArguments = 16559;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_AddReaderGroup_InputArguments = 16561;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_AddReaderGroup_OutputArguments = 16571;

        /// <remarks />
        public const uint PublishSubscribeType_ConnectionName_Placeholder_RemoveGroup_InputArguments = 14425;

        /// <remarks />
        public const uint PublishSubscribeType_SetSecurityKeys_InputArguments = 17297;

        /// <remarks />
        public const uint PublishSubscribeType_AddConnection_InputArguments = 16599;

        /// <remarks />
        public const uint PublishSubscribeType_AddConnection_OutputArguments = 16600;

        /// <remarks />
        public const uint PublishSubscribeType_RemoveConnection_InputArguments = 14433;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_InputArguments = 14436;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_OutputArguments = 14437;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedEvents_InputArguments = 14439;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedEvents_OutputArguments = 14440;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedDataItemsTemplate_InputArguments = 16611;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedDataItemsTemplate_OutputArguments = 16638;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedEventsTemplate_InputArguments = 16640;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddPublishedEventsTemplate_OutputArguments = 16641;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_RemovePublishedDataSet_InputArguments = 14442;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddDataSetFolder_InputArguments = 16678;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_AddDataSetFolder_OutputArguments = 16679;

        /// <remarks />
        public const uint PublishSubscribeType_PublishedDataSets_RemoveDataSetFolder_InputArguments = 16681;

        /// <remarks />
        public const uint PublishSubscribeType_Status_State = 15845;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_DiagnosticsLevel = 18716;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_TotalInformation = 18717;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_TotalInformation_Active = 18718;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_TotalInformation_Classification = 18719;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_TotalInformation_DiagnosticsLevel = 18720;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_TotalError = 18722;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_TotalError_Active = 18723;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_TotalError_Classification = 18724;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_TotalError_DiagnosticsLevel = 18725;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_SubError = 18728;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateError = 18730;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateError_Active = 18731;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateError_Classification = 18732;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateError_DiagnosticsLevel = 18733;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod = 18735;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod_Active = 18736;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod_Classification = 18737;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 18738;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent = 18740;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent_Active = 18741;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent_Classification = 18742;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 18743;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError = 18745;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError_Active = 18746;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError_Classification = 18747;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 18748;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StatePausedByParent = 18750;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StatePausedByParent_Active = 18751;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StatePausedByParent_Classification = 18752;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 18753;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod = 18755;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod_Active = 18756;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod_Classification = 18757;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 18758;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetWriters = 18761;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = 18762;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetReaders = 18763;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = 18764;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetWriters = 18765;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = 18766;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetReaders = 18767;

        /// <remarks />
        public const uint PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = 18768;

        /// <remarks />
        public const uint PublishSubscribeType_SupportedTransportProfiles = 17479;

        /// <remarks />
        public const uint PublishSubscribe_GetSecurityKeys_InputArguments = 15216;

        /// <remarks />
        public const uint PublishSubscribe_GetSecurityKeys_OutputArguments = 15217;

        /// <remarks />
        public const uint PublishSubscribe_GetSecurityGroup_InputArguments = 15441;

        /// <remarks />
        public const uint PublishSubscribe_GetSecurityGroup_OutputArguments = 15442;

        /// <remarks />
        public const uint PublishSubscribe_SecurityGroups_AddSecurityGroup_InputArguments = 15445;

        /// <remarks />
        public const uint PublishSubscribe_SecurityGroups_AddSecurityGroup_OutputArguments = 15446;

        /// <remarks />
        public const uint PublishSubscribe_SecurityGroups_RemoveSecurityGroup_InputArguments = 15448;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_PublisherId = 15791;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_TransportProfileUri = 15792;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_TransportProfileUri_Selections = 15848;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_ConnectionProperties = 17480;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Address_NetworkInterface = 15863;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Address_NetworkInterface_Selections = 17506;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Status_State = 15892;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_DiagnosticsLevel = 15938;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation = 15939;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation_Active = 15989;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation_Classification = 15994;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = 16013;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError = 16059;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError_Active = 16060;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError_Classification = 16061;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = 16074;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_SubError = 16101;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError = 16103;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Active = 16122;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Classification = 16123;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = 16124;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = 16283;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = 16322;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = 16523;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 17300;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent = 17304;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = 17305;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = 17320;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 17335;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError = 17337;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = 17338;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = 17339;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 17340;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent = 17342;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = 17343;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = 17344;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 17345;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = 17347;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = 17348;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = 17349;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 17350;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress = 17353;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress_DiagnosticsLevel = 17354;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_AddWriterGroup_InputArguments = 17357;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_AddWriterGroup_OutputArguments = 17358;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_AddReaderGroup_InputArguments = 17360;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_AddReaderGroup_OutputArguments = 17361;

        /// <remarks />
        public const uint PublishSubscribe_ConnectionName_Placeholder_RemoveGroup_InputArguments = 17363;

        /// <remarks />
        public const uint PublishSubscribe_SetSecurityKeys_InputArguments = 17365;

        /// <remarks />
        public const uint PublishSubscribe_AddConnection_InputArguments = 17367;

        /// <remarks />
        public const uint PublishSubscribe_AddConnection_OutputArguments = 17368;

        /// <remarks />
        public const uint PublishSubscribe_RemoveConnection_InputArguments = 17370;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedDataItems_InputArguments = 17373;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedDataItems_OutputArguments = 17374;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedEvents_InputArguments = 17376;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedEvents_OutputArguments = 17377;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedDataItemsTemplate_InputArguments = 17379;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedDataItemsTemplate_OutputArguments = 17380;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedEventsTemplate_InputArguments = 17382;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddPublishedEventsTemplate_OutputArguments = 17383;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_RemovePublishedDataSet_InputArguments = 17385;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddDataSetFolder_InputArguments = 17401;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_AddDataSetFolder_OutputArguments = 17402;

        /// <remarks />
        public const uint PublishSubscribe_PublishedDataSets_RemoveDataSetFolder_InputArguments = 17404;

        /// <remarks />
        public const uint PublishSubscribe_Status_State = 17406;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_DiagnosticsLevel = 17410;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_TotalInformation = 17411;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_TotalInformation_Active = 17412;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_TotalInformation_Classification = 17413;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_TotalInformation_DiagnosticsLevel = 17414;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_TotalError = 17416;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_TotalError_Active = 17417;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_TotalError_Classification = 17418;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_TotalError_DiagnosticsLevel = 17419;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_SubError = 17422;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateError = 17424;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateError_Active = 17425;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateError_Classification = 17426;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateError_DiagnosticsLevel = 17429;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod = 17431;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod_Active = 17432;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod_Classification = 17433;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 17434;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalByParent = 17436;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalByParent_Active = 17437;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalByParent_Classification = 17438;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 17439;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalFromError = 17441;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalFromError_Active = 17442;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalFromError_Classification = 17443;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 17444;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StatePausedByParent = 17446;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StatePausedByParent_Active = 17447;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StatePausedByParent_Classification = 17448;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 17449;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod = 17451;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod_Active = 17452;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod_Classification = 17453;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 17454;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetWriters = 17458;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = 17459;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetReaders = 17460;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = 17461;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetWriters = 17462;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = 17463;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetReaders = 17464;

        /// <remarks />
        public const uint PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = 17466;

        /// <remarks />
        public const uint PublishSubscribe_SupportedTransportProfiles = 17481;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_DataSetWriterId = 16720;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_DataSetFieldContentMask = 16721;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_DataSetWriterProperties = 17482;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Status_State = 15224;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel = 18872;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation = 18873;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active = 18874;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification = 18875;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = 18876;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError = 18878;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active = 18879;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification = 18880;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = 18881;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_SubError = 18884;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError = 18886;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active = 18887;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification = 18888;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = 18889;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = 18891;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = 18892;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = 18893;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 18894;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent = 18896;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = 18897;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = 18898;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 18899;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError = 18901;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = 18902;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = 18903;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 18904;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent = 18906;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = 18907;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = 18908;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 18909;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = 18911;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = 18912;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = 18913;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 18914;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = 18917;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = 18918;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = 18919;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = 18920;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = 18923;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = 18925;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = 18927;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = 18929;

        /// <remarks />
        public const uint PublishedDataSetType_ConfigurationVersion = 14519;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetMetaData = 15229;

        /// <remarks />
        public const uint PublishedDataSetType_DataSetClassId = 16759;

        /// <remarks />
        public const uint PublishedDataSetType_ExtensionFields_AddExtensionField_InputArguments = 15483;

        /// <remarks />
        public const uint PublishedDataSetType_ExtensionFields_AddExtensionField_OutputArguments = 15484;

        /// <remarks />
        public const uint PublishedDataSetType_ExtensionFields_RemoveExtensionField_InputArguments = 15486;

        /// <remarks />
        public const uint ExtensionFieldsType_ExtensionFieldName_Placeholder = 15490;

        /// <remarks />
        public const uint ExtensionFieldsType_AddExtensionField_InputArguments = 15492;

        /// <remarks />
        public const uint ExtensionFieldsType_AddExtensionField_OutputArguments = 15493;

        /// <remarks />
        public const uint ExtensionFieldsType_RemoveExtensionField_InputArguments = 15495;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetWriterId = 16760;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetFieldContentMask = 16761;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetWriterProperties = 17483;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Status_State = 15232;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel = 18931;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation = 18932;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active = 18933;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification = 18934;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = 18935;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError = 18937;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active = 18938;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification = 18939;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = 18940;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_SubError = 18943;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError = 18945;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active = 18946;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification = 18947;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = 18948;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = 18950;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = 18951;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = 18952;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 18953;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent = 18955;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = 18956;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = 18957;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 18958;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError = 18960;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = 18961;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = 18962;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 18963;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent = 18965;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = 18966;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = 18967;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 18968;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = 18970;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = 18971;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = 18972;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 18973;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = 18976;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = 18977;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = 18978;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = 18979;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = 18982;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = 18984;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = 18986;

        /// <remarks />
        public const uint PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = 18988;

        /// <remarks />
        public const uint PublishedDataItemsType_ExtensionFields_AddExtensionField_InputArguments = 15505;

        /// <remarks />
        public const uint PublishedDataItemsType_ExtensionFields_AddExtensionField_OutputArguments = 15506;

        /// <remarks />
        public const uint PublishedDataItemsType_ExtensionFields_RemoveExtensionField_InputArguments = 15508;

        /// <remarks />
        public const uint PublishedDataItemsType_PublishedData = 14548;

        /// <remarks />
        public const uint PublishedDataItemsType_AddVariables_InputArguments = 14556;

        /// <remarks />
        public const uint PublishedDataItemsType_AddVariables_OutputArguments = 14557;

        /// <remarks />
        public const uint PublishedDataItemsType_RemoveVariables_InputArguments = 14559;

        /// <remarks />
        public const uint PublishedDataItemsType_RemoveVariables_OutputArguments = 14560;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_DataSetWriterId = 16801;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_DataSetFieldContentMask = 16802;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_DataSetWriterProperties = 17484;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Status_State = 15240;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel = 18990;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation = 18991;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active = 18992;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification = 18993;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = 18994;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError = 18996;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active = 18997;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification = 18998;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = 18999;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_SubError = 19002;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError = 19004;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active = 19005;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification = 19006;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = 19007;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = 19009;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = 19010;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = 19011;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 19012;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent = 19014;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = 19015;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = 19016;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 19017;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError = 19019;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = 19020;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = 19021;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 19022;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent = 19024;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = 19025;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = 19026;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 19027;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = 19029;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = 19030;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = 19031;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 19032;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = 19035;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = 19036;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = 19037;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = 19038;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = 19041;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = 19043;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = 19045;

        /// <remarks />
        public const uint PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = 19047;

        /// <remarks />
        public const uint PublishedEventsType_ExtensionFields_AddExtensionField_InputArguments = 15513;

        /// <remarks />
        public const uint PublishedEventsType_ExtensionFields_AddExtensionField_OutputArguments = 15514;

        /// <remarks />
        public const uint PublishedEventsType_ExtensionFields_RemoveExtensionField_InputArguments = 15516;

        /// <remarks />
        public const uint PublishedEventsType_PubSubEventNotifier = 14586;

        /// <remarks />
        public const uint PublishedEventsType_SelectedFields = 14587;

        /// <remarks />
        public const uint PublishedEventsType_Filter = 14588;

        /// <remarks />
        public const uint PublishedEventsType_ModifyFieldSelection_InputArguments = 15053;

        /// <remarks />
        public const uint PublishedEventsType_ModifyFieldSelection_OutputArguments = 15517;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_InputArguments = 14480;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_OutputArguments = 14481;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_InputArguments = 14483;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_OutputArguments = 14484;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItemsTemplate_InputArguments = 16843;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItemsTemplate_OutputArguments = 16853;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEventsTemplate_InputArguments = 16882;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEventsTemplate_OutputArguments = 16883;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet_InputArguments = 14486;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddDataSetFolder_InputArguments = 16894;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_AddDataSetFolder_OutputArguments = 16922;

        /// <remarks />
        public const uint DataSetFolderType_DataSetFolderName_Placeholder_RemoveDataSetFolder_InputArguments = 16924;

        /// <remarks />
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ConfigurationVersion = 14489;

        /// <remarks />
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_DataSetMetaData = 15221;

        /// <remarks />
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_InputArguments = 15475;

        /// <remarks />
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_OutputArguments = 15476;

        /// <remarks />
        public const uint DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField_InputArguments = 15478;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedDataItems_InputArguments = 14494;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedDataItems_OutputArguments = 14495;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedEvents_InputArguments = 14497;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedEvents_OutputArguments = 14498;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedDataItemsTemplate_InputArguments = 16958;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedDataItemsTemplate_OutputArguments = 16959;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedEventsTemplate_InputArguments = 16961;

        /// <remarks />
        public const uint DataSetFolderType_AddPublishedEventsTemplate_OutputArguments = 16971;

        /// <remarks />
        public const uint DataSetFolderType_RemovePublishedDataSet_InputArguments = 14500;

        /// <remarks />
        public const uint DataSetFolderType_AddDataSetFolder_InputArguments = 16995;

        /// <remarks />
        public const uint DataSetFolderType_AddDataSetFolder_OutputArguments = 16996;

        /// <remarks />
        public const uint DataSetFolderType_RemoveDataSetFolder_InputArguments = 17007;

        /// <remarks />
        public const uint PubSubConnectionType_PublisherId = 14595;

        /// <remarks />
        public const uint PubSubConnectionType_TransportProfileUri = 17306;

        /// <remarks />
        public const uint PubSubConnectionType_TransportProfileUri_Selections = 17710;

        /// <remarks />
        public const uint PubSubConnectionType_ConnectionProperties = 17485;

        /// <remarks />
        public const uint PubSubConnectionType_Address_NetworkInterface = 17202;

        /// <remarks />
        public const uint PubSubConnectionType_Address_NetworkInterface_Selections = 17576;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_SecurityMode = 17311;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_MaxNetworkMessageSize = 17204;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_GroupProperties = 17486;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Status_State = 17315;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_WriterGroupId = 17214;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_PublishingInterval = 17318;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_KeepAliveTime = 17319;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Priority = 17321;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_LocaleIds = 17322;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_HeaderLayoutUri = 17558;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_DiagnosticsLevel = 19108;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation = 19109;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation_Active = 19110;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation_Classification = 19111;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = 19112;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError = 19114;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError_Active = 19115;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError_Classification = 19116;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = 19117;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_SubError = 19120;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError = 19122;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError_Active = 19123;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError_Classification = 19124;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = 19125;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = 19127;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = 19128;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = 19129;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 19130;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent = 19132;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = 19133;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = 19134;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 19135;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError = 19137;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = 19138;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = 19139;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 19140;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent = 19142;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = 19143;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = 19144;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 19145;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = 19147;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = 19148;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = 19149;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 19150;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages = 19153;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages_Active = 19154;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages_Classification = 19155;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages_DiagnosticsLevel = 19156;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions = 19158;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions_Active = 19159;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions_Classification = 19160;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions_DiagnosticsLevel = 19161;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors = 19163;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors_Active = 19164;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors_Classification = 19165;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors_DiagnosticsLevel = 19166;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetWriters = 19168;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = 19169;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetWriters = 19170;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = 19171;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel = 19173;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel = 19175;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_AddDataSetWriter_InputArguments = 17294;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_AddDataSetWriter_OutputArguments = 17301;

        /// <remarks />
        public const uint PubSubConnectionType_WriterGroupName_Placeholder_RemoveDataSetWriter_InputArguments = 17324;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_SecurityMode = 17326;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_MaxNetworkMessageSize = 17302;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_GroupProperties = 17487;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Status_State = 17330;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_DiagnosticsLevel = 19177;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation = 19178;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation_Active = 19179;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation_Classification = 19180;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = 19181;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError = 19183;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError_Active = 19184;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError_Classification = 19185;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = 19186;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_SubError = 19189;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError = 19191;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError_Active = 19192;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError_Classification = 19193;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = 19194;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = 19196;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = 19197;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = 19198;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 19199;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent = 19201;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = 19202;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = 19203;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 19204;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError = 19206;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = 19207;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = 19208;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 19209;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent = 19211;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = 19212;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = 19213;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 19214;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = 19216;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = 19217;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = 19218;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 19219;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages = 19222;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages_Active = 19223;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages_Classification = 19224;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages_DiagnosticsLevel = 19225;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Active = 19228;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Classification = 19229;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedInvalidNetworkMessages_DiagnosticsLevel = 19230;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_DecryptionErrors_Active = 19233;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_DecryptionErrors_Classification = 19234;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel = 19235;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetReaders = 19237;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = 19238;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetReaders = 19239;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = 19240;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_AddDataSetReader_InputArguments = 17399;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_AddDataSetReader_OutputArguments = 17400;

        /// <remarks />
        public const uint PubSubConnectionType_ReaderGroupName_Placeholder_RemoveDataSetReader_InputArguments = 17334;

        /// <remarks />
        public const uint PubSubConnectionType_Status_State = 14601;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_DiagnosticsLevel = 19242;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_TotalInformation = 19243;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_TotalInformation_Active = 19244;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_TotalInformation_Classification = 19245;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_TotalInformation_DiagnosticsLevel = 19246;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_TotalError = 19248;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_TotalError_Active = 19249;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_TotalError_Classification = 19250;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_TotalError_DiagnosticsLevel = 19251;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_SubError = 19254;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateError = 19256;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateError_Active = 19257;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateError_Classification = 19258;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateError_DiagnosticsLevel = 19259;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod = 19261;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod_Active = 19262;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod_Classification = 19263;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 19264;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent = 19266;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent_Active = 19267;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent_Classification = 19268;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 19269;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError = 19271;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError_Active = 19272;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError_Classification = 19273;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 19274;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StatePausedByParent = 19276;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StatePausedByParent_Active = 19277;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StatePausedByParent_Classification = 19278;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 19279;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod = 19281;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod_Active = 19282;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod_Classification = 19283;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 19284;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_LiveValues_ResolvedAddress = 19287;

        /// <remarks />
        public const uint PubSubConnectionType_Diagnostics_LiveValues_ResolvedAddress_DiagnosticsLevel = 19288;

        /// <remarks />
        public const uint PubSubConnectionType_AddWriterGroup_InputArguments = 17428;

        /// <remarks />
        public const uint PubSubConnectionType_AddWriterGroup_OutputArguments = 17456;

        /// <remarks />
        public const uint PubSubConnectionType_AddReaderGroup_InputArguments = 17507;

        /// <remarks />
        public const uint PubSubConnectionType_AddReaderGroup_OutputArguments = 17508;

        /// <remarks />
        public const uint PubSubConnectionType_RemoveGroup_InputArguments = 14226;

        /// <remarks />
        public const uint PubSubGroupType_SecurityMode = 15926;

        /// <remarks />
        public const uint PubSubGroupType_SecurityGroupId = 15927;

        /// <remarks />
        public const uint PubSubGroupType_SecurityKeyServices = 15928;

        /// <remarks />
        public const uint PubSubGroupType_MaxNetworkMessageSize = 17724;

        /// <remarks />
        public const uint PubSubGroupType_GroupProperties = 17488;

        /// <remarks />
        public const uint PubSubGroupType_Status_State = 15266;

        /// <remarks />
        public const uint WriterGroupType_Status_State = 17731;

        /// <remarks />
        public const uint WriterGroupType_WriterGroupId = 17736;

        /// <remarks />
        public const uint WriterGroupType_PublishingInterval = 17737;

        /// <remarks />
        public const uint WriterGroupType_KeepAliveTime = 17738;

        /// <remarks />
        public const uint WriterGroupType_Priority = 17739;

        /// <remarks />
        public const uint WriterGroupType_LocaleIds = 17740;

        /// <remarks />
        public const uint WriterGroupType_HeaderLayoutUri = 17559;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_DataSetWriterId = 17744;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_DataSetFieldContentMask = 17745;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_DataSetWriterProperties = 17490;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Status_State = 17750;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel = 17754;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation = 17755;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active = 17756;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification = 17757;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = 17758;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError = 17760;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active = 17761;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification = 17762;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = 17763;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_SubError = 17766;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError = 17768;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active = 17769;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification = 17770;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = 17771;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = 17773;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = 17774;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = 17775;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 17776;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent = 17778;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = 17779;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = 17780;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 17781;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError = 17783;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = 17784;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = 17785;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 17786;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent = 17788;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = 17789;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = 17790;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 17791;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = 17793;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = 17794;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = 17795;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 17796;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = 17799;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = 17800;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = 17801;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = 17802;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = 17805;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = 17807;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = 17809;

        /// <remarks />
        public const uint WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = 17811;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_DiagnosticsLevel = 17813;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_TotalInformation = 17814;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_TotalInformation_Active = 17815;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_TotalInformation_Classification = 17816;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_TotalInformation_DiagnosticsLevel = 17817;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_TotalError = 17819;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_TotalError_Active = 17820;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_TotalError_Classification = 17821;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_TotalError_DiagnosticsLevel = 17822;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_SubError = 17825;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateError = 17827;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateError_Active = 17828;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateError_Classification = 17829;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateError_DiagnosticsLevel = 17830;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalByMethod = 17832;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalByMethod_Active = 17833;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalByMethod_Classification = 17834;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 17835;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalByParent = 17837;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalByParent_Active = 17838;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalByParent_Classification = 17839;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 17840;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalFromError = 17842;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalFromError_Active = 17843;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalFromError_Classification = 17844;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 17845;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StatePausedByParent = 17847;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StatePausedByParent_Active = 17848;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StatePausedByParent_Classification = 17849;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 17850;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateDisabledByMethod = 17853;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateDisabledByMethod_Active = 17854;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateDisabledByMethod_Classification = 17855;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 17856;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_SentNetworkMessages = 17859;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_SentNetworkMessages_Active = 17864;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_SentNetworkMessages_Classification = 17871;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_SentNetworkMessages_DiagnosticsLevel = 17872;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_FailedTransmissions = 17874;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_FailedTransmissions_Active = 17878;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_FailedTransmissions_Classification = 17885;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_FailedTransmissions_DiagnosticsLevel = 17892;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_EncryptionErrors = 17900;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_EncryptionErrors_Active = 17901;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_EncryptionErrors_Classification = 17902;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_Counters_EncryptionErrors_DiagnosticsLevel = 17903;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_LiveValues_ConfiguredDataSetWriters = 17913;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = 17920;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_LiveValues_OperationalDataSetWriters = 17927;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = 17934;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel = 17948;

        /// <remarks />
        public const uint WriterGroupType_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel = 17962;

        /// <remarks />
        public const uint WriterGroupType_AddDataSetWriter_InputArguments = 17976;

        /// <remarks />
        public const uint WriterGroupType_AddDataSetWriter_OutputArguments = 17987;

        /// <remarks />
        public const uint WriterGroupType_RemoveDataSetWriter_InputArguments = 17993;

        /// <remarks />
        public const uint ReaderGroupType_Status_State = 18068;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_PublisherId = 18077;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_WriterGroupId = 18078;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_DataSetWriterId = 18079;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_DataSetMetaData = 18080;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_DataSetFieldContentMask = 18081;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_MessageReceiveTimeout = 18082;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_KeyFrameCount = 17560;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_HeaderLayoutUri = 17562;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_DataSetReaderProperties = 17492;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Status_State = 18089;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_DiagnosticsLevel = 18093;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation = 18094;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation_Active = 18095;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation_Classification = 18096;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = 18097;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError = 18099;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError_Active = 18100;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError_Classification = 18101;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = 18102;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_SubError = 18105;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError = 18107;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError_Active = 18108;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError_Classification = 18109;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = 18110;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = 18112;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = 18113;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = 18114;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 18115;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent = 18117;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = 18118;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = 18119;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 18120;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError = 18122;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = 18123;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = 18124;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 18125;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent = 18127;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = 18128;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = 18129;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 18130;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = 18132;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = 18133;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = 18134;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 18135;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = 18138;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = 18139;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = 18140;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = 18141;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_DecryptionErrors_Active = 18144;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_DecryptionErrors_Classification = 18145;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel = 18146;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = 18149;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = 18151;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = 18153;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = 18158;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel = 21003;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel = 21005;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_CreateTargetVariables_InputArguments = 21010;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_CreateTargetVariables_OutputArguments = 21011;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_CreateDataSetMirror_InputArguments = 21013;

        /// <remarks />
        public const uint ReaderGroupType_DataSetReaderName_Placeholder_CreateDataSetMirror_OutputArguments = 21014;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_DiagnosticsLevel = 21016;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_TotalInformation = 21017;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_TotalInformation_Active = 21018;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_TotalInformation_Classification = 21019;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_TotalInformation_DiagnosticsLevel = 21020;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_TotalError = 21022;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_TotalError_Active = 21023;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_TotalError_Classification = 21024;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_TotalError_DiagnosticsLevel = 21025;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_SubError = 21028;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateError = 21030;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateError_Active = 21031;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateError_Classification = 21032;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateError_DiagnosticsLevel = 21033;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod = 21035;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod_Active = 21036;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod_Classification = 21037;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 21038;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalByParent = 21040;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalByParent_Active = 21041;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalByParent_Classification = 21042;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 21043;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalFromError = 21045;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalFromError_Active = 21046;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalFromError_Classification = 21047;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 21048;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StatePausedByParent = 21050;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StatePausedByParent_Active = 21051;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StatePausedByParent_Classification = 21052;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 21053;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod = 21055;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod_Active = 21056;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod_Classification = 21057;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 21058;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages = 21061;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages_Active = 21062;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages_Classification = 21063;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages_DiagnosticsLevel = 21064;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Active = 21067;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Classification = 21068;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_ReceivedInvalidNetworkMessages_DiagnosticsLevel = 21069;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_DecryptionErrors_Active = 21072;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_DecryptionErrors_Classification = 21073;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel = 21074;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_LiveValues_ConfiguredDataSetReaders = 21076;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = 21077;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_LiveValues_OperationalDataSetReaders = 21078;

        /// <remarks />
        public const uint ReaderGroupType_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = 21079;

        /// <remarks />
        public const uint ReaderGroupType_AddDataSetReader_InputArguments = 21083;

        /// <remarks />
        public const uint ReaderGroupType_AddDataSetReader_OutputArguments = 21084;

        /// <remarks />
        public const uint ReaderGroupType_RemoveDataSetReader_InputArguments = 21086;

        /// <remarks />
        public const uint DataSetWriterType_DataSetWriterId = 21092;

        /// <remarks />
        public const uint DataSetWriterType_DataSetFieldContentMask = 21093;

        /// <remarks />
        public const uint DataSetWriterType_KeyFrameCount = 21094;

        /// <remarks />
        public const uint DataSetWriterType_DataSetWriterProperties = 17493;

        /// <remarks />
        public const uint DataSetWriterType_Status_State = 15300;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_DiagnosticsLevel = 19551;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_TotalInformation = 19552;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_TotalInformation_Active = 19553;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_TotalInformation_Classification = 19554;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_TotalInformation_DiagnosticsLevel = 19555;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_TotalError = 19557;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_TotalError_Active = 19558;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_TotalError_Classification = 19559;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_TotalError_DiagnosticsLevel = 19560;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_SubError = 19563;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateError = 19565;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateError_Active = 19566;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateError_Classification = 19567;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateError_DiagnosticsLevel = 19568;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod = 19570;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod_Active = 19571;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod_Classification = 19572;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 19573;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalByParent = 19575;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalByParent_Active = 19576;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalByParent_Classification = 19577;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 19578;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalFromError = 19580;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalFromError_Active = 19581;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalFromError_Classification = 19582;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 19583;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StatePausedByParent = 19585;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StatePausedByParent_Active = 19586;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StatePausedByParent_Classification = 19587;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 19588;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod = 19590;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod_Active = 19591;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod_Classification = 19592;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 19593;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages = 19596;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages_Active = 19597;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages_Classification = 19598;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = 19599;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = 19602;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = 19604;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = 19606;

        /// <remarks />
        public const uint DataSetWriterType_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = 19608;

        /// <remarks />
        public const uint DataSetReaderType_PublisherId = 21097;

        /// <remarks />
        public const uint DataSetReaderType_WriterGroupId = 21098;

        /// <remarks />
        public const uint DataSetReaderType_DataSetWriterId = 21099;

        /// <remarks />
        public const uint DataSetReaderType_DataSetMetaData = 21100;

        /// <remarks />
        public const uint DataSetReaderType_DataSetFieldContentMask = 21101;

        /// <remarks />
        public const uint DataSetReaderType_MessageReceiveTimeout = 21102;

        /// <remarks />
        public const uint DataSetReaderType_KeyFrameCount = 17563;

        /// <remarks />
        public const uint DataSetReaderType_HeaderLayoutUri = 17564;

        /// <remarks />
        public const uint DataSetReaderType_SecurityMode = 15932;

        /// <remarks />
        public const uint DataSetReaderType_SecurityGroupId = 15933;

        /// <remarks />
        public const uint DataSetReaderType_SecurityKeyServices = 15934;

        /// <remarks />
        public const uint DataSetReaderType_DataSetReaderProperties = 17494;

        /// <remarks />
        public const uint DataSetReaderType_Status_State = 15308;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_DiagnosticsLevel = 19610;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_TotalInformation = 19611;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_TotalInformation_Active = 19612;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_TotalInformation_Classification = 19613;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_TotalInformation_DiagnosticsLevel = 19614;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_TotalError = 19616;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_TotalError_Active = 19617;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_TotalError_Classification = 19618;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_TotalError_DiagnosticsLevel = 19619;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_SubError = 19622;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateError = 19624;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateError_Active = 19625;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateError_Classification = 19626;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateError_DiagnosticsLevel = 19627;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod = 19629;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod_Active = 19630;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod_Classification = 19631;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = 19632;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalByParent = 19634;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalByParent_Active = 19635;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalByParent_Classification = 19636;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = 19637;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalFromError = 19639;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalFromError_Active = 19640;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalFromError_Classification = 19641;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = 19642;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StatePausedByParent = 19644;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StatePausedByParent_Active = 19645;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StatePausedByParent_Classification = 19646;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = 19647;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod = 19649;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod_Active = 19650;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod_Classification = 19651;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = 19652;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages = 19655;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages_Active = 19656;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages_Classification = 19657;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = 19658;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_DecryptionErrors_Active = 19661;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_DecryptionErrors_Classification = 19662;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel = 19663;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = 19666;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = 19668;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = 19670;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = 19672;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel = 19674;

        /// <remarks />
        public const uint DataSetReaderType_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel = 19676;

        /// <remarks />
        public const uint DataSetReaderType_CreateTargetVariables_InputArguments = 17387;

        /// <remarks />
        public const uint DataSetReaderType_CreateTargetVariables_OutputArguments = 17388;

        /// <remarks />
        public const uint DataSetReaderType_CreateDataSetMirror_InputArguments = 17390;

        /// <remarks />
        public const uint DataSetReaderType_CreateDataSetMirror_OutputArguments = 17391;

        /// <remarks />
        public const uint TargetVariablesType_TargetVariables = 15114;

        /// <remarks />
        public const uint TargetVariablesType_AddTargetVariables_InputArguments = 15116;

        /// <remarks />
        public const uint TargetVariablesType_AddTargetVariables_OutputArguments = 15117;

        /// <remarks />
        public const uint TargetVariablesType_RemoveTargetVariables_InputArguments = 15119;

        /// <remarks />
        public const uint TargetVariablesType_RemoveTargetVariables_OutputArguments = 15120;

        /// <remarks />
        public const uint PubSubStatusType_State = 14644;

        /// <remarks />
        public const uint PubSubDiagnosticsType_DiagnosticsLevel = 19678;

        /// <remarks />
        public const uint PubSubDiagnosticsType_TotalInformation = 19679;

        /// <remarks />
        public const uint PubSubDiagnosticsType_TotalInformation_Active = 19680;

        /// <remarks />
        public const uint PubSubDiagnosticsType_TotalInformation_Classification = 19681;

        /// <remarks />
        public const uint PubSubDiagnosticsType_TotalInformation_DiagnosticsLevel = 19682;

        /// <remarks />
        public const uint PubSubDiagnosticsType_TotalError = 19684;

        /// <remarks />
        public const uint PubSubDiagnosticsType_TotalError_Active = 19685;

        /// <remarks />
        public const uint PubSubDiagnosticsType_TotalError_Classification = 19686;

        /// <remarks />
        public const uint PubSubDiagnosticsType_TotalError_DiagnosticsLevel = 19687;

        /// <remarks />
        public const uint PubSubDiagnosticsType_SubError = 19690;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateError = 19692;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateError_Active = 19693;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateError_Classification = 19694;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateError_DiagnosticsLevel = 19695;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalByMethod = 19697;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalByMethod_Active = 19698;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalByMethod_Classification = 19699;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalByMethod_DiagnosticsLevel = 19700;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalByParent = 19702;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalByParent_Active = 19703;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalByParent_Classification = 19704;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalByParent_DiagnosticsLevel = 19705;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalFromError = 19707;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalFromError_Active = 19708;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalFromError_Classification = 19709;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateOperationalFromError_DiagnosticsLevel = 19710;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StatePausedByParent = 19712;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StatePausedByParent_Active = 19713;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StatePausedByParent_Classification = 19714;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StatePausedByParent_DiagnosticsLevel = 19715;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateDisabledByMethod = 19717;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateDisabledByMethod_Active = 19718;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateDisabledByMethod_Classification = 19719;

        /// <remarks />
        public const uint PubSubDiagnosticsType_Counters_StateDisabledByMethod_DiagnosticsLevel = 19720;

        /// <remarks />
        public const uint DiagnosticsLevel_EnumStrings = 19724;

        /// <remarks />
        public const uint PubSubDiagnosticsCounterType_Active = 19726;

        /// <remarks />
        public const uint PubSubDiagnosticsCounterType_Classification = 19727;

        /// <remarks />
        public const uint PubSubDiagnosticsCounterType_DiagnosticsLevel = 19728;

        /// <remarks />
        public const uint PubSubDiagnosticsCounterType_TimeFirstChange = 19729;

        /// <remarks />
        public const uint PubSubDiagnosticsCounterClassification_EnumStrings = 19731;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_TotalInformation_Active = 19735;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_TotalInformation_Classification = 19736;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_TotalInformation_DiagnosticsLevel = 19737;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_TotalError_Active = 19740;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_TotalError_Classification = 19741;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_TotalError_DiagnosticsLevel = 19742;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateError = 19747;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateError_Active = 19748;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateError_Classification = 19749;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateError_DiagnosticsLevel = 19750;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalByMethod = 19752;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalByMethod_Active = 19753;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalByMethod_Classification = 19754;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalByMethod_DiagnosticsLevel = 19755;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalByParent = 19757;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalByParent_Active = 19758;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalByParent_Classification = 19759;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalByParent_DiagnosticsLevel = 19760;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalFromError = 19762;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalFromError_Active = 19763;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalFromError_Classification = 19764;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateOperationalFromError_DiagnosticsLevel = 19765;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StatePausedByParent = 19767;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StatePausedByParent_Active = 19768;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StatePausedByParent_Classification = 19769;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StatePausedByParent_DiagnosticsLevel = 19770;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateDisabledByMethod = 19772;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateDisabledByMethod_Active = 19773;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateDisabledByMethod_Classification = 19774;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_Counters_StateDisabledByMethod_DiagnosticsLevel = 19775;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetWriters = 19778;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = 19779;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetReaders = 19780;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = 19781;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_LiveValues_OperationalDataSetWriters = 19782;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = 19783;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_LiveValues_OperationalDataSetReaders = 19784;

        /// <remarks />
        public const uint PubSubDiagnosticsRootType_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = 19785;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_TotalInformation_Active = 19789;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_TotalInformation_Classification = 19790;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_TotalInformation_DiagnosticsLevel = 19791;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_TotalError_Active = 19794;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_TotalError_Classification = 19795;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_TotalError_DiagnosticsLevel = 19796;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateError = 19801;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateError_Active = 19802;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateError_Classification = 19803;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateError_DiagnosticsLevel = 19804;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod = 19806;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod_Active = 19807;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod_Classification = 19808;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod_DiagnosticsLevel = 19809;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent = 19811;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent_Active = 19812;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent_Classification = 19813;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent_DiagnosticsLevel = 19814;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError = 19816;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError_Active = 19817;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError_Classification = 19818;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError_DiagnosticsLevel = 19819;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StatePausedByParent = 19821;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StatePausedByParent_Active = 19822;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StatePausedByParent_Classification = 19823;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StatePausedByParent_DiagnosticsLevel = 19824;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod = 19826;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod_Active = 19827;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod_Classification = 19828;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod_DiagnosticsLevel = 19829;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_LiveValues_ResolvedAddress = 19832;

        /// <remarks />
        public const uint PubSubDiagnosticsConnectionType_LiveValues_ResolvedAddress_DiagnosticsLevel = 19833;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_TotalInformation_Active = 19837;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_TotalInformation_Classification = 19838;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_TotalInformation_DiagnosticsLevel = 19839;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_TotalError_Active = 19842;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_TotalError_Classification = 19843;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_TotalError_DiagnosticsLevel = 19844;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateError = 19849;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateError_Active = 19850;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateError_Classification = 19851;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateError_DiagnosticsLevel = 19852;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod = 19854;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod_Active = 19855;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod_Classification = 19856;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod_DiagnosticsLevel = 19857;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent = 19859;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent_Active = 19860;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent_Classification = 19861;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent_DiagnosticsLevel = 19862;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError = 19864;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError_Active = 19865;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError_Classification = 19866;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError_DiagnosticsLevel = 19867;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent = 19869;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent_Active = 19870;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent_Classification = 19871;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent_DiagnosticsLevel = 19872;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod = 19874;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod_Active = 19875;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod_Classification = 19876;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod_DiagnosticsLevel = 19877;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages = 19880;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages_Active = 19881;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages_Classification = 19882;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages_DiagnosticsLevel = 19883;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions = 19885;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions_Active = 19886;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions_Classification = 19887;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions_DiagnosticsLevel = 19888;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors = 19890;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors_Active = 19891;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors_Classification = 19892;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors_DiagnosticsLevel = 19893;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_LiveValues_ConfiguredDataSetWriters = 19895;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = 19896;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_LiveValues_OperationalDataSetWriters = 19897;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = 19898;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_LiveValues_SecurityTokenID = 19899;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_LiveValues_SecurityTokenID_DiagnosticsLevel = 19900;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_LiveValues_TimeToNextTokenID = 19901;

        /// <remarks />
        public const uint PubSubDiagnosticsWriterGroupType_LiveValues_TimeToNextTokenID_DiagnosticsLevel = 19902;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_TotalInformation_Active = 19906;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_TotalInformation_Classification = 19907;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_TotalInformation_DiagnosticsLevel = 19908;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_TotalError_Active = 19911;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_TotalError_Classification = 19912;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_TotalError_DiagnosticsLevel = 19913;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateError = 19918;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateError_Active = 19919;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateError_Classification = 19920;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateError_DiagnosticsLevel = 19921;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod = 19923;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod_Active = 19924;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod_Classification = 19925;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod_DiagnosticsLevel = 19926;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent = 19928;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent_Active = 19929;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent_Classification = 19930;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent_DiagnosticsLevel = 19931;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError = 19933;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError_Active = 19934;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError_Classification = 19935;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError_DiagnosticsLevel = 19936;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent = 19938;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent_Active = 19939;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent_Classification = 19940;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent_DiagnosticsLevel = 19941;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod = 19943;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod_Active = 19944;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod_Classification = 19945;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod_DiagnosticsLevel = 19946;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages = 19949;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages_Active = 19950;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages_Classification = 19951;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages_DiagnosticsLevel = 19952;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages = 19954;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages_Active = 19955;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages_Classification = 19956;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages_DiagnosticsLevel = 19957;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors = 19959;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors_Active = 19960;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors_Classification = 19961;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors_DiagnosticsLevel = 19962;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_LiveValues_ConfiguredDataSetReaders = 19964;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = 19965;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_LiveValues_OperationalDataSetReaders = 19966;

        /// <remarks />
        public const uint PubSubDiagnosticsReaderGroupType_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = 19967;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_TotalInformation_Active = 19971;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_TotalInformation_Classification = 19972;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_TotalInformation_DiagnosticsLevel = 19973;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_TotalError_Active = 19976;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_TotalError_Classification = 19977;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_TotalError_DiagnosticsLevel = 19978;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateError = 19983;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateError_Active = 19984;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateError_Classification = 19985;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateError_DiagnosticsLevel = 19986;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod = 19988;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod_Active = 19989;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod_Classification = 19990;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod_DiagnosticsLevel = 19991;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent = 19993;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent_Active = 19994;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent_Classification = 19995;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent_DiagnosticsLevel = 19996;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError = 19998;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError_Active = 19999;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError_Classification = 20000;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError_DiagnosticsLevel = 20001;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent = 20003;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent_Active = 20004;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent_Classification = 20005;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent_DiagnosticsLevel = 20006;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod = 20008;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod_Active = 20009;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod_Classification = 20010;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod_DiagnosticsLevel = 20011;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages = 20014;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages_Active = 20015;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages_Classification = 20016;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages_DiagnosticsLevel = 20017;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_LiveValues_MessageSequenceNumber = 20019;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_LiveValues_MessageSequenceNumber_DiagnosticsLevel = 20020;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_LiveValues_StatusCode = 20021;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_LiveValues_StatusCode_DiagnosticsLevel = 20022;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_LiveValues_MajorVersion = 20023;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_LiveValues_MajorVersion_DiagnosticsLevel = 20024;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_LiveValues_MinorVersion = 20025;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetWriterType_LiveValues_MinorVersion_DiagnosticsLevel = 20026;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_TotalInformation_Active = 20030;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_TotalInformation_Classification = 20031;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_TotalInformation_DiagnosticsLevel = 20032;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_TotalError_Active = 20035;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_TotalError_Classification = 20036;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_TotalError_DiagnosticsLevel = 20037;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateError = 20042;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateError_Active = 20043;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateError_Classification = 20044;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateError_DiagnosticsLevel = 20045;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod = 20047;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod_Active = 20048;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod_Classification = 20049;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod_DiagnosticsLevel = 20050;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent = 20052;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent_Active = 20053;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent_Classification = 20054;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent_DiagnosticsLevel = 20055;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError = 20057;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError_Active = 20058;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError_Classification = 20059;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError_DiagnosticsLevel = 20060;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent = 20062;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent_Active = 20063;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent_Classification = 20064;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent_DiagnosticsLevel = 20065;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod = 20067;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod_Active = 20068;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod_Classification = 20069;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod_DiagnosticsLevel = 20070;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages = 20073;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages_Active = 20074;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages_Classification = 20075;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages_DiagnosticsLevel = 20076;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors = 20078;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors_Active = 20079;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors_Classification = 20080;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors_DiagnosticsLevel = 20081;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_MessageSequenceNumber = 20083;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_MessageSequenceNumber_DiagnosticsLevel = 20084;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_StatusCode = 20085;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_StatusCode_DiagnosticsLevel = 20086;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_MajorVersion = 20087;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_MajorVersion_DiagnosticsLevel = 20088;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_MinorVersion = 20089;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_MinorVersion_DiagnosticsLevel = 20090;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_SecurityTokenID = 20091;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_SecurityTokenID_DiagnosticsLevel = 20092;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_TimeToNextTokenID = 20093;

        /// <remarks />
        public const uint PubSubDiagnosticsDataSetReaderType_LiveValues_TimeToNextTokenID_DiagnosticsLevel = 20094;

        /// <remarks />
        public const uint PubSubStatusEventType_ConnectionId = 15545;

        /// <remarks />
        public const uint PubSubStatusEventType_GroupId = 15546;

        /// <remarks />
        public const uint PubSubStatusEventType_State = 15547;

        /// <remarks />
        public const uint PubSubTransportLimitsExceedEventType_Actual = 15561;

        /// <remarks />
        public const uint PubSubTransportLimitsExceedEventType_Maximum = 15562;

        /// <remarks />
        public const uint PubSubCommunicationFailureEventType_Error = 15576;

        /// <remarks />
        public const uint UadpWriterGroupMessageType_GroupVersion = 21106;

        /// <remarks />
        public const uint UadpWriterGroupMessageType_DataSetOrdering = 21107;

        /// <remarks />
        public const uint UadpWriterGroupMessageType_NetworkMessageContentMask = 21108;

        /// <remarks />
        public const uint UadpWriterGroupMessageType_SamplingOffset = 21109;

        /// <remarks />
        public const uint UadpWriterGroupMessageType_PublishingOffset = 21110;

        /// <remarks />
        public const uint UadpDataSetWriterMessageType_DataSetMessageContentMask = 21112;

        /// <remarks />
        public const uint UadpDataSetWriterMessageType_ConfiguredSize = 21113;

        /// <remarks />
        public const uint UadpDataSetWriterMessageType_NetworkMessageNumber = 21114;

        /// <remarks />
        public const uint UadpDataSetWriterMessageType_DataSetOffset = 21115;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType_GroupVersion = 21117;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType_NetworkMessageNumber = 21119;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType_DataSetOffset = 17477;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType_DataSetClassId = 21120;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType_NetworkMessageContentMask = 21121;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType_DataSetMessageContentMask = 21122;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType_PublishingInterval = 21123;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType_ProcessingOffset = 21124;

        /// <remarks />
        public const uint UadpDataSetReaderMessageType_ReceiveOffset = 21125;

        /// <remarks />
        public const uint JsonWriterGroupMessageType_NetworkMessageContentMask = 21127;

        /// <remarks />
        public const uint JsonDataSetWriterMessageType_DataSetMessageContentMask = 21129;

        /// <remarks />
        public const uint JsonDataSetReaderMessageType_NetworkMessageContentMask = 21131;

        /// <remarks />
        public const uint JsonDataSetReaderMessageType_DataSetMessageContentMask = 21132;

        /// <remarks />
        public const uint DatagramConnectionTransportType_DiscoveryAddress_NetworkInterface = 15154;

        /// <remarks />
        public const uint DatagramConnectionTransportType_DiscoveryAddress_NetworkInterface_Selections = 17579;

        /// <remarks />
        public const uint DatagramWriterGroupTransportType_MessageRepeatCount = 21134;

        /// <remarks />
        public const uint DatagramWriterGroupTransportType_MessageRepeatDelay = 21135;

        /// <remarks />
        public const uint BrokerConnectionTransportType_ResourceUri = 15156;

        /// <remarks />
        public const uint BrokerConnectionTransportType_AuthenticationProfileUri = 15178;

        /// <remarks />
        public const uint BrokerWriterGroupTransportType_QueueName = 21137;

        /// <remarks />
        public const uint BrokerWriterGroupTransportType_ResourceUri = 15246;

        /// <remarks />
        public const uint BrokerWriterGroupTransportType_AuthenticationProfileUri = 15247;

        /// <remarks />
        public const uint BrokerWriterGroupTransportType_RequestedDeliveryGuarantee = 15249;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportType_QueueName = 21139;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportType_MetaDataQueueName = 21140;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportType_ResourceUri = 15250;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportType_AuthenticationProfileUri = 15251;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportType_RequestedDeliveryGuarantee = 15330;

        /// <remarks />
        public const uint BrokerDataSetWriterTransportType_MetaDataUpdateTime = 21141;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportType_QueueName = 21143;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportType_ResourceUri = 15334;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportType_AuthenticationProfileUri = 15419;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportType_RequestedDeliveryGuarantee = 15420;

        /// <remarks />
        public const uint BrokerDataSetReaderTransportType_MetaDataQueueName = 21144;

        /// <remarks />
        public const uint NetworkAddressType_NetworkInterface = 21146;

        /// <remarks />
        public const uint NetworkAddressType_NetworkInterface_Selections = 17582;

        /// <remarks />
        public const uint NetworkAddressUrlType_NetworkInterface_Selections = 17585;

        /// <remarks />
        public const uint NetworkAddressUrlType_Url = 21149;

        /// <remarks />
        public const uint AliasNameCategoryType_SubAliasNameCategories_Placeholder_FindAlias_InputArguments = 23460;

        /// <remarks />
        public const uint AliasNameCategoryType_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments = 23461;

        /// <remarks />
        public const uint AliasNameCategoryType_FindAlias_InputArguments = 23463;

        /// <remarks />
        public const uint AliasNameCategoryType_FindAlias_OutputArguments = 23464;

        /// <remarks />
        public const uint Aliases_SubAliasNameCategories_Placeholder_FindAlias_InputArguments = 23474;

        /// <remarks />
        public const uint Aliases_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments = 23475;

        /// <remarks />
        public const uint Aliases_FindAlias_InputArguments = 23477;

        /// <remarks />
        public const uint Aliases_FindAlias_OutputArguments = 23478;

        /// <remarks />
        public const uint TagVariables_SubAliasNameCategories_Placeholder_FindAlias_InputArguments = 23483;

        /// <remarks />
        public const uint TagVariables_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments = 23484;

        /// <remarks />
        public const uint TagVariables_FindAlias_InputArguments = 23486;

        /// <remarks />
        public const uint TagVariables_FindAlias_OutputArguments = 23487;

        /// <remarks />
        public const uint Topics_SubAliasNameCategories_Placeholder_FindAlias_InputArguments = 23492;

        /// <remarks />
        public const uint Topics_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments = 23493;

        /// <remarks />
        public const uint Topics_FindAlias_InputArguments = 23495;

        /// <remarks />
        public const uint Topics_FindAlias_OutputArguments = 23496;

        /// <remarks />
        public const uint MultiStateDictionaryEntryDiscreteBaseType_EnumDictionaryEntries = 19082;

        /// <remarks />
        public const uint MultiStateDictionaryEntryDiscreteBaseType_ValueAsDictionaryEntries = 19083;

        /// <remarks />
        public const uint MultiStateDictionaryEntryDiscreteType_ValueAsDictionaryEntries = 19090;

        /// <remarks />
        public const uint IIetfBaseNetworkInterfaceType_AdminStatus = 24149;

        /// <remarks />
        public const uint IIetfBaseNetworkInterfaceType_OperStatus = 24150;

        /// <remarks />
        public const uint IIetfBaseNetworkInterfaceType_PhysAddress = 24151;

        /// <remarks />
        public const uint IIetfBaseNetworkInterfaceType_Speed = 24152;

        /// <remarks />
        public const uint IIetfBaseNetworkInterfaceType_Speed_EngineeringUnits = 24157;

        /// <remarks />
        public const uint IIeeeBaseEthernetPortType_Speed = 24159;

        /// <remarks />
        public const uint IIeeeBaseEthernetPortType_Speed_EngineeringUnits = 24164;

        /// <remarks />
        public const uint IIeeeBaseEthernetPortType_Duplex = 24165;

        /// <remarks />
        public const uint IIeeeBaseEthernetPortType_MaxFrameLength = 24166;

        /// <remarks />
        public const uint IIeeeAutoNegotiationStatusType_NegotiationStatus = 24234;

        /// <remarks />
        public const uint IBaseEthernetCapabilitiesType_VlanTagCapable = 24168;

        /// <remarks />
        public const uint ISrClassType_Id = 24170;

        /// <remarks />
        public const uint ISrClassType_Priority = 24171;

        /// <remarks />
        public const uint ISrClassType_Vid = 24172;

        /// <remarks />
        public const uint IIeeeBaseTsnStreamType_StreamId = 24174;

        /// <remarks />
        public const uint IIeeeBaseTsnStreamType_StreamName = 24175;

        /// <remarks />
        public const uint IIeeeBaseTsnStreamType_State = 24176;

        /// <remarks />
        public const uint IIeeeBaseTsnStreamType_AccumulatedLatency = 24177;

        /// <remarks />
        public const uint IIeeeBaseTsnStreamType_SrClassId = 24178;

        /// <remarks />
        public const uint IIeeeBaseTsnTrafficSpecificationType_MaxIntervalFrames = 24180;

        /// <remarks />
        public const uint IIeeeBaseTsnTrafficSpecificationType_MaxFrameSize = 24181;

        /// <remarks />
        public const uint IIeeeBaseTsnTrafficSpecificationType_Interval = 24182;

        /// <remarks />
        public const uint IIeeeBaseTsnStatusStreamType_TalkerStatus = 24184;

        /// <remarks />
        public const uint IIeeeBaseTsnStatusStreamType_ListenerStatus = 24185;

        /// <remarks />
        public const uint IIeeeBaseTsnStatusStreamType_FailureCode = 24186;

        /// <remarks />
        public const uint IIeeeBaseTsnStatusStreamType_FailureSystemIdentifier = 24187;

        /// <remarks />
        public const uint IIeeeTsnInterfaceConfigurationType_MacAddress = 24189;

        /// <remarks />
        public const uint IIeeeTsnInterfaceConfigurationType_InterfaceName = 24190;

        /// <remarks />
        public const uint IIeeeTsnInterfaceConfigurationTalkerType_TimeAwareOffset = 24194;

        /// <remarks />
        public const uint IIeeeTsnInterfaceConfigurationListenerType_ReceiveOffset = 24198;

        /// <remarks />
        public const uint IIeeeTsnMacAddressType_DestinationAddress = 24200;

        /// <remarks />
        public const uint IIeeeTsnMacAddressType_SourceAddress = 24201;

        /// <remarks />
        public const uint IIeeeTsnVlanTagType_VlanId = 24203;

        /// <remarks />
        public const uint IIeeeTsnVlanTagType_PriorityCodePoint = 24204;

        /// <remarks />
        public const uint IPriorityMappingEntryType_MappingUri = 24206;

        /// <remarks />
        public const uint IPriorityMappingEntryType_PriorityLabel = 24207;

        /// <remarks />
        public const uint IPriorityMappingEntryType_PriorityValue_PCP = 24208;

        /// <remarks />
        public const uint IPriorityMappingEntryType_PriorityValue_DSCP = 24209;

        /// <remarks />
        public const uint Duplex_EnumValues = 24235;

        /// <remarks />
        public const uint InterfaceAdminStatus_EnumValues = 24236;

        /// <remarks />
        public const uint InterfaceOperStatus_EnumValues = 24237;

        /// <remarks />
        public const uint NegotiationStatus_EnumValues = 24238;

        /// <remarks />
        public const uint TsnFailureCode_EnumValues = 24239;

        /// <remarks />
        public const uint TsnStreamState_EnumValues = 24240;

        /// <remarks />
        public const uint TsnTalkerStatus_EnumValues = 24241;

        /// <remarks />
        public const uint TsnListenerStatus_EnumValues = 24242;

        /// <remarks />
        public const uint IdType_EnumStrings = 7591;

        /// <remarks />
        public const uint NodeClass_EnumValues = 11878;

        /// <remarks />
        public const uint PermissionType_OptionSetValues = 15030;

        /// <remarks />
        public const uint AccessLevelType_OptionSetValues = 15032;

        /// <remarks />
        public const uint AccessLevelExType_OptionSetValues = 15407;

        /// <remarks />
        public const uint EventNotifierType_OptionSetValues = 15034;

        /// <remarks />
        public const uint AccessRestrictionType_OptionSetValues = 15035;

        /// <remarks />
        public const uint StructureType_EnumStrings = 14528;

        /// <remarks />
        public const uint ApplicationType_EnumStrings = 7597;

        /// <remarks />
        public const uint MessageSecurityMode_EnumStrings = 7595;

        /// <remarks />
        public const uint UserTokenType_EnumStrings = 7596;

        /// <remarks />
        public const uint SecurityTokenRequestType_EnumStrings = 7598;

        /// <remarks />
        public const uint NodeAttributesMask_EnumValues = 11881;

        /// <remarks />
        public const uint AttributeWriteMask_OptionSetValues = 15036;

        /// <remarks />
        public const uint BrowseDirection_EnumStrings = 7603;

        /// <remarks />
        public const uint BrowseResultMask_EnumValues = 11883;

        /// <remarks />
        public const uint FilterOperator_EnumStrings = 7605;

        /// <remarks />
        public const uint TimestampsToReturn_EnumStrings = 7606;

        /// <remarks />
        public const uint HistoryUpdateType_EnumValues = 11884;

        /// <remarks />
        public const uint PerformUpdateType_EnumValues = 11885;

        /// <remarks />
        public const uint MonitoringMode_EnumStrings = 7608;

        /// <remarks />
        public const uint DataChangeTrigger_EnumStrings = 7609;

        /// <remarks />
        public const uint DeadbandType_EnumStrings = 7610;

        /// <remarks />
        public const uint RedundancySupport_EnumStrings = 7611;

        /// <remarks />
        public const uint ServerState_EnumStrings = 7612;

        /// <remarks />
        public const uint ModelChangeStructureVerbMask_EnumValues = 11942;

        /// <remarks />
        public const uint AxisScaleEnumeration_EnumStrings = 12078;

        /// <remarks />
        public const uint ExceptionDeviationFormat_EnumStrings = 7614;

        /// <remarks />
        public const uint OpcUa_BinarySchema = 7617;

        /// <remarks />
        public const uint OpcUa_BinarySchema_NamespaceUri = 7619;

        /// <remarks />
        public const uint OpcUa_BinarySchema_Deprecated = 15037;

        /// <remarks />
        public const uint OpcUa_BinarySchema_Union = 12770;

        /// <remarks />
        public const uint OpcUa_BinarySchema_KeyValuePair = 14873;

        /// <remarks />
        public const uint OpcUa_BinarySchema_AdditionalParametersType = 17538;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EphemeralKeyType = 17550;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EndpointType = 15734;

        /// <remarks />
        public const uint OpcUa_BinarySchema_RationalNumber = 18824;

        /// <remarks />
        public const uint OpcUa_BinarySchema_Vector = 18827;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ThreeDVector = 18830;

        /// <remarks />
        public const uint OpcUa_BinarySchema_CartesianCoordinates = 18833;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ThreeDCartesianCoordinates = 18836;

        /// <remarks />
        public const uint OpcUa_BinarySchema_Orientation = 18839;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ThreeDOrientation = 18842;

        /// <remarks />
        public const uint OpcUa_BinarySchema_Frame = 18845;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ThreeDFrame = 18848;

        /// <remarks />
        public const uint OpcUa_BinarySchema_IdentityMappingRuleType = 15738;

        /// <remarks />
        public const uint OpcUa_BinarySchema_CurrencyUnitType = 23514;

        /// <remarks />
        public const uint OpcUa_BinarySchema_TrustListDataType = 12681;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataTypeSchemaHeader = 15741;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataTypeDescription = 14855;

        /// <remarks />
        public const uint OpcUa_BinarySchema_StructureDescription = 15599;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EnumDescription = 15602;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SimpleTypeDescription = 15501;

        /// <remarks />
        public const uint OpcUa_BinarySchema_UABinaryFileDataType = 15521;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataSetMetaDataType = 14849;

        /// <remarks />
        public const uint OpcUa_BinarySchema_FieldMetaData = 14852;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ConfigurationVersionDataType = 14876;

        /// <remarks />
        public const uint OpcUa_BinarySchema_PublishedDataSetDataType = 15766;

        /// <remarks />
        public const uint OpcUa_BinarySchema_PublishedDataSetSourceDataType = 15769;

        /// <remarks />
        public const uint OpcUa_BinarySchema_PublishedVariableDataType = 14324;

        /// <remarks />
        public const uint OpcUa_BinarySchema_PublishedDataItemsDataType = 15772;

        /// <remarks />
        public const uint OpcUa_BinarySchema_PublishedEventsDataType = 15775;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataSetWriterDataType = 15778;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataSetWriterTransportDataType = 15781;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataSetWriterMessageDataType = 15784;

        /// <remarks />
        public const uint OpcUa_BinarySchema_PubSubGroupDataType = 15787;

        /// <remarks />
        public const uint OpcUa_BinarySchema_WriterGroupDataType = 21156;

        /// <remarks />
        public const uint OpcUa_BinarySchema_WriterGroupTransportDataType = 15793;

        /// <remarks />
        public const uint OpcUa_BinarySchema_WriterGroupMessageDataType = 15854;

        /// <remarks />
        public const uint OpcUa_BinarySchema_PubSubConnectionDataType = 15857;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ConnectionTransportDataType = 15860;

        /// <remarks />
        public const uint OpcUa_BinarySchema_NetworkAddressDataType = 21159;

        /// <remarks />
        public const uint OpcUa_BinarySchema_NetworkAddressUrlDataType = 21162;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ReaderGroupDataType = 21165;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ReaderGroupTransportDataType = 15866;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ReaderGroupMessageDataType = 15869;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataSetReaderDataType = 15872;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataSetReaderTransportDataType = 15877;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataSetReaderMessageDataType = 15880;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SubscribedDataSetDataType = 15883;

        /// <remarks />
        public const uint OpcUa_BinarySchema_TargetVariablesDataType = 15886;

        /// <remarks />
        public const uint OpcUa_BinarySchema_FieldTargetDataType = 21002;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SubscribedDataSetMirrorDataType = 15889;

        /// <remarks />
        public const uint OpcUa_BinarySchema_PubSubConfigurationDataType = 21168;

        /// <remarks />
        public const uint OpcUa_BinarySchema_UadpWriterGroupMessageDataType = 15895;

        /// <remarks />
        public const uint OpcUa_BinarySchema_UadpDataSetWriterMessageDataType = 15898;

        /// <remarks />
        public const uint OpcUa_BinarySchema_UadpDataSetReaderMessageDataType = 15919;

        /// <remarks />
        public const uint OpcUa_BinarySchema_JsonWriterGroupMessageDataType = 15922;

        /// <remarks />
        public const uint OpcUa_BinarySchema_JsonDataSetWriterMessageDataType = 15925;

        /// <remarks />
        public const uint OpcUa_BinarySchema_JsonDataSetReaderMessageDataType = 15931;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DatagramConnectionTransportDataType = 17469;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DatagramWriterGroupTransportDataType = 21171;

        /// <remarks />
        public const uint OpcUa_BinarySchema_BrokerConnectionTransportDataType = 15524;

        /// <remarks />
        public const uint OpcUa_BinarySchema_BrokerWriterGroupTransportDataType = 15940;

        /// <remarks />
        public const uint OpcUa_BinarySchema_BrokerDataSetWriterTransportDataType = 15943;

        /// <remarks />
        public const uint OpcUa_BinarySchema_BrokerDataSetReaderTransportDataType = 15946;

        /// <remarks />
        public const uint OpcUa_BinarySchema_AliasNameDataType = 23502;

        /// <remarks />
        public const uint OpcUa_BinarySchema_UnsignedRationalNumber = 24117;

        /// <remarks />
        public const uint OpcUa_BinarySchema_RolePermissionType = 16131;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DataTypeDefinition = 18178;

        /// <remarks />
        public const uint OpcUa_BinarySchema_StructureField = 18181;

        /// <remarks />
        public const uint OpcUa_BinarySchema_StructureDefinition = 18184;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EnumDefinition = 18187;

        /// <remarks />
        public const uint OpcUa_BinarySchema_Argument = 7650;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EnumValueType = 7656;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EnumField = 14870;

        /// <remarks />
        public const uint OpcUa_BinarySchema_OptionSet = 12767;

        /// <remarks />
        public const uint OpcUa_BinarySchema_TimeZoneDataType = 8914;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ApplicationDescription = 7665;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ServerOnNetwork = 12213;

        /// <remarks />
        public const uint OpcUa_BinarySchema_UserTokenPolicy = 7662;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EndpointDescription = 7668;

        /// <remarks />
        public const uint OpcUa_BinarySchema_RegisteredServer = 7782;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DiscoveryConfiguration = 12902;

        /// <remarks />
        public const uint OpcUa_BinarySchema_MdnsDiscoveryConfiguration = 12905;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SignedSoftwareCertificate = 7698;

        /// <remarks />
        public const uint OpcUa_BinarySchema_UserIdentityToken = 7671;

        /// <remarks />
        public const uint OpcUa_BinarySchema_AnonymousIdentityToken = 7674;

        /// <remarks />
        public const uint OpcUa_BinarySchema_UserNameIdentityToken = 7677;

        /// <remarks />
        public const uint OpcUa_BinarySchema_X509IdentityToken = 7680;

        /// <remarks />
        public const uint OpcUa_BinarySchema_IssuedIdentityToken = 7683;

        /// <remarks />
        public const uint OpcUa_BinarySchema_AddNodesItem = 7728;

        /// <remarks />
        public const uint OpcUa_BinarySchema_AddReferencesItem = 7731;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DeleteNodesItem = 7734;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DeleteReferencesItem = 7737;

        /// <remarks />
        public const uint OpcUa_BinarySchema_RelativePathElement = 12718;

        /// <remarks />
        public const uint OpcUa_BinarySchema_RelativePath = 12721;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EndpointConfiguration = 7686;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ContentFilterElement = 7929;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ContentFilter = 7932;

        /// <remarks />
        public const uint OpcUa_BinarySchema_FilterOperand = 7935;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ElementOperand = 7938;

        /// <remarks />
        public const uint OpcUa_BinarySchema_LiteralOperand = 7941;

        /// <remarks />
        public const uint OpcUa_BinarySchema_AttributeOperand = 7944;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SimpleAttributeOperand = 7947;

        /// <remarks />
        public const uint OpcUa_BinarySchema_HistoryEvent = 8004;

        /// <remarks />
        public const uint OpcUa_BinarySchema_MonitoringFilter = 8067;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EventFilter = 8073;

        /// <remarks />
        public const uint OpcUa_BinarySchema_AggregateConfiguration = 8076;

        /// <remarks />
        public const uint OpcUa_BinarySchema_HistoryEventFieldList = 8172;

        /// <remarks />
        public const uint OpcUa_BinarySchema_BuildInfo = 7692;

        /// <remarks />
        public const uint OpcUa_BinarySchema_RedundantServerDataType = 8208;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EndpointUrlListDataType = 11959;

        /// <remarks />
        public const uint OpcUa_BinarySchema_NetworkGroupDataType = 11962;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType = 8211;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType = 8214;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ServerStatusDataType = 8217;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SessionDiagnosticsDataType = 8220;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType = 8223;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ServiceCounterDataType = 8226;

        /// <remarks />
        public const uint OpcUa_BinarySchema_StatusResult = 7659;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SubscriptionDiagnosticsDataType = 8229;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ModelChangeStructureDataType = 8232;

        /// <remarks />
        public const uint OpcUa_BinarySchema_SemanticChangeStructureDataType = 8235;

        /// <remarks />
        public const uint OpcUa_BinarySchema_Range = 8238;

        /// <remarks />
        public const uint OpcUa_BinarySchema_EUInformation = 8241;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ComplexNumberType = 12183;

        /// <remarks />
        public const uint OpcUa_BinarySchema_DoubleComplexNumberType = 12186;

        /// <remarks />
        public const uint OpcUa_BinarySchema_AxisInformation = 12091;

        /// <remarks />
        public const uint OpcUa_BinarySchema_XVType = 12094;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ProgramDiagnosticDataType = 8247;

        /// <remarks />
        public const uint OpcUa_BinarySchema_ProgramDiagnostic2DataType = 24035;

        /// <remarks />
        public const uint OpcUa_BinarySchema_Annotation = 8244;

        /// <remarks />
        public const uint OpcUa_XmlSchema = 8252;

        /// <remarks />
        public const uint OpcUa_XmlSchema_NamespaceUri = 8254;

        /// <remarks />
        public const uint OpcUa_XmlSchema_Deprecated = 15039;

        /// <remarks />
        public const uint OpcUa_XmlSchema_Union = 12762;

        /// <remarks />
        public const uint OpcUa_XmlSchema_KeyValuePair = 14829;

        /// <remarks />
        public const uint OpcUa_XmlSchema_AdditionalParametersType = 17542;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EphemeralKeyType = 17554;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EndpointType = 16024;

        /// <remarks />
        public const uint OpcUa_XmlSchema_RationalNumber = 18860;

        /// <remarks />
        public const uint OpcUa_XmlSchema_Vector = 18863;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ThreeDVector = 18866;

        /// <remarks />
        public const uint OpcUa_XmlSchema_CartesianCoordinates = 18869;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ThreeDCartesianCoordinates = 19049;

        /// <remarks />
        public const uint OpcUa_XmlSchema_Orientation = 19052;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ThreeDOrientation = 19055;

        /// <remarks />
        public const uint OpcUa_XmlSchema_Frame = 19058;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ThreeDFrame = 19061;

        /// <remarks />
        public const uint OpcUa_XmlSchema_IdentityMappingRuleType = 15730;

        /// <remarks />
        public const uint OpcUa_XmlSchema_CurrencyUnitType = 23522;

        /// <remarks />
        public const uint OpcUa_XmlSchema_TrustListDataType = 12677;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataTypeSchemaHeader = 16027;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataTypeDescription = 14811;

        /// <remarks />
        public const uint OpcUa_XmlSchema_StructureDescription = 15591;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EnumDescription = 15594;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SimpleTypeDescription = 15585;

        /// <remarks />
        public const uint OpcUa_XmlSchema_UABinaryFileDataType = 15588;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataSetMetaDataType = 14805;

        /// <remarks />
        public const uint OpcUa_XmlSchema_FieldMetaData = 14808;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ConfigurationVersionDataType = 14832;

        /// <remarks />
        public const uint OpcUa_XmlSchema_PublishedDataSetDataType = 16030;

        /// <remarks />
        public const uint OpcUa_XmlSchema_PublishedDataSetSourceDataType = 16033;

        /// <remarks />
        public const uint OpcUa_XmlSchema_PublishedVariableDataType = 14320;

        /// <remarks />
        public const uint OpcUa_XmlSchema_PublishedDataItemsDataType = 16037;

        /// <remarks />
        public const uint OpcUa_XmlSchema_PublishedEventsDataType = 16040;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataSetWriterDataType = 16047;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataSetWriterTransportDataType = 16050;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataSetWriterMessageDataType = 16053;

        /// <remarks />
        public const uint OpcUa_XmlSchema_PubSubGroupDataType = 16056;

        /// <remarks />
        public const uint OpcUa_XmlSchema_WriterGroupDataType = 21180;

        /// <remarks />
        public const uint OpcUa_XmlSchema_WriterGroupTransportDataType = 16062;

        /// <remarks />
        public const uint OpcUa_XmlSchema_WriterGroupMessageDataType = 16065;

        /// <remarks />
        public const uint OpcUa_XmlSchema_PubSubConnectionDataType = 16068;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ConnectionTransportDataType = 16071;

        /// <remarks />
        public const uint OpcUa_XmlSchema_NetworkAddressDataType = 21183;

        /// <remarks />
        public const uint OpcUa_XmlSchema_NetworkAddressUrlDataType = 21186;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ReaderGroupDataType = 21189;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ReaderGroupTransportDataType = 16077;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ReaderGroupMessageDataType = 16080;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataSetReaderDataType = 16083;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataSetReaderTransportDataType = 16086;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataSetReaderMessageDataType = 16089;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SubscribedDataSetDataType = 16092;

        /// <remarks />
        public const uint OpcUa_XmlSchema_TargetVariablesDataType = 16095;

        /// <remarks />
        public const uint OpcUa_XmlSchema_FieldTargetDataType = 14835;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SubscribedDataSetMirrorDataType = 16098;

        /// <remarks />
        public const uint OpcUa_XmlSchema_PubSubConfigurationDataType = 21192;

        /// <remarks />
        public const uint OpcUa_XmlSchema_UadpWriterGroupMessageDataType = 16104;

        /// <remarks />
        public const uint OpcUa_XmlSchema_UadpDataSetWriterMessageDataType = 16107;

        /// <remarks />
        public const uint OpcUa_XmlSchema_UadpDataSetReaderMessageDataType = 16110;

        /// <remarks />
        public const uint OpcUa_XmlSchema_JsonWriterGroupMessageDataType = 16113;

        /// <remarks />
        public const uint OpcUa_XmlSchema_JsonDataSetWriterMessageDataType = 16116;

        /// <remarks />
        public const uint OpcUa_XmlSchema_JsonDataSetReaderMessageDataType = 16119;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DatagramConnectionTransportDataType = 17473;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DatagramWriterGroupTransportDataType = 21195;

        /// <remarks />
        public const uint OpcUa_XmlSchema_BrokerConnectionTransportDataType = 15640;

        /// <remarks />
        public const uint OpcUa_XmlSchema_BrokerWriterGroupTransportDataType = 16125;

        /// <remarks />
        public const uint OpcUa_XmlSchema_BrokerDataSetWriterTransportDataType = 16144;

        /// <remarks />
        public const uint OpcUa_XmlSchema_BrokerDataSetReaderTransportDataType = 16147;

        /// <remarks />
        public const uint OpcUa_XmlSchema_AliasNameDataType = 23508;

        /// <remarks />
        public const uint OpcUa_XmlSchema_UnsignedRationalNumber = 24129;

        /// <remarks />
        public const uint OpcUa_XmlSchema_RolePermissionType = 16127;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DataTypeDefinition = 18166;

        /// <remarks />
        public const uint OpcUa_XmlSchema_StructureField = 18169;

        /// <remarks />
        public const uint OpcUa_XmlSchema_StructureDefinition = 18172;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EnumDefinition = 18175;

        /// <remarks />
        public const uint OpcUa_XmlSchema_Argument = 8285;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EnumValueType = 8291;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EnumField = 14826;

        /// <remarks />
        public const uint OpcUa_XmlSchema_OptionSet = 12759;

        /// <remarks />
        public const uint OpcUa_XmlSchema_TimeZoneDataType = 8918;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ApplicationDescription = 8300;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ServerOnNetwork = 12201;

        /// <remarks />
        public const uint OpcUa_XmlSchema_UserTokenPolicy = 8297;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EndpointDescription = 8303;

        /// <remarks />
        public const uint OpcUa_XmlSchema_RegisteredServer = 8417;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DiscoveryConfiguration = 12894;

        /// <remarks />
        public const uint OpcUa_XmlSchema_MdnsDiscoveryConfiguration = 12897;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SignedSoftwareCertificate = 8333;

        /// <remarks />
        public const uint OpcUa_XmlSchema_UserIdentityToken = 8306;

        /// <remarks />
        public const uint OpcUa_XmlSchema_AnonymousIdentityToken = 8309;

        /// <remarks />
        public const uint OpcUa_XmlSchema_UserNameIdentityToken = 8312;

        /// <remarks />
        public const uint OpcUa_XmlSchema_X509IdentityToken = 8315;

        /// <remarks />
        public const uint OpcUa_XmlSchema_IssuedIdentityToken = 8318;

        /// <remarks />
        public const uint OpcUa_XmlSchema_AddNodesItem = 8363;

        /// <remarks />
        public const uint OpcUa_XmlSchema_AddReferencesItem = 8366;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DeleteNodesItem = 8369;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DeleteReferencesItem = 8372;

        /// <remarks />
        public const uint OpcUa_XmlSchema_RelativePathElement = 12712;

        /// <remarks />
        public const uint OpcUa_XmlSchema_RelativePath = 12715;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EndpointConfiguration = 8321;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ContentFilterElement = 8564;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ContentFilter = 8567;

        /// <remarks />
        public const uint OpcUa_XmlSchema_FilterOperand = 8570;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ElementOperand = 8573;

        /// <remarks />
        public const uint OpcUa_XmlSchema_LiteralOperand = 8576;

        /// <remarks />
        public const uint OpcUa_XmlSchema_AttributeOperand = 8579;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SimpleAttributeOperand = 8582;

        /// <remarks />
        public const uint OpcUa_XmlSchema_HistoryEvent = 8639;

        /// <remarks />
        public const uint OpcUa_XmlSchema_MonitoringFilter = 8702;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EventFilter = 8708;

        /// <remarks />
        public const uint OpcUa_XmlSchema_AggregateConfiguration = 8711;

        /// <remarks />
        public const uint OpcUa_XmlSchema_HistoryEventFieldList = 8807;

        /// <remarks />
        public const uint OpcUa_XmlSchema_BuildInfo = 8327;

        /// <remarks />
        public const uint OpcUa_XmlSchema_RedundantServerDataType = 8843;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EndpointUrlListDataType = 11951;

        /// <remarks />
        public const uint OpcUa_XmlSchema_NetworkGroupDataType = 11954;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType = 8846;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType = 8849;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ServerStatusDataType = 8852;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SessionDiagnosticsDataType = 8855;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType = 8858;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ServiceCounterDataType = 8861;

        /// <remarks />
        public const uint OpcUa_XmlSchema_StatusResult = 8294;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SubscriptionDiagnosticsDataType = 8864;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ModelChangeStructureDataType = 8867;

        /// <remarks />
        public const uint OpcUa_XmlSchema_SemanticChangeStructureDataType = 8870;

        /// <remarks />
        public const uint OpcUa_XmlSchema_Range = 8873;

        /// <remarks />
        public const uint OpcUa_XmlSchema_EUInformation = 8876;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ComplexNumberType = 12175;

        /// <remarks />
        public const uint OpcUa_XmlSchema_DoubleComplexNumberType = 12178;

        /// <remarks />
        public const uint OpcUa_XmlSchema_AxisInformation = 12083;

        /// <remarks />
        public const uint OpcUa_XmlSchema_XVType = 12086;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ProgramDiagnosticDataType = 8882;

        /// <remarks />
        public const uint OpcUa_XmlSchema_ProgramDiagnostic2DataType = 24039;

        /// <remarks />
        public const uint OpcUa_XmlSchema_Annotation = 8879;
    }
    #endregion

    #region VariableType Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableTypes
    {
        /// <remarks />
        public const uint BaseVariableType = 62;

        /// <remarks />
        public const uint BaseDataVariableType = 63;

        /// <remarks />
        public const uint PropertyType = 68;

        /// <remarks />
        public const uint DataTypeDescriptionType = 69;

        /// <remarks />
        public const uint DataTypeDictionaryType = 72;

        /// <remarks />
        public const uint ServerVendorCapabilityType = 2137;

        /// <remarks />
        public const uint ServerStatusType = 2138;

        /// <remarks />
        public const uint BuildInfoType = 3051;

        /// <remarks />
        public const uint ServerDiagnosticsSummaryType = 2150;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsArrayType = 2164;

        /// <remarks />
        public const uint SamplingIntervalDiagnosticsType = 2165;

        /// <remarks />
        public const uint SubscriptionDiagnosticsArrayType = 2171;

        /// <remarks />
        public const uint SubscriptionDiagnosticsType = 2172;

        /// <remarks />
        public const uint SessionDiagnosticsArrayType = 2196;

        /// <remarks />
        public const uint SessionDiagnosticsVariableType = 2197;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsArrayType = 2243;

        /// <remarks />
        public const uint SessionSecurityDiagnosticsType = 2244;

        /// <remarks />
        public const uint OptionSetType = 11487;

        /// <remarks />
        public const uint SelectionListType = 16309;

        /// <remarks />
        public const uint AudioVariableType = 17986;

        /// <remarks />
        public const uint StateVariableType = 2755;

        /// <remarks />
        public const uint TransitionVariableType = 2762;

        /// <remarks />
        public const uint FiniteStateVariableType = 2760;

        /// <remarks />
        public const uint FiniteTransitionVariableType = 2767;

        /// <remarks />
        public const uint GuardVariableType = 15113;

        /// <remarks />
        public const uint ExpressionGuardVariableType = 15128;

        /// <remarks />
        public const uint ElseGuardVariableType = 15317;

        /// <remarks />
        public const uint RationalNumberType = 17709;

        /// <remarks />
        public const uint VectorType = 17714;

        /// <remarks />
        public const uint ThreeDVectorType = 17716;

        /// <remarks />
        public const uint CartesianCoordinatesType = 18772;

        /// <remarks />
        public const uint ThreeDCartesianCoordinatesType = 18774;

        /// <remarks />
        public const uint OrientationType = 18779;

        /// <remarks />
        public const uint ThreeDOrientationType = 18781;

        /// <remarks />
        public const uint FrameType = 18786;

        /// <remarks />
        public const uint ThreeDFrameType = 18791;

        /// <remarks />
        public const uint DataItemType = 2365;

        /// <remarks />
        public const uint BaseAnalogType = 15318;

        /// <remarks />
        public const uint AnalogItemType = 2368;

        /// <remarks />
        public const uint AnalogUnitType = 17497;

        /// <remarks />
        public const uint AnalogUnitRangeType = 17570;

        /// <remarks />
        public const uint DiscreteItemType = 2372;

        /// <remarks />
        public const uint TwoStateDiscreteType = 2373;

        /// <remarks />
        public const uint MultiStateDiscreteType = 2376;

        /// <remarks />
        public const uint MultiStateValueDiscreteType = 11238;

        /// <remarks />
        public const uint ArrayItemType = 12021;

        /// <remarks />
        public const uint YArrayItemType = 12029;

        /// <remarks />
        public const uint XYArrayItemType = 12038;

        /// <remarks />
        public const uint ImageItemType = 12047;

        /// <remarks />
        public const uint CubeItemType = 12057;

        /// <remarks />
        public const uint NDimensionArrayItemType = 12068;

        /// <remarks />
        public const uint TwoStateVariableType = 8995;

        /// <remarks />
        public const uint ConditionVariableType = 9002;

        /// <remarks />
        public const uint AlarmRateVariableType = 17277;

        /// <remarks />
        public const uint ProgramDiagnosticType = 2380;

        /// <remarks />
        public const uint ProgramDiagnostic2Type = 15383;

        /// <remarks />
        public const uint PubSubDiagnosticsCounterType = 19725;

        /// <remarks />
        public const uint MultiStateDictionaryEntryDiscreteBaseType = 19077;

        /// <remarks />
        public const uint MultiStateDictionaryEntryDiscreteType = 19084;
    }
    #endregion

    #region DataType Node Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class DataTypeIds
    {
        /// <remarks />
        public static readonly NodeId BaseDataType = new NodeId(Opc.Ua.DataTypes.BaseDataType);

        /// <remarks />
        public static readonly NodeId Number = new NodeId(Opc.Ua.DataTypes.Number);

        /// <remarks />
        public static readonly NodeId Integer = new NodeId(Opc.Ua.DataTypes.Integer);

        /// <remarks />
        public static readonly NodeId UInteger = new NodeId(Opc.Ua.DataTypes.UInteger);

        /// <remarks />
        public static readonly NodeId Enumeration = new NodeId(Opc.Ua.DataTypes.Enumeration);

        /// <remarks />
        public static readonly NodeId Boolean = new NodeId(Opc.Ua.DataTypes.Boolean);

        /// <remarks />
        public static readonly NodeId SByte = new NodeId(Opc.Ua.DataTypes.SByte);

        /// <remarks />
        public static readonly NodeId Byte = new NodeId(Opc.Ua.DataTypes.Byte);

        /// <remarks />
        public static readonly NodeId Int16 = new NodeId(Opc.Ua.DataTypes.Int16);

        /// <remarks />
        public static readonly NodeId UInt16 = new NodeId(Opc.Ua.DataTypes.UInt16);

        /// <remarks />
        public static readonly NodeId Int32 = new NodeId(Opc.Ua.DataTypes.Int32);

        /// <remarks />
        public static readonly NodeId UInt32 = new NodeId(Opc.Ua.DataTypes.UInt32);

        /// <remarks />
        public static readonly NodeId Int64 = new NodeId(Opc.Ua.DataTypes.Int64);

        /// <remarks />
        public static readonly NodeId UInt64 = new NodeId(Opc.Ua.DataTypes.UInt64);

        /// <remarks />
        public static readonly NodeId Float = new NodeId(Opc.Ua.DataTypes.Float);

        /// <remarks />
        public static readonly NodeId Double = new NodeId(Opc.Ua.DataTypes.Double);

        /// <remarks />
        public static readonly NodeId String = new NodeId(Opc.Ua.DataTypes.String);

        /// <remarks />
        public static readonly NodeId DateTime = new NodeId(Opc.Ua.DataTypes.DateTime);

        /// <remarks />
        public static readonly NodeId Guid = new NodeId(Opc.Ua.DataTypes.Guid);

        /// <remarks />
        public static readonly NodeId ByteString = new NodeId(Opc.Ua.DataTypes.ByteString);

        /// <remarks />
        public static readonly NodeId XmlElement = new NodeId(Opc.Ua.DataTypes.XmlElement);

        /// <remarks />
        public static readonly NodeId NodeId = new NodeId(Opc.Ua.DataTypes.NodeId);

        /// <remarks />
        public static readonly NodeId ExpandedNodeId = new NodeId(Opc.Ua.DataTypes.ExpandedNodeId);

        /// <remarks />
        public static readonly NodeId StatusCode = new NodeId(Opc.Ua.DataTypes.StatusCode);

        /// <remarks />
        public static readonly NodeId QualifiedName = new NodeId(Opc.Ua.DataTypes.QualifiedName);

        /// <remarks />
        public static readonly NodeId LocalizedText = new NodeId(Opc.Ua.DataTypes.LocalizedText);

        /// <remarks />
        public static readonly NodeId Structure = new NodeId(Opc.Ua.DataTypes.Structure);

        /// <remarks />
        public static readonly NodeId DataValue = new NodeId(Opc.Ua.DataTypes.DataValue);

        /// <remarks />
        public static readonly NodeId DiagnosticInfo = new NodeId(Opc.Ua.DataTypes.DiagnosticInfo);

        /// <remarks />
        public static readonly NodeId Image = new NodeId(Opc.Ua.DataTypes.Image);

        /// <remarks />
        public static readonly NodeId Decimal = new NodeId(Opc.Ua.DataTypes.Decimal);

        /// <remarks />
        public static readonly NodeId NamingRuleType = new NodeId(Opc.Ua.DataTypes.NamingRuleType);

        /// <remarks />
        public static readonly NodeId ImageBMP = new NodeId(Opc.Ua.DataTypes.ImageBMP);

        /// <remarks />
        public static readonly NodeId ImageGIF = new NodeId(Opc.Ua.DataTypes.ImageGIF);

        /// <remarks />
        public static readonly NodeId ImageJPG = new NodeId(Opc.Ua.DataTypes.ImageJPG);

        /// <remarks />
        public static readonly NodeId ImagePNG = new NodeId(Opc.Ua.DataTypes.ImagePNG);

        /// <remarks />
        public static readonly NodeId AudioDataType = new NodeId(Opc.Ua.DataTypes.AudioDataType);

        /// <remarks />
        public static readonly NodeId Union = new NodeId(Opc.Ua.DataTypes.Union);

        /// <remarks />
        public static readonly NodeId BitFieldMaskDataType = new NodeId(Opc.Ua.DataTypes.BitFieldMaskDataType);

        /// <remarks />
        public static readonly NodeId KeyValuePair = new NodeId(Opc.Ua.DataTypes.KeyValuePair);

        /// <remarks />
        public static readonly NodeId AdditionalParametersType = new NodeId(Opc.Ua.DataTypes.AdditionalParametersType);

        /// <remarks />
        public static readonly NodeId EphemeralKeyType = new NodeId(Opc.Ua.DataTypes.EphemeralKeyType);

        /// <remarks />
        public static readonly NodeId EndpointType = new NodeId(Opc.Ua.DataTypes.EndpointType);

        /// <remarks />
        public static readonly NodeId RationalNumber = new NodeId(Opc.Ua.DataTypes.RationalNumber);

        /// <remarks />
        public static readonly NodeId Vector = new NodeId(Opc.Ua.DataTypes.Vector);

        /// <remarks />
        public static readonly NodeId ThreeDVector = new NodeId(Opc.Ua.DataTypes.ThreeDVector);

        /// <remarks />
        public static readonly NodeId CartesianCoordinates = new NodeId(Opc.Ua.DataTypes.CartesianCoordinates);

        /// <remarks />
        public static readonly NodeId ThreeDCartesianCoordinates = new NodeId(Opc.Ua.DataTypes.ThreeDCartesianCoordinates);

        /// <remarks />
        public static readonly NodeId Orientation = new NodeId(Opc.Ua.DataTypes.Orientation);

        /// <remarks />
        public static readonly NodeId ThreeDOrientation = new NodeId(Opc.Ua.DataTypes.ThreeDOrientation);

        /// <remarks />
        public static readonly NodeId Frame = new NodeId(Opc.Ua.DataTypes.Frame);

        /// <remarks />
        public static readonly NodeId ThreeDFrame = new NodeId(Opc.Ua.DataTypes.ThreeDFrame);

        /// <remarks />
        public static readonly NodeId OpenFileMode = new NodeId(Opc.Ua.DataTypes.OpenFileMode);

        /// <remarks />
        public static readonly NodeId IdentityCriteriaType = new NodeId(Opc.Ua.DataTypes.IdentityCriteriaType);

        /// <remarks />
        public static readonly NodeId IdentityMappingRuleType = new NodeId(Opc.Ua.DataTypes.IdentityMappingRuleType);

        /// <remarks />
        public static readonly NodeId CurrencyUnitType = new NodeId(Opc.Ua.DataTypes.CurrencyUnitType);

        /// <remarks />
        public static readonly NodeId TrustListMasks = new NodeId(Opc.Ua.DataTypes.TrustListMasks);

        /// <remarks />
        public static readonly NodeId TrustListDataType = new NodeId(Opc.Ua.DataTypes.TrustListDataType);

        /// <remarks />
        public static readonly NodeId DecimalDataType = new NodeId(Opc.Ua.DataTypes.DecimalDataType);

        /// <remarks />
        public static readonly NodeId DataTypeSchemaHeader = new NodeId(Opc.Ua.DataTypes.DataTypeSchemaHeader);

        /// <remarks />
        public static readonly NodeId DataTypeDescription = new NodeId(Opc.Ua.DataTypes.DataTypeDescription);

        /// <remarks />
        public static readonly NodeId StructureDescription = new NodeId(Opc.Ua.DataTypes.StructureDescription);

        /// <remarks />
        public static readonly NodeId EnumDescription = new NodeId(Opc.Ua.DataTypes.EnumDescription);

        /// <remarks />
        public static readonly NodeId SimpleTypeDescription = new NodeId(Opc.Ua.DataTypes.SimpleTypeDescription);

        /// <remarks />
        public static readonly NodeId UABinaryFileDataType = new NodeId(Opc.Ua.DataTypes.UABinaryFileDataType);

        /// <remarks />
        public static readonly NodeId PubSubState = new NodeId(Opc.Ua.DataTypes.PubSubState);

        /// <remarks />
        public static readonly NodeId DataSetMetaDataType = new NodeId(Opc.Ua.DataTypes.DataSetMetaDataType);

        /// <remarks />
        public static readonly NodeId FieldMetaData = new NodeId(Opc.Ua.DataTypes.FieldMetaData);

        /// <remarks />
        public static readonly NodeId DataSetFieldFlags = new NodeId(Opc.Ua.DataTypes.DataSetFieldFlags);

        /// <remarks />
        public static readonly NodeId ConfigurationVersionDataType = new NodeId(Opc.Ua.DataTypes.ConfigurationVersionDataType);

        /// <remarks />
        public static readonly NodeId PublishedDataSetDataType = new NodeId(Opc.Ua.DataTypes.PublishedDataSetDataType);

        /// <remarks />
        public static readonly NodeId PublishedDataSetSourceDataType = new NodeId(Opc.Ua.DataTypes.PublishedDataSetSourceDataType);

        /// <remarks />
        public static readonly NodeId PublishedVariableDataType = new NodeId(Opc.Ua.DataTypes.PublishedVariableDataType);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsDataType = new NodeId(Opc.Ua.DataTypes.PublishedDataItemsDataType);

        /// <remarks />
        public static readonly NodeId PublishedEventsDataType = new NodeId(Opc.Ua.DataTypes.PublishedEventsDataType);

        /// <remarks />
        public static readonly NodeId DataSetFieldContentMask = new NodeId(Opc.Ua.DataTypes.DataSetFieldContentMask);

        /// <remarks />
        public static readonly NodeId DataSetWriterDataType = new NodeId(Opc.Ua.DataTypes.DataSetWriterDataType);

        /// <remarks />
        public static readonly NodeId DataSetWriterTransportDataType = new NodeId(Opc.Ua.DataTypes.DataSetWriterTransportDataType);

        /// <remarks />
        public static readonly NodeId DataSetWriterMessageDataType = new NodeId(Opc.Ua.DataTypes.DataSetWriterMessageDataType);

        /// <remarks />
        public static readonly NodeId PubSubGroupDataType = new NodeId(Opc.Ua.DataTypes.PubSubGroupDataType);

        /// <remarks />
        public static readonly NodeId WriterGroupDataType = new NodeId(Opc.Ua.DataTypes.WriterGroupDataType);

        /// <remarks />
        public static readonly NodeId WriterGroupTransportDataType = new NodeId(Opc.Ua.DataTypes.WriterGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId WriterGroupMessageDataType = new NodeId(Opc.Ua.DataTypes.WriterGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId PubSubConnectionDataType = new NodeId(Opc.Ua.DataTypes.PubSubConnectionDataType);

        /// <remarks />
        public static readonly NodeId ConnectionTransportDataType = new NodeId(Opc.Ua.DataTypes.ConnectionTransportDataType);

        /// <remarks />
        public static readonly NodeId NetworkAddressDataType = new NodeId(Opc.Ua.DataTypes.NetworkAddressDataType);

        /// <remarks />
        public static readonly NodeId NetworkAddressUrlDataType = new NodeId(Opc.Ua.DataTypes.NetworkAddressUrlDataType);

        /// <remarks />
        public static readonly NodeId ReaderGroupDataType = new NodeId(Opc.Ua.DataTypes.ReaderGroupDataType);

        /// <remarks />
        public static readonly NodeId ReaderGroupTransportDataType = new NodeId(Opc.Ua.DataTypes.ReaderGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId ReaderGroupMessageDataType = new NodeId(Opc.Ua.DataTypes.ReaderGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId DataSetReaderDataType = new NodeId(Opc.Ua.DataTypes.DataSetReaderDataType);

        /// <remarks />
        public static readonly NodeId DataSetReaderTransportDataType = new NodeId(Opc.Ua.DataTypes.DataSetReaderTransportDataType);

        /// <remarks />
        public static readonly NodeId DataSetReaderMessageDataType = new NodeId(Opc.Ua.DataTypes.DataSetReaderMessageDataType);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetDataType = new NodeId(Opc.Ua.DataTypes.SubscribedDataSetDataType);

        /// <remarks />
        public static readonly NodeId TargetVariablesDataType = new NodeId(Opc.Ua.DataTypes.TargetVariablesDataType);

        /// <remarks />
        public static readonly NodeId FieldTargetDataType = new NodeId(Opc.Ua.DataTypes.FieldTargetDataType);

        /// <remarks />
        public static readonly NodeId OverrideValueHandling = new NodeId(Opc.Ua.DataTypes.OverrideValueHandling);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetMirrorDataType = new NodeId(Opc.Ua.DataTypes.SubscribedDataSetMirrorDataType);

        /// <remarks />
        public static readonly NodeId PubSubConfigurationDataType = new NodeId(Opc.Ua.DataTypes.PubSubConfigurationDataType);

        /// <remarks />
        public static readonly NodeId DataSetOrderingType = new NodeId(Opc.Ua.DataTypes.DataSetOrderingType);

        /// <remarks />
        public static readonly NodeId UadpNetworkMessageContentMask = new NodeId(Opc.Ua.DataTypes.UadpNetworkMessageContentMask);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageDataType = new NodeId(Opc.Ua.DataTypes.UadpWriterGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId UadpDataSetMessageContentMask = new NodeId(Opc.Ua.DataTypes.UadpDataSetMessageContentMask);

        /// <remarks />
        public static readonly NodeId UadpDataSetWriterMessageDataType = new NodeId(Opc.Ua.DataTypes.UadpDataSetWriterMessageDataType);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageDataType = new NodeId(Opc.Ua.DataTypes.UadpDataSetReaderMessageDataType);

        /// <remarks />
        public static readonly NodeId JsonNetworkMessageContentMask = new NodeId(Opc.Ua.DataTypes.JsonNetworkMessageContentMask);

        /// <remarks />
        public static readonly NodeId JsonWriterGroupMessageDataType = new NodeId(Opc.Ua.DataTypes.JsonWriterGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId JsonDataSetMessageContentMask = new NodeId(Opc.Ua.DataTypes.JsonDataSetMessageContentMask);

        /// <remarks />
        public static readonly NodeId JsonDataSetWriterMessageDataType = new NodeId(Opc.Ua.DataTypes.JsonDataSetWriterMessageDataType);

        /// <remarks />
        public static readonly NodeId JsonDataSetReaderMessageDataType = new NodeId(Opc.Ua.DataTypes.JsonDataSetReaderMessageDataType);

        /// <remarks />
        public static readonly NodeId DatagramConnectionTransportDataType = new NodeId(Opc.Ua.DataTypes.DatagramConnectionTransportDataType);

        /// <remarks />
        public static readonly NodeId DatagramWriterGroupTransportDataType = new NodeId(Opc.Ua.DataTypes.DatagramWriterGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId BrokerConnectionTransportDataType = new NodeId(Opc.Ua.DataTypes.BrokerConnectionTransportDataType);

        /// <remarks />
        public static readonly NodeId BrokerTransportQualityOfService = new NodeId(Opc.Ua.DataTypes.BrokerTransportQualityOfService);

        /// <remarks />
        public static readonly NodeId BrokerWriterGroupTransportDataType = new NodeId(Opc.Ua.DataTypes.BrokerWriterGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportDataType = new NodeId(Opc.Ua.DataTypes.BrokerDataSetWriterTransportDataType);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportDataType = new NodeId(Opc.Ua.DataTypes.BrokerDataSetReaderTransportDataType);

        /// <remarks />
        public static readonly NodeId DiagnosticsLevel = new NodeId(Opc.Ua.DataTypes.DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsCounterClassification = new NodeId(Opc.Ua.DataTypes.PubSubDiagnosticsCounterClassification);

        /// <remarks />
        public static readonly NodeId AliasNameDataType = new NodeId(Opc.Ua.DataTypes.AliasNameDataType);

        /// <remarks />
        public static readonly NodeId Duplex = new NodeId(Opc.Ua.DataTypes.Duplex);

        /// <remarks />
        public static readonly NodeId InterfaceAdminStatus = new NodeId(Opc.Ua.DataTypes.InterfaceAdminStatus);

        /// <remarks />
        public static readonly NodeId InterfaceOperStatus = new NodeId(Opc.Ua.DataTypes.InterfaceOperStatus);

        /// <remarks />
        public static readonly NodeId NegotiationStatus = new NodeId(Opc.Ua.DataTypes.NegotiationStatus);

        /// <remarks />
        public static readonly NodeId TsnFailureCode = new NodeId(Opc.Ua.DataTypes.TsnFailureCode);

        /// <remarks />
        public static readonly NodeId TsnStreamState = new NodeId(Opc.Ua.DataTypes.TsnStreamState);

        /// <remarks />
        public static readonly NodeId TsnTalkerStatus = new NodeId(Opc.Ua.DataTypes.TsnTalkerStatus);

        /// <remarks />
        public static readonly NodeId TsnListenerStatus = new NodeId(Opc.Ua.DataTypes.TsnListenerStatus);

        /// <remarks />
        public static readonly NodeId UnsignedRationalNumber = new NodeId(Opc.Ua.DataTypes.UnsignedRationalNumber);

        /// <remarks />
        public static readonly NodeId IdType = new NodeId(Opc.Ua.DataTypes.IdType);

        /// <remarks />
        public static readonly NodeId NodeClass = new NodeId(Opc.Ua.DataTypes.NodeClass);

        /// <remarks />
        public static readonly NodeId PermissionType = new NodeId(Opc.Ua.DataTypes.PermissionType);

        /// <remarks />
        public static readonly NodeId AccessLevelType = new NodeId(Opc.Ua.DataTypes.AccessLevelType);

        /// <remarks />
        public static readonly NodeId AccessLevelExType = new NodeId(Opc.Ua.DataTypes.AccessLevelExType);

        /// <remarks />
        public static readonly NodeId EventNotifierType = new NodeId(Opc.Ua.DataTypes.EventNotifierType);

        /// <remarks />
        public static readonly NodeId AccessRestrictionType = new NodeId(Opc.Ua.DataTypes.AccessRestrictionType);

        /// <remarks />
        public static readonly NodeId RolePermissionType = new NodeId(Opc.Ua.DataTypes.RolePermissionType);

        /// <remarks />
        public static readonly NodeId DataTypeDefinition = new NodeId(Opc.Ua.DataTypes.DataTypeDefinition);

        /// <remarks />
        public static readonly NodeId StructureType = new NodeId(Opc.Ua.DataTypes.StructureType);

        /// <remarks />
        public static readonly NodeId StructureField = new NodeId(Opc.Ua.DataTypes.StructureField);

        /// <remarks />
        public static readonly NodeId StructureDefinition = new NodeId(Opc.Ua.DataTypes.StructureDefinition);

        /// <remarks />
        public static readonly NodeId EnumDefinition = new NodeId(Opc.Ua.DataTypes.EnumDefinition);

        /// <remarks />
        public static readonly NodeId Node = new NodeId(Opc.Ua.DataTypes.Node);

        /// <remarks />
        public static readonly NodeId InstanceNode = new NodeId(Opc.Ua.DataTypes.InstanceNode);

        /// <remarks />
        public static readonly NodeId TypeNode = new NodeId(Opc.Ua.DataTypes.TypeNode);

        /// <remarks />
        public static readonly NodeId ObjectNode = new NodeId(Opc.Ua.DataTypes.ObjectNode);

        /// <remarks />
        public static readonly NodeId ObjectTypeNode = new NodeId(Opc.Ua.DataTypes.ObjectTypeNode);

        /// <remarks />
        public static readonly NodeId VariableNode = new NodeId(Opc.Ua.DataTypes.VariableNode);

        /// <remarks />
        public static readonly NodeId VariableTypeNode = new NodeId(Opc.Ua.DataTypes.VariableTypeNode);

        /// <remarks />
        public static readonly NodeId ReferenceTypeNode = new NodeId(Opc.Ua.DataTypes.ReferenceTypeNode);

        /// <remarks />
        public static readonly NodeId MethodNode = new NodeId(Opc.Ua.DataTypes.MethodNode);

        /// <remarks />
        public static readonly NodeId ViewNode = new NodeId(Opc.Ua.DataTypes.ViewNode);

        /// <remarks />
        public static readonly NodeId DataTypeNode = new NodeId(Opc.Ua.DataTypes.DataTypeNode);

        /// <remarks />
        public static readonly NodeId ReferenceNode = new NodeId(Opc.Ua.DataTypes.ReferenceNode);

        /// <remarks />
        public static readonly NodeId Argument = new NodeId(Opc.Ua.DataTypes.Argument);

        /// <remarks />
        public static readonly NodeId EnumValueType = new NodeId(Opc.Ua.DataTypes.EnumValueType);

        /// <remarks />
        public static readonly NodeId EnumField = new NodeId(Opc.Ua.DataTypes.EnumField);

        /// <remarks />
        public static readonly NodeId OptionSet = new NodeId(Opc.Ua.DataTypes.OptionSet);

        /// <remarks />
        public static readonly NodeId NormalizedString = new NodeId(Opc.Ua.DataTypes.NormalizedString);

        /// <remarks />
        public static readonly NodeId DecimalString = new NodeId(Opc.Ua.DataTypes.DecimalString);

        /// <remarks />
        public static readonly NodeId DurationString = new NodeId(Opc.Ua.DataTypes.DurationString);

        /// <remarks />
        public static readonly NodeId TimeString = new NodeId(Opc.Ua.DataTypes.TimeString);

        /// <remarks />
        public static readonly NodeId DateString = new NodeId(Opc.Ua.DataTypes.DateString);

        /// <remarks />
        public static readonly NodeId Duration = new NodeId(Opc.Ua.DataTypes.Duration);

        /// <remarks />
        public static readonly NodeId UtcTime = new NodeId(Opc.Ua.DataTypes.UtcTime);

        /// <remarks />
        public static readonly NodeId Time = new NodeId(Opc.Ua.DataTypes.Time);

        /// <remarks />
        public static readonly NodeId Date = new NodeId(Opc.Ua.DataTypes.Date);

        /// <remarks />
        public static readonly NodeId LocaleId = new NodeId(Opc.Ua.DataTypes.LocaleId);

        /// <remarks />
        public static readonly NodeId TimeZoneDataType = new NodeId(Opc.Ua.DataTypes.TimeZoneDataType);

        /// <remarks />
        public static readonly NodeId Index = new NodeId(Opc.Ua.DataTypes.Index);

        /// <remarks />
        public static readonly NodeId IntegerId = new NodeId(Opc.Ua.DataTypes.IntegerId);

        /// <remarks />
        public static readonly NodeId ApplicationType = new NodeId(Opc.Ua.DataTypes.ApplicationType);

        /// <remarks />
        public static readonly NodeId ApplicationDescription = new NodeId(Opc.Ua.DataTypes.ApplicationDescription);

        /// <remarks />
        public static readonly NodeId RequestHeader = new NodeId(Opc.Ua.DataTypes.RequestHeader);

        /// <remarks />
        public static readonly NodeId ResponseHeader = new NodeId(Opc.Ua.DataTypes.ResponseHeader);

        /// <remarks />
        public static readonly NodeId VersionTime = new NodeId(Opc.Ua.DataTypes.VersionTime);

        /// <remarks />
        public static readonly NodeId ServiceFault = new NodeId(Opc.Ua.DataTypes.ServiceFault);

        /// <remarks />
        public static readonly NodeId SessionlessInvokeRequestType = new NodeId(Opc.Ua.DataTypes.SessionlessInvokeRequestType);

        /// <remarks />
        public static readonly NodeId SessionlessInvokeResponseType = new NodeId(Opc.Ua.DataTypes.SessionlessInvokeResponseType);

        /// <remarks />
        public static readonly NodeId FindServersRequest = new NodeId(Opc.Ua.DataTypes.FindServersRequest);

        /// <remarks />
        public static readonly NodeId FindServersResponse = new NodeId(Opc.Ua.DataTypes.FindServersResponse);

        /// <remarks />
        public static readonly NodeId ServerOnNetwork = new NodeId(Opc.Ua.DataTypes.ServerOnNetwork);

        /// <remarks />
        public static readonly NodeId FindServersOnNetworkRequest = new NodeId(Opc.Ua.DataTypes.FindServersOnNetworkRequest);

        /// <remarks />
        public static readonly NodeId FindServersOnNetworkResponse = new NodeId(Opc.Ua.DataTypes.FindServersOnNetworkResponse);

        /// <remarks />
        public static readonly NodeId ApplicationInstanceCertificate = new NodeId(Opc.Ua.DataTypes.ApplicationInstanceCertificate);

        /// <remarks />
        public static readonly NodeId MessageSecurityMode = new NodeId(Opc.Ua.DataTypes.MessageSecurityMode);

        /// <remarks />
        public static readonly NodeId UserTokenType = new NodeId(Opc.Ua.DataTypes.UserTokenType);

        /// <remarks />
        public static readonly NodeId UserTokenPolicy = new NodeId(Opc.Ua.DataTypes.UserTokenPolicy);

        /// <remarks />
        public static readonly NodeId EndpointDescription = new NodeId(Opc.Ua.DataTypes.EndpointDescription);

        /// <remarks />
        public static readonly NodeId GetEndpointsRequest = new NodeId(Opc.Ua.DataTypes.GetEndpointsRequest);

        /// <remarks />
        public static readonly NodeId GetEndpointsResponse = new NodeId(Opc.Ua.DataTypes.GetEndpointsResponse);

        /// <remarks />
        public static readonly NodeId RegisteredServer = new NodeId(Opc.Ua.DataTypes.RegisteredServer);

        /// <remarks />
        public static readonly NodeId RegisterServerRequest = new NodeId(Opc.Ua.DataTypes.RegisterServerRequest);

        /// <remarks />
        public static readonly NodeId RegisterServerResponse = new NodeId(Opc.Ua.DataTypes.RegisterServerResponse);

        /// <remarks />
        public static readonly NodeId DiscoveryConfiguration = new NodeId(Opc.Ua.DataTypes.DiscoveryConfiguration);

        /// <remarks />
        public static readonly NodeId MdnsDiscoveryConfiguration = new NodeId(Opc.Ua.DataTypes.MdnsDiscoveryConfiguration);

        /// <remarks />
        public static readonly NodeId RegisterServer2Request = new NodeId(Opc.Ua.DataTypes.RegisterServer2Request);

        /// <remarks />
        public static readonly NodeId RegisterServer2Response = new NodeId(Opc.Ua.DataTypes.RegisterServer2Response);

        /// <remarks />
        public static readonly NodeId SecurityTokenRequestType = new NodeId(Opc.Ua.DataTypes.SecurityTokenRequestType);

        /// <remarks />
        public static readonly NodeId ChannelSecurityToken = new NodeId(Opc.Ua.DataTypes.ChannelSecurityToken);

        /// <remarks />
        public static readonly NodeId OpenSecureChannelRequest = new NodeId(Opc.Ua.DataTypes.OpenSecureChannelRequest);

        /// <remarks />
        public static readonly NodeId OpenSecureChannelResponse = new NodeId(Opc.Ua.DataTypes.OpenSecureChannelResponse);

        /// <remarks />
        public static readonly NodeId CloseSecureChannelRequest = new NodeId(Opc.Ua.DataTypes.CloseSecureChannelRequest);

        /// <remarks />
        public static readonly NodeId CloseSecureChannelResponse = new NodeId(Opc.Ua.DataTypes.CloseSecureChannelResponse);

        /// <remarks />
        public static readonly NodeId SignedSoftwareCertificate = new NodeId(Opc.Ua.DataTypes.SignedSoftwareCertificate);

        /// <remarks />
        public static readonly NodeId SessionAuthenticationToken = new NodeId(Opc.Ua.DataTypes.SessionAuthenticationToken);

        /// <remarks />
        public static readonly NodeId SignatureData = new NodeId(Opc.Ua.DataTypes.SignatureData);

        /// <remarks />
        public static readonly NodeId CreateSessionRequest = new NodeId(Opc.Ua.DataTypes.CreateSessionRequest);

        /// <remarks />
        public static readonly NodeId CreateSessionResponse = new NodeId(Opc.Ua.DataTypes.CreateSessionResponse);

        /// <remarks />
        public static readonly NodeId UserIdentityToken = new NodeId(Opc.Ua.DataTypes.UserIdentityToken);

        /// <remarks />
        public static readonly NodeId AnonymousIdentityToken = new NodeId(Opc.Ua.DataTypes.AnonymousIdentityToken);

        /// <remarks />
        public static readonly NodeId UserNameIdentityToken = new NodeId(Opc.Ua.DataTypes.UserNameIdentityToken);

        /// <remarks />
        public static readonly NodeId X509IdentityToken = new NodeId(Opc.Ua.DataTypes.X509IdentityToken);

        /// <remarks />
        public static readonly NodeId IssuedIdentityToken = new NodeId(Opc.Ua.DataTypes.IssuedIdentityToken);

        /// <remarks />
        public static readonly NodeId RsaEncryptedSecret = new NodeId(Opc.Ua.DataTypes.RsaEncryptedSecret);

        /// <remarks />
        public static readonly NodeId EccEncryptedSecret = new NodeId(Opc.Ua.DataTypes.EccEncryptedSecret);

        /// <remarks />
        public static readonly NodeId ActivateSessionRequest = new NodeId(Opc.Ua.DataTypes.ActivateSessionRequest);

        /// <remarks />
        public static readonly NodeId ActivateSessionResponse = new NodeId(Opc.Ua.DataTypes.ActivateSessionResponse);

        /// <remarks />
        public static readonly NodeId CloseSessionRequest = new NodeId(Opc.Ua.DataTypes.CloseSessionRequest);

        /// <remarks />
        public static readonly NodeId CloseSessionResponse = new NodeId(Opc.Ua.DataTypes.CloseSessionResponse);

        /// <remarks />
        public static readonly NodeId CancelRequest = new NodeId(Opc.Ua.DataTypes.CancelRequest);

        /// <remarks />
        public static readonly NodeId CancelResponse = new NodeId(Opc.Ua.DataTypes.CancelResponse);

        /// <remarks />
        public static readonly NodeId NodeAttributesMask = new NodeId(Opc.Ua.DataTypes.NodeAttributesMask);

        /// <remarks />
        public static readonly NodeId NodeAttributes = new NodeId(Opc.Ua.DataTypes.NodeAttributes);

        /// <remarks />
        public static readonly NodeId ObjectAttributes = new NodeId(Opc.Ua.DataTypes.ObjectAttributes);

        /// <remarks />
        public static readonly NodeId VariableAttributes = new NodeId(Opc.Ua.DataTypes.VariableAttributes);

        /// <remarks />
        public static readonly NodeId MethodAttributes = new NodeId(Opc.Ua.DataTypes.MethodAttributes);

        /// <remarks />
        public static readonly NodeId ObjectTypeAttributes = new NodeId(Opc.Ua.DataTypes.ObjectTypeAttributes);

        /// <remarks />
        public static readonly NodeId VariableTypeAttributes = new NodeId(Opc.Ua.DataTypes.VariableTypeAttributes);

        /// <remarks />
        public static readonly NodeId ReferenceTypeAttributes = new NodeId(Opc.Ua.DataTypes.ReferenceTypeAttributes);

        /// <remarks />
        public static readonly NodeId DataTypeAttributes = new NodeId(Opc.Ua.DataTypes.DataTypeAttributes);

        /// <remarks />
        public static readonly NodeId ViewAttributes = new NodeId(Opc.Ua.DataTypes.ViewAttributes);

        /// <remarks />
        public static readonly NodeId GenericAttributeValue = new NodeId(Opc.Ua.DataTypes.GenericAttributeValue);

        /// <remarks />
        public static readonly NodeId GenericAttributes = new NodeId(Opc.Ua.DataTypes.GenericAttributes);

        /// <remarks />
        public static readonly NodeId AddNodesItem = new NodeId(Opc.Ua.DataTypes.AddNodesItem);

        /// <remarks />
        public static readonly NodeId AddNodesResult = new NodeId(Opc.Ua.DataTypes.AddNodesResult);

        /// <remarks />
        public static readonly NodeId AddNodesRequest = new NodeId(Opc.Ua.DataTypes.AddNodesRequest);

        /// <remarks />
        public static readonly NodeId AddNodesResponse = new NodeId(Opc.Ua.DataTypes.AddNodesResponse);

        /// <remarks />
        public static readonly NodeId AddReferencesItem = new NodeId(Opc.Ua.DataTypes.AddReferencesItem);

        /// <remarks />
        public static readonly NodeId AddReferencesRequest = new NodeId(Opc.Ua.DataTypes.AddReferencesRequest);

        /// <remarks />
        public static readonly NodeId AddReferencesResponse = new NodeId(Opc.Ua.DataTypes.AddReferencesResponse);

        /// <remarks />
        public static readonly NodeId DeleteNodesItem = new NodeId(Opc.Ua.DataTypes.DeleteNodesItem);

        /// <remarks />
        public static readonly NodeId DeleteNodesRequest = new NodeId(Opc.Ua.DataTypes.DeleteNodesRequest);

        /// <remarks />
        public static readonly NodeId DeleteNodesResponse = new NodeId(Opc.Ua.DataTypes.DeleteNodesResponse);

        /// <remarks />
        public static readonly NodeId DeleteReferencesItem = new NodeId(Opc.Ua.DataTypes.DeleteReferencesItem);

        /// <remarks />
        public static readonly NodeId DeleteReferencesRequest = new NodeId(Opc.Ua.DataTypes.DeleteReferencesRequest);

        /// <remarks />
        public static readonly NodeId DeleteReferencesResponse = new NodeId(Opc.Ua.DataTypes.DeleteReferencesResponse);

        /// <remarks />
        public static readonly NodeId AttributeWriteMask = new NodeId(Opc.Ua.DataTypes.AttributeWriteMask);

        /// <remarks />
        public static readonly NodeId BrowseDirection = new NodeId(Opc.Ua.DataTypes.BrowseDirection);

        /// <remarks />
        public static readonly NodeId ViewDescription = new NodeId(Opc.Ua.DataTypes.ViewDescription);

        /// <remarks />
        public static readonly NodeId BrowseDescription = new NodeId(Opc.Ua.DataTypes.BrowseDescription);

        /// <remarks />
        public static readonly NodeId BrowseResultMask = new NodeId(Opc.Ua.DataTypes.BrowseResultMask);

        /// <remarks />
        public static readonly NodeId ReferenceDescription = new NodeId(Opc.Ua.DataTypes.ReferenceDescription);

        /// <remarks />
        public static readonly NodeId ContinuationPoint = new NodeId(Opc.Ua.DataTypes.ContinuationPoint);

        /// <remarks />
        public static readonly NodeId BrowseResult = new NodeId(Opc.Ua.DataTypes.BrowseResult);

        /// <remarks />
        public static readonly NodeId BrowseRequest = new NodeId(Opc.Ua.DataTypes.BrowseRequest);

        /// <remarks />
        public static readonly NodeId BrowseResponse = new NodeId(Opc.Ua.DataTypes.BrowseResponse);

        /// <remarks />
        public static readonly NodeId BrowseNextRequest = new NodeId(Opc.Ua.DataTypes.BrowseNextRequest);

        /// <remarks />
        public static readonly NodeId BrowseNextResponse = new NodeId(Opc.Ua.DataTypes.BrowseNextResponse);

        /// <remarks />
        public static readonly NodeId RelativePathElement = new NodeId(Opc.Ua.DataTypes.RelativePathElement);

        /// <remarks />
        public static readonly NodeId RelativePath = new NodeId(Opc.Ua.DataTypes.RelativePath);

        /// <remarks />
        public static readonly NodeId BrowsePath = new NodeId(Opc.Ua.DataTypes.BrowsePath);

        /// <remarks />
        public static readonly NodeId BrowsePathTarget = new NodeId(Opc.Ua.DataTypes.BrowsePathTarget);

        /// <remarks />
        public static readonly NodeId BrowsePathResult = new NodeId(Opc.Ua.DataTypes.BrowsePathResult);

        /// <remarks />
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest = new NodeId(Opc.Ua.DataTypes.TranslateBrowsePathsToNodeIdsRequest);

        /// <remarks />
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse = new NodeId(Opc.Ua.DataTypes.TranslateBrowsePathsToNodeIdsResponse);

        /// <remarks />
        public static readonly NodeId RegisterNodesRequest = new NodeId(Opc.Ua.DataTypes.RegisterNodesRequest);

        /// <remarks />
        public static readonly NodeId RegisterNodesResponse = new NodeId(Opc.Ua.DataTypes.RegisterNodesResponse);

        /// <remarks />
        public static readonly NodeId UnregisterNodesRequest = new NodeId(Opc.Ua.DataTypes.UnregisterNodesRequest);

        /// <remarks />
        public static readonly NodeId UnregisterNodesResponse = new NodeId(Opc.Ua.DataTypes.UnregisterNodesResponse);

        /// <remarks />
        public static readonly NodeId Counter = new NodeId(Opc.Ua.DataTypes.Counter);

        /// <remarks />
        public static readonly NodeId NumericRange = new NodeId(Opc.Ua.DataTypes.NumericRange);

        /// <remarks />
        public static readonly NodeId EndpointConfiguration = new NodeId(Opc.Ua.DataTypes.EndpointConfiguration);

        /// <remarks />
        public static readonly NodeId QueryDataDescription = new NodeId(Opc.Ua.DataTypes.QueryDataDescription);

        /// <remarks />
        public static readonly NodeId NodeTypeDescription = new NodeId(Opc.Ua.DataTypes.NodeTypeDescription);

        /// <remarks />
        public static readonly NodeId FilterOperator = new NodeId(Opc.Ua.DataTypes.FilterOperator);

        /// <remarks />
        public static readonly NodeId QueryDataSet = new NodeId(Opc.Ua.DataTypes.QueryDataSet);

        /// <remarks />
        public static readonly NodeId NodeReference = new NodeId(Opc.Ua.DataTypes.NodeReference);

        /// <remarks />
        public static readonly NodeId ContentFilterElement = new NodeId(Opc.Ua.DataTypes.ContentFilterElement);

        /// <remarks />
        public static readonly NodeId ContentFilter = new NodeId(Opc.Ua.DataTypes.ContentFilter);

        /// <remarks />
        public static readonly NodeId FilterOperand = new NodeId(Opc.Ua.DataTypes.FilterOperand);

        /// <remarks />
        public static readonly NodeId ElementOperand = new NodeId(Opc.Ua.DataTypes.ElementOperand);

        /// <remarks />
        public static readonly NodeId LiteralOperand = new NodeId(Opc.Ua.DataTypes.LiteralOperand);

        /// <remarks />
        public static readonly NodeId AttributeOperand = new NodeId(Opc.Ua.DataTypes.AttributeOperand);

        /// <remarks />
        public static readonly NodeId SimpleAttributeOperand = new NodeId(Opc.Ua.DataTypes.SimpleAttributeOperand);

        /// <remarks />
        public static readonly NodeId ContentFilterElementResult = new NodeId(Opc.Ua.DataTypes.ContentFilterElementResult);

        /// <remarks />
        public static readonly NodeId ContentFilterResult = new NodeId(Opc.Ua.DataTypes.ContentFilterResult);

        /// <remarks />
        public static readonly NodeId ParsingResult = new NodeId(Opc.Ua.DataTypes.ParsingResult);

        /// <remarks />
        public static readonly NodeId QueryFirstRequest = new NodeId(Opc.Ua.DataTypes.QueryFirstRequest);

        /// <remarks />
        public static readonly NodeId QueryFirstResponse = new NodeId(Opc.Ua.DataTypes.QueryFirstResponse);

        /// <remarks />
        public static readonly NodeId QueryNextRequest = new NodeId(Opc.Ua.DataTypes.QueryNextRequest);

        /// <remarks />
        public static readonly NodeId QueryNextResponse = new NodeId(Opc.Ua.DataTypes.QueryNextResponse);

        /// <remarks />
        public static readonly NodeId TimestampsToReturn = new NodeId(Opc.Ua.DataTypes.TimestampsToReturn);

        /// <remarks />
        public static readonly NodeId ReadValueId = new NodeId(Opc.Ua.DataTypes.ReadValueId);

        /// <remarks />
        public static readonly NodeId ReadRequest = new NodeId(Opc.Ua.DataTypes.ReadRequest);

        /// <remarks />
        public static readonly NodeId ReadResponse = new NodeId(Opc.Ua.DataTypes.ReadResponse);

        /// <remarks />
        public static readonly NodeId HistoryReadValueId = new NodeId(Opc.Ua.DataTypes.HistoryReadValueId);

        /// <remarks />
        public static readonly NodeId HistoryReadResult = new NodeId(Opc.Ua.DataTypes.HistoryReadResult);

        /// <remarks />
        public static readonly NodeId HistoryReadDetails = new NodeId(Opc.Ua.DataTypes.HistoryReadDetails);

        /// <remarks />
        public static readonly NodeId ReadEventDetails = new NodeId(Opc.Ua.DataTypes.ReadEventDetails);

        /// <remarks />
        public static readonly NodeId ReadRawModifiedDetails = new NodeId(Opc.Ua.DataTypes.ReadRawModifiedDetails);

        /// <remarks />
        public static readonly NodeId ReadProcessedDetails = new NodeId(Opc.Ua.DataTypes.ReadProcessedDetails);

        /// <remarks />
        public static readonly NodeId ReadAtTimeDetails = new NodeId(Opc.Ua.DataTypes.ReadAtTimeDetails);

        /// <remarks />
        public static readonly NodeId ReadAnnotationDataDetails = new NodeId(Opc.Ua.DataTypes.ReadAnnotationDataDetails);

        /// <remarks />
        public static readonly NodeId HistoryData = new NodeId(Opc.Ua.DataTypes.HistoryData);

        /// <remarks />
        public static readonly NodeId ModificationInfo = new NodeId(Opc.Ua.DataTypes.ModificationInfo);

        /// <remarks />
        public static readonly NodeId HistoryModifiedData = new NodeId(Opc.Ua.DataTypes.HistoryModifiedData);

        /// <remarks />
        public static readonly NodeId HistoryEvent = new NodeId(Opc.Ua.DataTypes.HistoryEvent);

        /// <remarks />
        public static readonly NodeId HistoryReadRequest = new NodeId(Opc.Ua.DataTypes.HistoryReadRequest);

        /// <remarks />
        public static readonly NodeId HistoryReadResponse = new NodeId(Opc.Ua.DataTypes.HistoryReadResponse);

        /// <remarks />
        public static readonly NodeId WriteValue = new NodeId(Opc.Ua.DataTypes.WriteValue);

        /// <remarks />
        public static readonly NodeId WriteRequest = new NodeId(Opc.Ua.DataTypes.WriteRequest);

        /// <remarks />
        public static readonly NodeId WriteResponse = new NodeId(Opc.Ua.DataTypes.WriteResponse);

        /// <remarks />
        public static readonly NodeId HistoryUpdateDetails = new NodeId(Opc.Ua.DataTypes.HistoryUpdateDetails);

        /// <remarks />
        public static readonly NodeId HistoryUpdateType = new NodeId(Opc.Ua.DataTypes.HistoryUpdateType);

        /// <remarks />
        public static readonly NodeId PerformUpdateType = new NodeId(Opc.Ua.DataTypes.PerformUpdateType);

        /// <remarks />
        public static readonly NodeId UpdateDataDetails = new NodeId(Opc.Ua.DataTypes.UpdateDataDetails);

        /// <remarks />
        public static readonly NodeId UpdateStructureDataDetails = new NodeId(Opc.Ua.DataTypes.UpdateStructureDataDetails);

        /// <remarks />
        public static readonly NodeId UpdateEventDetails = new NodeId(Opc.Ua.DataTypes.UpdateEventDetails);

        /// <remarks />
        public static readonly NodeId DeleteRawModifiedDetails = new NodeId(Opc.Ua.DataTypes.DeleteRawModifiedDetails);

        /// <remarks />
        public static readonly NodeId DeleteAtTimeDetails = new NodeId(Opc.Ua.DataTypes.DeleteAtTimeDetails);

        /// <remarks />
        public static readonly NodeId DeleteEventDetails = new NodeId(Opc.Ua.DataTypes.DeleteEventDetails);

        /// <remarks />
        public static readonly NodeId HistoryUpdateResult = new NodeId(Opc.Ua.DataTypes.HistoryUpdateResult);

        /// <remarks />
        public static readonly NodeId HistoryUpdateRequest = new NodeId(Opc.Ua.DataTypes.HistoryUpdateRequest);

        /// <remarks />
        public static readonly NodeId HistoryUpdateResponse = new NodeId(Opc.Ua.DataTypes.HistoryUpdateResponse);

        /// <remarks />
        public static readonly NodeId CallMethodRequest = new NodeId(Opc.Ua.DataTypes.CallMethodRequest);

        /// <remarks />
        public static readonly NodeId CallMethodResult = new NodeId(Opc.Ua.DataTypes.CallMethodResult);

        /// <remarks />
        public static readonly NodeId CallRequest = new NodeId(Opc.Ua.DataTypes.CallRequest);

        /// <remarks />
        public static readonly NodeId CallResponse = new NodeId(Opc.Ua.DataTypes.CallResponse);

        /// <remarks />
        public static readonly NodeId MonitoringMode = new NodeId(Opc.Ua.DataTypes.MonitoringMode);

        /// <remarks />
        public static readonly NodeId DataChangeTrigger = new NodeId(Opc.Ua.DataTypes.DataChangeTrigger);

        /// <remarks />
        public static readonly NodeId DeadbandType = new NodeId(Opc.Ua.DataTypes.DeadbandType);

        /// <remarks />
        public static readonly NodeId MonitoringFilter = new NodeId(Opc.Ua.DataTypes.MonitoringFilter);

        /// <remarks />
        public static readonly NodeId DataChangeFilter = new NodeId(Opc.Ua.DataTypes.DataChangeFilter);

        /// <remarks />
        public static readonly NodeId EventFilter = new NodeId(Opc.Ua.DataTypes.EventFilter);

        /// <remarks />
        public static readonly NodeId AggregateConfiguration = new NodeId(Opc.Ua.DataTypes.AggregateConfiguration);

        /// <remarks />
        public static readonly NodeId AggregateFilter = new NodeId(Opc.Ua.DataTypes.AggregateFilter);

        /// <remarks />
        public static readonly NodeId MonitoringFilterResult = new NodeId(Opc.Ua.DataTypes.MonitoringFilterResult);

        /// <remarks />
        public static readonly NodeId EventFilterResult = new NodeId(Opc.Ua.DataTypes.EventFilterResult);

        /// <remarks />
        public static readonly NodeId AggregateFilterResult = new NodeId(Opc.Ua.DataTypes.AggregateFilterResult);

        /// <remarks />
        public static readonly NodeId MonitoringParameters = new NodeId(Opc.Ua.DataTypes.MonitoringParameters);

        /// <remarks />
        public static readonly NodeId MonitoredItemCreateRequest = new NodeId(Opc.Ua.DataTypes.MonitoredItemCreateRequest);

        /// <remarks />
        public static readonly NodeId MonitoredItemCreateResult = new NodeId(Opc.Ua.DataTypes.MonitoredItemCreateResult);

        /// <remarks />
        public static readonly NodeId CreateMonitoredItemsRequest = new NodeId(Opc.Ua.DataTypes.CreateMonitoredItemsRequest);

        /// <remarks />
        public static readonly NodeId CreateMonitoredItemsResponse = new NodeId(Opc.Ua.DataTypes.CreateMonitoredItemsResponse);

        /// <remarks />
        public static readonly NodeId MonitoredItemModifyRequest = new NodeId(Opc.Ua.DataTypes.MonitoredItemModifyRequest);

        /// <remarks />
        public static readonly NodeId MonitoredItemModifyResult = new NodeId(Opc.Ua.DataTypes.MonitoredItemModifyResult);

        /// <remarks />
        public static readonly NodeId ModifyMonitoredItemsRequest = new NodeId(Opc.Ua.DataTypes.ModifyMonitoredItemsRequest);

        /// <remarks />
        public static readonly NodeId ModifyMonitoredItemsResponse = new NodeId(Opc.Ua.DataTypes.ModifyMonitoredItemsResponse);

        /// <remarks />
        public static readonly NodeId SetMonitoringModeRequest = new NodeId(Opc.Ua.DataTypes.SetMonitoringModeRequest);

        /// <remarks />
        public static readonly NodeId SetMonitoringModeResponse = new NodeId(Opc.Ua.DataTypes.SetMonitoringModeResponse);

        /// <remarks />
        public static readonly NodeId SetTriggeringRequest = new NodeId(Opc.Ua.DataTypes.SetTriggeringRequest);

        /// <remarks />
        public static readonly NodeId SetTriggeringResponse = new NodeId(Opc.Ua.DataTypes.SetTriggeringResponse);

        /// <remarks />
        public static readonly NodeId DeleteMonitoredItemsRequest = new NodeId(Opc.Ua.DataTypes.DeleteMonitoredItemsRequest);

        /// <remarks />
        public static readonly NodeId DeleteMonitoredItemsResponse = new NodeId(Opc.Ua.DataTypes.DeleteMonitoredItemsResponse);

        /// <remarks />
        public static readonly NodeId CreateSubscriptionRequest = new NodeId(Opc.Ua.DataTypes.CreateSubscriptionRequest);

        /// <remarks />
        public static readonly NodeId CreateSubscriptionResponse = new NodeId(Opc.Ua.DataTypes.CreateSubscriptionResponse);

        /// <remarks />
        public static readonly NodeId ModifySubscriptionRequest = new NodeId(Opc.Ua.DataTypes.ModifySubscriptionRequest);

        /// <remarks />
        public static readonly NodeId ModifySubscriptionResponse = new NodeId(Opc.Ua.DataTypes.ModifySubscriptionResponse);

        /// <remarks />
        public static readonly NodeId SetPublishingModeRequest = new NodeId(Opc.Ua.DataTypes.SetPublishingModeRequest);

        /// <remarks />
        public static readonly NodeId SetPublishingModeResponse = new NodeId(Opc.Ua.DataTypes.SetPublishingModeResponse);

        /// <remarks />
        public static readonly NodeId NotificationMessage = new NodeId(Opc.Ua.DataTypes.NotificationMessage);

        /// <remarks />
        public static readonly NodeId NotificationData = new NodeId(Opc.Ua.DataTypes.NotificationData);

        /// <remarks />
        public static readonly NodeId DataChangeNotification = new NodeId(Opc.Ua.DataTypes.DataChangeNotification);

        /// <remarks />
        public static readonly NodeId MonitoredItemNotification = new NodeId(Opc.Ua.DataTypes.MonitoredItemNotification);

        /// <remarks />
        public static readonly NodeId EventNotificationList = new NodeId(Opc.Ua.DataTypes.EventNotificationList);

        /// <remarks />
        public static readonly NodeId EventFieldList = new NodeId(Opc.Ua.DataTypes.EventFieldList);

        /// <remarks />
        public static readonly NodeId HistoryEventFieldList = new NodeId(Opc.Ua.DataTypes.HistoryEventFieldList);

        /// <remarks />
        public static readonly NodeId StatusChangeNotification = new NodeId(Opc.Ua.DataTypes.StatusChangeNotification);

        /// <remarks />
        public static readonly NodeId SubscriptionAcknowledgement = new NodeId(Opc.Ua.DataTypes.SubscriptionAcknowledgement);

        /// <remarks />
        public static readonly NodeId PublishRequest = new NodeId(Opc.Ua.DataTypes.PublishRequest);

        /// <remarks />
        public static readonly NodeId PublishResponse = new NodeId(Opc.Ua.DataTypes.PublishResponse);

        /// <remarks />
        public static readonly NodeId RepublishRequest = new NodeId(Opc.Ua.DataTypes.RepublishRequest);

        /// <remarks />
        public static readonly NodeId RepublishResponse = new NodeId(Opc.Ua.DataTypes.RepublishResponse);

        /// <remarks />
        public static readonly NodeId TransferResult = new NodeId(Opc.Ua.DataTypes.TransferResult);

        /// <remarks />
        public static readonly NodeId TransferSubscriptionsRequest = new NodeId(Opc.Ua.DataTypes.TransferSubscriptionsRequest);

        /// <remarks />
        public static readonly NodeId TransferSubscriptionsResponse = new NodeId(Opc.Ua.DataTypes.TransferSubscriptionsResponse);

        /// <remarks />
        public static readonly NodeId DeleteSubscriptionsRequest = new NodeId(Opc.Ua.DataTypes.DeleteSubscriptionsRequest);

        /// <remarks />
        public static readonly NodeId DeleteSubscriptionsResponse = new NodeId(Opc.Ua.DataTypes.DeleteSubscriptionsResponse);

        /// <remarks />
        public static readonly NodeId BuildInfo = new NodeId(Opc.Ua.DataTypes.BuildInfo);

        /// <remarks />
        public static readonly NodeId RedundancySupport = new NodeId(Opc.Ua.DataTypes.RedundancySupport);

        /// <remarks />
        public static readonly NodeId ServerState = new NodeId(Opc.Ua.DataTypes.ServerState);

        /// <remarks />
        public static readonly NodeId RedundantServerDataType = new NodeId(Opc.Ua.DataTypes.RedundantServerDataType);

        /// <remarks />
        public static readonly NodeId EndpointUrlListDataType = new NodeId(Opc.Ua.DataTypes.EndpointUrlListDataType);

        /// <remarks />
        public static readonly NodeId NetworkGroupDataType = new NodeId(Opc.Ua.DataTypes.NetworkGroupDataType);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsDataType = new NodeId(Opc.Ua.DataTypes.SamplingIntervalDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryDataType = new NodeId(Opc.Ua.DataTypes.ServerDiagnosticsSummaryDataType);

        /// <remarks />
        public static readonly NodeId ServerStatusDataType = new NodeId(Opc.Ua.DataTypes.ServerStatusDataType);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsDataType = new NodeId(Opc.Ua.DataTypes.SessionDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsDataType = new NodeId(Opc.Ua.DataTypes.SessionSecurityDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId ServiceCounterDataType = new NodeId(Opc.Ua.DataTypes.ServiceCounterDataType);

        /// <remarks />
        public static readonly NodeId StatusResult = new NodeId(Opc.Ua.DataTypes.StatusResult);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsDataType = new NodeId(Opc.Ua.DataTypes.SubscriptionDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId ModelChangeStructureVerbMask = new NodeId(Opc.Ua.DataTypes.ModelChangeStructureVerbMask);

        /// <remarks />
        public static readonly NodeId ModelChangeStructureDataType = new NodeId(Opc.Ua.DataTypes.ModelChangeStructureDataType);

        /// <remarks />
        public static readonly NodeId SemanticChangeStructureDataType = new NodeId(Opc.Ua.DataTypes.SemanticChangeStructureDataType);

        /// <remarks />
        public static readonly NodeId Range = new NodeId(Opc.Ua.DataTypes.Range);

        /// <remarks />
        public static readonly NodeId EUInformation = new NodeId(Opc.Ua.DataTypes.EUInformation);

        /// <remarks />
        public static readonly NodeId AxisScaleEnumeration = new NodeId(Opc.Ua.DataTypes.AxisScaleEnumeration);

        /// <remarks />
        public static readonly NodeId ComplexNumberType = new NodeId(Opc.Ua.DataTypes.ComplexNumberType);

        /// <remarks />
        public static readonly NodeId DoubleComplexNumberType = new NodeId(Opc.Ua.DataTypes.DoubleComplexNumberType);

        /// <remarks />
        public static readonly NodeId AxisInformation = new NodeId(Opc.Ua.DataTypes.AxisInformation);

        /// <remarks />
        public static readonly NodeId XVType = new NodeId(Opc.Ua.DataTypes.XVType);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticDataType = new NodeId(Opc.Ua.DataTypes.ProgramDiagnosticDataType);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2DataType = new NodeId(Opc.Ua.DataTypes.ProgramDiagnostic2DataType);

        /// <remarks />
        public static readonly NodeId Annotation = new NodeId(Opc.Ua.DataTypes.Annotation);

        /// <remarks />
        public static readonly NodeId ExceptionDeviationFormat = new NodeId(Opc.Ua.DataTypes.ExceptionDeviationFormat);
    }
    #endregion

    #region Method Node Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class MethodIds
    {
        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Open = new NodeId(Opc.Ua.Methods.OPCUANamespaceMetadata_NamespaceFile_Open);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Close = new NodeId(Opc.Ua.Methods.OPCUANamespaceMetadata_NamespaceFile_Close);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Read = new NodeId(Opc.Ua.Methods.OPCUANamespaceMetadata_NamespaceFile_Read);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Write = new NodeId(Opc.Ua.Methods.OPCUANamespaceMetadata_NamespaceFile_Write);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_GetPosition = new NodeId(Opc.Ua.Methods.OPCUANamespaceMetadata_NamespaceFile_GetPosition);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_SetPosition = new NodeId(Opc.Ua.Methods.OPCUANamespaceMetadata_NamespaceFile_SetPosition);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_RoleSet_AddRole = new NodeId(Opc.Ua.Methods.ServerType_ServerCapabilities_RoleSet_AddRole);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_RoleSet_RemoveRole = new NodeId(Opc.Ua.Methods.ServerType_ServerCapabilities_RoleSet_RemoveRole);

        /// <remarks />
        public static readonly NodeId ServerType_GetMonitoredItems = new NodeId(Opc.Ua.Methods.ServerType_GetMonitoredItems);

        /// <remarks />
        public static readonly NodeId ServerType_ResendData = new NodeId(Opc.Ua.Methods.ServerType_ResendData);

        /// <remarks />
        public static readonly NodeId ServerType_SetSubscriptionDurable = new NodeId(Opc.Ua.Methods.ServerType_SetSubscriptionDurable);

        /// <remarks />
        public static readonly NodeId ServerType_RequestServerStateChange = new NodeId(Opc.Ua.Methods.ServerType_RequestServerStateChange);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_RoleSet_AddRole = new NodeId(Opc.Ua.Methods.ServerCapabilitiesType_RoleSet_AddRole);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_RoleSet_RemoveRole = new NodeId(Opc.Ua.Methods.ServerCapabilitiesType_RoleSet_RemoveRole);

        /// <remarks />
        public static readonly NodeId FileType_Open = new NodeId(Opc.Ua.Methods.FileType_Open);

        /// <remarks />
        public static readonly NodeId FileType_Close = new NodeId(Opc.Ua.Methods.FileType_Close);

        /// <remarks />
        public static readonly NodeId FileType_Read = new NodeId(Opc.Ua.Methods.FileType_Read);

        /// <remarks />
        public static readonly NodeId FileType_Write = new NodeId(Opc.Ua.Methods.FileType_Write);

        /// <remarks />
        public static readonly NodeId FileType_GetPosition = new NodeId(Opc.Ua.Methods.FileType_GetPosition);

        /// <remarks />
        public static readonly NodeId FileType_SetPosition = new NodeId(Opc.Ua.Methods.FileType_SetPosition);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_ExportNamespace = new NodeId(Opc.Ua.Methods.AddressSpaceFileType_ExportNamespace);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Open = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_Open);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Close = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_Close);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Read = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_Read);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Write = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_Write);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_GetPosition = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_GetPosition);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_SetPosition = new NodeId(Opc.Ua.Methods.NamespaceMetadataType_NamespaceFile_SetPosition);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition = new NodeId(Opc.Ua.Methods.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_RoleSet_AddRole = new NodeId(Opc.Ua.Methods.Server_ServerCapabilities_RoleSet_AddRole);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_RoleSet_RemoveRole = new NodeId(Opc.Ua.Methods.Server_ServerCapabilities_RoleSet_RemoveRole);

        /// <remarks />
        public static readonly NodeId Server_GetMonitoredItems = new NodeId(Opc.Ua.Methods.Server_GetMonitoredItems);

        /// <remarks />
        public static readonly NodeId Server_ResendData = new NodeId(Opc.Ua.Methods.Server_ResendData);

        /// <remarks />
        public static readonly NodeId Server_SetSubscriptionDurable = new NodeId(Opc.Ua.Methods.Server_SetSubscriptionDurable);

        /// <remarks />
        public static readonly NodeId Server_RequestServerStateChange = new NodeId(Opc.Ua.Methods.Server_RequestServerStateChange);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateFile = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Open = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_Open);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Close = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_Close);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Read = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_Read);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Write = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_Write);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_GetPosition = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_GetPosition);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_SetPosition = new NodeId(Opc.Ua.Methods.FileDirectoryType_FileName_Placeholder_SetPosition);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_CreateDirectory = new NodeId(Opc.Ua.Methods.FileDirectoryType_CreateDirectory);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_CreateFile = new NodeId(Opc.Ua.Methods.FileDirectoryType_CreateFile);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_DeleteFileSystemObject = new NodeId(Opc.Ua.Methods.FileDirectoryType_DeleteFileSystemObject);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_MoveOrCopy = new NodeId(Opc.Ua.Methods.FileDirectoryType_MoveOrCopy);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_CreateDirectory = new NodeId(Opc.Ua.Methods.FileSystem_FileDirectoryName_Placeholder_CreateDirectory);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_CreateFile = new NodeId(Opc.Ua.Methods.FileSystem_FileDirectoryName_Placeholder_CreateFile);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject = new NodeId(Opc.Ua.Methods.FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_MoveOrCopy = new NodeId(Opc.Ua.Methods.FileSystem_FileDirectoryName_Placeholder_MoveOrCopy);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Open = new NodeId(Opc.Ua.Methods.FileSystem_FileName_Placeholder_Open);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Close = new NodeId(Opc.Ua.Methods.FileSystem_FileName_Placeholder_Close);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Read = new NodeId(Opc.Ua.Methods.FileSystem_FileName_Placeholder_Read);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Write = new NodeId(Opc.Ua.Methods.FileSystem_FileName_Placeholder_Write);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_GetPosition = new NodeId(Opc.Ua.Methods.FileSystem_FileName_Placeholder_GetPosition);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_SetPosition = new NodeId(Opc.Ua.Methods.FileSystem_FileName_Placeholder_SetPosition);

        /// <remarks />
        public static readonly NodeId FileSystem_CreateDirectory = new NodeId(Opc.Ua.Methods.FileSystem_CreateDirectory);

        /// <remarks />
        public static readonly NodeId FileSystem_CreateFile = new NodeId(Opc.Ua.Methods.FileSystem_CreateFile);

        /// <remarks />
        public static readonly NodeId FileSystem_DeleteFileSystemObject = new NodeId(Opc.Ua.Methods.FileSystem_DeleteFileSystemObject);

        /// <remarks />
        public static readonly NodeId FileSystem_MoveOrCopy = new NodeId(Opc.Ua.Methods.FileSystem_MoveOrCopy);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForRead = new NodeId(Opc.Ua.Methods.TemporaryFileTransferType_GenerateFileForRead);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForWrite = new NodeId(Opc.Ua.Methods.TemporaryFileTransferType_GenerateFileForWrite);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_CloseAndCommit = new NodeId(Opc.Ua.Methods.TemporaryFileTransferType_CloseAndCommit);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_Reset = new NodeId(Opc.Ua.Methods.TemporaryFileTransferType_TransferState_Placeholder_Reset);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_Reset = new NodeId(Opc.Ua.Methods.FileTransferStateMachineType_Reset);

        /// <remarks />
        public static readonly NodeId RoleSetType_AddRole = new NodeId(Opc.Ua.Methods.RoleSetType_AddRole);

        /// <remarks />
        public static readonly NodeId RoleSetType_RemoveRole = new NodeId(Opc.Ua.Methods.RoleSetType_RemoveRole);

        /// <remarks />
        public static readonly NodeId RoleType_AddIdentity = new NodeId(Opc.Ua.Methods.RoleType_AddIdentity);

        /// <remarks />
        public static readonly NodeId RoleType_RemoveIdentity = new NodeId(Opc.Ua.Methods.RoleType_RemoveIdentity);

        /// <remarks />
        public static readonly NodeId RoleType_AddApplication = new NodeId(Opc.Ua.Methods.RoleType_AddApplication);

        /// <remarks />
        public static readonly NodeId RoleType_RemoveApplication = new NodeId(Opc.Ua.Methods.RoleType_RemoveApplication);

        /// <remarks />
        public static readonly NodeId RoleType_AddEndpoint = new NodeId(Opc.Ua.Methods.RoleType_AddEndpoint);

        /// <remarks />
        public static readonly NodeId RoleType_RemoveEndpoint = new NodeId(Opc.Ua.Methods.RoleType_RemoveEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_AddIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Anonymous_AddIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_RemoveIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Anonymous_RemoveIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_AddApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Anonymous_AddApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_RemoveApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Anonymous_RemoveApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_AddEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Anonymous_AddEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_RemoveEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Anonymous_RemoveEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_AddIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_AuthenticatedUser_AddIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_RemoveIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_AuthenticatedUser_RemoveIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_AddApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_AuthenticatedUser_AddApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_RemoveApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_AuthenticatedUser_RemoveApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_AddEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_AuthenticatedUser_AddEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_RemoveEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_AuthenticatedUser_RemoveEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_AddIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Observer_AddIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_RemoveIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Observer_RemoveIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_AddApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Observer_AddApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_RemoveApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Observer_RemoveApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_AddEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Observer_AddEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_RemoveEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Observer_RemoveEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_AddIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Operator_AddIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_RemoveIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Operator_RemoveIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_AddApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Operator_AddApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_RemoveApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Operator_RemoveApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_AddEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Operator_AddEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_RemoveEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Operator_RemoveEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_AddIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Engineer_AddIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_RemoveIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Engineer_RemoveIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_AddApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Engineer_AddApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_RemoveApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Engineer_RemoveApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_AddEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Engineer_AddEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_RemoveEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Engineer_RemoveEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_AddIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Supervisor_AddIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_RemoveIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_Supervisor_RemoveIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_AddApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Supervisor_AddApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_RemoveApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_Supervisor_RemoveApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_AddEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Supervisor_AddEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_RemoveEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_Supervisor_RemoveEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_AddIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_ConfigureAdmin_AddIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_RemoveIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_ConfigureAdmin_RemoveIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_AddApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_ConfigureAdmin_AddApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_RemoveApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_ConfigureAdmin_RemoveApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_AddEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_ConfigureAdmin_AddEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_RemoveEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_ConfigureAdmin_RemoveEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_AddIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_SecurityAdmin_AddIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_RemoveIdentity = new NodeId(Opc.Ua.Methods.WellKnownRole_SecurityAdmin_RemoveIdentity);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_AddApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_SecurityAdmin_AddApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_RemoveApplication = new NodeId(Opc.Ua.Methods.WellKnownRole_SecurityAdmin_RemoveApplication);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_AddEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_SecurityAdmin_AddEndpoint);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_RemoveEndpoint = new NodeId(Opc.Ua.Methods.WellKnownRole_SecurityAdmin_RemoveEndpoint);

        /// <remarks />
        public static readonly NodeId ConditionType_Disable = new NodeId(Opc.Ua.Methods.ConditionType_Disable);

        /// <remarks />
        public static readonly NodeId ConditionType_Enable = new NodeId(Opc.Ua.Methods.ConditionType_Enable);

        /// <remarks />
        public static readonly NodeId ConditionType_AddComment = new NodeId(Opc.Ua.Methods.ConditionType_AddComment);

        /// <remarks />
        public static readonly NodeId ConditionType_ConditionRefresh = new NodeId(Opc.Ua.Methods.ConditionType_ConditionRefresh);

        /// <remarks />
        public static readonly NodeId ConditionType_ConditionRefresh2 = new NodeId(Opc.Ua.Methods.ConditionType_ConditionRefresh2);

        /// <remarks />
        public static readonly NodeId DialogConditionType_Respond = new NodeId(Opc.Ua.Methods.DialogConditionType_Respond);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_Acknowledge = new NodeId(Opc.Ua.Methods.AcknowledgeableConditionType_Acknowledge);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_Confirm = new NodeId(Opc.Ua.Methods.AcknowledgeableConditionType_Confirm);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.AlarmConditionType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.AlarmConditionType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.AlarmConditionType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_Silence = new NodeId(Opc.Ua.Methods.AlarmConditionType_Silence);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_Suppress = new NodeId(Opc.Ua.Methods.AlarmConditionType_Suppress);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_Unsuppress = new NodeId(Opc.Ua.Methods.AlarmConditionType_Unsuppress);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_RemoveFromService = new NodeId(Opc.Ua.Methods.AlarmConditionType_RemoveFromService);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_PlaceInService = new NodeId(Opc.Ua.Methods.AlarmConditionType_PlaceInService);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_Reset = new NodeId(Opc.Ua.Methods.AlarmConditionType_Reset);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Disable = new NodeId(Opc.Ua.Methods.AlarmGroupType_AlarmConditionInstance_Placeholder_Disable);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Enable = new NodeId(Opc.Ua.Methods.AlarmGroupType_AlarmConditionInstance_Placeholder_Enable);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment = new NodeId(Opc.Ua.Methods.AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge = new NodeId(Opc.Ua.Methods.AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_TimedShelve = new NodeId(Opc.Ua.Methods.ShelvedStateMachineType_TimedShelve);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_Unshelve = new NodeId(Opc.Ua.Methods.ShelvedStateMachineType_Unshelve);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_OneShotShelve = new NodeId(Opc.Ua.Methods.ShelvedStateMachineType_OneShotShelve);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.LimitAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.LimitAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.LimitAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ExclusiveLimitAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ExclusiveLimitAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ExclusiveLimitAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.NonExclusiveLimitAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.NonExclusiveLimitAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.NonExclusiveLevelAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.NonExclusiveLevelAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ExclusiveLevelAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ExclusiveLevelAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ExclusiveLevelAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.NonExclusiveDeviationAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ExclusiveDeviationAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ExclusiveDeviationAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.DiscreteAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.DiscreteAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.DiscreteAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.OffNormalAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.OffNormalAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.OffNormalAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.SystemOffNormalAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.SystemOffNormalAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.SystemOffNormalAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.TripAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.TripAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.TripAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.InstrumentDiagnosticAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.InstrumentDiagnosticAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.SystemDiagnosticAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.SystemDiagnosticAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.SystemDiagnosticAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateExpirationAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateExpirationAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateExpirationAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.DiscrepancyAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.DiscrepancyAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.DiscrepancyAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_Reset = new NodeId(Opc.Ua.Methods.AlarmMetricsType_Reset);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Start = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Start);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Suspend = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Suspend);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Resume = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Resume);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Halt = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Halt);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Reset = new NodeId(Opc.Ua.Methods.ProgramStateMachineType_Reset);

        /// <remarks />
        public static readonly NodeId TrustListType_OpenWithMasks = new NodeId(Opc.Ua.Methods.TrustListType_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId TrustListType_CloseAndUpdate = new NodeId(Opc.Ua.Methods.TrustListType_CloseAndUpdate);

        /// <remarks />
        public static readonly NodeId TrustListType_AddCertificate = new NodeId(Opc.Ua.Methods.TrustListType_AddCertificate);

        /// <remarks />
        public static readonly NodeId TrustListType_RemoveCertificate = new NodeId(Opc.Ua.Methods.TrustListType_RemoveCertificate);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.TrustListOutOfDateAlarmType_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.TrustListOutOfDateAlarmType_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.TrustListOutOfDateAlarmType_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_Open);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_Close);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_Read);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_Write);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupType_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupType_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupType_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupType_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupType_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupType_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupType_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupType_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_GetRejectedList = new NodeId(Opc.Ua.Methods.CertificateGroupType_GetRejectedList);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_UpdateCertificate = new NodeId(Opc.Ua.Methods.ServerConfigurationType_UpdateCertificate);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_ApplyChanges = new NodeId(Opc.Ua.Methods.ServerConfigurationType_ApplyChanges);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CreateSigningRequest = new NodeId(Opc.Ua.Methods.ServerConfigurationType_CreateSigningRequest);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_GetRejectedList = new NodeId(Opc.Ua.Methods.ServerConfigurationType_GetRejectedList);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Disable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Enable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Disable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Disable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Enable = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Enable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_Unshelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_Unshelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_OneShotShelve = new NodeId(Opc.Ua.Methods.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_OneShotShelve);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_UpdateCertificate = new NodeId(Opc.Ua.Methods.ServerConfiguration_UpdateCertificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_ApplyChanges = new NodeId(Opc.Ua.Methods.ServerConfiguration_ApplyChanges);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CreateSigningRequest = new NodeId(Opc.Ua.Methods.ServerConfiguration_CreateSigningRequest);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_GetRejectedList = new NodeId(Opc.Ua.Methods.ServerConfiguration_GetRejectedList);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType_CreateCredential = new NodeId(Opc.Ua.Methods.KeyCredentialConfigurationFolderType_CreateCredential);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_GetEncryptingKey = new NodeId(Opc.Ua.Methods.KeyCredentialConfigurationType_GetEncryptingKey);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_UpdateCredential = new NodeId(Opc.Ua.Methods.KeyCredentialConfigurationType_UpdateCredential);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_DeleteCredential = new NodeId(Opc.Ua.Methods.KeyCredentialConfigurationType_DeleteCredential);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_GetSecurityKeys = new NodeId(Opc.Ua.Methods.PubSubKeyServiceType_GetSecurityKeys);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_GetSecurityGroup = new NodeId(Opc.Ua.Methods.PubSubKeyServiceType_GetSecurityGroup);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_AddSecurityGroup = new NodeId(Opc.Ua.Methods.PubSubKeyServiceType_SecurityGroups_AddSecurityGroup);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup = new NodeId(Opc.Ua.Methods.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_AddSecurityGroup = new NodeId(Opc.Ua.Methods.SecurityGroupFolderType_AddSecurityGroup);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.SecurityGroupFolderType_RemoveSecurityGroup);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_SecurityGroups_AddSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribeType_SecurityGroups_AddSecurityGroup);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_SecurityGroups_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribeType_SecurityGroups_RemoveSecurityGroup);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_SetSecurityKeys = new NodeId(Opc.Ua.Methods.PublishSubscribeType_SetSecurityKeys);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_AddConnection = new NodeId(Opc.Ua.Methods.PublishSubscribeType_AddConnection);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_RemoveConnection = new NodeId(Opc.Ua.Methods.PublishSubscribeType_RemoveConnection);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PublishSubscribeType_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_GetSecurityKeys = new NodeId(Opc.Ua.Methods.PublishSubscribe_GetSecurityKeys);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_GetSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribe_GetSecurityGroup);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_SecurityGroups_AddSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribe_SecurityGroups_AddSecurityGroup);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_SecurityGroups_RemoveSecurityGroup = new NodeId(Opc.Ua.Methods.PublishSubscribe_SecurityGroups_RemoveSecurityGroup);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_AddConnection = new NodeId(Opc.Ua.Methods.PublishSubscribe_AddConnection);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_RemoveConnection = new NodeId(Opc.Ua.Methods.PublishSubscribe_RemoveConnection);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PublishSubscribe_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_ExtensionFields_AddExtensionField = new NodeId(Opc.Ua.Methods.PublishedDataSetType_ExtensionFields_AddExtensionField);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_ExtensionFields_RemoveExtensionField = new NodeId(Opc.Ua.Methods.PublishedDataSetType_ExtensionFields_RemoveExtensionField);

        /// <remarks />
        public static readonly NodeId ExtensionFieldsType_AddExtensionField = new NodeId(Opc.Ua.Methods.ExtensionFieldsType_AddExtensionField);

        /// <remarks />
        public static readonly NodeId ExtensionFieldsType_RemoveExtensionField = new NodeId(Opc.Ua.Methods.ExtensionFieldsType_RemoveExtensionField);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_AddExtensionField = new NodeId(Opc.Ua.Methods.PublishedDataItemsType_ExtensionFields_AddExtensionField);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_RemoveExtensionField = new NodeId(Opc.Ua.Methods.PublishedDataItemsType_ExtensionFields_RemoveExtensionField);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_AddVariables = new NodeId(Opc.Ua.Methods.PublishedDataItemsType_AddVariables);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_RemoveVariables = new NodeId(Opc.Ua.Methods.PublishedDataItemsType_RemoveVariables);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_ExtensionFields_AddExtensionField = new NodeId(Opc.Ua.Methods.PublishedEventsType_ExtensionFields_AddExtensionField);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_ExtensionFields_RemoveExtensionField = new NodeId(Opc.Ua.Methods.PublishedEventsType_ExtensionFields_RemoveExtensionField);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_ModifyFieldSelection = new NodeId(Opc.Ua.Methods.PublishedEventsType_ModifyFieldSelection);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItemsTemplate = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItemsTemplate);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEventsTemplate = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEventsTemplate);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddDataSetFolder = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_AddDataSetFolder);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_RemoveDataSetFolder = new NodeId(Opc.Ua.Methods.DataSetFolderType_DataSetFolderName_Placeholder_RemoveDataSetFolder);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField = new NodeId(Opc.Ua.Methods.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField = new NodeId(Opc.Ua.Methods.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedDataItems = new NodeId(Opc.Ua.Methods.DataSetFolderType_AddPublishedDataItems);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedEvents = new NodeId(Opc.Ua.Methods.DataSetFolderType_AddPublishedEvents);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedDataItemsTemplate = new NodeId(Opc.Ua.Methods.DataSetFolderType_AddPublishedDataItemsTemplate);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedEventsTemplate = new NodeId(Opc.Ua.Methods.DataSetFolderType_AddPublishedEventsTemplate);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_RemovePublishedDataSet = new NodeId(Opc.Ua.Methods.DataSetFolderType_RemovePublishedDataSet);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddDataSetFolder = new NodeId(Opc.Ua.Methods.DataSetFolderType_AddDataSetFolder);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_RemoveDataSetFolder = new NodeId(Opc.Ua.Methods.DataSetFolderType_RemoveDataSetFolder);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.PubSubConnectionType_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_AddWriterGroup = new NodeId(Opc.Ua.Methods.PubSubConnectionType_AddWriterGroup);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_AddReaderGroup = new NodeId(Opc.Ua.Methods.PubSubConnectionType_AddReaderGroup);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_RemoveGroup = new NodeId(Opc.Ua.Methods.PubSubConnectionType_RemoveGroup);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.WriterGroupType_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId WriterGroupType_AddDataSetWriter = new NodeId(Opc.Ua.Methods.WriterGroupType_AddDataSetWriter);

        /// <remarks />
        public static readonly NodeId WriterGroupType_RemoveDataSetWriter = new NodeId(Opc.Ua.Methods.WriterGroupType_RemoveDataSetWriter);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.ReaderGroupType_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_AddDataSetReader = new NodeId(Opc.Ua.Methods.ReaderGroupType_AddDataSetReader);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_RemoveDataSetReader = new NodeId(Opc.Ua.Methods.ReaderGroupType_RemoveDataSetReader);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.DataSetWriterType_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Reset = new NodeId(Opc.Ua.Methods.DataSetReaderType_Diagnostics_Reset);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_CreateTargetVariables = new NodeId(Opc.Ua.Methods.DataSetReaderType_CreateTargetVariables);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_CreateDataSetMirror = new NodeId(Opc.Ua.Methods.DataSetReaderType_CreateDataSetMirror);

        /// <remarks />
        public static readonly NodeId TargetVariablesType_AddTargetVariables = new NodeId(Opc.Ua.Methods.TargetVariablesType_AddTargetVariables);

        /// <remarks />
        public static readonly NodeId TargetVariablesType_RemoveTargetVariables = new NodeId(Opc.Ua.Methods.TargetVariablesType_RemoveTargetVariables);

        /// <remarks />
        public static readonly NodeId PubSubStatusType_Enable = new NodeId(Opc.Ua.Methods.PubSubStatusType_Enable);

        /// <remarks />
        public static readonly NodeId PubSubStatusType_Disable = new NodeId(Opc.Ua.Methods.PubSubStatusType_Disable);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Reset = new NodeId(Opc.Ua.Methods.PubSubDiagnosticsType_Reset);

        /// <remarks />
        public static readonly NodeId AliasNameCategoryType_SubAliasNameCategories_Placeholder_FindAlias = new NodeId(Opc.Ua.Methods.AliasNameCategoryType_SubAliasNameCategories_Placeholder_FindAlias);

        /// <remarks />
        public static readonly NodeId AliasNameCategoryType_FindAlias = new NodeId(Opc.Ua.Methods.AliasNameCategoryType_FindAlias);

        /// <remarks />
        public static readonly NodeId Aliases_SubAliasNameCategories_Placeholder_FindAlias = new NodeId(Opc.Ua.Methods.Aliases_SubAliasNameCategories_Placeholder_FindAlias);

        /// <remarks />
        public static readonly NodeId Aliases_FindAlias = new NodeId(Opc.Ua.Methods.Aliases_FindAlias);

        /// <remarks />
        public static readonly NodeId TagVariables_SubAliasNameCategories_Placeholder_FindAlias = new NodeId(Opc.Ua.Methods.TagVariables_SubAliasNameCategories_Placeholder_FindAlias);

        /// <remarks />
        public static readonly NodeId TagVariables_FindAlias = new NodeId(Opc.Ua.Methods.TagVariables_FindAlias);

        /// <remarks />
        public static readonly NodeId Topics_SubAliasNameCategories_Placeholder_FindAlias = new NodeId(Opc.Ua.Methods.Topics_SubAliasNameCategories_Placeholder_FindAlias);

        /// <remarks />
        public static readonly NodeId Topics_FindAlias = new NodeId(Opc.Ua.Methods.Topics_FindAlias);
    }
    #endregion

    #region Object Node Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectIds
    {
        /// <remarks />
        public static readonly NodeId DefaultBinary = new NodeId(Opc.Ua.Objects.DefaultBinary);

        /// <remarks />
        public static readonly NodeId DefaultXml = new NodeId(Opc.Ua.Objects.DefaultXml);

        /// <remarks />
        public static readonly NodeId ModellingRule_Mandatory = new NodeId(Opc.Ua.Objects.ModellingRule_Mandatory);

        /// <remarks />
        public static readonly NodeId ModellingRule_Optional = new NodeId(Opc.Ua.Objects.ModellingRule_Optional);

        /// <remarks />
        public static readonly NodeId ModellingRule_ExposesItsArray = new NodeId(Opc.Ua.Objects.ModellingRule_ExposesItsArray);

        /// <remarks />
        public static readonly NodeId ModellingRule_OptionalPlaceholder = new NodeId(Opc.Ua.Objects.ModellingRule_OptionalPlaceholder);

        /// <remarks />
        public static readonly NodeId ModellingRule_MandatoryPlaceholder = new NodeId(Opc.Ua.Objects.ModellingRule_MandatoryPlaceholder);

        /// <remarks />
        public static readonly NodeId RootFolder = new NodeId(Opc.Ua.Objects.RootFolder);

        /// <remarks />
        public static readonly NodeId ObjectsFolder = new NodeId(Opc.Ua.Objects.ObjectsFolder);

        /// <remarks />
        public static readonly NodeId TypesFolder = new NodeId(Opc.Ua.Objects.TypesFolder);

        /// <remarks />
        public static readonly NodeId ViewsFolder = new NodeId(Opc.Ua.Objects.ViewsFolder);

        /// <remarks />
        public static readonly NodeId ObjectTypesFolder = new NodeId(Opc.Ua.Objects.ObjectTypesFolder);

        /// <remarks />
        public static readonly NodeId VariableTypesFolder = new NodeId(Opc.Ua.Objects.VariableTypesFolder);

        /// <remarks />
        public static readonly NodeId DataTypesFolder = new NodeId(Opc.Ua.Objects.DataTypesFolder);

        /// <remarks />
        public static readonly NodeId ReferenceTypesFolder = new NodeId(Opc.Ua.Objects.ReferenceTypesFolder);

        /// <remarks />
        public static readonly NodeId XmlSchema_TypeSystem = new NodeId(Opc.Ua.Objects.XmlSchema_TypeSystem);

        /// <remarks />
        public static readonly NodeId OPCBinarySchema_TypeSystem = new NodeId(Opc.Ua.Objects.OPCBinarySchema_TypeSystem);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata = new NodeId(Opc.Ua.Objects.OPCUANamespaceMetadata);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities = new NodeId(Opc.Ua.Objects.ServerType_ServerCapabilities);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_ModellingRules = new NodeId(Opc.Ua.Objects.ServerType_ServerCapabilities_ModellingRules);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_AggregateFunctions = new NodeId(Opc.Ua.Objects.ServerType_ServerCapabilities_AggregateFunctions);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics = new NodeId(Opc.Ua.Objects.ServerType_ServerDiagnostics);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_SessionsDiagnosticsSummary = new NodeId(Opc.Ua.Objects.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary);

        /// <remarks />
        public static readonly NodeId ServerType_VendorServerInfo = new NodeId(Opc.Ua.Objects.ServerType_VendorServerInfo);

        /// <remarks />
        public static readonly NodeId ServerType_ServerRedundancy = new NodeId(Opc.Ua.Objects.ServerType_ServerRedundancy);

        /// <remarks />
        public static readonly NodeId ServerType_Namespaces = new NodeId(Opc.Ua.Objects.ServerType_Namespaces);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_OperationLimits = new NodeId(Opc.Ua.Objects.ServerCapabilitiesType_OperationLimits);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_ModellingRules = new NodeId(Opc.Ua.Objects.ServerCapabilitiesType_ModellingRules);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_AggregateFunctions = new NodeId(Opc.Ua.Objects.ServerCapabilitiesType_AggregateFunctions);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_RoleSet = new NodeId(Opc.Ua.Objects.ServerCapabilitiesType_RoleSet);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_SessionsDiagnosticsSummary = new NodeId(Opc.Ua.Objects.ServerDiagnosticsType_SessionsDiagnosticsSummary);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder = new NodeId(Opc.Ua.Objects.SessionsDiagnosticsSummaryType_ClientName_Placeholder);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile = new NodeId(Opc.Ua.Objects.NamespaceMetadataType_NamespaceFile);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder = new NodeId(Opc.Ua.Objects.NamespacesType_NamespaceIdentifier_Placeholder);

        /// <remarks />
        public static readonly NodeId EventTypesFolder = new NodeId(Opc.Ua.Objects.EventTypesFolder);

        /// <remarks />
        public static readonly NodeId Server = new NodeId(Opc.Ua.Objects.Server);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities = new NodeId(Opc.Ua.Objects.Server_ServerCapabilities);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits = new NodeId(Opc.Ua.Objects.Server_ServerCapabilities_OperationLimits);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_ModellingRules = new NodeId(Opc.Ua.Objects.Server_ServerCapabilities_ModellingRules);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_AggregateFunctions = new NodeId(Opc.Ua.Objects.Server_ServerCapabilities_AggregateFunctions);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_RoleSet = new NodeId(Opc.Ua.Objects.Server_ServerCapabilities_RoleSet);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics = new NodeId(Opc.Ua.Objects.Server_ServerDiagnostics);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_SessionsDiagnosticsSummary = new NodeId(Opc.Ua.Objects.Server_ServerDiagnostics_SessionsDiagnosticsSummary);

        /// <remarks />
        public static readonly NodeId Server_VendorServerInfo = new NodeId(Opc.Ua.Objects.Server_VendorServerInfo);

        /// <remarks />
        public static readonly NodeId Server_ServerRedundancy = new NodeId(Opc.Ua.Objects.Server_ServerRedundancy);

        /// <remarks />
        public static readonly NodeId Server_Namespaces = new NodeId(Opc.Ua.Objects.Server_Namespaces);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities = new NodeId(Opc.Ua.Objects.HistoryServerCapabilities);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_AggregateFunctions = new NodeId(Opc.Ua.Objects.HistoryServerCapabilities_AggregateFunctions);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder = new NodeId(Opc.Ua.Objects.FileDirectoryType_FileDirectoryName_Placeholder);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder = new NodeId(Opc.Ua.Objects.FileDirectoryType_FileName_Placeholder);

        /// <remarks />
        public static readonly NodeId FileSystem = new NodeId(Opc.Ua.Objects.FileSystem);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder = new NodeId(Opc.Ua.Objects.TemporaryFileTransferType_TransferState_Placeholder);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_Idle = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_Idle);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadPrepare = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadPrepare);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadTransfer = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadTransfer);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ApplyWrite = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ApplyWrite);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_Error = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_Error);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_IdleToReadPrepare = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_IdleToReadPrepare);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadPrepareToReadTransfer = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadPrepareToReadTransfer);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadTransferToIdle = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadTransferToIdle);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_IdleToApplyWrite = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_IdleToApplyWrite);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ApplyWriteToIdle = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ApplyWriteToIdle);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadPrepareToError = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadPrepareToError);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadTransferToError = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ReadTransferToError);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ApplyWriteToError = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ApplyWriteToError);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ErrorToIdle = new NodeId(Opc.Ua.Objects.FileTransferStateMachineType_ErrorToIdle);

        /// <remarks />
        public static readonly NodeId RoleSetType_RoleName_Placeholder = new NodeId(Opc.Ua.Objects.RoleSetType_RoleName_Placeholder);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous = new NodeId(Opc.Ua.Objects.WellKnownRole_Anonymous);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser = new NodeId(Opc.Ua.Objects.WellKnownRole_AuthenticatedUser);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer = new NodeId(Opc.Ua.Objects.WellKnownRole_Observer);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator = new NodeId(Opc.Ua.Objects.WellKnownRole_Operator);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer = new NodeId(Opc.Ua.Objects.WellKnownRole_Engineer);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor = new NodeId(Opc.Ua.Objects.WellKnownRole_Supervisor);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin = new NodeId(Opc.Ua.Objects.WellKnownRole_ConfigureAdmin);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin = new NodeId(Opc.Ua.Objects.WellKnownRole_SecurityAdmin);

        /// <remarks />
        public static readonly NodeId DictionaryEntryType_DictionaryEntryName_Placeholder = new NodeId(Opc.Ua.Objects.DictionaryEntryType_DictionaryEntryName_Placeholder);

        /// <remarks />
        public static readonly NodeId DictionaryFolderType_DictionaryFolderName_Placeholder = new NodeId(Opc.Ua.Objects.DictionaryFolderType_DictionaryFolderName_Placeholder);

        /// <remarks />
        public static readonly NodeId DictionaryFolderType_DictionaryEntryName_Placeholder = new NodeId(Opc.Ua.Objects.DictionaryFolderType_DictionaryEntryName_Placeholder);

        /// <remarks />
        public static readonly NodeId Dictionaries = new NodeId(Opc.Ua.Objects.Dictionaries);

        /// <remarks />
        public static readonly NodeId InterfaceTypes = new NodeId(Opc.Ua.Objects.InterfaceTypes);

        /// <remarks />
        public static readonly NodeId OrderedListType_OrderedObject_Placeholder = new NodeId(Opc.Ua.Objects.OrderedListType_OrderedObject_Placeholder);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState = new NodeId(Opc.Ua.Objects.AlarmConditionType_ShelvingState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_FirstInGroup = new NodeId(Opc.Ua.Objects.AlarmConditionType_FirstInGroup);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_AlarmGroup_Placeholder = new NodeId(Opc.Ua.Objects.AlarmConditionType_AlarmGroup_Placeholder);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder = new NodeId(Opc.Ua.Objects.AlarmGroupType_AlarmConditionInstance_Placeholder);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_Unshelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_Unshelved);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_TimedShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_TimedShelved);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_OneShotShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_OneShotShelved);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToTimedShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_UnshelvedToTimedShelved);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToOneShotShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_UnshelvedToOneShotShelved);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToUnshelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_TimedShelvedToUnshelved);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToOneShotShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_TimedShelvedToOneShotShelved);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToUnshelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_OneShotShelvedToUnshelved);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToTimedShelved = new NodeId(Opc.Ua.Objects.ShelvedStateMachineType_OneShotShelvedToTimedShelved);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_HighHigh = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_HighHigh);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_High = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_High);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_Low = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_Low);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_LowLow = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_LowLow);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_LowLowToLow = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_LowLowToLow);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_LowToLowLow = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_LowToLowLow);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_HighHighToHigh = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_HighHighToHigh);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_HighToHighHigh = new NodeId(Opc.Ua.Objects.ExclusiveLimitStateMachineType_HighToHighHigh);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState = new NodeId(Opc.Ua.Objects.ExclusiveLimitAlarmType_LimitState);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_FinalResultData = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_FinalResultData);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Halted = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_Halted);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Ready = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_Ready);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Running = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_Running);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Suspended = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_Suspended);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_HaltedToReady = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_HaltedToReady);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ReadyToRunning = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_ReadyToRunning);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_RunningToHalted = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_RunningToHalted);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_RunningToReady = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_RunningToReady);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_RunningToSuspended = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_RunningToSuspended);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_SuspendedToRunning = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_SuspendedToRunning);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_SuspendedToHalted = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_SuspendedToHalted);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_SuspendedToReady = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_SuspendedToReady);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ReadyToHalted = new NodeId(Opc.Ua.Objects.ProgramStateMachineType_ReadyToHalted);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration = new NodeId(Opc.Ua.Objects.HistoricalDataConfigurationType_AggregateConfiguration);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_AggregateFunctions = new NodeId(Opc.Ua.Objects.HistoricalDataConfigurationType_AggregateFunctions);

        /// <remarks />
        public static readonly NodeId HAConfiguration = new NodeId(Opc.Ua.Objects.HAConfiguration);

        /// <remarks />
        public static readonly NodeId HAConfiguration_AggregateConfiguration = new NodeId(Opc.Ua.Objects.HAConfiguration_AggregateConfiguration);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_AggregateFunctions = new NodeId(Opc.Ua.Objects.HistoryServerCapabilitiesType_AggregateFunctions);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupType_TrustList);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired = new NodeId(Opc.Ua.Objects.CertificateGroupType_CertificateExpired);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate = new NodeId(Opc.Ua.Objects.CertificateGroupType_TrustListOutOfDate);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultApplicationGroup);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultApplicationGroup_TrustList);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultHttpsGroup);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultHttpsGroup_TrustList);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultUserTokenGroup);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_AdditionalGroup_Placeholder);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList = new NodeId(Opc.Ua.Objects.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList);

        /// <remarks />
        public static readonly NodeId ServerConfiguration = new NodeId(Opc.Ua.Objects.ServerConfiguration);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultApplicationGroup);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultHttpsGroup);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList = new NodeId(Opc.Ua.Objects.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType_ServiceName_Placeholder = new NodeId(Opc.Ua.Objects.KeyCredentialConfigurationFolderType_ServiceName_Placeholder);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfiguration = new NodeId(Opc.Ua.Objects.KeyCredentialConfiguration);

        /// <remarks />
        public static readonly NodeId AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder = new NodeId(Opc.Ua.Objects.AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder);

        /// <remarks />
        public static readonly NodeId AuthorizationServices = new NodeId(Opc.Ua.Objects.AuthorizationServices);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Interpolative = new NodeId(Opc.Ua.Objects.AggregateFunction_Interpolative);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Average = new NodeId(Opc.Ua.Objects.AggregateFunction_Average);

        /// <remarks />
        public static readonly NodeId AggregateFunction_TimeAverage = new NodeId(Opc.Ua.Objects.AggregateFunction_TimeAverage);

        /// <remarks />
        public static readonly NodeId AggregateFunction_TimeAverage2 = new NodeId(Opc.Ua.Objects.AggregateFunction_TimeAverage2);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Total = new NodeId(Opc.Ua.Objects.AggregateFunction_Total);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Total2 = new NodeId(Opc.Ua.Objects.AggregateFunction_Total2);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Minimum = new NodeId(Opc.Ua.Objects.AggregateFunction_Minimum);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Maximum = new NodeId(Opc.Ua.Objects.AggregateFunction_Maximum);

        /// <remarks />
        public static readonly NodeId AggregateFunction_MinimumActualTime = new NodeId(Opc.Ua.Objects.AggregateFunction_MinimumActualTime);

        /// <remarks />
        public static readonly NodeId AggregateFunction_MaximumActualTime = new NodeId(Opc.Ua.Objects.AggregateFunction_MaximumActualTime);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Range = new NodeId(Opc.Ua.Objects.AggregateFunction_Range);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Minimum2 = new NodeId(Opc.Ua.Objects.AggregateFunction_Minimum2);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Maximum2 = new NodeId(Opc.Ua.Objects.AggregateFunction_Maximum2);

        /// <remarks />
        public static readonly NodeId AggregateFunction_MinimumActualTime2 = new NodeId(Opc.Ua.Objects.AggregateFunction_MinimumActualTime2);

        /// <remarks />
        public static readonly NodeId AggregateFunction_MaximumActualTime2 = new NodeId(Opc.Ua.Objects.AggregateFunction_MaximumActualTime2);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Range2 = new NodeId(Opc.Ua.Objects.AggregateFunction_Range2);

        /// <remarks />
        public static readonly NodeId AggregateFunction_AnnotationCount = new NodeId(Opc.Ua.Objects.AggregateFunction_AnnotationCount);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Count = new NodeId(Opc.Ua.Objects.AggregateFunction_Count);

        /// <remarks />
        public static readonly NodeId AggregateFunction_DurationInStateZero = new NodeId(Opc.Ua.Objects.AggregateFunction_DurationInStateZero);

        /// <remarks />
        public static readonly NodeId AggregateFunction_DurationInStateNonZero = new NodeId(Opc.Ua.Objects.AggregateFunction_DurationInStateNonZero);

        /// <remarks />
        public static readonly NodeId AggregateFunction_NumberOfTransitions = new NodeId(Opc.Ua.Objects.AggregateFunction_NumberOfTransitions);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Start = new NodeId(Opc.Ua.Objects.AggregateFunction_Start);

        /// <remarks />
        public static readonly NodeId AggregateFunction_End = new NodeId(Opc.Ua.Objects.AggregateFunction_End);

        /// <remarks />
        public static readonly NodeId AggregateFunction_Delta = new NodeId(Opc.Ua.Objects.AggregateFunction_Delta);

        /// <remarks />
        public static readonly NodeId AggregateFunction_StartBound = new NodeId(Opc.Ua.Objects.AggregateFunction_StartBound);

        /// <remarks />
        public static readonly NodeId AggregateFunction_EndBound = new NodeId(Opc.Ua.Objects.AggregateFunction_EndBound);

        /// <remarks />
        public static readonly NodeId AggregateFunction_DeltaBounds = new NodeId(Opc.Ua.Objects.AggregateFunction_DeltaBounds);

        /// <remarks />
        public static readonly NodeId AggregateFunction_DurationGood = new NodeId(Opc.Ua.Objects.AggregateFunction_DurationGood);

        /// <remarks />
        public static readonly NodeId AggregateFunction_DurationBad = new NodeId(Opc.Ua.Objects.AggregateFunction_DurationBad);

        /// <remarks />
        public static readonly NodeId AggregateFunction_PercentGood = new NodeId(Opc.Ua.Objects.AggregateFunction_PercentGood);

        /// <remarks />
        public static readonly NodeId AggregateFunction_PercentBad = new NodeId(Opc.Ua.Objects.AggregateFunction_PercentBad);

        /// <remarks />
        public static readonly NodeId AggregateFunction_WorstQuality = new NodeId(Opc.Ua.Objects.AggregateFunction_WorstQuality);

        /// <remarks />
        public static readonly NodeId AggregateFunction_WorstQuality2 = new NodeId(Opc.Ua.Objects.AggregateFunction_WorstQuality2);

        /// <remarks />
        public static readonly NodeId AggregateFunction_StandardDeviationSample = new NodeId(Opc.Ua.Objects.AggregateFunction_StandardDeviationSample);

        /// <remarks />
        public static readonly NodeId AggregateFunction_StandardDeviationPopulation = new NodeId(Opc.Ua.Objects.AggregateFunction_StandardDeviationPopulation);

        /// <remarks />
        public static readonly NodeId AggregateFunction_VarianceSample = new NodeId(Opc.Ua.Objects.AggregateFunction_VarianceSample);

        /// <remarks />
        public static readonly NodeId AggregateFunction_VariancePopulation = new NodeId(Opc.Ua.Objects.AggregateFunction_VariancePopulation);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups = new NodeId(Opc.Ua.Objects.PubSubKeyServiceType_SecurityGroups);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder = new NodeId(Opc.Ua.Objects.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupName_Placeholder = new NodeId(Opc.Ua.Objects.SecurityGroupFolderType_SecurityGroupName_Placeholder);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder = new NodeId(Opc.Ua.Objects.PublishSubscribeType_ConnectionName_Placeholder);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Address = new NodeId(Opc.Ua.Objects.PublishSubscribeType_ConnectionName_Placeholder_Address);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishSubscribeType_ConnectionName_Placeholder_Status);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets = new NodeId(Opc.Ua.Objects.PublishSubscribeType_PublishedDataSets);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Status = new NodeId(Opc.Ua.Objects.PublishSubscribeType_Status);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics = new NodeId(Opc.Ua.Objects.PublishSubscribeType_Diagnostics);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PublishSubscribeType_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PublishSubscribeType_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId PublishSubscribe = new NodeId(Opc.Ua.Objects.PublishSubscribe);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_SecurityGroups = new NodeId(Opc.Ua.Objects.PublishSubscribe_SecurityGroups);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Address = new NodeId(Opc.Ua.Objects.PublishSubscribe_ConnectionName_Placeholder_Address);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishSubscribe_ConnectionName_Placeholder_Status);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets = new NodeId(Opc.Ua.Objects.PublishSubscribe_PublishedDataSets);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Status = new NodeId(Opc.Ua.Objects.PublishSubscribe_Status);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics = new NodeId(Opc.Ua.Objects.PublishSubscribe_Diagnostics);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PublishSubscribe_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PublishSubscribe_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder = new NodeId(Opc.Ua.Objects.PublishedDataSetType_DataSetWriterName_Placeholder);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishedDataSetType_DataSetWriterName_Placeholder_Status);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_ExtensionFields = new NodeId(Opc.Ua.Objects.PublishedDataSetType_ExtensionFields);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishedDataItemsType_DataSetWriterName_Placeholder_Status);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PublishedEventsType_DataSetWriterName_Placeholder_Status);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder = new NodeId(Opc.Ua.Objects.DataSetFolderType_DataSetFolderName_Placeholder);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder = new NodeId(Opc.Ua.Objects.DataSetFolderType_PublishedDataSetName_Placeholder);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Address = new NodeId(Opc.Ua.Objects.PubSubConnectionType_Address);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_TransportSettings = new NodeId(Opc.Ua.Objects.PubSubConnectionType_TransportSettings);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder = new NodeId(Opc.Ua.Objects.PubSubConnectionType_WriterGroupName_Placeholder);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PubSubConnectionType_WriterGroupName_Placeholder_Status);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder = new NodeId(Opc.Ua.Objects.PubSubConnectionType_ReaderGroupName_Placeholder);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Status = new NodeId(Opc.Ua.Objects.PubSubConnectionType_ReaderGroupName_Placeholder_Status);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Status = new NodeId(Opc.Ua.Objects.PubSubConnectionType_Status);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics = new NodeId(Opc.Ua.Objects.PubSubConnectionType_Diagnostics);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.PubSubConnectionType_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.PubSubConnectionType_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId PubSubGroupType_Status = new NodeId(Opc.Ua.Objects.PubSubGroupType_Status);

        /// <remarks />
        public static readonly NodeId WriterGroupType_TransportSettings = new NodeId(Opc.Ua.Objects.WriterGroupType_TransportSettings);

        /// <remarks />
        public static readonly NodeId WriterGroupType_MessageSettings = new NodeId(Opc.Ua.Objects.WriterGroupType_MessageSettings);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder = new NodeId(Opc.Ua.Objects.WriterGroupType_DataSetWriterName_Placeholder);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Status = new NodeId(Opc.Ua.Objects.WriterGroupType_DataSetWriterName_Placeholder_Status);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics = new NodeId(Opc.Ua.Objects.WriterGroupType_Diagnostics);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.WriterGroupType_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.WriterGroupType_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder = new NodeId(Opc.Ua.Objects.ReaderGroupType_DataSetReaderName_Placeholder);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Status = new NodeId(Opc.Ua.Objects.ReaderGroupType_DataSetReaderName_Placeholder_Status);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_SubscribedDataSet = new NodeId(Opc.Ua.Objects.ReaderGroupType_DataSetReaderName_Placeholder_SubscribedDataSet);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics = new NodeId(Opc.Ua.Objects.ReaderGroupType_Diagnostics);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.ReaderGroupType_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.ReaderGroupType_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_TransportSettings = new NodeId(Opc.Ua.Objects.ReaderGroupType_TransportSettings);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_MessageSettings = new NodeId(Opc.Ua.Objects.ReaderGroupType_MessageSettings);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_TransportSettings = new NodeId(Opc.Ua.Objects.DataSetWriterType_TransportSettings);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_MessageSettings = new NodeId(Opc.Ua.Objects.DataSetWriterType_MessageSettings);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Status = new NodeId(Opc.Ua.Objects.DataSetWriterType_Status);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics = new NodeId(Opc.Ua.Objects.DataSetWriterType_Diagnostics);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.DataSetWriterType_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.DataSetWriterType_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_TransportSettings = new NodeId(Opc.Ua.Objects.DataSetReaderType_TransportSettings);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_MessageSettings = new NodeId(Opc.Ua.Objects.DataSetReaderType_MessageSettings);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Status = new NodeId(Opc.Ua.Objects.DataSetReaderType_Status);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics = new NodeId(Opc.Ua.Objects.DataSetReaderType_Diagnostics);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters = new NodeId(Opc.Ua.Objects.DataSetReaderType_Diagnostics_Counters);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_LiveValues = new NodeId(Opc.Ua.Objects.DataSetReaderType_Diagnostics_LiveValues);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_SubscribedDataSet = new NodeId(Opc.Ua.Objects.DataSetReaderType_SubscribedDataSet);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsType_Counters);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_LiveValues = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsType_LiveValues);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_LiveValues = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsRootType_LiveValues);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_LiveValues = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsConnectionType_LiveValues);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsWriterGroupType_Counters);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_LiveValues = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsWriterGroupType_LiveValues);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsReaderGroupType_Counters);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_LiveValues = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsReaderGroupType_LiveValues);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsDataSetWriterType_Counters);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_LiveValues = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsDataSetWriterType_LiveValues);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsDataSetReaderType_Counters);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues = new NodeId(Opc.Ua.Objects.PubSubDiagnosticsDataSetReaderType_LiveValues);

        /// <remarks />
        public static readonly NodeId DatagramConnectionTransportType_DiscoveryAddress = new NodeId(Opc.Ua.Objects.DatagramConnectionTransportType_DiscoveryAddress);

        /// <remarks />
        public static readonly NodeId AliasNameCategoryType_Alias_Placeholder = new NodeId(Opc.Ua.Objects.AliasNameCategoryType_Alias_Placeholder);

        /// <remarks />
        public static readonly NodeId AliasNameCategoryType_SubAliasNameCategories_Placeholder = new NodeId(Opc.Ua.Objects.AliasNameCategoryType_SubAliasNameCategories_Placeholder);

        /// <remarks />
        public static readonly NodeId Aliases = new NodeId(Opc.Ua.Objects.Aliases);

        /// <remarks />
        public static readonly NodeId TagVariables = new NodeId(Opc.Ua.Objects.TagVariables);

        /// <remarks />
        public static readonly NodeId Topics = new NodeId(Opc.Ua.Objects.Topics);

        /// <remarks />
        public static readonly NodeId Resources = new NodeId(Opc.Ua.Objects.Resources);

        /// <remarks />
        public static readonly NodeId Communication = new NodeId(Opc.Ua.Objects.Communication);

        /// <remarks />
        public static readonly NodeId MappingTables = new NodeId(Opc.Ua.Objects.MappingTables);

        /// <remarks />
        public static readonly NodeId NetworkInterfaces = new NodeId(Opc.Ua.Objects.NetworkInterfaces);

        /// <remarks />
        public static readonly NodeId Streams = new NodeId(Opc.Ua.Objects.Streams);

        /// <remarks />
        public static readonly NodeId TalkerStreams = new NodeId(Opc.Ua.Objects.TalkerStreams);

        /// <remarks />
        public static readonly NodeId ListenerStreams = new NodeId(Opc.Ua.Objects.ListenerStreams);

        /// <remarks />
        public static readonly NodeId Union_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Union_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId KeyValuePair_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.KeyValuePair_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AdditionalParametersType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AdditionalParametersType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EphemeralKeyType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EphemeralKeyType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EndpointType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EndpointType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RationalNumber_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RationalNumber_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId Vector_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Vector_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ThreeDVector_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ThreeDVector_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CartesianCoordinates_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CartesianCoordinates_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ThreeDCartesianCoordinates_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ThreeDCartesianCoordinates_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId Orientation_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Orientation_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ThreeDOrientation_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ThreeDOrientation_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId Frame_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Frame_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ThreeDFrame_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ThreeDFrame_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId IdentityMappingRuleType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.IdentityMappingRuleType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CurrencyUnitType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CurrencyUnitType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId TrustListDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TrustListDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DecimalDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DecimalDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataTypeSchemaHeader_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataTypeSchemaHeader_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataTypeDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataTypeDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId StructureDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StructureDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EnumDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EnumDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SimpleTypeDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SimpleTypeDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UABinaryFileDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UABinaryFileDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataSetMetaDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataSetMetaDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId FieldMetaData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FieldMetaData_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ConfigurationVersionDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ConfigurationVersionDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PublishedDataSetDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishedDataSetDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PublishedDataSetSourceDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishedDataSetSourceDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PublishedVariableDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishedVariableDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishedDataItemsDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PublishedEventsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishedEventsDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataSetWriterDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataSetWriterDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataSetWriterTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataSetWriterTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataSetWriterMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataSetWriterMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PubSubGroupDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PubSubGroupDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId WriterGroupDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.WriterGroupDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId WriterGroupTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.WriterGroupTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId WriterGroupMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.WriterGroupMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PubSubConnectionDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PubSubConnectionDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ConnectionTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ConnectionTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId NetworkAddressDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NetworkAddressDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId NetworkAddressUrlDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NetworkAddressUrlDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReaderGroupDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReaderGroupDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReaderGroupTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReaderGroupTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReaderGroupMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReaderGroupMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataSetReaderDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataSetReaderDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataSetReaderTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataSetReaderTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataSetReaderMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataSetReaderMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SubscribedDataSetDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId TargetVariablesDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TargetVariablesDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId FieldTargetDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FieldTargetDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetMirrorDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SubscribedDataSetMirrorDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PubSubConfigurationDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PubSubConfigurationDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UadpWriterGroupMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UadpDataSetWriterMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UadpDataSetWriterMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UadpDataSetReaderMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId JsonWriterGroupMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.JsonWriterGroupMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId JsonDataSetWriterMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.JsonDataSetWriterMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId JsonDataSetReaderMessageDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.JsonDataSetReaderMessageDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DatagramConnectionTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DatagramConnectionTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DatagramWriterGroupTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DatagramWriterGroupTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrokerConnectionTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrokerConnectionTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrokerWriterGroupTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrokerWriterGroupTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrokerDataSetWriterTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrokerDataSetReaderTransportDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AliasNameDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AliasNameDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UnsignedRationalNumber_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UnsignedRationalNumber_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RolePermissionType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RolePermissionType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataTypeDefinition_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataTypeDefinition_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId StructureField_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StructureField_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId StructureDefinition_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StructureDefinition_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EnumDefinition_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EnumDefinition_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId Node_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Node_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId InstanceNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.InstanceNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId TypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TypeNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ObjectNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ObjectNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ObjectTypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ObjectTypeNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId VariableNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.VariableNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId VariableTypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.VariableTypeNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReferenceTypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReferenceTypeNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MethodNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MethodNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ViewNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ViewNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataTypeNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataTypeNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReferenceNode_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReferenceNode_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId Argument_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Argument_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EnumValueType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EnumValueType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EnumField_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EnumField_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId OptionSet_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.OptionSet_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId TimeZoneDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TimeZoneDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ApplicationDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ApplicationDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RequestHeader_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RequestHeader_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ResponseHeader_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ResponseHeader_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ServiceFault_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServiceFault_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SessionlessInvokeRequestType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SessionlessInvokeRequestType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SessionlessInvokeResponseType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SessionlessInvokeResponseType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId FindServersRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FindServersRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId FindServersResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FindServersResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ServerOnNetwork_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServerOnNetwork_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId FindServersOnNetworkRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FindServersOnNetworkRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId FindServersOnNetworkResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FindServersOnNetworkResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UserTokenPolicy_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UserTokenPolicy_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EndpointDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EndpointDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId GetEndpointsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.GetEndpointsRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId GetEndpointsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.GetEndpointsResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RegisteredServer_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisteredServer_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RegisterServerRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterServerRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RegisterServerResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterServerResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DiscoveryConfiguration_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DiscoveryConfiguration_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MdnsDiscoveryConfiguration_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MdnsDiscoveryConfiguration_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RegisterServer2Request_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterServer2Request_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RegisterServer2Response_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterServer2Response_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ChannelSecurityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ChannelSecurityToken_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId OpenSecureChannelRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.OpenSecureChannelRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId OpenSecureChannelResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.OpenSecureChannelResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CloseSecureChannelRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CloseSecureChannelRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CloseSecureChannelResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CloseSecureChannelResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SignedSoftwareCertificate_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SignedSoftwareCertificate_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SignatureData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SignatureData_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CreateSessionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateSessionRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CreateSessionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateSessionResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UserIdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UserIdentityToken_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AnonymousIdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AnonymousIdentityToken_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UserNameIdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UserNameIdentityToken_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId X509IdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.X509IdentityToken_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId IssuedIdentityToken_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.IssuedIdentityToken_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ActivateSessionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ActivateSessionRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ActivateSessionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ActivateSessionResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CloseSessionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CloseSessionRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CloseSessionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CloseSessionResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CancelRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CancelRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CancelResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CancelResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId NodeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NodeAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ObjectAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ObjectAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId VariableAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.VariableAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MethodAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MethodAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ObjectTypeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ObjectTypeAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId VariableTypeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.VariableTypeAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReferenceTypeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReferenceTypeAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataTypeAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataTypeAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ViewAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ViewAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId GenericAttributeValue_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.GenericAttributeValue_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId GenericAttributes_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.GenericAttributes_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AddNodesItem_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddNodesItem_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AddNodesResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddNodesResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AddNodesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddNodesRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AddNodesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddNodesResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AddReferencesItem_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddReferencesItem_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AddReferencesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddReferencesRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AddReferencesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AddReferencesResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteNodesItem_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteNodesItem_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteNodesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteNodesRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteNodesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteNodesResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteReferencesItem_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteReferencesItem_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteReferencesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteReferencesRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteReferencesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteReferencesResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ViewDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ViewDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrowseDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReferenceDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReferenceDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrowseResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrowseRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrowseResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrowseNextRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseNextRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrowseNextResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowseNextResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RelativePathElement_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RelativePathElement_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RelativePath_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RelativePath_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrowsePath_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowsePath_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrowsePathTarget_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowsePathTarget_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BrowsePathResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BrowsePathResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RegisterNodesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterNodesRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RegisterNodesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RegisterNodesResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UnregisterNodesRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UnregisterNodesRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UnregisterNodesResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UnregisterNodesResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EndpointConfiguration_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EndpointConfiguration_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId QueryDataDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryDataDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId NodeTypeDescription_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NodeTypeDescription_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId QueryDataSet_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryDataSet_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId NodeReference_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NodeReference_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ContentFilterElement_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ContentFilterElement_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ContentFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ContentFilter_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId FilterOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.FilterOperand_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ElementOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ElementOperand_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId LiteralOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.LiteralOperand_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AttributeOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AttributeOperand_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SimpleAttributeOperand_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SimpleAttributeOperand_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ContentFilterElementResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ContentFilterElementResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ContentFilterResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ContentFilterResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ParsingResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ParsingResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId QueryFirstRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryFirstRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId QueryFirstResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryFirstResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId QueryNextRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryNextRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId QueryNextResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.QueryNextResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReadValueId_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadValueId_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReadRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReadResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryReadValueId_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadValueId_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryReadResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryReadDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReadEventDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadEventDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReadRawModifiedDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadRawModifiedDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReadProcessedDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadProcessedDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReadAtTimeDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadAtTimeDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ReadAnnotationDataDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ReadAnnotationDataDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryData_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ModificationInfo_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModificationInfo_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryModifiedData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryModifiedData_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryEvent_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryEvent_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryReadRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryReadResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryReadResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId WriteValue_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.WriteValue_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId WriteRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.WriteRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId WriteResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.WriteResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryUpdateDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryUpdateDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UpdateDataDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UpdateDataDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UpdateStructureDataDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UpdateStructureDataDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId UpdateEventDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.UpdateEventDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteRawModifiedDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteRawModifiedDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteAtTimeDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteAtTimeDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteEventDetails_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteEventDetails_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryUpdateResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryUpdateResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryUpdateRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryUpdateRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryUpdateResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryUpdateResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CallMethodRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CallMethodRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CallMethodResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CallMethodResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CallRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CallRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CallResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CallResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MonitoringFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoringFilter_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataChangeFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataChangeFilter_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EventFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EventFilter_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AggregateConfiguration_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AggregateConfiguration_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AggregateFilter_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AggregateFilter_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MonitoringFilterResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoringFilterResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EventFilterResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EventFilterResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AggregateFilterResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AggregateFilterResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MonitoringParameters_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoringParameters_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MonitoredItemCreateRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemCreateRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MonitoredItemCreateResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemCreateResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CreateMonitoredItemsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CreateMonitoredItemsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MonitoredItemModifyRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemModifyRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MonitoredItemModifyResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemModifyResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ModifyMonitoredItemsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ModifyMonitoredItemsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SetMonitoringModeRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetMonitoringModeRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SetMonitoringModeResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetMonitoringModeResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SetTriggeringRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetTriggeringRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SetTriggeringResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetTriggeringResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteMonitoredItemsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteMonitoredItemsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CreateSubscriptionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateSubscriptionRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId CreateSubscriptionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.CreateSubscriptionResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ModifySubscriptionRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModifySubscriptionRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ModifySubscriptionResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModifySubscriptionResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SetPublishingModeRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetPublishingModeRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SetPublishingModeResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SetPublishingModeResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId NotificationMessage_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NotificationMessage_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId NotificationData_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NotificationData_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DataChangeNotification_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DataChangeNotification_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId MonitoredItemNotification_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.MonitoredItemNotification_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EventNotificationList_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EventNotificationList_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EventFieldList_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EventFieldList_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId HistoryEventFieldList_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.HistoryEventFieldList_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId StatusChangeNotification_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StatusChangeNotification_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SubscriptionAcknowledgement_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SubscriptionAcknowledgement_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PublishRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId PublishResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.PublishResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RepublishRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RepublishRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RepublishResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RepublishResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId TransferResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TransferResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId TransferSubscriptionsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TransferSubscriptionsRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId TransferSubscriptionsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.TransferSubscriptionsResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteSubscriptionsRequest_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsRequest_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DeleteSubscriptionsResponse_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsResponse_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId BuildInfo_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.BuildInfo_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId RedundantServerDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.RedundantServerDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EndpointUrlListDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EndpointUrlListDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId NetworkGroupDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.NetworkGroupDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ServerStatusDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServerStatusDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SessionDiagnosticsDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ServiceCounterDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ServiceCounterDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId StatusResult_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.StatusResult_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SubscriptionDiagnosticsDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ModelChangeStructureDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ModelChangeStructureDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId SemanticChangeStructureDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.SemanticChangeStructureDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId Range_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Range_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId EUInformation_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.EUInformation_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ComplexNumberType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ComplexNumberType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId DoubleComplexNumberType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.DoubleComplexNumberType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId AxisInformation_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.AxisInformation_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId XVType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.XVType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticDataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ProgramDiagnosticDataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2DataType_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.ProgramDiagnostic2DataType_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId Annotation_Encoding_DefaultBinary = new NodeId(Opc.Ua.Objects.Annotation_Encoding_DefaultBinary);

        /// <remarks />
        public static readonly NodeId Union_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Union_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId KeyValuePair_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.KeyValuePair_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AdditionalParametersType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AdditionalParametersType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EphemeralKeyType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EphemeralKeyType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EndpointType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EndpointType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RationalNumber_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RationalNumber_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId Vector_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Vector_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ThreeDVector_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ThreeDVector_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CartesianCoordinates_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CartesianCoordinates_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ThreeDCartesianCoordinates_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ThreeDCartesianCoordinates_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId Orientation_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Orientation_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ThreeDOrientation_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ThreeDOrientation_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId Frame_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Frame_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ThreeDFrame_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ThreeDFrame_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId IdentityMappingRuleType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.IdentityMappingRuleType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CurrencyUnitType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CurrencyUnitType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId TrustListDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TrustListDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DecimalDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DecimalDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataTypeSchemaHeader_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataTypeSchemaHeader_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataTypeDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataTypeDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId StructureDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StructureDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EnumDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EnumDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SimpleTypeDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SimpleTypeDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UABinaryFileDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UABinaryFileDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataSetMetaDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataSetMetaDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId FieldMetaData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FieldMetaData_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ConfigurationVersionDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ConfigurationVersionDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PublishedDataSetDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishedDataSetDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PublishedDataSetSourceDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishedDataSetSourceDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PublishedVariableDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishedVariableDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishedDataItemsDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PublishedEventsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishedEventsDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataSetWriterDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataSetWriterDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataSetWriterTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataSetWriterTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataSetWriterMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataSetWriterMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PubSubGroupDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PubSubGroupDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId WriterGroupDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.WriterGroupDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId WriterGroupTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.WriterGroupTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId WriterGroupMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.WriterGroupMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PubSubConnectionDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PubSubConnectionDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ConnectionTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ConnectionTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId NetworkAddressDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NetworkAddressDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId NetworkAddressUrlDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NetworkAddressUrlDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReaderGroupDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReaderGroupDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReaderGroupTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReaderGroupTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReaderGroupMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReaderGroupMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataSetReaderDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataSetReaderDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataSetReaderTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataSetReaderTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataSetReaderMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataSetReaderMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SubscribedDataSetDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId TargetVariablesDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TargetVariablesDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId FieldTargetDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FieldTargetDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetMirrorDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SubscribedDataSetMirrorDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PubSubConfigurationDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PubSubConfigurationDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UadpWriterGroupMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UadpDataSetWriterMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UadpDataSetWriterMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UadpDataSetReaderMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId JsonWriterGroupMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.JsonWriterGroupMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId JsonDataSetWriterMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.JsonDataSetWriterMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId JsonDataSetReaderMessageDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.JsonDataSetReaderMessageDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DatagramConnectionTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DatagramConnectionTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DatagramWriterGroupTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DatagramWriterGroupTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrokerConnectionTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrokerConnectionTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrokerWriterGroupTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrokerWriterGroupTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrokerDataSetWriterTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrokerDataSetReaderTransportDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AliasNameDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AliasNameDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UnsignedRationalNumber_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UnsignedRationalNumber_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RolePermissionType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RolePermissionType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataTypeDefinition_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataTypeDefinition_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId StructureField_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StructureField_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId StructureDefinition_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StructureDefinition_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EnumDefinition_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EnumDefinition_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId Node_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Node_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId InstanceNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.InstanceNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId TypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TypeNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ObjectNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ObjectNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ObjectTypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ObjectTypeNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId VariableNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.VariableNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId VariableTypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.VariableTypeNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReferenceTypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReferenceTypeNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MethodNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MethodNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ViewNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ViewNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataTypeNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataTypeNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReferenceNode_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReferenceNode_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId Argument_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Argument_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EnumValueType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EnumValueType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EnumField_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EnumField_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId OptionSet_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.OptionSet_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId TimeZoneDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TimeZoneDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ApplicationDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ApplicationDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RequestHeader_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RequestHeader_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ResponseHeader_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ResponseHeader_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ServiceFault_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServiceFault_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SessionlessInvokeRequestType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SessionlessInvokeRequestType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SessionlessInvokeResponseType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SessionlessInvokeResponseType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId FindServersRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FindServersRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId FindServersResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FindServersResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ServerOnNetwork_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServerOnNetwork_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId FindServersOnNetworkRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FindServersOnNetworkRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId FindServersOnNetworkResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FindServersOnNetworkResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UserTokenPolicy_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UserTokenPolicy_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EndpointDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EndpointDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId GetEndpointsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.GetEndpointsRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId GetEndpointsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.GetEndpointsResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RegisteredServer_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisteredServer_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RegisterServerRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterServerRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RegisterServerResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterServerResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DiscoveryConfiguration_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DiscoveryConfiguration_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MdnsDiscoveryConfiguration_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MdnsDiscoveryConfiguration_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RegisterServer2Request_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterServer2Request_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RegisterServer2Response_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterServer2Response_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ChannelSecurityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ChannelSecurityToken_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId OpenSecureChannelRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.OpenSecureChannelRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId OpenSecureChannelResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.OpenSecureChannelResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CloseSecureChannelRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CloseSecureChannelRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CloseSecureChannelResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CloseSecureChannelResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SignedSoftwareCertificate_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SignedSoftwareCertificate_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SignatureData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SignatureData_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CreateSessionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateSessionRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CreateSessionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateSessionResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UserIdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UserIdentityToken_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AnonymousIdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AnonymousIdentityToken_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UserNameIdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UserNameIdentityToken_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId X509IdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.X509IdentityToken_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId IssuedIdentityToken_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.IssuedIdentityToken_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ActivateSessionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ActivateSessionRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ActivateSessionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ActivateSessionResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CloseSessionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CloseSessionRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CloseSessionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CloseSessionResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CancelRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CancelRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CancelResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CancelResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId NodeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NodeAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ObjectAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ObjectAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId VariableAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.VariableAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MethodAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MethodAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ObjectTypeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ObjectTypeAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId VariableTypeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.VariableTypeAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReferenceTypeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReferenceTypeAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataTypeAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataTypeAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ViewAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ViewAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId GenericAttributeValue_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.GenericAttributeValue_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId GenericAttributes_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.GenericAttributes_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AddNodesItem_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddNodesItem_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AddNodesResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddNodesResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AddNodesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddNodesRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AddNodesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddNodesResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AddReferencesItem_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddReferencesItem_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AddReferencesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddReferencesRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AddReferencesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AddReferencesResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteNodesItem_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteNodesItem_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteNodesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteNodesRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteNodesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteNodesResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteReferencesItem_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteReferencesItem_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteReferencesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteReferencesRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteReferencesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteReferencesResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ViewDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ViewDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrowseDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReferenceDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReferenceDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrowseResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrowseRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrowseResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrowseNextRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseNextRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrowseNextResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowseNextResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RelativePathElement_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RelativePathElement_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RelativePath_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RelativePath_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrowsePath_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowsePath_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrowsePathTarget_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowsePathTarget_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BrowsePathResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BrowsePathResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RegisterNodesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterNodesRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RegisterNodesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RegisterNodesResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UnregisterNodesRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UnregisterNodesRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UnregisterNodesResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UnregisterNodesResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EndpointConfiguration_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EndpointConfiguration_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId QueryDataDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryDataDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId NodeTypeDescription_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NodeTypeDescription_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId QueryDataSet_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryDataSet_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId NodeReference_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NodeReference_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ContentFilterElement_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ContentFilterElement_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ContentFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ContentFilter_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId FilterOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.FilterOperand_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ElementOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ElementOperand_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId LiteralOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.LiteralOperand_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AttributeOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AttributeOperand_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SimpleAttributeOperand_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SimpleAttributeOperand_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ContentFilterElementResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ContentFilterElementResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ContentFilterResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ContentFilterResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ParsingResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ParsingResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId QueryFirstRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryFirstRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId QueryFirstResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryFirstResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId QueryNextRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryNextRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId QueryNextResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.QueryNextResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReadValueId_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadValueId_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReadRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReadResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryReadValueId_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadValueId_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryReadResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryReadDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReadEventDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadEventDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReadRawModifiedDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadRawModifiedDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReadProcessedDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadProcessedDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReadAtTimeDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadAtTimeDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ReadAnnotationDataDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ReadAnnotationDataDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryData_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ModificationInfo_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModificationInfo_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryModifiedData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryModifiedData_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryEvent_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryEvent_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryReadRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryReadResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryReadResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId WriteValue_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.WriteValue_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId WriteRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.WriteRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId WriteResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.WriteResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryUpdateDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryUpdateDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UpdateDataDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UpdateDataDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UpdateStructureDataDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UpdateStructureDataDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId UpdateEventDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.UpdateEventDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteRawModifiedDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteRawModifiedDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteAtTimeDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteAtTimeDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteEventDetails_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteEventDetails_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryUpdateResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryUpdateResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryUpdateRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryUpdateRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryUpdateResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryUpdateResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CallMethodRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CallMethodRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CallMethodResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CallMethodResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CallRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CallRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CallResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CallResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MonitoringFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoringFilter_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataChangeFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataChangeFilter_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EventFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EventFilter_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AggregateConfiguration_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AggregateConfiguration_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AggregateFilter_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AggregateFilter_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MonitoringFilterResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoringFilterResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EventFilterResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EventFilterResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AggregateFilterResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AggregateFilterResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MonitoringParameters_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoringParameters_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MonitoredItemCreateRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemCreateRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MonitoredItemCreateResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemCreateResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CreateMonitoredItemsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CreateMonitoredItemsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MonitoredItemModifyRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemModifyRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MonitoredItemModifyResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemModifyResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ModifyMonitoredItemsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ModifyMonitoredItemsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SetMonitoringModeRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetMonitoringModeRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SetMonitoringModeResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetMonitoringModeResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SetTriggeringRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetTriggeringRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SetTriggeringResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetTriggeringResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteMonitoredItemsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteMonitoredItemsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CreateSubscriptionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateSubscriptionRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId CreateSubscriptionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.CreateSubscriptionResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ModifySubscriptionRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModifySubscriptionRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ModifySubscriptionResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModifySubscriptionResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SetPublishingModeRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetPublishingModeRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SetPublishingModeResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SetPublishingModeResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId NotificationMessage_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NotificationMessage_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId NotificationData_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NotificationData_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DataChangeNotification_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DataChangeNotification_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId MonitoredItemNotification_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.MonitoredItemNotification_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EventNotificationList_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EventNotificationList_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EventFieldList_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EventFieldList_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId HistoryEventFieldList_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.HistoryEventFieldList_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId StatusChangeNotification_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StatusChangeNotification_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SubscriptionAcknowledgement_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SubscriptionAcknowledgement_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PublishRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId PublishResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.PublishResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RepublishRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RepublishRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RepublishResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RepublishResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId TransferResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TransferResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId TransferSubscriptionsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TransferSubscriptionsRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId TransferSubscriptionsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.TransferSubscriptionsResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteSubscriptionsRequest_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsRequest_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DeleteSubscriptionsResponse_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsResponse_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId BuildInfo_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.BuildInfo_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId RedundantServerDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.RedundantServerDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EndpointUrlListDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EndpointUrlListDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId NetworkGroupDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.NetworkGroupDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServerDiagnosticsSummaryDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ServerStatusDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServerStatusDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SessionDiagnosticsDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SessionSecurityDiagnosticsDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ServiceCounterDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ServiceCounterDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId StatusResult_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.StatusResult_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SubscriptionDiagnosticsDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ModelChangeStructureDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ModelChangeStructureDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId SemanticChangeStructureDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.SemanticChangeStructureDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId Range_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Range_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId EUInformation_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.EUInformation_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ComplexNumberType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ComplexNumberType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId DoubleComplexNumberType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.DoubleComplexNumberType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId AxisInformation_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.AxisInformation_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId XVType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.XVType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticDataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ProgramDiagnosticDataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2DataType_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.ProgramDiagnostic2DataType_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId Annotation_Encoding_DefaultXml = new NodeId(Opc.Ua.Objects.Annotation_Encoding_DefaultXml);

        /// <remarks />
        public static readonly NodeId Union_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.Union_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId KeyValuePair_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.KeyValuePair_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AdditionalParametersType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AdditionalParametersType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EphemeralKeyType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EphemeralKeyType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EndpointType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EndpointType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RationalNumber_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RationalNumber_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId Vector_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.Vector_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ThreeDVector_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ThreeDVector_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CartesianCoordinates_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CartesianCoordinates_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ThreeDCartesianCoordinates_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ThreeDCartesianCoordinates_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId Orientation_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.Orientation_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ThreeDOrientation_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ThreeDOrientation_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId Frame_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.Frame_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ThreeDFrame_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ThreeDFrame_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId IdentityMappingRuleType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.IdentityMappingRuleType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CurrencyUnitType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CurrencyUnitType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId TrustListDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.TrustListDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DecimalDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DecimalDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataTypeSchemaHeader_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataTypeSchemaHeader_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataTypeDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataTypeDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId StructureDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.StructureDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EnumDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EnumDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SimpleTypeDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SimpleTypeDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UABinaryFileDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UABinaryFileDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataSetMetaDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataSetMetaDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId FieldMetaData_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.FieldMetaData_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ConfigurationVersionDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ConfigurationVersionDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PublishedDataSetDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PublishedDataSetDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PublishedDataSetSourceDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PublishedDataSetSourceDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PublishedVariableDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PublishedVariableDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PublishedDataItemsDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PublishedEventsDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PublishedEventsDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataSetWriterDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataSetWriterDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataSetWriterTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataSetWriterTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataSetWriterMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataSetWriterMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PubSubGroupDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PubSubGroupDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId WriterGroupDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.WriterGroupDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId WriterGroupTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.WriterGroupTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId WriterGroupMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.WriterGroupMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PubSubConnectionDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PubSubConnectionDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ConnectionTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ConnectionTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId NetworkAddressDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.NetworkAddressDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId NetworkAddressUrlDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.NetworkAddressUrlDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReaderGroupDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReaderGroupDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReaderGroupTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReaderGroupTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReaderGroupMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReaderGroupMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataSetReaderDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataSetReaderDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataSetReaderTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataSetReaderTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataSetReaderMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataSetReaderMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SubscribedDataSetDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId TargetVariablesDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.TargetVariablesDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId FieldTargetDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.FieldTargetDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetMirrorDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SubscribedDataSetMirrorDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PubSubConfigurationDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PubSubConfigurationDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UadpWriterGroupMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UadpDataSetWriterMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UadpDataSetWriterMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UadpDataSetReaderMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId JsonWriterGroupMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.JsonWriterGroupMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId JsonDataSetWriterMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.JsonDataSetWriterMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId JsonDataSetReaderMessageDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.JsonDataSetReaderMessageDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DatagramConnectionTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DatagramConnectionTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DatagramWriterGroupTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DatagramWriterGroupTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrokerConnectionTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrokerConnectionTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrokerWriterGroupTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrokerWriterGroupTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrokerDataSetWriterTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrokerDataSetReaderTransportDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AliasNameDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AliasNameDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UnsignedRationalNumber_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UnsignedRationalNumber_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RolePermissionType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RolePermissionType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataTypeDefinition_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataTypeDefinition_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId StructureField_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.StructureField_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId StructureDefinition_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.StructureDefinition_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EnumDefinition_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EnumDefinition_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId Node_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.Node_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId InstanceNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.InstanceNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId TypeNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.TypeNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ObjectNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ObjectNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ObjectTypeNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ObjectTypeNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId VariableNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.VariableNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId VariableTypeNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.VariableTypeNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReferenceTypeNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReferenceTypeNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MethodNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MethodNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ViewNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ViewNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataTypeNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataTypeNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReferenceNode_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReferenceNode_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId Argument_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.Argument_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EnumValueType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EnumValueType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EnumField_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EnumField_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId OptionSet_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.OptionSet_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId TimeZoneDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.TimeZoneDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ApplicationDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ApplicationDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RequestHeader_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RequestHeader_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ResponseHeader_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ResponseHeader_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ServiceFault_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ServiceFault_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SessionlessInvokeRequestType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SessionlessInvokeRequestType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SessionlessInvokeResponseType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SessionlessInvokeResponseType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId FindServersRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.FindServersRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId FindServersResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.FindServersResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ServerOnNetwork_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ServerOnNetwork_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId FindServersOnNetworkRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.FindServersOnNetworkRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId FindServersOnNetworkResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.FindServersOnNetworkResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UserTokenPolicy_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UserTokenPolicy_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EndpointDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EndpointDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId GetEndpointsRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.GetEndpointsRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId GetEndpointsResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.GetEndpointsResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RegisteredServer_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RegisteredServer_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RegisterServerRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RegisterServerRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RegisterServerResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RegisterServerResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DiscoveryConfiguration_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DiscoveryConfiguration_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MdnsDiscoveryConfiguration_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MdnsDiscoveryConfiguration_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RegisterServer2Request_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RegisterServer2Request_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RegisterServer2Response_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RegisterServer2Response_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ChannelSecurityToken_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ChannelSecurityToken_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId OpenSecureChannelRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.OpenSecureChannelRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId OpenSecureChannelResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.OpenSecureChannelResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CloseSecureChannelRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CloseSecureChannelRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CloseSecureChannelResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CloseSecureChannelResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SignedSoftwareCertificate_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SignedSoftwareCertificate_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SignatureData_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SignatureData_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CreateSessionRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CreateSessionRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CreateSessionResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CreateSessionResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UserIdentityToken_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UserIdentityToken_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AnonymousIdentityToken_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AnonymousIdentityToken_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UserNameIdentityToken_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UserNameIdentityToken_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId X509IdentityToken_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.X509IdentityToken_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId IssuedIdentityToken_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.IssuedIdentityToken_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ActivateSessionRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ActivateSessionRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ActivateSessionResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ActivateSessionResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CloseSessionRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CloseSessionRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CloseSessionResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CloseSessionResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CancelRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CancelRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CancelResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CancelResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId NodeAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.NodeAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ObjectAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ObjectAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId VariableAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.VariableAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MethodAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MethodAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ObjectTypeAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ObjectTypeAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId VariableTypeAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.VariableTypeAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReferenceTypeAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReferenceTypeAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataTypeAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataTypeAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ViewAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ViewAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId GenericAttributeValue_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.GenericAttributeValue_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId GenericAttributes_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.GenericAttributes_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AddNodesItem_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AddNodesItem_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AddNodesResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AddNodesResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AddNodesRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AddNodesRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AddNodesResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AddNodesResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AddReferencesItem_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AddReferencesItem_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AddReferencesRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AddReferencesRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AddReferencesResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AddReferencesResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteNodesItem_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteNodesItem_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteNodesRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteNodesRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteNodesResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteNodesResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteReferencesItem_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteReferencesItem_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteReferencesRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteReferencesRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteReferencesResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteReferencesResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ViewDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ViewDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrowseDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrowseDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReferenceDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReferenceDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrowseResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrowseResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrowseRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrowseRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrowseResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrowseResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrowseNextRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrowseNextRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrowseNextResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrowseNextResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RelativePathElement_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RelativePathElement_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RelativePath_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RelativePath_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrowsePath_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrowsePath_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrowsePathTarget_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrowsePathTarget_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BrowsePathResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BrowsePathResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RegisterNodesRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RegisterNodesRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RegisterNodesResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RegisterNodesResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UnregisterNodesRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UnregisterNodesRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UnregisterNodesResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UnregisterNodesResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EndpointConfiguration_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EndpointConfiguration_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId QueryDataDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.QueryDataDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId NodeTypeDescription_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.NodeTypeDescription_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId QueryDataSet_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.QueryDataSet_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId NodeReference_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.NodeReference_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ContentFilterElement_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ContentFilterElement_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ContentFilter_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ContentFilter_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId FilterOperand_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.FilterOperand_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ElementOperand_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ElementOperand_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId LiteralOperand_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.LiteralOperand_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AttributeOperand_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AttributeOperand_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SimpleAttributeOperand_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SimpleAttributeOperand_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ContentFilterElementResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ContentFilterElementResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ContentFilterResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ContentFilterResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ParsingResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ParsingResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId QueryFirstRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.QueryFirstRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId QueryFirstResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.QueryFirstResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId QueryNextRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.QueryNextRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId QueryNextResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.QueryNextResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReadValueId_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReadValueId_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReadRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReadRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReadResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReadResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryReadValueId_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryReadValueId_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryReadResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryReadResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryReadDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryReadDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReadEventDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReadEventDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReadRawModifiedDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReadRawModifiedDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReadProcessedDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReadProcessedDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReadAtTimeDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReadAtTimeDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ReadAnnotationDataDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ReadAnnotationDataDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryData_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryData_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ModificationInfo_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ModificationInfo_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryModifiedData_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryModifiedData_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryEvent_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryEvent_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryReadRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryReadRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryReadResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryReadResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId WriteValue_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.WriteValue_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId WriteRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.WriteRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId WriteResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.WriteResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryUpdateDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryUpdateDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UpdateDataDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UpdateDataDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UpdateStructureDataDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UpdateStructureDataDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId UpdateEventDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.UpdateEventDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteRawModifiedDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteRawModifiedDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteAtTimeDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteAtTimeDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteEventDetails_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteEventDetails_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryUpdateResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryUpdateResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryUpdateRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryUpdateRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryUpdateResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryUpdateResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CallMethodRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CallMethodRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CallMethodResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CallMethodResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CallRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CallRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CallResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CallResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MonitoringFilter_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MonitoringFilter_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataChangeFilter_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataChangeFilter_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EventFilter_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EventFilter_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AggregateConfiguration_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AggregateConfiguration_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AggregateFilter_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AggregateFilter_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MonitoringFilterResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MonitoringFilterResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EventFilterResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EventFilterResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AggregateFilterResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AggregateFilterResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MonitoringParameters_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MonitoringParameters_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MonitoredItemCreateRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MonitoredItemCreateRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MonitoredItemCreateResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MonitoredItemCreateResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CreateMonitoredItemsRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CreateMonitoredItemsResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CreateMonitoredItemsResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MonitoredItemModifyRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MonitoredItemModifyRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MonitoredItemModifyResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MonitoredItemModifyResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ModifyMonitoredItemsRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ModifyMonitoredItemsResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ModifyMonitoredItemsResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SetMonitoringModeRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SetMonitoringModeRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SetMonitoringModeResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SetMonitoringModeResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SetTriggeringRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SetTriggeringRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SetTriggeringResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SetTriggeringResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteMonitoredItemsRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteMonitoredItemsResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteMonitoredItemsResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CreateSubscriptionRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CreateSubscriptionRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId CreateSubscriptionResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.CreateSubscriptionResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ModifySubscriptionRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ModifySubscriptionRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ModifySubscriptionResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ModifySubscriptionResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SetPublishingModeRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SetPublishingModeRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SetPublishingModeResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SetPublishingModeResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId NotificationMessage_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.NotificationMessage_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId NotificationData_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.NotificationData_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DataChangeNotification_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DataChangeNotification_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId MonitoredItemNotification_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.MonitoredItemNotification_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EventNotificationList_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EventNotificationList_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EventFieldList_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EventFieldList_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId HistoryEventFieldList_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.HistoryEventFieldList_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId StatusChangeNotification_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.StatusChangeNotification_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SubscriptionAcknowledgement_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SubscriptionAcknowledgement_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PublishRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PublishRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId PublishResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.PublishResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RepublishRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RepublishRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RepublishResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RepublishResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId TransferResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.TransferResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId TransferSubscriptionsRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.TransferSubscriptionsRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId TransferSubscriptionsResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.TransferSubscriptionsResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteSubscriptionsRequest_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsRequest_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DeleteSubscriptionsResponse_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DeleteSubscriptionsResponse_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId BuildInfo_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.BuildInfo_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId RedundantServerDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.RedundantServerDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EndpointUrlListDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EndpointUrlListDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId NetworkGroupDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.NetworkGroupDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SamplingIntervalDiagnosticsDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ServerDiagnosticsSummaryDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ServerStatusDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ServerStatusDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SessionDiagnosticsDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SessionSecurityDiagnosticsDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ServiceCounterDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ServiceCounterDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId StatusResult_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.StatusResult_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SubscriptionDiagnosticsDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ModelChangeStructureDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ModelChangeStructureDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId SemanticChangeStructureDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.SemanticChangeStructureDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId Range_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.Range_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId EUInformation_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.EUInformation_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ComplexNumberType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ComplexNumberType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId DoubleComplexNumberType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.DoubleComplexNumberType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId AxisInformation_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.AxisInformation_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId XVType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.XVType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticDataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ProgramDiagnosticDataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2DataType_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.ProgramDiagnostic2DataType_Encoding_DefaultJson);

        /// <remarks />
        public static readonly NodeId Annotation_Encoding_DefaultJson = new NodeId(Opc.Ua.Objects.Annotation_Encoding_DefaultJson);
    }
    #endregion

    #region ObjectType Node Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectTypeIds
    {
        /// <remarks />
        public static readonly NodeId BaseObjectType = new NodeId(Opc.Ua.ObjectTypes.BaseObjectType);

        /// <remarks />
        public static readonly NodeId FolderType = new NodeId(Opc.Ua.ObjectTypes.FolderType);

        /// <remarks />
        public static readonly NodeId DataTypeSystemType = new NodeId(Opc.Ua.ObjectTypes.DataTypeSystemType);

        /// <remarks />
        public static readonly NodeId DataTypeEncodingType = new NodeId(Opc.Ua.ObjectTypes.DataTypeEncodingType);

        /// <remarks />
        public static readonly NodeId ModellingRuleType = new NodeId(Opc.Ua.ObjectTypes.ModellingRuleType);

        /// <remarks />
        public static readonly NodeId ServerType = new NodeId(Opc.Ua.ObjectTypes.ServerType);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType = new NodeId(Opc.Ua.ObjectTypes.ServerCapabilitiesType);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType = new NodeId(Opc.Ua.ObjectTypes.ServerDiagnosticsType);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType = new NodeId(Opc.Ua.ObjectTypes.SessionsDiagnosticsSummaryType);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType = new NodeId(Opc.Ua.ObjectTypes.SessionDiagnosticsObjectType);

        /// <remarks />
        public static readonly NodeId VendorServerInfoType = new NodeId(Opc.Ua.ObjectTypes.VendorServerInfoType);

        /// <remarks />
        public static readonly NodeId ServerRedundancyType = new NodeId(Opc.Ua.ObjectTypes.ServerRedundancyType);

        /// <remarks />
        public static readonly NodeId TransparentRedundancyType = new NodeId(Opc.Ua.ObjectTypes.TransparentRedundancyType);

        /// <remarks />
        public static readonly NodeId NonTransparentRedundancyType = new NodeId(Opc.Ua.ObjectTypes.NonTransparentRedundancyType);

        /// <remarks />
        public static readonly NodeId NonTransparentNetworkRedundancyType = new NodeId(Opc.Ua.ObjectTypes.NonTransparentNetworkRedundancyType);

        /// <remarks />
        public static readonly NodeId OperationLimitsType = new NodeId(Opc.Ua.ObjectTypes.OperationLimitsType);

        /// <remarks />
        public static readonly NodeId FileType = new NodeId(Opc.Ua.ObjectTypes.FileType);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType = new NodeId(Opc.Ua.ObjectTypes.AddressSpaceFileType);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType = new NodeId(Opc.Ua.ObjectTypes.NamespaceMetadataType);

        /// <remarks />
        public static readonly NodeId NamespacesType = new NodeId(Opc.Ua.ObjectTypes.NamespacesType);

        /// <remarks />
        public static readonly NodeId BaseEventType = new NodeId(Opc.Ua.ObjectTypes.BaseEventType);

        /// <remarks />
        public static readonly NodeId AuditEventType = new NodeId(Opc.Ua.ObjectTypes.AuditEventType);

        /// <remarks />
        public static readonly NodeId AuditSecurityEventType = new NodeId(Opc.Ua.ObjectTypes.AuditSecurityEventType);

        /// <remarks />
        public static readonly NodeId AuditChannelEventType = new NodeId(Opc.Ua.ObjectTypes.AuditChannelEventType);

        /// <remarks />
        public static readonly NodeId AuditOpenSecureChannelEventType = new NodeId(Opc.Ua.ObjectTypes.AuditOpenSecureChannelEventType);

        /// <remarks />
        public static readonly NodeId AuditSessionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditSessionEventType);

        /// <remarks />
        public static readonly NodeId AuditCreateSessionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCreateSessionEventType);

        /// <remarks />
        public static readonly NodeId AuditUrlMismatchEventType = new NodeId(Opc.Ua.ObjectTypes.AuditUrlMismatchEventType);

        /// <remarks />
        public static readonly NodeId AuditActivateSessionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditActivateSessionEventType);

        /// <remarks />
        public static readonly NodeId AuditCancelEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCancelEventType);

        /// <remarks />
        public static readonly NodeId AuditCertificateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateEventType);

        /// <remarks />
        public static readonly NodeId AuditCertificateDataMismatchEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateDataMismatchEventType);

        /// <remarks />
        public static readonly NodeId AuditCertificateExpiredEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateExpiredEventType);

        /// <remarks />
        public static readonly NodeId AuditCertificateInvalidEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateInvalidEventType);

        /// <remarks />
        public static readonly NodeId AuditCertificateUntrustedEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateUntrustedEventType);

        /// <remarks />
        public static readonly NodeId AuditCertificateRevokedEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateRevokedEventType);

        /// <remarks />
        public static readonly NodeId AuditCertificateMismatchEventType = new NodeId(Opc.Ua.ObjectTypes.AuditCertificateMismatchEventType);

        /// <remarks />
        public static readonly NodeId AuditNodeManagementEventType = new NodeId(Opc.Ua.ObjectTypes.AuditNodeManagementEventType);

        /// <remarks />
        public static readonly NodeId AuditAddNodesEventType = new NodeId(Opc.Ua.ObjectTypes.AuditAddNodesEventType);

        /// <remarks />
        public static readonly NodeId AuditDeleteNodesEventType = new NodeId(Opc.Ua.ObjectTypes.AuditDeleteNodesEventType);

        /// <remarks />
        public static readonly NodeId AuditAddReferencesEventType = new NodeId(Opc.Ua.ObjectTypes.AuditAddReferencesEventType);

        /// <remarks />
        public static readonly NodeId AuditDeleteReferencesEventType = new NodeId(Opc.Ua.ObjectTypes.AuditDeleteReferencesEventType);

        /// <remarks />
        public static readonly NodeId AuditUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditUpdateEventType);

        /// <remarks />
        public static readonly NodeId AuditWriteUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditWriteUpdateEventType);

        /// <remarks />
        public static readonly NodeId AuditHistoryUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryUpdateEventType);

        /// <remarks />
        public static readonly NodeId AuditUpdateMethodEventType = new NodeId(Opc.Ua.ObjectTypes.AuditUpdateMethodEventType);

        /// <remarks />
        public static readonly NodeId SystemEventType = new NodeId(Opc.Ua.ObjectTypes.SystemEventType);

        /// <remarks />
        public static readonly NodeId DeviceFailureEventType = new NodeId(Opc.Ua.ObjectTypes.DeviceFailureEventType);

        /// <remarks />
        public static readonly NodeId SystemStatusChangeEventType = new NodeId(Opc.Ua.ObjectTypes.SystemStatusChangeEventType);

        /// <remarks />
        public static readonly NodeId BaseModelChangeEventType = new NodeId(Opc.Ua.ObjectTypes.BaseModelChangeEventType);

        /// <remarks />
        public static readonly NodeId GeneralModelChangeEventType = new NodeId(Opc.Ua.ObjectTypes.GeneralModelChangeEventType);

        /// <remarks />
        public static readonly NodeId SemanticChangeEventType = new NodeId(Opc.Ua.ObjectTypes.SemanticChangeEventType);

        /// <remarks />
        public static readonly NodeId EventQueueOverflowEventType = new NodeId(Opc.Ua.ObjectTypes.EventQueueOverflowEventType);

        /// <remarks />
        public static readonly NodeId ProgressEventType = new NodeId(Opc.Ua.ObjectTypes.ProgressEventType);

        /// <remarks />
        public static readonly NodeId AggregateFunctionType = new NodeId(Opc.Ua.ObjectTypes.AggregateFunctionType);

        /// <remarks />
        public static readonly NodeId StateMachineType = new NodeId(Opc.Ua.ObjectTypes.StateMachineType);

        /// <remarks />
        public static readonly NodeId FiniteStateMachineType = new NodeId(Opc.Ua.ObjectTypes.FiniteStateMachineType);

        /// <remarks />
        public static readonly NodeId StateType = new NodeId(Opc.Ua.ObjectTypes.StateType);

        /// <remarks />
        public static readonly NodeId InitialStateType = new NodeId(Opc.Ua.ObjectTypes.InitialStateType);

        /// <remarks />
        public static readonly NodeId TransitionType = new NodeId(Opc.Ua.ObjectTypes.TransitionType);

        /// <remarks />
        public static readonly NodeId ChoiceStateType = new NodeId(Opc.Ua.ObjectTypes.ChoiceStateType);

        /// <remarks />
        public static readonly NodeId TransitionEventType = new NodeId(Opc.Ua.ObjectTypes.TransitionEventType);

        /// <remarks />
        public static readonly NodeId AuditUpdateStateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditUpdateStateEventType);

        /// <remarks />
        public static readonly NodeId FileDirectoryType = new NodeId(Opc.Ua.ObjectTypes.FileDirectoryType);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType = new NodeId(Opc.Ua.ObjectTypes.TemporaryFileTransferType);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType = new NodeId(Opc.Ua.ObjectTypes.FileTransferStateMachineType);

        /// <remarks />
        public static readonly NodeId RoleSetType = new NodeId(Opc.Ua.ObjectTypes.RoleSetType);

        /// <remarks />
        public static readonly NodeId RoleType = new NodeId(Opc.Ua.ObjectTypes.RoleType);

        /// <remarks />
        public static readonly NodeId RoleMappingRuleChangedAuditEventType = new NodeId(Opc.Ua.ObjectTypes.RoleMappingRuleChangedAuditEventType);

        /// <remarks />
        public static readonly NodeId DictionaryEntryType = new NodeId(Opc.Ua.ObjectTypes.DictionaryEntryType);

        /// <remarks />
        public static readonly NodeId DictionaryFolderType = new NodeId(Opc.Ua.ObjectTypes.DictionaryFolderType);

        /// <remarks />
        public static readonly NodeId IrdiDictionaryEntryType = new NodeId(Opc.Ua.ObjectTypes.IrdiDictionaryEntryType);

        /// <remarks />
        public static readonly NodeId UriDictionaryEntryType = new NodeId(Opc.Ua.ObjectTypes.UriDictionaryEntryType);

        /// <remarks />
        public static readonly NodeId BaseInterfaceType = new NodeId(Opc.Ua.ObjectTypes.BaseInterfaceType);

        /// <remarks />
        public static readonly NodeId IOrderedObjectType = new NodeId(Opc.Ua.ObjectTypes.IOrderedObjectType);

        /// <remarks />
        public static readonly NodeId OrderedListType = new NodeId(Opc.Ua.ObjectTypes.OrderedListType);

        /// <remarks />
        public static readonly NodeId ConditionType = new NodeId(Opc.Ua.ObjectTypes.ConditionType);

        /// <remarks />
        public static readonly NodeId DialogConditionType = new NodeId(Opc.Ua.ObjectTypes.DialogConditionType);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType = new NodeId(Opc.Ua.ObjectTypes.AcknowledgeableConditionType);

        /// <remarks />
        public static readonly NodeId AlarmConditionType = new NodeId(Opc.Ua.ObjectTypes.AlarmConditionType);

        /// <remarks />
        public static readonly NodeId AlarmGroupType = new NodeId(Opc.Ua.ObjectTypes.AlarmGroupType);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType = new NodeId(Opc.Ua.ObjectTypes.ShelvedStateMachineType);

        /// <remarks />
        public static readonly NodeId LimitAlarmType = new NodeId(Opc.Ua.ObjectTypes.LimitAlarmType);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveLimitStateMachineType);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveLimitAlarmType);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType = new NodeId(Opc.Ua.ObjectTypes.NonExclusiveLimitAlarmType);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType = new NodeId(Opc.Ua.ObjectTypes.NonExclusiveLevelAlarmType);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveLevelAlarmType);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType = new NodeId(Opc.Ua.ObjectTypes.NonExclusiveDeviationAlarmType);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType = new NodeId(Opc.Ua.ObjectTypes.NonExclusiveRateOfChangeAlarmType);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveDeviationAlarmType);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType = new NodeId(Opc.Ua.ObjectTypes.ExclusiveRateOfChangeAlarmType);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType = new NodeId(Opc.Ua.ObjectTypes.DiscreteAlarmType);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType = new NodeId(Opc.Ua.ObjectTypes.OffNormalAlarmType);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType = new NodeId(Opc.Ua.ObjectTypes.SystemOffNormalAlarmType);

        /// <remarks />
        public static readonly NodeId TripAlarmType = new NodeId(Opc.Ua.ObjectTypes.TripAlarmType);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType = new NodeId(Opc.Ua.ObjectTypes.InstrumentDiagnosticAlarmType);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType = new NodeId(Opc.Ua.ObjectTypes.SystemDiagnosticAlarmType);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType = new NodeId(Opc.Ua.ObjectTypes.CertificateExpirationAlarmType);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType = new NodeId(Opc.Ua.ObjectTypes.DiscrepancyAlarmType);

        /// <remarks />
        public static readonly NodeId BaseConditionClassType = new NodeId(Opc.Ua.ObjectTypes.BaseConditionClassType);

        /// <remarks />
        public static readonly NodeId ProcessConditionClassType = new NodeId(Opc.Ua.ObjectTypes.ProcessConditionClassType);

        /// <remarks />
        public static readonly NodeId MaintenanceConditionClassType = new NodeId(Opc.Ua.ObjectTypes.MaintenanceConditionClassType);

        /// <remarks />
        public static readonly NodeId SystemConditionClassType = new NodeId(Opc.Ua.ObjectTypes.SystemConditionClassType);

        /// <remarks />
        public static readonly NodeId SafetyConditionClassType = new NodeId(Opc.Ua.ObjectTypes.SafetyConditionClassType);

        /// <remarks />
        public static readonly NodeId HighlyManagedAlarmConditionClassType = new NodeId(Opc.Ua.ObjectTypes.HighlyManagedAlarmConditionClassType);

        /// <remarks />
        public static readonly NodeId TrainingConditionClassType = new NodeId(Opc.Ua.ObjectTypes.TrainingConditionClassType);

        /// <remarks />
        public static readonly NodeId StatisticalConditionClassType = new NodeId(Opc.Ua.ObjectTypes.StatisticalConditionClassType);

        /// <remarks />
        public static readonly NodeId TestingConditionClassType = new NodeId(Opc.Ua.ObjectTypes.TestingConditionClassType);

        /// <remarks />
        public static readonly NodeId AuditConditionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionEnableEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionEnableEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionCommentEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionCommentEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionRespondEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionRespondEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionAcknowledgeEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionAcknowledgeEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionConfirmEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionConfirmEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionShelvingEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionShelvingEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionSuppressionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionSuppressionEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionSilenceEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionSilenceEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionResetEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionResetEventType);

        /// <remarks />
        public static readonly NodeId AuditConditionOutOfServiceEventType = new NodeId(Opc.Ua.ObjectTypes.AuditConditionOutOfServiceEventType);

        /// <remarks />
        public static readonly NodeId RefreshStartEventType = new NodeId(Opc.Ua.ObjectTypes.RefreshStartEventType);

        /// <remarks />
        public static readonly NodeId RefreshEndEventType = new NodeId(Opc.Ua.ObjectTypes.RefreshEndEventType);

        /// <remarks />
        public static readonly NodeId RefreshRequiredEventType = new NodeId(Opc.Ua.ObjectTypes.RefreshRequiredEventType);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType = new NodeId(Opc.Ua.ObjectTypes.AlarmMetricsType);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType = new NodeId(Opc.Ua.ObjectTypes.ProgramStateMachineType);

        /// <remarks />
        public static readonly NodeId ProgramTransitionEventType = new NodeId(Opc.Ua.ObjectTypes.ProgramTransitionEventType);

        /// <remarks />
        public static readonly NodeId AuditProgramTransitionEventType = new NodeId(Opc.Ua.ObjectTypes.AuditProgramTransitionEventType);

        /// <remarks />
        public static readonly NodeId ProgramTransitionAuditEventType = new NodeId(Opc.Ua.ObjectTypes.ProgramTransitionAuditEventType);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType = new NodeId(Opc.Ua.ObjectTypes.HistoricalDataConfigurationType);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType = new NodeId(Opc.Ua.ObjectTypes.HistoryServerCapabilitiesType);

        /// <remarks />
        public static readonly NodeId AuditHistoryEventUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryEventUpdateEventType);

        /// <remarks />
        public static readonly NodeId AuditHistoryValueUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryValueUpdateEventType);

        /// <remarks />
        public static readonly NodeId AuditHistoryAnnotationUpdateEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryAnnotationUpdateEventType);

        /// <remarks />
        public static readonly NodeId AuditHistoryDeleteEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryDeleteEventType);

        /// <remarks />
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryRawModifyDeleteEventType);

        /// <remarks />
        public static readonly NodeId AuditHistoryAtTimeDeleteEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryAtTimeDeleteEventType);

        /// <remarks />
        public static readonly NodeId AuditHistoryEventDeleteEventType = new NodeId(Opc.Ua.ObjectTypes.AuditHistoryEventDeleteEventType);

        /// <remarks />
        public static readonly NodeId TrustListType = new NodeId(Opc.Ua.ObjectTypes.TrustListType);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType = new NodeId(Opc.Ua.ObjectTypes.TrustListOutOfDateAlarmType);

        /// <remarks />
        public static readonly NodeId CertificateGroupType = new NodeId(Opc.Ua.ObjectTypes.CertificateGroupType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType = new NodeId(Opc.Ua.ObjectTypes.CertificateGroupFolderType);

        /// <remarks />
        public static readonly NodeId CertificateType = new NodeId(Opc.Ua.ObjectTypes.CertificateType);

        /// <remarks />
        public static readonly NodeId ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.ApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId HttpsCertificateType = new NodeId(Opc.Ua.ObjectTypes.HttpsCertificateType);

        /// <remarks />
        public static readonly NodeId UserCredentialCertificateType = new NodeId(Opc.Ua.ObjectTypes.UserCredentialCertificateType);

        /// <remarks />
        public static readonly NodeId RsaMinApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.RsaMinApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId RsaSha256ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.RsaSha256ApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId EccApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.EccApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId EccNistP256ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.EccNistP256ApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId EccNistP384ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.EccNistP384ApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId EccBrainpoolP256r1ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.EccBrainpoolP256r1ApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId EccBrainpoolP384r1ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.EccBrainpoolP384r1ApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId EccCurve25519ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.EccCurve25519ApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId EccCurve448ApplicationCertificateType = new NodeId(Opc.Ua.ObjectTypes.EccCurve448ApplicationCertificateType);

        /// <remarks />
        public static readonly NodeId TrustListUpdatedAuditEventType = new NodeId(Opc.Ua.ObjectTypes.TrustListUpdatedAuditEventType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType = new NodeId(Opc.Ua.ObjectTypes.ServerConfigurationType);

        /// <remarks />
        public static readonly NodeId CertificateUpdatedAuditEventType = new NodeId(Opc.Ua.ObjectTypes.CertificateUpdatedAuditEventType);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType = new NodeId(Opc.Ua.ObjectTypes.KeyCredentialConfigurationFolderType);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType = new NodeId(Opc.Ua.ObjectTypes.KeyCredentialConfigurationType);

        /// <remarks />
        public static readonly NodeId KeyCredentialAuditEventType = new NodeId(Opc.Ua.ObjectTypes.KeyCredentialAuditEventType);

        /// <remarks />
        public static readonly NodeId KeyCredentialUpdatedAuditEventType = new NodeId(Opc.Ua.ObjectTypes.KeyCredentialUpdatedAuditEventType);

        /// <remarks />
        public static readonly NodeId KeyCredentialDeletedAuditEventType = new NodeId(Opc.Ua.ObjectTypes.KeyCredentialDeletedAuditEventType);

        /// <remarks />
        public static readonly NodeId AuthorizationServicesConfigurationFolderType = new NodeId(Opc.Ua.ObjectTypes.AuthorizationServicesConfigurationFolderType);

        /// <remarks />
        public static readonly NodeId AuthorizationServiceConfigurationType = new NodeId(Opc.Ua.ObjectTypes.AuthorizationServiceConfigurationType);

        /// <remarks />
        public static readonly NodeId AggregateConfigurationType = new NodeId(Opc.Ua.ObjectTypes.AggregateConfigurationType);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType = new NodeId(Opc.Ua.ObjectTypes.PubSubKeyServiceType);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType = new NodeId(Opc.Ua.ObjectTypes.SecurityGroupFolderType);

        /// <remarks />
        public static readonly NodeId SecurityGroupType = new NodeId(Opc.Ua.ObjectTypes.SecurityGroupType);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType = new NodeId(Opc.Ua.ObjectTypes.PublishSubscribeType);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType = new NodeId(Opc.Ua.ObjectTypes.PublishedDataSetType);

        /// <remarks />
        public static readonly NodeId ExtensionFieldsType = new NodeId(Opc.Ua.ObjectTypes.ExtensionFieldsType);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType = new NodeId(Opc.Ua.ObjectTypes.PublishedDataItemsType);

        /// <remarks />
        public static readonly NodeId PublishedEventsType = new NodeId(Opc.Ua.ObjectTypes.PublishedEventsType);

        /// <remarks />
        public static readonly NodeId DataSetFolderType = new NodeId(Opc.Ua.ObjectTypes.DataSetFolderType);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType = new NodeId(Opc.Ua.ObjectTypes.PubSubConnectionType);

        /// <remarks />
        public static readonly NodeId ConnectionTransportType = new NodeId(Opc.Ua.ObjectTypes.ConnectionTransportType);

        /// <remarks />
        public static readonly NodeId PubSubGroupType = new NodeId(Opc.Ua.ObjectTypes.PubSubGroupType);

        /// <remarks />
        public static readonly NodeId WriterGroupType = new NodeId(Opc.Ua.ObjectTypes.WriterGroupType);

        /// <remarks />
        public static readonly NodeId WriterGroupTransportType = new NodeId(Opc.Ua.ObjectTypes.WriterGroupTransportType);

        /// <remarks />
        public static readonly NodeId WriterGroupMessageType = new NodeId(Opc.Ua.ObjectTypes.WriterGroupMessageType);

        /// <remarks />
        public static readonly NodeId ReaderGroupType = new NodeId(Opc.Ua.ObjectTypes.ReaderGroupType);

        /// <remarks />
        public static readonly NodeId ReaderGroupTransportType = new NodeId(Opc.Ua.ObjectTypes.ReaderGroupTransportType);

        /// <remarks />
        public static readonly NodeId ReaderGroupMessageType = new NodeId(Opc.Ua.ObjectTypes.ReaderGroupMessageType);

        /// <remarks />
        public static readonly NodeId DataSetWriterType = new NodeId(Opc.Ua.ObjectTypes.DataSetWriterType);

        /// <remarks />
        public static readonly NodeId DataSetWriterTransportType = new NodeId(Opc.Ua.ObjectTypes.DataSetWriterTransportType);

        /// <remarks />
        public static readonly NodeId DataSetWriterMessageType = new NodeId(Opc.Ua.ObjectTypes.DataSetWriterMessageType);

        /// <remarks />
        public static readonly NodeId DataSetReaderType = new NodeId(Opc.Ua.ObjectTypes.DataSetReaderType);

        /// <remarks />
        public static readonly NodeId DataSetReaderTransportType = new NodeId(Opc.Ua.ObjectTypes.DataSetReaderTransportType);

        /// <remarks />
        public static readonly NodeId DataSetReaderMessageType = new NodeId(Opc.Ua.ObjectTypes.DataSetReaderMessageType);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetType = new NodeId(Opc.Ua.ObjectTypes.SubscribedDataSetType);

        /// <remarks />
        public static readonly NodeId TargetVariablesType = new NodeId(Opc.Ua.ObjectTypes.TargetVariablesType);

        /// <remarks />
        public static readonly NodeId SubscribedDataSetMirrorType = new NodeId(Opc.Ua.ObjectTypes.SubscribedDataSetMirrorType);

        /// <remarks />
        public static readonly NodeId PubSubStatusType = new NodeId(Opc.Ua.ObjectTypes.PubSubStatusType);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType = new NodeId(Opc.Ua.ObjectTypes.PubSubDiagnosticsType);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType = new NodeId(Opc.Ua.ObjectTypes.PubSubDiagnosticsRootType);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType = new NodeId(Opc.Ua.ObjectTypes.PubSubDiagnosticsConnectionType);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType = new NodeId(Opc.Ua.ObjectTypes.PubSubDiagnosticsWriterGroupType);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType = new NodeId(Opc.Ua.ObjectTypes.PubSubDiagnosticsReaderGroupType);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType = new NodeId(Opc.Ua.ObjectTypes.PubSubDiagnosticsDataSetWriterType);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType = new NodeId(Opc.Ua.ObjectTypes.PubSubDiagnosticsDataSetReaderType);

        /// <remarks />
        public static readonly NodeId PubSubStatusEventType = new NodeId(Opc.Ua.ObjectTypes.PubSubStatusEventType);

        /// <remarks />
        public static readonly NodeId PubSubTransportLimitsExceedEventType = new NodeId(Opc.Ua.ObjectTypes.PubSubTransportLimitsExceedEventType);

        /// <remarks />
        public static readonly NodeId PubSubCommunicationFailureEventType = new NodeId(Opc.Ua.ObjectTypes.PubSubCommunicationFailureEventType);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageType = new NodeId(Opc.Ua.ObjectTypes.UadpWriterGroupMessageType);

        /// <remarks />
        public static readonly NodeId UadpDataSetWriterMessageType = new NodeId(Opc.Ua.ObjectTypes.UadpDataSetWriterMessageType);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType = new NodeId(Opc.Ua.ObjectTypes.UadpDataSetReaderMessageType);

        /// <remarks />
        public static readonly NodeId JsonWriterGroupMessageType = new NodeId(Opc.Ua.ObjectTypes.JsonWriterGroupMessageType);

        /// <remarks />
        public static readonly NodeId JsonDataSetWriterMessageType = new NodeId(Opc.Ua.ObjectTypes.JsonDataSetWriterMessageType);

        /// <remarks />
        public static readonly NodeId JsonDataSetReaderMessageType = new NodeId(Opc.Ua.ObjectTypes.JsonDataSetReaderMessageType);

        /// <remarks />
        public static readonly NodeId DatagramConnectionTransportType = new NodeId(Opc.Ua.ObjectTypes.DatagramConnectionTransportType);

        /// <remarks />
        public static readonly NodeId DatagramWriterGroupTransportType = new NodeId(Opc.Ua.ObjectTypes.DatagramWriterGroupTransportType);

        /// <remarks />
        public static readonly NodeId BrokerConnectionTransportType = new NodeId(Opc.Ua.ObjectTypes.BrokerConnectionTransportType);

        /// <remarks />
        public static readonly NodeId BrokerWriterGroupTransportType = new NodeId(Opc.Ua.ObjectTypes.BrokerWriterGroupTransportType);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportType = new NodeId(Opc.Ua.ObjectTypes.BrokerDataSetWriterTransportType);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportType = new NodeId(Opc.Ua.ObjectTypes.BrokerDataSetReaderTransportType);

        /// <remarks />
        public static readonly NodeId NetworkAddressType = new NodeId(Opc.Ua.ObjectTypes.NetworkAddressType);

        /// <remarks />
        public static readonly NodeId NetworkAddressUrlType = new NodeId(Opc.Ua.ObjectTypes.NetworkAddressUrlType);

        /// <remarks />
        public static readonly NodeId AliasNameType = new NodeId(Opc.Ua.ObjectTypes.AliasNameType);

        /// <remarks />
        public static readonly NodeId AliasNameCategoryType = new NodeId(Opc.Ua.ObjectTypes.AliasNameCategoryType);

        /// <remarks />
        public static readonly NodeId IIetfBaseNetworkInterfaceType = new NodeId(Opc.Ua.ObjectTypes.IIetfBaseNetworkInterfaceType);

        /// <remarks />
        public static readonly NodeId IIeeeBaseEthernetPortType = new NodeId(Opc.Ua.ObjectTypes.IIeeeBaseEthernetPortType);

        /// <remarks />
        public static readonly NodeId IIeeeAutoNegotiationStatusType = new NodeId(Opc.Ua.ObjectTypes.IIeeeAutoNegotiationStatusType);

        /// <remarks />
        public static readonly NodeId IBaseEthernetCapabilitiesType = new NodeId(Opc.Ua.ObjectTypes.IBaseEthernetCapabilitiesType);

        /// <remarks />
        public static readonly NodeId ISrClassType = new NodeId(Opc.Ua.ObjectTypes.ISrClassType);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStreamType = new NodeId(Opc.Ua.ObjectTypes.IIeeeBaseTsnStreamType);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnTrafficSpecificationType = new NodeId(Opc.Ua.ObjectTypes.IIeeeBaseTsnTrafficSpecificationType);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStatusStreamType = new NodeId(Opc.Ua.ObjectTypes.IIeeeBaseTsnStatusStreamType);

        /// <remarks />
        public static readonly NodeId IIeeeTsnInterfaceConfigurationType = new NodeId(Opc.Ua.ObjectTypes.IIeeeTsnInterfaceConfigurationType);

        /// <remarks />
        public static readonly NodeId IIeeeTsnInterfaceConfigurationTalkerType = new NodeId(Opc.Ua.ObjectTypes.IIeeeTsnInterfaceConfigurationTalkerType);

        /// <remarks />
        public static readonly NodeId IIeeeTsnInterfaceConfigurationListenerType = new NodeId(Opc.Ua.ObjectTypes.IIeeeTsnInterfaceConfigurationListenerType);

        /// <remarks />
        public static readonly NodeId IIeeeTsnMacAddressType = new NodeId(Opc.Ua.ObjectTypes.IIeeeTsnMacAddressType);

        /// <remarks />
        public static readonly NodeId IIeeeTsnVlanTagType = new NodeId(Opc.Ua.ObjectTypes.IIeeeTsnVlanTagType);

        /// <remarks />
        public static readonly NodeId IPriorityMappingEntryType = new NodeId(Opc.Ua.ObjectTypes.IPriorityMappingEntryType);
    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ReferenceTypeIds
    {
        /// <remarks />
        public static readonly NodeId References = new NodeId(Opc.Ua.ReferenceTypes.References);

        /// <remarks />
        public static readonly NodeId NonHierarchicalReferences = new NodeId(Opc.Ua.ReferenceTypes.NonHierarchicalReferences);

        /// <remarks />
        public static readonly NodeId HierarchicalReferences = new NodeId(Opc.Ua.ReferenceTypes.HierarchicalReferences);

        /// <remarks />
        public static readonly NodeId HasChild = new NodeId(Opc.Ua.ReferenceTypes.HasChild);

        /// <remarks />
        public static readonly NodeId Organizes = new NodeId(Opc.Ua.ReferenceTypes.Organizes);

        /// <remarks />
        public static readonly NodeId HasEventSource = new NodeId(Opc.Ua.ReferenceTypes.HasEventSource);

        /// <remarks />
        public static readonly NodeId HasModellingRule = new NodeId(Opc.Ua.ReferenceTypes.HasModellingRule);

        /// <remarks />
        public static readonly NodeId HasEncoding = new NodeId(Opc.Ua.ReferenceTypes.HasEncoding);

        /// <remarks />
        public static readonly NodeId HasDescription = new NodeId(Opc.Ua.ReferenceTypes.HasDescription);

        /// <remarks />
        public static readonly NodeId HasTypeDefinition = new NodeId(Opc.Ua.ReferenceTypes.HasTypeDefinition);

        /// <remarks />
        public static readonly NodeId GeneratesEvent = new NodeId(Opc.Ua.ReferenceTypes.GeneratesEvent);

        /// <remarks />
        public static readonly NodeId AlwaysGeneratesEvent = new NodeId(Opc.Ua.ReferenceTypes.AlwaysGeneratesEvent);

        /// <remarks />
        public static readonly NodeId Aggregates = new NodeId(Opc.Ua.ReferenceTypes.Aggregates);

        /// <remarks />
        public static readonly NodeId HasSubtype = new NodeId(Opc.Ua.ReferenceTypes.HasSubtype);

        /// <remarks />
        public static readonly NodeId HasProperty = new NodeId(Opc.Ua.ReferenceTypes.HasProperty);

        /// <remarks />
        public static readonly NodeId HasComponent = new NodeId(Opc.Ua.ReferenceTypes.HasComponent);

        /// <remarks />
        public static readonly NodeId HasNotifier = new NodeId(Opc.Ua.ReferenceTypes.HasNotifier);

        /// <remarks />
        public static readonly NodeId HasOrderedComponent = new NodeId(Opc.Ua.ReferenceTypes.HasOrderedComponent);

        /// <remarks />
        public static readonly NodeId FromState = new NodeId(Opc.Ua.ReferenceTypes.FromState);

        /// <remarks />
        public static readonly NodeId ToState = new NodeId(Opc.Ua.ReferenceTypes.ToState);

        /// <remarks />
        public static readonly NodeId HasCause = new NodeId(Opc.Ua.ReferenceTypes.HasCause);

        /// <remarks />
        public static readonly NodeId HasEffect = new NodeId(Opc.Ua.ReferenceTypes.HasEffect);

        /// <remarks />
        public static readonly NodeId HasSubStateMachine = new NodeId(Opc.Ua.ReferenceTypes.HasSubStateMachine);

        /// <remarks />
        public static readonly NodeId HasHistoricalConfiguration = new NodeId(Opc.Ua.ReferenceTypes.HasHistoricalConfiguration);

        /// <remarks />
        public static readonly NodeId HasArgumentDescription = new NodeId(Opc.Ua.ReferenceTypes.HasArgumentDescription);

        /// <remarks />
        public static readonly NodeId HasOptionalInputArgumentDescription = new NodeId(Opc.Ua.ReferenceTypes.HasOptionalInputArgumentDescription);

        /// <remarks />
        public static readonly NodeId HasGuard = new NodeId(Opc.Ua.ReferenceTypes.HasGuard);

        /// <remarks />
        public static readonly NodeId HasDictionaryEntry = new NodeId(Opc.Ua.ReferenceTypes.HasDictionaryEntry);

        /// <remarks />
        public static readonly NodeId HasInterface = new NodeId(Opc.Ua.ReferenceTypes.HasInterface);

        /// <remarks />
        public static readonly NodeId HasAddIn = new NodeId(Opc.Ua.ReferenceTypes.HasAddIn);

        /// <remarks />
        public static readonly NodeId HasTrueSubState = new NodeId(Opc.Ua.ReferenceTypes.HasTrueSubState);

        /// <remarks />
        public static readonly NodeId HasFalseSubState = new NodeId(Opc.Ua.ReferenceTypes.HasFalseSubState);

        /// <remarks />
        public static readonly NodeId HasAlarmSuppressionGroup = new NodeId(Opc.Ua.ReferenceTypes.HasAlarmSuppressionGroup);

        /// <remarks />
        public static readonly NodeId AlarmGroupMember = new NodeId(Opc.Ua.ReferenceTypes.AlarmGroupMember);

        /// <remarks />
        public static readonly NodeId HasCondition = new NodeId(Opc.Ua.ReferenceTypes.HasCondition);

        /// <remarks />
        public static readonly NodeId HasEffectDisable = new NodeId(Opc.Ua.ReferenceTypes.HasEffectDisable);

        /// <remarks />
        public static readonly NodeId HasEffectEnable = new NodeId(Opc.Ua.ReferenceTypes.HasEffectEnable);

        /// <remarks />
        public static readonly NodeId HasEffectSuppressed = new NodeId(Opc.Ua.ReferenceTypes.HasEffectSuppressed);

        /// <remarks />
        public static readonly NodeId HasEffectUnsuppressed = new NodeId(Opc.Ua.ReferenceTypes.HasEffectUnsuppressed);

        /// <remarks />
        public static readonly NodeId HasPubSubConnection = new NodeId(Opc.Ua.ReferenceTypes.HasPubSubConnection);

        /// <remarks />
        public static readonly NodeId DataSetToWriter = new NodeId(Opc.Ua.ReferenceTypes.DataSetToWriter);

        /// <remarks />
        public static readonly NodeId HasDataSetWriter = new NodeId(Opc.Ua.ReferenceTypes.HasDataSetWriter);

        /// <remarks />
        public static readonly NodeId HasWriterGroup = new NodeId(Opc.Ua.ReferenceTypes.HasWriterGroup);

        /// <remarks />
        public static readonly NodeId HasDataSetReader = new NodeId(Opc.Ua.ReferenceTypes.HasDataSetReader);

        /// <remarks />
        public static readonly NodeId HasReaderGroup = new NodeId(Opc.Ua.ReferenceTypes.HasReaderGroup);

        /// <remarks />
        public static readonly NodeId AliasFor = new NodeId(Opc.Ua.ReferenceTypes.AliasFor);
    }
    #endregion

    #region Variable Node Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableIds
    {
        /// <remarks />
        public static readonly NodeId DataTypeDescriptionType_DataTypeVersion = new NodeId(Opc.Ua.Variables.DataTypeDescriptionType_DataTypeVersion);

        /// <remarks />
        public static readonly NodeId DataTypeDescriptionType_DictionaryFragment = new NodeId(Opc.Ua.Variables.DataTypeDescriptionType_DictionaryFragment);

        /// <remarks />
        public static readonly NodeId DataTypeDictionaryType_DataTypeVersion = new NodeId(Opc.Ua.Variables.DataTypeDictionaryType_DataTypeVersion);

        /// <remarks />
        public static readonly NodeId DataTypeDictionaryType_NamespaceUri = new NodeId(Opc.Ua.Variables.DataTypeDictionaryType_NamespaceUri);

        /// <remarks />
        public static readonly NodeId DataTypeDictionaryType_Deprecated = new NodeId(Opc.Ua.Variables.DataTypeDictionaryType_Deprecated);

        /// <remarks />
        public static readonly NodeId NamingRuleType_EnumValues = new NodeId(Opc.Ua.Variables.NamingRuleType_EnumValues);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceUri = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceUri);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceVersion = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceVersion);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespacePublicationDate = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespacePublicationDate);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_IsNamespaceSubset = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_IsNamespaceSubset);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_StaticNodeIdTypes = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_StaticNodeIdTypes);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_StaticNumericNodeIdRange = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_StaticNumericNodeIdRange);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_StaticStringNodeIdPattern = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_StaticStringNodeIdPattern);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Size = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_Size);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Writable = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_Writable);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_UserWritable = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_UserWritable);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_OpenCount = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_OpenCount);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Open_InputArguments = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Open_OutputArguments = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Close_InputArguments = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Read_InputArguments = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Read_OutputArguments = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_Write_InputArguments = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_NamespaceFile_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_NamespaceFile_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_DefaultRolePermissions = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_DefaultRolePermissions);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_DefaultUserRolePermissions = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_DefaultUserRolePermissions);

        /// <remarks />
        public static readonly NodeId OPCUANamespaceMetadata_DefaultAccessRestrictions = new NodeId(Opc.Ua.Variables.OPCUANamespaceMetadata_DefaultAccessRestrictions);

        /// <remarks />
        public static readonly NodeId NodeVersion = new NodeId(Opc.Ua.Variables.NodeVersion);

        /// <remarks />
        public static readonly NodeId ViewVersion = new NodeId(Opc.Ua.Variables.ViewVersion);

        /// <remarks />
        public static readonly NodeId Icon = new NodeId(Opc.Ua.Variables.Icon);

        /// <remarks />
        public static readonly NodeId LocalTime = new NodeId(Opc.Ua.Variables.LocalTime);

        /// <remarks />
        public static readonly NodeId AllowNulls = new NodeId(Opc.Ua.Variables.AllowNulls);

        /// <remarks />
        public static readonly NodeId ValueAsText = new NodeId(Opc.Ua.Variables.ValueAsText);

        /// <remarks />
        public static readonly NodeId MaxStringLength = new NodeId(Opc.Ua.Variables.MaxStringLength);

        /// <remarks />
        public static readonly NodeId MaxCharacters = new NodeId(Opc.Ua.Variables.MaxCharacters);

        /// <remarks />
        public static readonly NodeId MaxByteStringLength = new NodeId(Opc.Ua.Variables.MaxByteStringLength);

        /// <remarks />
        public static readonly NodeId MaxArrayLength = new NodeId(Opc.Ua.Variables.MaxArrayLength);

        /// <remarks />
        public static readonly NodeId EngineeringUnits = new NodeId(Opc.Ua.Variables.EngineeringUnits);

        /// <remarks />
        public static readonly NodeId EnumStrings = new NodeId(Opc.Ua.Variables.EnumStrings);

        /// <remarks />
        public static readonly NodeId EnumValues = new NodeId(Opc.Ua.Variables.EnumValues);

        /// <remarks />
        public static readonly NodeId OptionSetValues = new NodeId(Opc.Ua.Variables.OptionSetValues);

        /// <remarks />
        public static readonly NodeId InputArguments = new NodeId(Opc.Ua.Variables.InputArguments);

        /// <remarks />
        public static readonly NodeId OutputArguments = new NodeId(Opc.Ua.Variables.OutputArguments);

        /// <remarks />
        public static readonly NodeId DefaultInstanceBrowseName = new NodeId(Opc.Ua.Variables.DefaultInstanceBrowseName);

        /// <remarks />
        public static readonly NodeId ServerType_ServerArray = new NodeId(Opc.Ua.Variables.ServerType_ServerArray);

        /// <remarks />
        public static readonly NodeId ServerType_NamespaceArray = new NodeId(Opc.Ua.Variables.ServerType_NamespaceArray);

        /// <remarks />
        public static readonly NodeId ServerType_UrisVersion = new NodeId(Opc.Ua.Variables.ServerType_UrisVersion);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_StartTime = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_StartTime);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_CurrentTime = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_CurrentTime);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_State = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_State);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_BuildInfo = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_ProductUri = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_ProductUri);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_ManufacturerName = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_ManufacturerName);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_ProductName = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_ProductName);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_SoftwareVersion = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_SoftwareVersion);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_BuildNumber = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_BuildNumber);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_BuildInfo_BuildDate = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_BuildInfo_BuildDate);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_SecondsTillShutdown = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_SecondsTillShutdown);

        /// <remarks />
        public static readonly NodeId ServerType_ServerStatus_ShutdownReason = new NodeId(Opc.Ua.Variables.ServerType_ServerStatus_ShutdownReason);

        /// <remarks />
        public static readonly NodeId ServerType_ServiceLevel = new NodeId(Opc.Ua.Variables.ServerType_ServiceLevel);

        /// <remarks />
        public static readonly NodeId ServerType_Auditing = new NodeId(Opc.Ua.Variables.ServerType_Auditing);

        /// <remarks />
        public static readonly NodeId ServerType_EstimatedReturnTime = new NodeId(Opc.Ua.Variables.ServerType_EstimatedReturnTime);

        /// <remarks />
        public static readonly NodeId ServerType_LocalTime = new NodeId(Opc.Ua.Variables.ServerType_LocalTime);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_ServerProfileArray = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_ServerProfileArray);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_LocaleIdArray = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_LocaleIdArray);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_MinSupportedSampleRate = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_MinSupportedSampleRate);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_MaxBrowseContinuationPoints = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_MaxBrowseContinuationPoints);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_MaxQueryContinuationPoints = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_MaxQueryContinuationPoints);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_MaxHistoryContinuationPoints = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_MaxHistoryContinuationPoints);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_SoftwareCertificates = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_SoftwareCertificates);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_RoleSet_AddRole_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_RoleSet_AddRole_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_RoleSet_AddRole_OutputArguments = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_RoleSet_AddRole_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerType_ServerCapabilities_RoleSet_RemoveRole_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_ServerCapabilities_RoleSet_RemoveRole_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId ServerType_ServerDiagnostics_EnabledFlag = new NodeId(Opc.Ua.Variables.ServerType_ServerDiagnostics_EnabledFlag);

        /// <remarks />
        public static readonly NodeId ServerType_ServerRedundancy_RedundancySupport = new NodeId(Opc.Ua.Variables.ServerType_ServerRedundancy_RedundancySupport);

        /// <remarks />
        public static readonly NodeId ServerType_GetMonitoredItems_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_GetMonitoredItems_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerType_GetMonitoredItems_OutputArguments = new NodeId(Opc.Ua.Variables.ServerType_GetMonitoredItems_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerType_ResendData_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_ResendData_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerType_SetSubscriptionDurable_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_SetSubscriptionDurable_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerType_SetSubscriptionDurable_OutputArguments = new NodeId(Opc.Ua.Variables.ServerType_SetSubscriptionDurable_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerType_RequestServerStateChange_InputArguments = new NodeId(Opc.Ua.Variables.ServerType_RequestServerStateChange_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_ServerProfileArray = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_ServerProfileArray);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_LocaleIdArray = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_LocaleIdArray);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_MinSupportedSampleRate = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MinSupportedSampleRate);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_MaxBrowseContinuationPoints = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxBrowseContinuationPoints);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_MaxQueryContinuationPoints = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxQueryContinuationPoints);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_MaxHistoryContinuationPoints = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxHistoryContinuationPoints);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_SoftwareCertificates = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_SoftwareCertificates);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_MaxArrayLength = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxArrayLength);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_MaxStringLength = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxStringLength);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_MaxByteStringLength = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_MaxByteStringLength);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_VendorCapability_Placeholder = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_VendorCapability_Placeholder);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_RoleSet_AddRole_InputArguments = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_RoleSet_AddRole_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_RoleSet_AddRole_OutputArguments = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_RoleSet_AddRole_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerCapabilitiesType_RoleSet_RemoveRole_InputArguments = new NodeId(Opc.Ua.Variables.ServerCapabilitiesType_RoleSet_RemoveRole_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_SamplingIntervalDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_SamplingIntervalDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_SubscriptionDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsType_EnabledFlag = new NodeId(Opc.Ua.Variables.ServerDiagnosticsType_EnabledFlag);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_SessionDiagnosticsArray = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_SessionDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate);

        /// <remarks />
        public static readonly NodeId SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SessionId);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SessionName = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SessionName);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CallCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CallCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId ServerRedundancyType_RedundancySupport = new NodeId(Opc.Ua.Variables.ServerRedundancyType_RedundancySupport);

        /// <remarks />
        public static readonly NodeId TransparentRedundancyType_CurrentServerId = new NodeId(Opc.Ua.Variables.TransparentRedundancyType_CurrentServerId);

        /// <remarks />
        public static readonly NodeId TransparentRedundancyType_RedundantServerArray = new NodeId(Opc.Ua.Variables.TransparentRedundancyType_RedundantServerArray);

        /// <remarks />
        public static readonly NodeId NonTransparentRedundancyType_ServerUriArray = new NodeId(Opc.Ua.Variables.NonTransparentRedundancyType_ServerUriArray);

        /// <remarks />
        public static readonly NodeId NonTransparentNetworkRedundancyType_ServerNetworkGroups = new NodeId(Opc.Ua.Variables.NonTransparentNetworkRedundancyType_ServerNetworkGroups);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerRead = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerRead);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerHistoryReadData = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerHistoryReadData);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerHistoryReadEvents = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerHistoryReadEvents);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerWrite = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerWrite);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerHistoryUpdateData = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerHistoryUpdateData);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerHistoryUpdateEvents = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerHistoryUpdateEvents);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerMethodCall = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerMethodCall);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerBrowse = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerBrowse);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerRegisterNodes = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerRegisterNodes);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxNodesPerNodeManagement = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxNodesPerNodeManagement);

        /// <remarks />
        public static readonly NodeId OperationLimitsType_MaxMonitoredItemsPerCall = new NodeId(Opc.Ua.Variables.OperationLimitsType_MaxMonitoredItemsPerCall);

        /// <remarks />
        public static readonly NodeId FileType_Size = new NodeId(Opc.Ua.Variables.FileType_Size);

        /// <remarks />
        public static readonly NodeId FileType_Writable = new NodeId(Opc.Ua.Variables.FileType_Writable);

        /// <remarks />
        public static readonly NodeId FileType_UserWritable = new NodeId(Opc.Ua.Variables.FileType_UserWritable);

        /// <remarks />
        public static readonly NodeId FileType_OpenCount = new NodeId(Opc.Ua.Variables.FileType_OpenCount);

        /// <remarks />
        public static readonly NodeId FileType_MimeType = new NodeId(Opc.Ua.Variables.FileType_MimeType);

        /// <remarks />
        public static readonly NodeId FileType_MaxByteStringLength = new NodeId(Opc.Ua.Variables.FileType_MaxByteStringLength);

        /// <remarks />
        public static readonly NodeId FileType_Open_InputArguments = new NodeId(Opc.Ua.Variables.FileType_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId FileType_Open_OutputArguments = new NodeId(Opc.Ua.Variables.FileType_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileType_Close_InputArguments = new NodeId(Opc.Ua.Variables.FileType_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId FileType_Read_InputArguments = new NodeId(Opc.Ua.Variables.FileType_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId FileType_Read_OutputArguments = new NodeId(Opc.Ua.Variables.FileType_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileType_Write_InputArguments = new NodeId(Opc.Ua.Variables.FileType_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId FileType_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileType_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId FileType_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.FileType_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileType_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileType_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_Open_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_Open_OutputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_Close_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_Read_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_Read_OutputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_Write_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId AddressSpaceFileType_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.AddressSpaceFileType_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceUri = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceUri);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceVersion = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceVersion);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespacePublicationDate = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespacePublicationDate);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_IsNamespaceSubset = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_IsNamespaceSubset);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_StaticNodeIdTypes = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_StaticNodeIdTypes);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_StaticNumericNodeIdRange = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_StaticNumericNodeIdRange);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_StaticStringNodeIdPattern = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_StaticStringNodeIdPattern);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Size = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Size);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Writable = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Writable);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_UserWritable = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_UserWritable);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_OpenCount = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_OpenCount);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Open_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Open_OutputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Close_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Read_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Read_OutputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_Write_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_DefaultRolePermissions = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_DefaultRolePermissions);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_DefaultUserRolePermissions = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_DefaultUserRolePermissions);

        /// <remarks />
        public static readonly NodeId NamespaceMetadataType_DefaultAccessRestrictions = new NodeId(Opc.Ua.Variables.NamespaceMetadataType_DefaultAccessRestrictions);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId BaseEventType_EventId = new NodeId(Opc.Ua.Variables.BaseEventType_EventId);

        /// <remarks />
        public static readonly NodeId BaseEventType_EventType = new NodeId(Opc.Ua.Variables.BaseEventType_EventType);

        /// <remarks />
        public static readonly NodeId BaseEventType_SourceNode = new NodeId(Opc.Ua.Variables.BaseEventType_SourceNode);

        /// <remarks />
        public static readonly NodeId BaseEventType_SourceName = new NodeId(Opc.Ua.Variables.BaseEventType_SourceName);

        /// <remarks />
        public static readonly NodeId BaseEventType_Time = new NodeId(Opc.Ua.Variables.BaseEventType_Time);

        /// <remarks />
        public static readonly NodeId BaseEventType_ReceiveTime = new NodeId(Opc.Ua.Variables.BaseEventType_ReceiveTime);

        /// <remarks />
        public static readonly NodeId BaseEventType_LocalTime = new NodeId(Opc.Ua.Variables.BaseEventType_LocalTime);

        /// <remarks />
        public static readonly NodeId BaseEventType_Message = new NodeId(Opc.Ua.Variables.BaseEventType_Message);

        /// <remarks />
        public static readonly NodeId BaseEventType_Severity = new NodeId(Opc.Ua.Variables.BaseEventType_Severity);

        /// <remarks />
        public static readonly NodeId AuditEventType_ActionTimeStamp = new NodeId(Opc.Ua.Variables.AuditEventType_ActionTimeStamp);

        /// <remarks />
        public static readonly NodeId AuditEventType_Status = new NodeId(Opc.Ua.Variables.AuditEventType_Status);

        /// <remarks />
        public static readonly NodeId AuditEventType_ServerId = new NodeId(Opc.Ua.Variables.AuditEventType_ServerId);

        /// <remarks />
        public static readonly NodeId AuditEventType_ClientAuditEntryId = new NodeId(Opc.Ua.Variables.AuditEventType_ClientAuditEntryId);

        /// <remarks />
        public static readonly NodeId AuditEventType_ClientUserId = new NodeId(Opc.Ua.Variables.AuditEventType_ClientUserId);

        /// <remarks />
        public static readonly NodeId AuditSecurityEventType_StatusCodeId = new NodeId(Opc.Ua.Variables.AuditSecurityEventType_StatusCodeId);

        /// <remarks />
        public static readonly NodeId AuditChannelEventType_SecureChannelId = new NodeId(Opc.Ua.Variables.AuditChannelEventType_SecureChannelId);

        /// <remarks />
        public static readonly NodeId AuditOpenSecureChannelEventType_ClientCertificate = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_ClientCertificate);

        /// <remarks />
        public static readonly NodeId AuditOpenSecureChannelEventType_ClientCertificateThumbprint = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_ClientCertificateThumbprint);

        /// <remarks />
        public static readonly NodeId AuditOpenSecureChannelEventType_RequestType = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_RequestType);

        /// <remarks />
        public static readonly NodeId AuditOpenSecureChannelEventType_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_SecurityPolicyUri);

        /// <remarks />
        public static readonly NodeId AuditOpenSecureChannelEventType_SecurityMode = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_SecurityMode);

        /// <remarks />
        public static readonly NodeId AuditOpenSecureChannelEventType_RequestedLifetime = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_RequestedLifetime);

        /// <remarks />
        public static readonly NodeId AuditOpenSecureChannelEventType_CertificateErrorEventId = new NodeId(Opc.Ua.Variables.AuditOpenSecureChannelEventType_CertificateErrorEventId);

        /// <remarks />
        public static readonly NodeId AuditSessionEventType_SessionId = new NodeId(Opc.Ua.Variables.AuditSessionEventType_SessionId);

        /// <remarks />
        public static readonly NodeId AuditCreateSessionEventType_SecureChannelId = new NodeId(Opc.Ua.Variables.AuditCreateSessionEventType_SecureChannelId);

        /// <remarks />
        public static readonly NodeId AuditCreateSessionEventType_ClientCertificate = new NodeId(Opc.Ua.Variables.AuditCreateSessionEventType_ClientCertificate);

        /// <remarks />
        public static readonly NodeId AuditCreateSessionEventType_ClientCertificateThumbprint = new NodeId(Opc.Ua.Variables.AuditCreateSessionEventType_ClientCertificateThumbprint);

        /// <remarks />
        public static readonly NodeId AuditCreateSessionEventType_RevisedSessionTimeout = new NodeId(Opc.Ua.Variables.AuditCreateSessionEventType_RevisedSessionTimeout);

        /// <remarks />
        public static readonly NodeId AuditUrlMismatchEventType_EndpointUrl = new NodeId(Opc.Ua.Variables.AuditUrlMismatchEventType_EndpointUrl);

        /// <remarks />
        public static readonly NodeId AuditActivateSessionEventType_ClientSoftwareCertificates = new NodeId(Opc.Ua.Variables.AuditActivateSessionEventType_ClientSoftwareCertificates);

        /// <remarks />
        public static readonly NodeId AuditActivateSessionEventType_UserIdentityToken = new NodeId(Opc.Ua.Variables.AuditActivateSessionEventType_UserIdentityToken);

        /// <remarks />
        public static readonly NodeId AuditActivateSessionEventType_SecureChannelId = new NodeId(Opc.Ua.Variables.AuditActivateSessionEventType_SecureChannelId);

        /// <remarks />
        public static readonly NodeId AuditCancelEventType_RequestHandle = new NodeId(Opc.Ua.Variables.AuditCancelEventType_RequestHandle);

        /// <remarks />
        public static readonly NodeId AuditCertificateEventType_Certificate = new NodeId(Opc.Ua.Variables.AuditCertificateEventType_Certificate);

        /// <remarks />
        public static readonly NodeId AuditCertificateDataMismatchEventType_InvalidHostname = new NodeId(Opc.Ua.Variables.AuditCertificateDataMismatchEventType_InvalidHostname);

        /// <remarks />
        public static readonly NodeId AuditCertificateDataMismatchEventType_InvalidUri = new NodeId(Opc.Ua.Variables.AuditCertificateDataMismatchEventType_InvalidUri);

        /// <remarks />
        public static readonly NodeId AuditAddNodesEventType_NodesToAdd = new NodeId(Opc.Ua.Variables.AuditAddNodesEventType_NodesToAdd);

        /// <remarks />
        public static readonly NodeId AuditDeleteNodesEventType_NodesToDelete = new NodeId(Opc.Ua.Variables.AuditDeleteNodesEventType_NodesToDelete);

        /// <remarks />
        public static readonly NodeId AuditAddReferencesEventType_ReferencesToAdd = new NodeId(Opc.Ua.Variables.AuditAddReferencesEventType_ReferencesToAdd);

        /// <remarks />
        public static readonly NodeId AuditDeleteReferencesEventType_ReferencesToDelete = new NodeId(Opc.Ua.Variables.AuditDeleteReferencesEventType_ReferencesToDelete);

        /// <remarks />
        public static readonly NodeId AuditWriteUpdateEventType_AttributeId = new NodeId(Opc.Ua.Variables.AuditWriteUpdateEventType_AttributeId);

        /// <remarks />
        public static readonly NodeId AuditWriteUpdateEventType_IndexRange = new NodeId(Opc.Ua.Variables.AuditWriteUpdateEventType_IndexRange);

        /// <remarks />
        public static readonly NodeId AuditWriteUpdateEventType_OldValue = new NodeId(Opc.Ua.Variables.AuditWriteUpdateEventType_OldValue);

        /// <remarks />
        public static readonly NodeId AuditWriteUpdateEventType_NewValue = new NodeId(Opc.Ua.Variables.AuditWriteUpdateEventType_NewValue);

        /// <remarks />
        public static readonly NodeId AuditHistoryUpdateEventType_ParameterDataTypeId = new NodeId(Opc.Ua.Variables.AuditHistoryUpdateEventType_ParameterDataTypeId);

        /// <remarks />
        public static readonly NodeId AuditUpdateMethodEventType_MethodId = new NodeId(Opc.Ua.Variables.AuditUpdateMethodEventType_MethodId);

        /// <remarks />
        public static readonly NodeId AuditUpdateMethodEventType_InputArguments = new NodeId(Opc.Ua.Variables.AuditUpdateMethodEventType_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemStatusChangeEventType_SystemState = new NodeId(Opc.Ua.Variables.SystemStatusChangeEventType_SystemState);

        /// <remarks />
        public static readonly NodeId GeneralModelChangeEventType_Changes = new NodeId(Opc.Ua.Variables.GeneralModelChangeEventType_Changes);

        /// <remarks />
        public static readonly NodeId SemanticChangeEventType_Changes = new NodeId(Opc.Ua.Variables.SemanticChangeEventType_Changes);

        /// <remarks />
        public static readonly NodeId ProgressEventType_Context = new NodeId(Opc.Ua.Variables.ProgressEventType_Context);

        /// <remarks />
        public static readonly NodeId ProgressEventType_Progress = new NodeId(Opc.Ua.Variables.ProgressEventType_Progress);

        /// <remarks />
        public static readonly NodeId ServerStatusType_StartTime = new NodeId(Opc.Ua.Variables.ServerStatusType_StartTime);

        /// <remarks />
        public static readonly NodeId ServerStatusType_CurrentTime = new NodeId(Opc.Ua.Variables.ServerStatusType_CurrentTime);

        /// <remarks />
        public static readonly NodeId ServerStatusType_State = new NodeId(Opc.Ua.Variables.ServerStatusType_State);

        /// <remarks />
        public static readonly NodeId ServerStatusType_BuildInfo = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo);

        /// <remarks />
        public static readonly NodeId ServerStatusType_BuildInfo_ProductUri = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_ProductUri);

        /// <remarks />
        public static readonly NodeId ServerStatusType_BuildInfo_ManufacturerName = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_ManufacturerName);

        /// <remarks />
        public static readonly NodeId ServerStatusType_BuildInfo_ProductName = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_ProductName);

        /// <remarks />
        public static readonly NodeId ServerStatusType_BuildInfo_SoftwareVersion = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_SoftwareVersion);

        /// <remarks />
        public static readonly NodeId ServerStatusType_BuildInfo_BuildNumber = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_BuildNumber);

        /// <remarks />
        public static readonly NodeId ServerStatusType_BuildInfo_BuildDate = new NodeId(Opc.Ua.Variables.ServerStatusType_BuildInfo_BuildDate);

        /// <remarks />
        public static readonly NodeId ServerStatusType_SecondsTillShutdown = new NodeId(Opc.Ua.Variables.ServerStatusType_SecondsTillShutdown);

        /// <remarks />
        public static readonly NodeId ServerStatusType_ShutdownReason = new NodeId(Opc.Ua.Variables.ServerStatusType_ShutdownReason);

        /// <remarks />
        public static readonly NodeId BuildInfoType_ProductUri = new NodeId(Opc.Ua.Variables.BuildInfoType_ProductUri);

        /// <remarks />
        public static readonly NodeId BuildInfoType_ManufacturerName = new NodeId(Opc.Ua.Variables.BuildInfoType_ManufacturerName);

        /// <remarks />
        public static readonly NodeId BuildInfoType_ProductName = new NodeId(Opc.Ua.Variables.BuildInfoType_ProductName);

        /// <remarks />
        public static readonly NodeId BuildInfoType_SoftwareVersion = new NodeId(Opc.Ua.Variables.BuildInfoType_SoftwareVersion);

        /// <remarks />
        public static readonly NodeId BuildInfoType_BuildNumber = new NodeId(Opc.Ua.Variables.BuildInfoType_BuildNumber);

        /// <remarks />
        public static readonly NodeId BuildInfoType_BuildDate = new NodeId(Opc.Ua.Variables.BuildInfoType_BuildDate);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_ServerViewCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_ServerViewCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_CurrentSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_CurrentSessionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_CumulatedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_CumulatedSessionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_SecurityRejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_SecurityRejectedSessionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_RejectedSessionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_RejectedSessionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_SessionTimeoutCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_SessionTimeoutCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_SessionAbortCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_SessionAbortCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_PublishingIntervalCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_PublishingIntervalCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_CurrentSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_CurrentSubscriptionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_CumulatedSubscriptionCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_CumulatedSubscriptionCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType_RejectedRequestsCount = new NodeId(Opc.Ua.Variables.ServerDiagnosticsSummaryType_RejectedRequestsCount);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsType_SamplingInterval = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsType_SamplingInterval);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount = new NodeId(Opc.Ua.Variables.SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_SessionId = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_SessionId);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_SubscriptionId = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_SubscriptionId);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_Priority = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_Priority);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_PublishingInterval = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_PublishingInterval);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_MaxKeepAliveCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MaxKeepAliveCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_MaxLifetimeCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MaxLifetimeCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_MaxNotificationsPerPublish = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MaxNotificationsPerPublish);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_PublishingEnabled = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_PublishingEnabled);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_ModifyCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_ModifyCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_EnableCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_EnableCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_DisableCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_DisableCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_RepublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_RepublishRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_RepublishMessageRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_RepublishMessageRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_RepublishMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_RepublishMessageCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_TransferRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_TransferRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_TransferredToAltClientCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_TransferredToAltClientCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_TransferredToSameClientCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_TransferredToSameClientCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_PublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_PublishRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_DataChangeNotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_DataChangeNotificationsCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_EventNotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_EventNotificationsCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_NotificationsCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_NotificationsCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_LatePublishRequestCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_LatePublishRequestCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_CurrentKeepAliveCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_CurrentKeepAliveCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_CurrentLifetimeCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_CurrentLifetimeCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_UnacknowledgedMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_UnacknowledgedMessageCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_DiscardedMessageCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_DiscardedMessageCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_MonitoredItemCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MonitoredItemCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_DisabledMonitoredItemCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_DisabledMonitoredItemCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_MonitoringQueueOverflowCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_MonitoringQueueOverflowCount);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_NextSequenceNumber = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_NextSequenceNumber);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType_EventQueueOverflowCount = new NodeId(Opc.Ua.Variables.SubscriptionDiagnosticsType_EventQueueOverflowCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SessionId);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SessionName = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SessionName);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CallCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CallCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_SessionId = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SessionId);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_SessionName = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SessionName);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_ClientDescription = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ClientDescription);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_ServerUri = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ServerUri);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_EndpointUrl = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_EndpointUrl);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_LocaleIds = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_LocaleIds);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_ActualSessionTimeout = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ActualSessionTimeout);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_MaxResponseMessageSize = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_MaxResponseMessageSize);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_ClientConnectionTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ClientConnectionTime);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_ClientLastContactTime = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ClientLastContactTime);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_CurrentSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CurrentSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_CurrentMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CurrentMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_TotalRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_TotalRequestCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_UnauthorizedRequestCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_UnauthorizedRequestCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_ReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ReadCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_HistoryReadCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_HistoryReadCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_WriteCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_WriteCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_HistoryUpdateCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_HistoryUpdateCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_CallCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CallCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_CreateMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CreateMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_ModifyMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ModifyMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_SetMonitoringModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SetMonitoringModeCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_SetTriggeringCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SetTriggeringCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteMonitoredItemsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_DeleteMonitoredItemsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_CreateSubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_CreateSubscriptionCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_ModifySubscriptionCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_ModifySubscriptionCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_SetPublishingModeCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_SetPublishingModeCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_PublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_PublishCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_RepublishCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_RepublishCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_TransferSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_TransferSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteSubscriptionsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_DeleteSubscriptionsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_AddNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_AddNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_AddReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_AddReferencesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_DeleteNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteReferencesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_DeleteReferencesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_BrowseCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_BrowseCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_BrowseNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_BrowseNextCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_QueryFirstCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_QueryFirstCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_QueryNextCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_QueryNextCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_RegisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_RegisterNodesCount);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType_UnregisterNodesCount = new NodeId(Opc.Ua.Variables.SessionDiagnosticsVariableType_UnregisterNodesCount);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType_SessionId = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_SessionId);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType_ClientUserIdOfSession = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_ClientUserIdOfSession);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType_ClientUserIdHistory = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_ClientUserIdHistory);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType_AuthenticationMechanism = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_AuthenticationMechanism);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType_Encoding = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_Encoding);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType_TransportProtocol = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_TransportProtocol);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType_SecurityMode = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_SecurityMode);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_SecurityPolicyUri);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType_ClientCertificate = new NodeId(Opc.Ua.Variables.SessionSecurityDiagnosticsType_ClientCertificate);

        /// <remarks />
        public static readonly NodeId OptionSetType_OptionSetValues = new NodeId(Opc.Ua.Variables.OptionSetType_OptionSetValues);

        /// <remarks />
        public static readonly NodeId OptionSetType_BitMask = new NodeId(Opc.Ua.Variables.OptionSetType_BitMask);

        /// <remarks />
        public static readonly NodeId SelectionListType_Selections = new NodeId(Opc.Ua.Variables.SelectionListType_Selections);

        /// <remarks />
        public static readonly NodeId SelectionListType_SelectionDescriptions = new NodeId(Opc.Ua.Variables.SelectionListType_SelectionDescriptions);

        /// <remarks />
        public static readonly NodeId SelectionListType_RestrictToList = new NodeId(Opc.Ua.Variables.SelectionListType_RestrictToList);

        /// <remarks />
        public static readonly NodeId AudioVariableType_ListId = new NodeId(Opc.Ua.Variables.AudioVariableType_ListId);

        /// <remarks />
        public static readonly NodeId AudioVariableType_AgencyId = new NodeId(Opc.Ua.Variables.AudioVariableType_AgencyId);

        /// <remarks />
        public static readonly NodeId AudioVariableType_VersionId = new NodeId(Opc.Ua.Variables.AudioVariableType_VersionId);

        /// <remarks />
        public static readonly NodeId Server_ServerArray = new NodeId(Opc.Ua.Variables.Server_ServerArray);

        /// <remarks />
        public static readonly NodeId Server_NamespaceArray = new NodeId(Opc.Ua.Variables.Server_NamespaceArray);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus = new NodeId(Opc.Ua.Variables.Server_ServerStatus);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_StartTime = new NodeId(Opc.Ua.Variables.Server_ServerStatus_StartTime);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_CurrentTime = new NodeId(Opc.Ua.Variables.Server_ServerStatus_CurrentTime);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_State = new NodeId(Opc.Ua.Variables.Server_ServerStatus_State);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_BuildInfo = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_BuildInfo_ProductUri = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_ProductUri);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_BuildInfo_ManufacturerName = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_ManufacturerName);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_BuildInfo_ProductName = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_ProductName);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_BuildInfo_SoftwareVersion = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_SoftwareVersion);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_BuildInfo_BuildNumber = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_BuildNumber);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_BuildInfo_BuildDate = new NodeId(Opc.Ua.Variables.Server_ServerStatus_BuildInfo_BuildDate);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_SecondsTillShutdown = new NodeId(Opc.Ua.Variables.Server_ServerStatus_SecondsTillShutdown);

        /// <remarks />
        public static readonly NodeId Server_ServerStatus_ShutdownReason = new NodeId(Opc.Ua.Variables.Server_ServerStatus_ShutdownReason);

        /// <remarks />
        public static readonly NodeId Server_ServiceLevel = new NodeId(Opc.Ua.Variables.Server_ServiceLevel);

        /// <remarks />
        public static readonly NodeId Server_Auditing = new NodeId(Opc.Ua.Variables.Server_Auditing);

        /// <remarks />
        public static readonly NodeId Server_EstimatedReturnTime = new NodeId(Opc.Ua.Variables.Server_EstimatedReturnTime);

        /// <remarks />
        public static readonly NodeId Server_LocalTime = new NodeId(Opc.Ua.Variables.Server_LocalTime);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_ServerProfileArray = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_ServerProfileArray);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_LocaleIdArray = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_LocaleIdArray);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_MinSupportedSampleRate = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MinSupportedSampleRate);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_MaxBrowseContinuationPoints = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxBrowseContinuationPoints);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_MaxQueryContinuationPoints = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxQueryContinuationPoints);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_MaxHistoryContinuationPoints = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxHistoryContinuationPoints);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_SoftwareCertificates = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_SoftwareCertificates);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_MaxArrayLength = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxArrayLength);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_MaxStringLength = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxStringLength);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_MaxByteStringLength = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_MaxByteStringLength);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerRead = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerRead);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_RoleSet_AddRole_InputArguments = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_RoleSet_AddRole_InputArguments);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_RoleSet_AddRole_OutputArguments = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_RoleSet_AddRole_OutputArguments);

        /// <remarks />
        public static readonly NodeId Server_ServerCapabilities_RoleSet_RemoveRole_InputArguments = new NodeId(Opc.Ua.Variables.Server_ServerCapabilities_RoleSet_RemoveRole_InputArguments);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_SubscriptionDiagnosticsArray = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_SubscriptionDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray);

        /// <remarks />
        public static readonly NodeId Server_ServerDiagnostics_EnabledFlag = new NodeId(Opc.Ua.Variables.Server_ServerDiagnostics_EnabledFlag);

        /// <remarks />
        public static readonly NodeId Server_ServerRedundancy_RedundancySupport = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_RedundancySupport);

        /// <remarks />
        public static readonly NodeId Server_GetMonitoredItems_InputArguments = new NodeId(Opc.Ua.Variables.Server_GetMonitoredItems_InputArguments);

        /// <remarks />
        public static readonly NodeId Server_GetMonitoredItems_OutputArguments = new NodeId(Opc.Ua.Variables.Server_GetMonitoredItems_OutputArguments);

        /// <remarks />
        public static readonly NodeId Server_ResendData_InputArguments = new NodeId(Opc.Ua.Variables.Server_ResendData_InputArguments);

        /// <remarks />
        public static readonly NodeId Server_SetSubscriptionDurable_InputArguments = new NodeId(Opc.Ua.Variables.Server_SetSubscriptionDurable_InputArguments);

        /// <remarks />
        public static readonly NodeId Server_SetSubscriptionDurable_OutputArguments = new NodeId(Opc.Ua.Variables.Server_SetSubscriptionDurable_OutputArguments);

        /// <remarks />
        public static readonly NodeId Server_RequestServerStateChange_InputArguments = new NodeId(Opc.Ua.Variables.Server_RequestServerStateChange_InputArguments);

        /// <remarks />
        public static readonly NodeId Server_ServerRedundancy_CurrentServerId = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_CurrentServerId);

        /// <remarks />
        public static readonly NodeId Server_ServerRedundancy_RedundantServerArray = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_RedundantServerArray);

        /// <remarks />
        public static readonly NodeId Server_ServerRedundancy_ServerUriArray = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_ServerUriArray);

        /// <remarks />
        public static readonly NodeId Server_ServerRedundancy_ServerNetworkGroups = new NodeId(Opc.Ua.Variables.Server_ServerRedundancy_ServerNetworkGroups);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_AccessHistoryDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_AccessHistoryDataCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_AccessHistoryEventsCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_AccessHistoryEventsCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_MaxReturnDataValues = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_MaxReturnDataValues);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_MaxReturnEventValues = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_MaxReturnEventValues);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_InsertDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_InsertDataCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_ReplaceDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_ReplaceDataCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_UpdateDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_UpdateDataCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_DeleteRawCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_DeleteRawCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_DeleteAtTimeCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_DeleteAtTimeCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_InsertEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_InsertEventCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_ReplaceEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_ReplaceEventCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_UpdateEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_UpdateEventCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_DeleteEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_DeleteEventCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_InsertAnnotationCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_InsertAnnotationCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilities_ServerTimestampSupported = new NodeId(Opc.Ua.Variables.HistoryServerCapabilities_ServerTimestampSupported);

        /// <remarks />
        public static readonly NodeId StateMachineType_CurrentState = new NodeId(Opc.Ua.Variables.StateMachineType_CurrentState);

        /// <remarks />
        public static readonly NodeId StateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.StateMachineType_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId StateMachineType_LastTransition = new NodeId(Opc.Ua.Variables.StateMachineType_LastTransition);

        /// <remarks />
        public static readonly NodeId StateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.StateMachineType_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId StateVariableType_Id = new NodeId(Opc.Ua.Variables.StateVariableType_Id);

        /// <remarks />
        public static readonly NodeId StateVariableType_Name = new NodeId(Opc.Ua.Variables.StateVariableType_Name);

        /// <remarks />
        public static readonly NodeId StateVariableType_Number = new NodeId(Opc.Ua.Variables.StateVariableType_Number);

        /// <remarks />
        public static readonly NodeId StateVariableType_EffectiveDisplayName = new NodeId(Opc.Ua.Variables.StateVariableType_EffectiveDisplayName);

        /// <remarks />
        public static readonly NodeId TransitionVariableType_Id = new NodeId(Opc.Ua.Variables.TransitionVariableType_Id);

        /// <remarks />
        public static readonly NodeId TransitionVariableType_Name = new NodeId(Opc.Ua.Variables.TransitionVariableType_Name);

        /// <remarks />
        public static readonly NodeId TransitionVariableType_Number = new NodeId(Opc.Ua.Variables.TransitionVariableType_Number);

        /// <remarks />
        public static readonly NodeId TransitionVariableType_TransitionTime = new NodeId(Opc.Ua.Variables.TransitionVariableType_TransitionTime);

        /// <remarks />
        public static readonly NodeId TransitionVariableType_EffectiveTransitionTime = new NodeId(Opc.Ua.Variables.TransitionVariableType_EffectiveTransitionTime);

        /// <remarks />
        public static readonly NodeId FiniteStateMachineType_CurrentState = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_CurrentState);

        /// <remarks />
        public static readonly NodeId FiniteStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId FiniteStateMachineType_LastTransition = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_LastTransition);

        /// <remarks />
        public static readonly NodeId FiniteStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId FiniteStateMachineType_AvailableStates = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_AvailableStates);

        /// <remarks />
        public static readonly NodeId FiniteStateMachineType_AvailableTransitions = new NodeId(Opc.Ua.Variables.FiniteStateMachineType_AvailableTransitions);

        /// <remarks />
        public static readonly NodeId FiniteStateVariableType_Id = new NodeId(Opc.Ua.Variables.FiniteStateVariableType_Id);

        /// <remarks />
        public static readonly NodeId FiniteTransitionVariableType_Id = new NodeId(Opc.Ua.Variables.FiniteTransitionVariableType_Id);

        /// <remarks />
        public static readonly NodeId StateType_StateNumber = new NodeId(Opc.Ua.Variables.StateType_StateNumber);

        /// <remarks />
        public static readonly NodeId TransitionType_TransitionNumber = new NodeId(Opc.Ua.Variables.TransitionType_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ExpressionGuardVariableType_Expression = new NodeId(Opc.Ua.Variables.ExpressionGuardVariableType_Expression);

        /// <remarks />
        public static readonly NodeId RationalNumberType_Numerator = new NodeId(Opc.Ua.Variables.RationalNumberType_Numerator);

        /// <remarks />
        public static readonly NodeId RationalNumberType_Denominator = new NodeId(Opc.Ua.Variables.RationalNumberType_Denominator);

        /// <remarks />
        public static readonly NodeId VectorType_VectorUnit = new NodeId(Opc.Ua.Variables.VectorType_VectorUnit);

        /// <remarks />
        public static readonly NodeId ThreeDVectorType_X = new NodeId(Opc.Ua.Variables.ThreeDVectorType_X);

        /// <remarks />
        public static readonly NodeId ThreeDVectorType_Y = new NodeId(Opc.Ua.Variables.ThreeDVectorType_Y);

        /// <remarks />
        public static readonly NodeId ThreeDVectorType_Z = new NodeId(Opc.Ua.Variables.ThreeDVectorType_Z);

        /// <remarks />
        public static readonly NodeId CartesianCoordinatesType_LengthUnit = new NodeId(Opc.Ua.Variables.CartesianCoordinatesType_LengthUnit);

        /// <remarks />
        public static readonly NodeId ThreeDCartesianCoordinatesType_X = new NodeId(Opc.Ua.Variables.ThreeDCartesianCoordinatesType_X);

        /// <remarks />
        public static readonly NodeId ThreeDCartesianCoordinatesType_Y = new NodeId(Opc.Ua.Variables.ThreeDCartesianCoordinatesType_Y);

        /// <remarks />
        public static readonly NodeId ThreeDCartesianCoordinatesType_Z = new NodeId(Opc.Ua.Variables.ThreeDCartesianCoordinatesType_Z);

        /// <remarks />
        public static readonly NodeId OrientationType_AngleUnit = new NodeId(Opc.Ua.Variables.OrientationType_AngleUnit);

        /// <remarks />
        public static readonly NodeId ThreeDOrientationType_A = new NodeId(Opc.Ua.Variables.ThreeDOrientationType_A);

        /// <remarks />
        public static readonly NodeId ThreeDOrientationType_B = new NodeId(Opc.Ua.Variables.ThreeDOrientationType_B);

        /// <remarks />
        public static readonly NodeId ThreeDOrientationType_C = new NodeId(Opc.Ua.Variables.ThreeDOrientationType_C);

        /// <remarks />
        public static readonly NodeId FrameType_CartesianCoordinates = new NodeId(Opc.Ua.Variables.FrameType_CartesianCoordinates);

        /// <remarks />
        public static readonly NodeId FrameType_Orientation = new NodeId(Opc.Ua.Variables.FrameType_Orientation);

        /// <remarks />
        public static readonly NodeId FrameType_Constant = new NodeId(Opc.Ua.Variables.FrameType_Constant);

        /// <remarks />
        public static readonly NodeId FrameType_BaseFrame = new NodeId(Opc.Ua.Variables.FrameType_BaseFrame);

        /// <remarks />
        public static readonly NodeId FrameType_FixedBase = new NodeId(Opc.Ua.Variables.FrameType_FixedBase);

        /// <remarks />
        public static readonly NodeId ThreeDFrameType_CartesianCoordinates = new NodeId(Opc.Ua.Variables.ThreeDFrameType_CartesianCoordinates);

        /// <remarks />
        public static readonly NodeId ThreeDFrameType_Orientation = new NodeId(Opc.Ua.Variables.ThreeDFrameType_Orientation);

        /// <remarks />
        public static readonly NodeId ThreeDFrameType_CartesianCoordinates_X = new NodeId(Opc.Ua.Variables.ThreeDFrameType_CartesianCoordinates_X);

        /// <remarks />
        public static readonly NodeId ThreeDFrameType_CartesianCoordinates_Y = new NodeId(Opc.Ua.Variables.ThreeDFrameType_CartesianCoordinates_Y);

        /// <remarks />
        public static readonly NodeId ThreeDFrameType_CartesianCoordinates_Z = new NodeId(Opc.Ua.Variables.ThreeDFrameType_CartesianCoordinates_Z);

        /// <remarks />
        public static readonly NodeId ThreeDFrameType_Orientation_A = new NodeId(Opc.Ua.Variables.ThreeDFrameType_Orientation_A);

        /// <remarks />
        public static readonly NodeId ThreeDFrameType_Orientation_B = new NodeId(Opc.Ua.Variables.ThreeDFrameType_Orientation_B);

        /// <remarks />
        public static readonly NodeId ThreeDFrameType_Orientation_C = new NodeId(Opc.Ua.Variables.ThreeDFrameType_Orientation_C);

        /// <remarks />
        public static readonly NodeId TransitionEventType_Transition = new NodeId(Opc.Ua.Variables.TransitionEventType_Transition);

        /// <remarks />
        public static readonly NodeId TransitionEventType_Transition_Id = new NodeId(Opc.Ua.Variables.TransitionEventType_Transition_Id);

        /// <remarks />
        public static readonly NodeId TransitionEventType_FromState = new NodeId(Opc.Ua.Variables.TransitionEventType_FromState);

        /// <remarks />
        public static readonly NodeId TransitionEventType_FromState_Id = new NodeId(Opc.Ua.Variables.TransitionEventType_FromState_Id);

        /// <remarks />
        public static readonly NodeId TransitionEventType_ToState = new NodeId(Opc.Ua.Variables.TransitionEventType_ToState);

        /// <remarks />
        public static readonly NodeId TransitionEventType_ToState_Id = new NodeId(Opc.Ua.Variables.TransitionEventType_ToState_Id);

        /// <remarks />
        public static readonly NodeId AuditUpdateStateEventType_OldStateId = new NodeId(Opc.Ua.Variables.AuditUpdateStateEventType_OldStateId);

        /// <remarks />
        public static readonly NodeId AuditUpdateStateEventType_NewStateId = new NodeId(Opc.Ua.Variables.AuditUpdateStateEventType_NewStateId);

        /// <remarks />
        public static readonly NodeId OpenFileMode_EnumValues = new NodeId(Opc.Ua.Variables.OpenFileMode_EnumValues);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Size = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Size);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Writable = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Writable);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_UserWritable = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_UserWritable);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_OpenCount = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_OpenCount);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Open_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Open_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Close_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Read_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Read_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_Write_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_CreateDirectory_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_CreateDirectory_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_CreateDirectory_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_CreateDirectory_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_CreateFile_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_CreateFile_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_CreateFile_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_CreateFile_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_DeleteFileSystemObject_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_DeleteFileSystemObject_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_MoveOrCopy_InputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_MoveOrCopy_InputArguments);

        /// <remarks />
        public static readonly NodeId FileDirectoryType_MoveOrCopy_OutputArguments = new NodeId(Opc.Ua.Variables.FileDirectoryType_MoveOrCopy_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_CreateDirectory_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileDirectoryName_Placeholder_CreateDirectory_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_CreateFile_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileDirectoryName_Placeholder_CreateFile_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_CreateFile_OutputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileDirectoryName_Placeholder_CreateFile_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Size = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_Size);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Writable = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_Writable);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_UserWritable = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_UserWritable);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_OpenCount = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_OpenCount);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Open_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Open_OutputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Close_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Read_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Read_OutputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_Write_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_FileName_Placeholder_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_FileName_Placeholder_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_CreateDirectory_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_CreateDirectory_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_CreateDirectory_OutputArguments = new NodeId(Opc.Ua.Variables.FileSystem_CreateDirectory_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_CreateFile_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_CreateFile_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_CreateFile_OutputArguments = new NodeId(Opc.Ua.Variables.FileSystem_CreateFile_OutputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_DeleteFileSystemObject_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_DeleteFileSystemObject_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_MoveOrCopy_InputArguments = new NodeId(Opc.Ua.Variables.FileSystem_MoveOrCopy_InputArguments);

        /// <remarks />
        public static readonly NodeId FileSystem_MoveOrCopy_OutputArguments = new NodeId(Opc.Ua.Variables.FileSystem_MoveOrCopy_OutputArguments);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_ClientProcessingTimeout = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_ClientProcessingTimeout);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForRead_InputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_GenerateFileForRead_InputArguments);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForRead_OutputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_GenerateFileForRead_OutputArguments);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForWrite_InputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_GenerateFileForWrite_InputArguments);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_GenerateFileForWrite_OutputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_GenerateFileForWrite_OutputArguments);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_CloseAndCommit_InputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_CloseAndCommit_InputArguments);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_CloseAndCommit_OutputArguments = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_CloseAndCommit_OutputArguments);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_CurrentState = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_CurrentState);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id = new NodeId(Opc.Ua.Variables.TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_Idle_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_Idle_StateNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadPrepare_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadPrepare_StateNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadTransfer_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadTransfer_StateNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ApplyWrite_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ApplyWrite_StateNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_Error_StateNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_Error_StateNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadPrepareToError_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadPrepareToError_TransitionNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ReadTransferToError_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ReadTransferToError_TransitionNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ApplyWriteToError_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ApplyWriteToError_TransitionNumber);

        /// <remarks />
        public static readonly NodeId FileTransferStateMachineType_ErrorToIdle_TransitionNumber = new NodeId(Opc.Ua.Variables.FileTransferStateMachineType_ErrorToIdle_TransitionNumber);

        /// <remarks />
        public static readonly NodeId RoleSetType_RoleName_Placeholder_Identities = new NodeId(Opc.Ua.Variables.RoleSetType_RoleName_Placeholder_Identities);

        /// <remarks />
        public static readonly NodeId RoleSetType_RoleName_Placeholder_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.RoleSetType_RoleName_Placeholder_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleSetType_RoleName_Placeholder_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.RoleSetType_RoleName_Placeholder_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleSetType_RoleName_Placeholder_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.RoleSetType_RoleName_Placeholder_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleSetType_RoleName_Placeholder_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.RoleSetType_RoleName_Placeholder_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleSetType_RoleName_Placeholder_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.RoleSetType_RoleName_Placeholder_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleSetType_RoleName_Placeholder_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.RoleSetType_RoleName_Placeholder_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleSetType_AddRole_InputArguments = new NodeId(Opc.Ua.Variables.RoleSetType_AddRole_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleSetType_AddRole_OutputArguments = new NodeId(Opc.Ua.Variables.RoleSetType_AddRole_OutputArguments);

        /// <remarks />
        public static readonly NodeId RoleSetType_RemoveRole_InputArguments = new NodeId(Opc.Ua.Variables.RoleSetType_RemoveRole_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleType_Identities = new NodeId(Opc.Ua.Variables.RoleType_Identities);

        /// <remarks />
        public static readonly NodeId RoleType_Applications = new NodeId(Opc.Ua.Variables.RoleType_Applications);

        /// <remarks />
        public static readonly NodeId RoleType_ApplicationsExclude = new NodeId(Opc.Ua.Variables.RoleType_ApplicationsExclude);

        /// <remarks />
        public static readonly NodeId RoleType_Endpoints = new NodeId(Opc.Ua.Variables.RoleType_Endpoints);

        /// <remarks />
        public static readonly NodeId RoleType_EndpointsExclude = new NodeId(Opc.Ua.Variables.RoleType_EndpointsExclude);

        /// <remarks />
        public static readonly NodeId RoleType_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleType_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleType_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleType_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleType_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId RoleType_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.RoleType_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId IdentityCriteriaType_EnumValues = new NodeId(Opc.Ua.Variables.IdentityCriteriaType_EnumValues);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_Identities = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_Identities);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_Applications = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_Applications);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_ApplicationsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_ApplicationsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_Endpoints = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_Endpoints);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_EndpointsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_EndpointsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Anonymous_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Anonymous_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_Identities = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_Identities);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_Applications = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_Applications);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_ApplicationsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_ApplicationsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_Endpoints = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_Endpoints);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_EndpointsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_EndpointsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_AuthenticatedUser_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_AuthenticatedUser_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_Identities = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_Identities);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_Applications = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_Applications);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_ApplicationsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_ApplicationsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_Endpoints = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_Endpoints);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_EndpointsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_EndpointsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Observer_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Observer_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_Identities = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_Identities);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_Applications = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_Applications);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_ApplicationsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_ApplicationsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_Endpoints = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_Endpoints);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_EndpointsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_EndpointsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Operator_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Operator_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_Identities = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_Identities);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_Applications = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_Applications);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_ApplicationsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_ApplicationsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_Endpoints = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_Endpoints);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_EndpointsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_EndpointsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Engineer_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Engineer_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_Identities = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_Identities);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_Applications = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_Applications);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_ApplicationsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_ApplicationsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_Endpoints = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_Endpoints);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_EndpointsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_EndpointsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_Supervisor_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_Supervisor_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_Identities = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_Identities);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_Applications = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_Applications);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_ApplicationsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_ApplicationsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_Endpoints = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_Endpoints);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_EndpointsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_EndpointsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_ConfigureAdmin_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_ConfigureAdmin_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_Identities = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_Identities);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_Applications = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_Applications);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_ApplicationsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_ApplicationsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_Endpoints = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_Endpoints);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_EndpointsExclude = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_EndpointsExclude);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_AddIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_AddIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_RemoveIdentity_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_RemoveIdentity_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_AddApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_AddApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_RemoveApplication_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_RemoveApplication_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_AddEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_AddEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId WellKnownRole_SecurityAdmin_RemoveEndpoint_InputArguments = new NodeId(Opc.Ua.Variables.WellKnownRole_SecurityAdmin_RemoveEndpoint_InputArguments);

        /// <remarks />
        public static readonly NodeId CurrencyUnit = new NodeId(Opc.Ua.Variables.CurrencyUnit);

        /// <remarks />
        public static readonly NodeId IOrderedObjectType_NumberInList = new NodeId(Opc.Ua.Variables.IOrderedObjectType_NumberInList);

        /// <remarks />
        public static readonly NodeId OrderedListType_OrderedObject_Placeholder_NumberInList = new NodeId(Opc.Ua.Variables.OrderedListType_OrderedObject_Placeholder_NumberInList);

        /// <remarks />
        public static readonly NodeId OrderedListType_NodeVersion = new NodeId(Opc.Ua.Variables.OrderedListType_NodeVersion);

        /// <remarks />
        public static readonly NodeId DataItemType_Definition = new NodeId(Opc.Ua.Variables.DataItemType_Definition);

        /// <remarks />
        public static readonly NodeId DataItemType_ValuePrecision = new NodeId(Opc.Ua.Variables.DataItemType_ValuePrecision);

        /// <remarks />
        public static readonly NodeId BaseAnalogType_InstrumentRange = new NodeId(Opc.Ua.Variables.BaseAnalogType_InstrumentRange);

        /// <remarks />
        public static readonly NodeId BaseAnalogType_EURange = new NodeId(Opc.Ua.Variables.BaseAnalogType_EURange);

        /// <remarks />
        public static readonly NodeId BaseAnalogType_EngineeringUnits = new NodeId(Opc.Ua.Variables.BaseAnalogType_EngineeringUnits);

        /// <remarks />
        public static readonly NodeId AnalogItemType_EURange = new NodeId(Opc.Ua.Variables.AnalogItemType_EURange);

        /// <remarks />
        public static readonly NodeId AnalogUnitType_EngineeringUnits = new NodeId(Opc.Ua.Variables.AnalogUnitType_EngineeringUnits);

        /// <remarks />
        public static readonly NodeId AnalogUnitRangeType_EngineeringUnits = new NodeId(Opc.Ua.Variables.AnalogUnitRangeType_EngineeringUnits);

        /// <remarks />
        public static readonly NodeId TwoStateDiscreteType_FalseState = new NodeId(Opc.Ua.Variables.TwoStateDiscreteType_FalseState);

        /// <remarks />
        public static readonly NodeId TwoStateDiscreteType_TrueState = new NodeId(Opc.Ua.Variables.TwoStateDiscreteType_TrueState);

        /// <remarks />
        public static readonly NodeId MultiStateDiscreteType_EnumStrings = new NodeId(Opc.Ua.Variables.MultiStateDiscreteType_EnumStrings);

        /// <remarks />
        public static readonly NodeId MultiStateValueDiscreteType_EnumValues = new NodeId(Opc.Ua.Variables.MultiStateValueDiscreteType_EnumValues);

        /// <remarks />
        public static readonly NodeId MultiStateValueDiscreteType_ValueAsText = new NodeId(Opc.Ua.Variables.MultiStateValueDiscreteType_ValueAsText);

        /// <remarks />
        public static readonly NodeId ArrayItemType_InstrumentRange = new NodeId(Opc.Ua.Variables.ArrayItemType_InstrumentRange);

        /// <remarks />
        public static readonly NodeId ArrayItemType_EURange = new NodeId(Opc.Ua.Variables.ArrayItemType_EURange);

        /// <remarks />
        public static readonly NodeId ArrayItemType_EngineeringUnits = new NodeId(Opc.Ua.Variables.ArrayItemType_EngineeringUnits);

        /// <remarks />
        public static readonly NodeId ArrayItemType_Title = new NodeId(Opc.Ua.Variables.ArrayItemType_Title);

        /// <remarks />
        public static readonly NodeId ArrayItemType_AxisScaleType = new NodeId(Opc.Ua.Variables.ArrayItemType_AxisScaleType);

        /// <remarks />
        public static readonly NodeId YArrayItemType_XAxisDefinition = new NodeId(Opc.Ua.Variables.YArrayItemType_XAxisDefinition);

        /// <remarks />
        public static readonly NodeId XYArrayItemType_XAxisDefinition = new NodeId(Opc.Ua.Variables.XYArrayItemType_XAxisDefinition);

        /// <remarks />
        public static readonly NodeId ImageItemType_XAxisDefinition = new NodeId(Opc.Ua.Variables.ImageItemType_XAxisDefinition);

        /// <remarks />
        public static readonly NodeId ImageItemType_YAxisDefinition = new NodeId(Opc.Ua.Variables.ImageItemType_YAxisDefinition);

        /// <remarks />
        public static readonly NodeId CubeItemType_XAxisDefinition = new NodeId(Opc.Ua.Variables.CubeItemType_XAxisDefinition);

        /// <remarks />
        public static readonly NodeId CubeItemType_YAxisDefinition = new NodeId(Opc.Ua.Variables.CubeItemType_YAxisDefinition);

        /// <remarks />
        public static readonly NodeId CubeItemType_ZAxisDefinition = new NodeId(Opc.Ua.Variables.CubeItemType_ZAxisDefinition);

        /// <remarks />
        public static readonly NodeId NDimensionArrayItemType_AxisDefinition = new NodeId(Opc.Ua.Variables.NDimensionArrayItemType_AxisDefinition);

        /// <remarks />
        public static readonly NodeId TwoStateVariableType_Id = new NodeId(Opc.Ua.Variables.TwoStateVariableType_Id);

        /// <remarks />
        public static readonly NodeId TwoStateVariableType_TransitionTime = new NodeId(Opc.Ua.Variables.TwoStateVariableType_TransitionTime);

        /// <remarks />
        public static readonly NodeId TwoStateVariableType_EffectiveTransitionTime = new NodeId(Opc.Ua.Variables.TwoStateVariableType_EffectiveTransitionTime);

        /// <remarks />
        public static readonly NodeId TwoStateVariableType_TrueState = new NodeId(Opc.Ua.Variables.TwoStateVariableType_TrueState);

        /// <remarks />
        public static readonly NodeId TwoStateVariableType_FalseState = new NodeId(Opc.Ua.Variables.TwoStateVariableType_FalseState);

        /// <remarks />
        public static readonly NodeId ConditionVariableType_SourceTimestamp = new NodeId(Opc.Ua.Variables.ConditionVariableType_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ConditionType_ConditionClassId = new NodeId(Opc.Ua.Variables.ConditionType_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ConditionType_ConditionClassName = new NodeId(Opc.Ua.Variables.ConditionType_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ConditionType_ConditionSubClassId = new NodeId(Opc.Ua.Variables.ConditionType_ConditionSubClassId);

        /// <remarks />
        public static readonly NodeId ConditionType_ConditionSubClassName = new NodeId(Opc.Ua.Variables.ConditionType_ConditionSubClassName);

        /// <remarks />
        public static readonly NodeId ConditionType_ConditionName = new NodeId(Opc.Ua.Variables.ConditionType_ConditionName);

        /// <remarks />
        public static readonly NodeId ConditionType_BranchId = new NodeId(Opc.Ua.Variables.ConditionType_BranchId);

        /// <remarks />
        public static readonly NodeId ConditionType_Retain = new NodeId(Opc.Ua.Variables.ConditionType_Retain);

        /// <remarks />
        public static readonly NodeId ConditionType_EnabledState = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState);

        /// <remarks />
        public static readonly NodeId ConditionType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ConditionType_EnabledState_EffectiveDisplayName = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_EffectiveDisplayName);

        /// <remarks />
        public static readonly NodeId ConditionType_EnabledState_TransitionTime = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_TransitionTime);

        /// <remarks />
        public static readonly NodeId ConditionType_EnabledState_EffectiveTransitionTime = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_EffectiveTransitionTime);

        /// <remarks />
        public static readonly NodeId ConditionType_EnabledState_TrueState = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_TrueState);

        /// <remarks />
        public static readonly NodeId ConditionType_EnabledState_FalseState = new NodeId(Opc.Ua.Variables.ConditionType_EnabledState_FalseState);

        /// <remarks />
        public static readonly NodeId ConditionType_Quality = new NodeId(Opc.Ua.Variables.ConditionType_Quality);

        /// <remarks />
        public static readonly NodeId ConditionType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ConditionType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ConditionType_LastSeverity = new NodeId(Opc.Ua.Variables.ConditionType_LastSeverity);

        /// <remarks />
        public static readonly NodeId ConditionType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ConditionType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ConditionType_Comment = new NodeId(Opc.Ua.Variables.ConditionType_Comment);

        /// <remarks />
        public static readonly NodeId ConditionType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ConditionType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ConditionType_ClientUserId = new NodeId(Opc.Ua.Variables.ConditionType_ClientUserId);

        /// <remarks />
        public static readonly NodeId ConditionType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ConditionType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ConditionType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ConditionType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId ConditionType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ConditionType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId DialogConditionType_EnabledState = new NodeId(Opc.Ua.Variables.DialogConditionType_EnabledState);

        /// <remarks />
        public static readonly NodeId DialogConditionType_EnabledState_Id = new NodeId(Opc.Ua.Variables.DialogConditionType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId DialogConditionType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.DialogConditionType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId DialogConditionType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.DialogConditionType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId DialogConditionType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.DialogConditionType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId DialogConditionType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.DialogConditionType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId DialogConditionType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.DialogConditionType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId DialogConditionType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.DialogConditionType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId DialogConditionType_DialogState = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState);

        /// <remarks />
        public static readonly NodeId DialogConditionType_DialogState_Id = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState_Id);

        /// <remarks />
        public static readonly NodeId DialogConditionType_DialogState_TransitionTime = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState_TransitionTime);

        /// <remarks />
        public static readonly NodeId DialogConditionType_DialogState_TrueState = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState_TrueState);

        /// <remarks />
        public static readonly NodeId DialogConditionType_DialogState_FalseState = new NodeId(Opc.Ua.Variables.DialogConditionType_DialogState_FalseState);

        /// <remarks />
        public static readonly NodeId DialogConditionType_Prompt = new NodeId(Opc.Ua.Variables.DialogConditionType_Prompt);

        /// <remarks />
        public static readonly NodeId DialogConditionType_ResponseOptionSet = new NodeId(Opc.Ua.Variables.DialogConditionType_ResponseOptionSet);

        /// <remarks />
        public static readonly NodeId DialogConditionType_DefaultResponse = new NodeId(Opc.Ua.Variables.DialogConditionType_DefaultResponse);

        /// <remarks />
        public static readonly NodeId DialogConditionType_OkResponse = new NodeId(Opc.Ua.Variables.DialogConditionType_OkResponse);

        /// <remarks />
        public static readonly NodeId DialogConditionType_CancelResponse = new NodeId(Opc.Ua.Variables.DialogConditionType_CancelResponse);

        /// <remarks />
        public static readonly NodeId DialogConditionType_LastResponse = new NodeId(Opc.Ua.Variables.DialogConditionType_LastResponse);

        /// <remarks />
        public static readonly NodeId DialogConditionType_Respond_InputArguments = new NodeId(Opc.Ua.Variables.DialogConditionType_Respond_InputArguments);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_EnabledState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_EnabledState);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_EnabledState_Id = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_AckedState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_AckedState_Id = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_AckedState_TransitionTime = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState_TransitionTime);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_AckedState_TrueState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState_TrueState);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_AckedState_FalseState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_AckedState_FalseState);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState_TransitionTime = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState_TransitionTime);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState_TrueState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState_TrueState);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_ConfirmedState_FalseState = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_ConfirmedState_FalseState);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId AcknowledgeableConditionType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.AcknowledgeableConditionType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_EnabledState = new NodeId(Opc.Ua.Variables.AlarmConditionType_EnabledState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_EnabledState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.AlarmConditionType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.AlarmConditionType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.AlarmConditionType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_AckedState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ActiveState = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ActiveState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ActiveState_EffectiveDisplayName = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_EffectiveDisplayName);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ActiveState_TransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_TransitionTime);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ActiveState_EffectiveTransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_EffectiveTransitionTime);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ActiveState_TrueState = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_TrueState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ActiveState_FalseState = new NodeId(Opc.Ua.Variables.AlarmConditionType_ActiveState_FalseState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_InputNode = new NodeId(Opc.Ua.Variables.AlarmConditionType_InputNode);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SuppressedState = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SuppressedState_TransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState_TransitionTime);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SuppressedState_TrueState = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState_TrueState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SuppressedState_FalseState = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedState_FalseState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_OutOfServiceState = new NodeId(Opc.Ua.Variables.AlarmConditionType_OutOfServiceState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_OutOfServiceState_TransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_OutOfServiceState_TransitionTime);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_OutOfServiceState_TrueState = new NodeId(Opc.Ua.Variables.AlarmConditionType_OutOfServiceState_TrueState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_OutOfServiceState_FalseState = new NodeId(Opc.Ua.Variables.AlarmConditionType_OutOfServiceState_FalseState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_LastTransition = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_LastTransition);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_LastTransition_TransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_LastTransition_TransitionTime);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.AlarmConditionType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.AlarmConditionType_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_MaxTimeShelved = new NodeId(Opc.Ua.Variables.AlarmConditionType_MaxTimeShelved);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_AudibleEnabled = new NodeId(Opc.Ua.Variables.AlarmConditionType_AudibleEnabled);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_AudibleSound = new NodeId(Opc.Ua.Variables.AlarmConditionType_AudibleSound);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SilenceState = new NodeId(Opc.Ua.Variables.AlarmConditionType_SilenceState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SilenceState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SilenceState_TransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_SilenceState_TransitionTime);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SilenceState_TrueState = new NodeId(Opc.Ua.Variables.AlarmConditionType_SilenceState_TrueState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_SilenceState_FalseState = new NodeId(Opc.Ua.Variables.AlarmConditionType_SilenceState_FalseState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_OnDelay = new NodeId(Opc.Ua.Variables.AlarmConditionType_OnDelay);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_OffDelay = new NodeId(Opc.Ua.Variables.AlarmConditionType_OffDelay);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_FirstInGroupFlag = new NodeId(Opc.Ua.Variables.AlarmConditionType_FirstInGroupFlag);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_LatchedState = new NodeId(Opc.Ua.Variables.AlarmConditionType_LatchedState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_LatchedState_Id = new NodeId(Opc.Ua.Variables.AlarmConditionType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_LatchedState_TransitionTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_LatchedState_TransitionTime);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_LatchedState_TrueState = new NodeId(Opc.Ua.Variables.AlarmConditionType_LatchedState_TrueState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_LatchedState_FalseState = new NodeId(Opc.Ua.Variables.AlarmConditionType_LatchedState_FalseState);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ReAlarmTime = new NodeId(Opc.Ua.Variables.AlarmConditionType_ReAlarmTime);

        /// <remarks />
        public static readonly NodeId AlarmConditionType_ReAlarmRepeatCount = new NodeId(Opc.Ua.Variables.AlarmConditionType_ReAlarmRepeatCount);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_EventId = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_EventId);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_EventType = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_EventType);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_SourceNode = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_SourceNode);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_SourceName = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_SourceName);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Time = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Time);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ReceiveTime = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ReceiveTime);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Message = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Message);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Severity = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Severity);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassId = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassId);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassName = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassName);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionName = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionName);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_BranchId = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_BranchId);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Retain = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Retain);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Quality = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Quality);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Comment = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Comment);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ClientUserId = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ClientUserId);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_Id);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_InputNode = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_InputNode);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_Id = new NodeId(Opc.Ua.Variables.AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_UnshelveTime = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_Unshelved_StateNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_Unshelved_StateNumber);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_TimedShelved_StateNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_TimedShelved_StateNumber);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_OneShotShelved_StateNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_OneShotShelved_StateNumber);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ShelvedStateMachineType_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ShelvedStateMachineType_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.LimitAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.LimitAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.LimitAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.LimitAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.LimitAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_HighHighLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_HighHighLimit);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_HighLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_HighLimit);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_LowLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_LowLimit);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_LowLowLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_LowLowLimit);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_BaseHighHighLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_BaseHighHighLimit);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_BaseHighLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_BaseHighLimit);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_BaseLowLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_BaseLowLimit);

        /// <remarks />
        public static readonly NodeId LimitAlarmType_BaseLowLowLimit = new NodeId(Opc.Ua.Variables.LimitAlarmType_BaseLowLowLimit);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_HighHigh_StateNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_HighHigh_StateNumber);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_High_StateNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_High_StateNumber);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_Low_StateNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_Low_StateNumber);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_LowLow_StateNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_LowLow_StateNumber);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber = new NodeId(Opc.Ua.Variables.ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ActiveState = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ActiveState);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_CurrentState);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_LastTransition = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_LastTransition);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime = new NodeId(Opc.Ua.Variables.ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ActiveState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ActiveState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState_TransitionTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState_TransitionTime);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState_TrueState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState_TrueState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighHighState_FalseState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighHighState_FalseState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState_TransitionTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState_TransitionTime);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState_TrueState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState_TrueState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_HighState_FalseState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_HighState_FalseState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState_TransitionTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState_TransitionTime);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState_TrueState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState_TrueState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowState_FalseState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowState_FalseState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState_TransitionTime = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState_TransitionTime);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState_TrueState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState_TrueState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLimitAlarmType_LowLowState_FalseState = new NodeId(Opc.Ua.Variables.NonExclusiveLimitAlarmType_LowLowState_FalseState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_HighHighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_HighHighState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_HighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_HighState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_LowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_LowState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveLevelAlarmType_LowLowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveLevelAlarmType_LowLowState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_LimitState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_LimitState_CurrentState);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_LimitState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_LimitState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveLevelAlarmType_LimitState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveLevelAlarmType_LimitState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_HighHighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_HighHighState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_HighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_HighState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_LowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_LowState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_LowLowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_LowLowState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_SetpointNode = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_SetpointNode);

        /// <remarks />
        public static readonly NodeId NonExclusiveDeviationAlarmType_BaseSetpointNode = new NodeId(Opc.Ua.Variables.NonExclusiveDeviationAlarmType_BaseSetpointNode);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_HighHighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_HighHighState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_HighState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_HighState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_LowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_LowState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_LowLowState_Id = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_LowLowState_Id);

        /// <remarks />
        public static readonly NodeId NonExclusiveRateOfChangeAlarmType_EngineeringUnits = new NodeId(Opc.Ua.Variables.NonExclusiveRateOfChangeAlarmType_EngineeringUnits);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_LimitState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_LimitState_CurrentState);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_LimitState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_LimitState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_LimitState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_LimitState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_SetpointNode = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_SetpointNode);

        /// <remarks />
        public static readonly NodeId ExclusiveDeviationAlarmType_BaseSetpointNode = new NodeId(Opc.Ua.Variables.ExclusiveDeviationAlarmType_BaseSetpointNode);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_LimitState_CurrentState = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_LimitState_CurrentState);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ExclusiveRateOfChangeAlarmType_EngineeringUnits = new NodeId(Opc.Ua.Variables.ExclusiveRateOfChangeAlarmType_EngineeringUnits);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId DiscreteAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.DiscreteAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId OffNormalAlarmType_NormalState = new NodeId(Opc.Ua.Variables.OffNormalAlarmType_NormalState);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId SystemOffNormalAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.SystemOffNormalAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.TripAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId TripAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.TripAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId TripAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.TripAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId TripAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId TripAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId TripAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId TripAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.TripAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId TripAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId TripAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.TripAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId InstrumentDiagnosticAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.InstrumentDiagnosticAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId SystemDiagnosticAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.SystemDiagnosticAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ExpirationDate = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ExpirationDate);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_ExpirationLimit = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_ExpirationLimit);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_CertificateType = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_CertificateType);

        /// <remarks />
        public static readonly NodeId CertificateExpirationAlarmType_Certificate = new NodeId(Opc.Ua.Variables.CertificateExpirationAlarmType_Certificate);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_TargetValueNode = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_TargetValueNode);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_ExpectedTime = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_ExpectedTime);

        /// <remarks />
        public static readonly NodeId DiscrepancyAlarmType_Tolerance = new NodeId(Opc.Ua.Variables.DiscrepancyAlarmType_Tolerance);

        /// <remarks />
        public static readonly NodeId AuditConditionCommentEventType_ConditionEventId = new NodeId(Opc.Ua.Variables.AuditConditionCommentEventType_ConditionEventId);

        /// <remarks />
        public static readonly NodeId AuditConditionCommentEventType_Comment = new NodeId(Opc.Ua.Variables.AuditConditionCommentEventType_Comment);

        /// <remarks />
        public static readonly NodeId AuditConditionRespondEventType_SelectedResponse = new NodeId(Opc.Ua.Variables.AuditConditionRespondEventType_SelectedResponse);

        /// <remarks />
        public static readonly NodeId AuditConditionAcknowledgeEventType_ConditionEventId = new NodeId(Opc.Ua.Variables.AuditConditionAcknowledgeEventType_ConditionEventId);

        /// <remarks />
        public static readonly NodeId AuditConditionAcknowledgeEventType_Comment = new NodeId(Opc.Ua.Variables.AuditConditionAcknowledgeEventType_Comment);

        /// <remarks />
        public static readonly NodeId AuditConditionConfirmEventType_ConditionEventId = new NodeId(Opc.Ua.Variables.AuditConditionConfirmEventType_ConditionEventId);

        /// <remarks />
        public static readonly NodeId AuditConditionConfirmEventType_Comment = new NodeId(Opc.Ua.Variables.AuditConditionConfirmEventType_Comment);

        /// <remarks />
        public static readonly NodeId AuditConditionShelvingEventType_ShelvingTime = new NodeId(Opc.Ua.Variables.AuditConditionShelvingEventType_ShelvingTime);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_AlarmCount = new NodeId(Opc.Ua.Variables.AlarmMetricsType_AlarmCount);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_StartTime = new NodeId(Opc.Ua.Variables.AlarmMetricsType_StartTime);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_MaximumActiveState = new NodeId(Opc.Ua.Variables.AlarmMetricsType_MaximumActiveState);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_MaximumUnAck = new NodeId(Opc.Ua.Variables.AlarmMetricsType_MaximumUnAck);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_CurrentAlarmRate = new NodeId(Opc.Ua.Variables.AlarmMetricsType_CurrentAlarmRate);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_CurrentAlarmRate_Rate = new NodeId(Opc.Ua.Variables.AlarmMetricsType_CurrentAlarmRate_Rate);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_MaximumAlarmRate = new NodeId(Opc.Ua.Variables.AlarmMetricsType_MaximumAlarmRate);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_MaximumAlarmRate_Rate = new NodeId(Opc.Ua.Variables.AlarmMetricsType_MaximumAlarmRate_Rate);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_MaximumReAlarmCount = new NodeId(Opc.Ua.Variables.AlarmMetricsType_MaximumReAlarmCount);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_AverageAlarmRate = new NodeId(Opc.Ua.Variables.AlarmMetricsType_AverageAlarmRate);

        /// <remarks />
        public static readonly NodeId AlarmMetricsType_AverageAlarmRate_Rate = new NodeId(Opc.Ua.Variables.AlarmMetricsType_AverageAlarmRate_Rate);

        /// <remarks />
        public static readonly NodeId AlarmRateVariableType_Rate = new NodeId(Opc.Ua.Variables.AlarmRateVariableType_Rate);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_CurrentState = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_CurrentState);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_CurrentState_Id = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_CurrentState_Number = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_CurrentState_Number);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_LastTransition = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_LastTransition);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_LastTransition_Id = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_LastTransition_Number = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_LastTransition_Number);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_LastTransition_TransitionTime = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_LastTransition_TransitionTime);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Creatable = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Creatable);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Deletable = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Deletable);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_AutoDelete = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_AutoDelete);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_RecycleCount = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_RecycleCount);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_InstanceCount = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_InstanceCount);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_MaxInstanceCount = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_MaxInstanceCount);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_MaxRecycleCount = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_MaxRecycleCount);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_CreateSessionId = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_CreateSessionId);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_CreateClientName = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_CreateClientName);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_InvocationCreationTime = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_InvocationCreationTime);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_LastTransitionTime = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_LastTransitionTime);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_LastMethodCall = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_LastMethodCall);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_LastMethodSessionId = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_LastMethodSessionId);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_LastMethodInputArguments = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_LastMethodInputArguments);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_LastMethodOutputArguments = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_LastMethodOutputArguments);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_LastMethodInputValues = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_LastMethodInputValues);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_LastMethodOutputValues = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_LastMethodOutputValues);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_LastMethodCallTime = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_LastMethodCallTime);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostic_LastMethodReturnStatus = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ProgramDiagnostic_LastMethodReturnStatus);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Halted_StateNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Halted_StateNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Ready_StateNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Ready_StateNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Running_StateNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Running_StateNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_Suspended_StateNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_Suspended_StateNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_HaltedToReady_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_HaltedToReady_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ReadyToRunning_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ReadyToRunning_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_RunningToHalted_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_RunningToHalted_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_RunningToReady_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_RunningToReady_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_RunningToSuspended_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_RunningToSuspended_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_SuspendedToRunning_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_SuspendedToRunning_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_SuspendedToHalted_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_SuspendedToHalted_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_SuspendedToReady_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_SuspendedToReady_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramStateMachineType_ReadyToHalted_TransitionNumber = new NodeId(Opc.Ua.Variables.ProgramStateMachineType_ReadyToHalted_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramTransitionEventType_Transition_Id = new NodeId(Opc.Ua.Variables.ProgramTransitionEventType_Transition_Id);

        /// <remarks />
        public static readonly NodeId ProgramTransitionEventType_FromState_Id = new NodeId(Opc.Ua.Variables.ProgramTransitionEventType_FromState_Id);

        /// <remarks />
        public static readonly NodeId ProgramTransitionEventType_ToState_Id = new NodeId(Opc.Ua.Variables.ProgramTransitionEventType_ToState_Id);

        /// <remarks />
        public static readonly NodeId ProgramTransitionEventType_IntermediateResult = new NodeId(Opc.Ua.Variables.ProgramTransitionEventType_IntermediateResult);

        /// <remarks />
        public static readonly NodeId AuditProgramTransitionEventType_TransitionNumber = new NodeId(Opc.Ua.Variables.AuditProgramTransitionEventType_TransitionNumber);

        /// <remarks />
        public static readonly NodeId ProgramTransitionAuditEventType_Transition = new NodeId(Opc.Ua.Variables.ProgramTransitionAuditEventType_Transition);

        /// <remarks />
        public static readonly NodeId ProgramTransitionAuditEventType_Transition_Id = new NodeId(Opc.Ua.Variables.ProgramTransitionAuditEventType_Transition_Id);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_CreateSessionId = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_CreateSessionId);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_CreateClientName = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_CreateClientName);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_InvocationCreationTime = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_InvocationCreationTime);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_LastTransitionTime = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastTransitionTime);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_LastMethodCall = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodCall);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_LastMethodSessionId = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodSessionId);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_LastMethodInputArguments = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodInputArguments);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_LastMethodOutputArguments = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodOutputArguments);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_LastMethodCallTime = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodCallTime);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType_LastMethodReturnStatus = new NodeId(Opc.Ua.Variables.ProgramDiagnosticType_LastMethodReturnStatus);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_CreateSessionId = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_CreateSessionId);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_CreateClientName = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_CreateClientName);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_InvocationCreationTime = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_InvocationCreationTime);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_LastTransitionTime = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_LastTransitionTime);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_LastMethodCall = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_LastMethodCall);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_LastMethodSessionId = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_LastMethodSessionId);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_LastMethodInputArguments = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_LastMethodInputArguments);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_LastMethodOutputArguments = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_LastMethodOutputArguments);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_LastMethodInputValues = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_LastMethodInputValues);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_LastMethodOutputValues = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_LastMethodOutputValues);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_LastMethodCallTime = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_LastMethodCallTime);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type_LastMethodReturnStatus = new NodeId(Opc.Ua.Variables.ProgramDiagnostic2Type_LastMethodReturnStatus);

        /// <remarks />
        public static readonly NodeId Annotations = new NodeId(Opc.Ua.Variables.Annotations);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_Stepped = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_Stepped);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_Definition = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_Definition);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_MaxTimeInterval = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_MaxTimeInterval);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_MinTimeInterval = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_MinTimeInterval);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_ExceptionDeviation = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_ExceptionDeviation);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_ExceptionDeviationFormat = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_ExceptionDeviationFormat);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_StartOfArchive = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_StartOfArchive);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_StartOfOnlineArchive = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_StartOfOnlineArchive);

        /// <remarks />
        public static readonly NodeId HistoricalDataConfigurationType_ServerTimestampSupported = new NodeId(Opc.Ua.Variables.HistoricalDataConfigurationType_ServerTimestampSupported);

        /// <remarks />
        public static readonly NodeId HAConfiguration_AggregateConfiguration_TreatUncertainAsBad = new NodeId(Opc.Ua.Variables.HAConfiguration_AggregateConfiguration_TreatUncertainAsBad);

        /// <remarks />
        public static readonly NodeId HAConfiguration_AggregateConfiguration_PercentDataBad = new NodeId(Opc.Ua.Variables.HAConfiguration_AggregateConfiguration_PercentDataBad);

        /// <remarks />
        public static readonly NodeId HAConfiguration_AggregateConfiguration_PercentDataGood = new NodeId(Opc.Ua.Variables.HAConfiguration_AggregateConfiguration_PercentDataGood);

        /// <remarks />
        public static readonly NodeId HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation = new NodeId(Opc.Ua.Variables.HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation);

        /// <remarks />
        public static readonly NodeId HAConfiguration_Stepped = new NodeId(Opc.Ua.Variables.HAConfiguration_Stepped);

        /// <remarks />
        public static readonly NodeId HistoricalEventFilter = new NodeId(Opc.Ua.Variables.HistoricalEventFilter);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_AccessHistoryDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_AccessHistoryDataCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_AccessHistoryEventsCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_AccessHistoryEventsCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_MaxReturnDataValues = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_MaxReturnDataValues);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_MaxReturnEventValues = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_MaxReturnEventValues);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_InsertDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_InsertDataCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_ReplaceDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_ReplaceDataCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_UpdateDataCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_UpdateDataCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_DeleteRawCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_DeleteRawCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_DeleteAtTimeCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_DeleteAtTimeCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_InsertEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_InsertEventCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_ReplaceEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_ReplaceEventCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_UpdateEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_UpdateEventCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_DeleteEventCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_DeleteEventCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_InsertAnnotationCapability = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_InsertAnnotationCapability);

        /// <remarks />
        public static readonly NodeId HistoryServerCapabilitiesType_ServerTimestampSupported = new NodeId(Opc.Ua.Variables.HistoryServerCapabilitiesType_ServerTimestampSupported);

        /// <remarks />
        public static readonly NodeId AuditHistoryEventUpdateEventType_UpdatedNode = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_UpdatedNode);

        /// <remarks />
        public static readonly NodeId AuditHistoryEventUpdateEventType_PerformInsertReplace = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_PerformInsertReplace);

        /// <remarks />
        public static readonly NodeId AuditHistoryEventUpdateEventType_Filter = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_Filter);

        /// <remarks />
        public static readonly NodeId AuditHistoryEventUpdateEventType_NewValues = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_NewValues);

        /// <remarks />
        public static readonly NodeId AuditHistoryEventUpdateEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryEventUpdateEventType_OldValues);

        /// <remarks />
        public static readonly NodeId AuditHistoryValueUpdateEventType_UpdatedNode = new NodeId(Opc.Ua.Variables.AuditHistoryValueUpdateEventType_UpdatedNode);

        /// <remarks />
        public static readonly NodeId AuditHistoryValueUpdateEventType_PerformInsertReplace = new NodeId(Opc.Ua.Variables.AuditHistoryValueUpdateEventType_PerformInsertReplace);

        /// <remarks />
        public static readonly NodeId AuditHistoryValueUpdateEventType_NewValues = new NodeId(Opc.Ua.Variables.AuditHistoryValueUpdateEventType_NewValues);

        /// <remarks />
        public static readonly NodeId AuditHistoryValueUpdateEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryValueUpdateEventType_OldValues);

        /// <remarks />
        public static readonly NodeId AuditHistoryAnnotationUpdateEventType_PerformInsertReplace = new NodeId(Opc.Ua.Variables.AuditHistoryAnnotationUpdateEventType_PerformInsertReplace);

        /// <remarks />
        public static readonly NodeId AuditHistoryAnnotationUpdateEventType_NewValues = new NodeId(Opc.Ua.Variables.AuditHistoryAnnotationUpdateEventType_NewValues);

        /// <remarks />
        public static readonly NodeId AuditHistoryAnnotationUpdateEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryAnnotationUpdateEventType_OldValues);

        /// <remarks />
        public static readonly NodeId AuditHistoryDeleteEventType_UpdatedNode = new NodeId(Opc.Ua.Variables.AuditHistoryDeleteEventType_UpdatedNode);

        /// <remarks />
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_IsDeleteModified = new NodeId(Opc.Ua.Variables.AuditHistoryRawModifyDeleteEventType_IsDeleteModified);

        /// <remarks />
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_StartTime = new NodeId(Opc.Ua.Variables.AuditHistoryRawModifyDeleteEventType_StartTime);

        /// <remarks />
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_EndTime = new NodeId(Opc.Ua.Variables.AuditHistoryRawModifyDeleteEventType_EndTime);

        /// <remarks />
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryRawModifyDeleteEventType_OldValues);

        /// <remarks />
        public static readonly NodeId AuditHistoryAtTimeDeleteEventType_ReqTimes = new NodeId(Opc.Ua.Variables.AuditHistoryAtTimeDeleteEventType_ReqTimes);

        /// <remarks />
        public static readonly NodeId AuditHistoryAtTimeDeleteEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryAtTimeDeleteEventType_OldValues);

        /// <remarks />
        public static readonly NodeId AuditHistoryEventDeleteEventType_EventIds = new NodeId(Opc.Ua.Variables.AuditHistoryEventDeleteEventType_EventIds);

        /// <remarks />
        public static readonly NodeId AuditHistoryEventDeleteEventType_OldValues = new NodeId(Opc.Ua.Variables.AuditHistoryEventDeleteEventType_OldValues);

        /// <remarks />
        public static readonly NodeId TrustListType_Open_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_Open_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_Close_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_Read_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_Read_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_Write_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_LastUpdateTime = new NodeId(Opc.Ua.Variables.TrustListType_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId TrustListType_UpdateFrequency = new NodeId(Opc.Ua.Variables.TrustListType_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId TrustListType_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.TrustListType_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListType_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.TrustListType_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListMasks_EnumValues = new NodeId(Opc.Ua.Variables.TrustListMasks_EnumValues);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_EnabledState_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ConditionRefresh_InputArguments = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_ConditionRefresh_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ConditionRefresh2_InputArguments = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_ConditionRefresh2_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_AckedState_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_AckedState_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ActiveState_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_SuppressedState_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_SilenceState_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_LatchedState_Id = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_TrustListId = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_TrustListId);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_LastUpdateTime = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId TrustListOutOfDateAlarmType_UpdateFrequency = new NodeId(Opc.Ua.Variables.TrustListOutOfDateAlarmType_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Size);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateTypes);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.CertificateGroupType_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.CertificateGroupType_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId CertificateGroupType_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupType_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultApplicationGroup_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultApplicationGroup_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultHttpsGroup_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultHttpsGroup_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_DefaultUserTokenGroup_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_DefaultUserTokenGroup_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId CertificateGroupFolderType_AdditionalGroup_Placeholder_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.CertificateGroupFolderType_AdditionalGroup_Placeholder_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_ServerCapabilities = new NodeId(Opc.Ua.Variables.ServerConfigurationType_ServerCapabilities);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_SupportedPrivateKeyFormats = new NodeId(Opc.Ua.Variables.ServerConfigurationType_SupportedPrivateKeyFormats);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_MaxTrustListSize = new NodeId(Opc.Ua.Variables.ServerConfigurationType_MaxTrustListSize);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_MulticastDnsEnabled = new NodeId(Opc.Ua.Variables.ServerConfigurationType_MulticastDnsEnabled);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_UpdateCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_UpdateCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_UpdateCertificate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_UpdateCertificate_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CreateSigningRequest_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CreateSigningRequest_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_CreateSigningRequest_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_CreateSigningRequest_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfigurationType_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfigurationType_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId CertificateUpdatedAuditEventType_CertificateGroup = new NodeId(Opc.Ua.Variables.CertificateUpdatedAuditEventType_CertificateGroup);

        /// <remarks />
        public static readonly NodeId CertificateUpdatedAuditEventType_CertificateType = new NodeId(Opc.Ua.Variables.CertificateUpdatedAuditEventType_CertificateType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultApplicationGroup_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultHttpsGroup_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventType = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Time = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Time);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Message = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Message);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Severity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_BranchId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Retain = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_InputNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_NormalState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ExpirationDate = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_ExpirationDate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_CertificateType = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_CertificateType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Certificate = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateExpired_Certificate);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventType = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EventType);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SourceName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Time = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Time);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ReceiveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ReceiveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Message = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Message);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Severity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Severity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionClassName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionName = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConditionName);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_BranchId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_BranchId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Retain = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Retain);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_EnabledState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Quality_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastSeverity_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment_SourceTimestamp = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Comment_SourceTimestamp);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ClientUserId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ClientUserId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AddComment_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_AckedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConfirmedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ConfirmedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Acknowledge_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Confirm_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_Confirm_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ActiveState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_InputNode = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_InputNode);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_OutOfServiceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_OutOfServiceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_CurrentState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_LastTransition_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_UnshelveTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_UnshelveTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_ShelvingState_TimedShelve_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedOrShelved = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SuppressedOrShelved);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SilenceState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_SilenceState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LatchedState_Id = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LatchedState_Id);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_NormalState = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_NormalState);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_TrustListId = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_TrustListId);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastUpdateTime = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_LastUpdateTime);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_UpdateFrequency = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustListOutOfDate_UpdateFrequency);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_ServerCapabilities = new NodeId(Opc.Ua.Variables.ServerConfiguration_ServerCapabilities);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_SupportedPrivateKeyFormats = new NodeId(Opc.Ua.Variables.ServerConfiguration_SupportedPrivateKeyFormats);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_MaxTrustListSize = new NodeId(Opc.Ua.Variables.ServerConfiguration_MaxTrustListSize);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_MulticastDnsEnabled = new NodeId(Opc.Ua.Variables.ServerConfiguration_MulticastDnsEnabled);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_UpdateCertificate_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_UpdateCertificate_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_UpdateCertificate_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_UpdateCertificate_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CreateSigningRequest_InputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CreateSigningRequest_InputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_CreateSigningRequest_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_CreateSigningRequest_OutputArguments);

        /// <remarks />
        public static readonly NodeId ServerConfiguration_GetRejectedList_OutputArguments = new NodeId(Opc.Ua.Variables.ServerConfiguration_GetRejectedList_OutputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType_ServiceName_Placeholder_ResourceUri = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationFolderType_ServiceName_Placeholder_ResourceUri);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType_ServiceName_Placeholder_ProfileUri = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationFolderType_ServiceName_Placeholder_ProfileUri);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType_ServiceName_Placeholder_GetEncryptingKey_InputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationFolderType_ServiceName_Placeholder_GetEncryptingKey_InputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType_ServiceName_Placeholder_GetEncryptingKey_OutputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationFolderType_ServiceName_Placeholder_GetEncryptingKey_OutputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType_ServiceName_Placeholder_UpdateCredential_InputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationFolderType_ServiceName_Placeholder_UpdateCredential_InputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType_CreateCredential_InputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationFolderType_CreateCredential_InputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationFolderType_CreateCredential_OutputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationFolderType_CreateCredential_OutputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfiguration_ServiceName_Placeholder_ResourceUri = new NodeId(Opc.Ua.Variables.KeyCredentialConfiguration_ServiceName_Placeholder_ResourceUri);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfiguration_ServiceName_Placeholder_ProfileUri = new NodeId(Opc.Ua.Variables.KeyCredentialConfiguration_ServiceName_Placeholder_ProfileUri);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfiguration_ServiceName_Placeholder_GetEncryptingKey_InputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfiguration_ServiceName_Placeholder_GetEncryptingKey_InputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfiguration_ServiceName_Placeholder_GetEncryptingKey_OutputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfiguration_ServiceName_Placeholder_GetEncryptingKey_OutputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfiguration_ServiceName_Placeholder_UpdateCredential_InputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfiguration_ServiceName_Placeholder_UpdateCredential_InputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfiguration_CreateCredential_InputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfiguration_CreateCredential_InputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfiguration_CreateCredential_OutputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfiguration_CreateCredential_OutputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_ResourceUri = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationType_ResourceUri);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_ProfileUri = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationType_ProfileUri);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_EndpointUrls = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationType_EndpointUrls);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_ServiceStatus = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationType_ServiceStatus);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_GetEncryptingKey_InputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationType_GetEncryptingKey_InputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_GetEncryptingKey_OutputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationType_GetEncryptingKey_OutputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialConfigurationType_UpdateCredential_InputArguments = new NodeId(Opc.Ua.Variables.KeyCredentialConfigurationType_UpdateCredential_InputArguments);

        /// <remarks />
        public static readonly NodeId KeyCredentialAuditEventType_ResourceUri = new NodeId(Opc.Ua.Variables.KeyCredentialAuditEventType_ResourceUri);

        /// <remarks />
        public static readonly NodeId AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder_ServiceUri = new NodeId(Opc.Ua.Variables.AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder_ServiceUri);

        /// <remarks />
        public static readonly NodeId AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder_ServiceCertificate = new NodeId(Opc.Ua.Variables.AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder_ServiceCertificate);

        /// <remarks />
        public static readonly NodeId AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder_IssuerEndpointUrl = new NodeId(Opc.Ua.Variables.AuthorizationServicesConfigurationFolderType_ServiceName_Placeholder_IssuerEndpointUrl);

        /// <remarks />
        public static readonly NodeId AuthorizationServiceConfigurationType_ServiceUri = new NodeId(Opc.Ua.Variables.AuthorizationServiceConfigurationType_ServiceUri);

        /// <remarks />
        public static readonly NodeId AuthorizationServiceConfigurationType_ServiceCertificate = new NodeId(Opc.Ua.Variables.AuthorizationServiceConfigurationType_ServiceCertificate);

        /// <remarks />
        public static readonly NodeId AuthorizationServiceConfigurationType_IssuerEndpointUrl = new NodeId(Opc.Ua.Variables.AuthorizationServiceConfigurationType_IssuerEndpointUrl);

        /// <remarks />
        public static readonly NodeId AggregateConfigurationType_TreatUncertainAsBad = new NodeId(Opc.Ua.Variables.AggregateConfigurationType_TreatUncertainAsBad);

        /// <remarks />
        public static readonly NodeId AggregateConfigurationType_PercentDataBad = new NodeId(Opc.Ua.Variables.AggregateConfigurationType_PercentDataBad);

        /// <remarks />
        public static readonly NodeId AggregateConfigurationType_PercentDataGood = new NodeId(Opc.Ua.Variables.AggregateConfigurationType_PercentDataGood);

        /// <remarks />
        public static readonly NodeId AggregateConfigurationType_UseSlopedExtrapolation = new NodeId(Opc.Ua.Variables.AggregateConfigurationType_UseSlopedExtrapolation);

        /// <remarks />
        public static readonly NodeId PubSubState_EnumStrings = new NodeId(Opc.Ua.Variables.PubSubState_EnumStrings);

        /// <remarks />
        public static readonly NodeId DataSetFieldFlags_OptionSetValues = new NodeId(Opc.Ua.Variables.DataSetFieldFlags_OptionSetValues);

        /// <remarks />
        public static readonly NodeId DataSetFieldContentMask_OptionSetValues = new NodeId(Opc.Ua.Variables.DataSetFieldContentMask_OptionSetValues);

        /// <remarks />
        public static readonly NodeId OverrideValueHandling_EnumStrings = new NodeId(Opc.Ua.Variables.OverrideValueHandling_EnumStrings);

        /// <remarks />
        public static readonly NodeId DataSetOrderingType_EnumStrings = new NodeId(Opc.Ua.Variables.DataSetOrderingType_EnumStrings);

        /// <remarks />
        public static readonly NodeId UadpNetworkMessageContentMask_OptionSetValues = new NodeId(Opc.Ua.Variables.UadpNetworkMessageContentMask_OptionSetValues);

        /// <remarks />
        public static readonly NodeId UadpDataSetMessageContentMask_OptionSetValues = new NodeId(Opc.Ua.Variables.UadpDataSetMessageContentMask_OptionSetValues);

        /// <remarks />
        public static readonly NodeId JsonNetworkMessageContentMask_OptionSetValues = new NodeId(Opc.Ua.Variables.JsonNetworkMessageContentMask_OptionSetValues);

        /// <remarks />
        public static readonly NodeId JsonDataSetMessageContentMask_OptionSetValues = new NodeId(Opc.Ua.Variables.JsonDataSetMessageContentMask_OptionSetValues);

        /// <remarks />
        public static readonly NodeId BrokerTransportQualityOfService_EnumStrings = new NodeId(Opc.Ua.Variables.BrokerTransportQualityOfService_EnumStrings);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_GetSecurityKeys_InputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_GetSecurityKeys_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_GetSecurityKeys_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_GetSecurityKeys_OutputArguments);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_GetSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_GetSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_GetSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_GetSecurityGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_SecurityGroups_AddSecurityGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubKeyServiceType_SecurityGroups_RemoveSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_AddSecurityGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupFolderName_Placeholder_RemoveSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityGroupId = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityGroupId);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupName_Placeholder_KeyLifetime = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupName_Placeholder_KeyLifetime);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupName_Placeholder_SecurityPolicyUri);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupName_Placeholder_MaxFutureKeyCount = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupName_Placeholder_MaxFutureKeyCount);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_SecurityGroupName_Placeholder_MaxPastKeyCount = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_SecurityGroupName_Placeholder_MaxPastKeyCount);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_AddSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_AddSecurityGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId SecurityGroupFolderType_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.SecurityGroupFolderType_RemoveSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId SecurityGroupType_SecurityGroupId = new NodeId(Opc.Ua.Variables.SecurityGroupType_SecurityGroupId);

        /// <remarks />
        public static readonly NodeId SecurityGroupType_KeyLifetime = new NodeId(Opc.Ua.Variables.SecurityGroupType_KeyLifetime);

        /// <remarks />
        public static readonly NodeId SecurityGroupType_SecurityPolicyUri = new NodeId(Opc.Ua.Variables.SecurityGroupType_SecurityPolicyUri);

        /// <remarks />
        public static readonly NodeId SecurityGroupType_MaxFutureKeyCount = new NodeId(Opc.Ua.Variables.SecurityGroupType_MaxFutureKeyCount);

        /// <remarks />
        public static readonly NodeId SecurityGroupType_MaxPastKeyCount = new NodeId(Opc.Ua.Variables.SecurityGroupType_MaxPastKeyCount);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_GetSecurityKeys_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_GetSecurityKeys_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_GetSecurityKeys_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_GetSecurityKeys_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_GetSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_GetSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_GetSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_GetSecurityGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_SecurityGroups_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_SecurityGroups_AddSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_SecurityGroups_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_SecurityGroups_AddSecurityGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_SecurityGroups_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_SecurityGroups_RemoveSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_PublisherId = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_PublisherId);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_TransportProfileUri = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_TransportProfileUri);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_TransportProfileUri_Selections = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_TransportProfileUri_Selections);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_ConnectionProperties = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_ConnectionProperties);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Address_NetworkInterface = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Address_NetworkInterface);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Address_NetworkInterface_Selections = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Address_NetworkInterface_Selections);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Status_State);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_AddWriterGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_AddWriterGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_AddWriterGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_AddWriterGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_AddReaderGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_AddReaderGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_AddReaderGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_AddReaderGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_ConnectionName_Placeholder_RemoveGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_ConnectionName_Placeholder_RemoveGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_SetSecurityKeys_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_SetSecurityKeys_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_AddConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_AddConnection_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_AddConnection_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_AddConnection_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_RemoveConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_RemoveConnection_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedDataItems_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedEvents_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedEvents_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedEvents_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedEvents_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedDataItemsTemplate_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedDataItemsTemplate_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedDataItemsTemplate_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedDataItemsTemplate_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedEventsTemplate_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedEventsTemplate_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddPublishedEventsTemplate_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddPublishedEventsTemplate_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_RemovePublishedDataSet_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_RemovePublishedDataSet_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddDataSetFolder_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddDataSetFolder_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_AddDataSetFolder_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_AddDataSetFolder_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_PublishedDataSets_RemoveDataSetFolder_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribeType_PublishedDataSets_RemoveDataSetFolder_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Status_State = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Status_State);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetWriters = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetWriters);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetReaders = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetReaders);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetWriters = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetWriters);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetReaders = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetReaders);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribeType_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribeType_SupportedTransportProfiles = new NodeId(Opc.Ua.Variables.PublishSubscribeType_SupportedTransportProfiles);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_GetSecurityKeys_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_GetSecurityKeys_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_GetSecurityKeys_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_GetSecurityKeys_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_GetSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_GetSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_GetSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_GetSecurityGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_SecurityGroups_AddSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_SecurityGroups_AddSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_SecurityGroups_AddSecurityGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_SecurityGroups_AddSecurityGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_SecurityGroups_RemoveSecurityGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_SecurityGroups_RemoveSecurityGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_PublisherId = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_PublisherId);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_TransportProfileUri = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_TransportProfileUri);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_TransportProfileUri_Selections = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_TransportProfileUri_Selections);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_ConnectionProperties = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_ConnectionProperties);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Address_NetworkInterface = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Address_NetworkInterface);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Address_NetworkInterface_Selections = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Address_NetworkInterface_Selections);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Status_State);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_Diagnostics_LiveValues_ResolvedAddress_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_AddWriterGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_AddWriterGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_AddWriterGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_AddWriterGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_AddReaderGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_AddReaderGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_AddReaderGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_AddReaderGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_ConnectionName_Placeholder_RemoveGroup_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_ConnectionName_Placeholder_RemoveGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_SetSecurityKeys_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_SetSecurityKeys_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_AddConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_AddConnection_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_AddConnection_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_AddConnection_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_RemoveConnection_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_RemoveConnection_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedDataItems_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedDataItems_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedDataItems_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedDataItems_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedEvents_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedEvents_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedEvents_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedEvents_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedDataItemsTemplate_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedDataItemsTemplate_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedDataItemsTemplate_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedDataItemsTemplate_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedEventsTemplate_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedEventsTemplate_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddPublishedEventsTemplate_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddPublishedEventsTemplate_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_RemovePublishedDataSet_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_RemovePublishedDataSet_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddDataSetFolder_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddDataSetFolder_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_AddDataSetFolder_OutputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_AddDataSetFolder_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_PublishedDataSets_RemoveDataSetFolder_InputArguments = new NodeId(Opc.Ua.Variables.PublishSubscribe_PublishedDataSets_RemoveDataSetFolder_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Status_State = new NodeId(Opc.Ua.Variables.PublishSubscribe_Status_State);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetWriters = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetWriters);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetReaders = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetReaders);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetWriters = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetWriters);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetReaders = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetReaders);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishSubscribe_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishSubscribe_SupportedTransportProfiles = new NodeId(Opc.Ua.Variables.PublishSubscribe_SupportedTransportProfiles);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_DataSetWriterId = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_DataSetWriterId);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_DataSetFieldContentMask = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_DataSetFieldContentMask);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_DataSetWriterProperties = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_DataSetWriterProperties);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Status_State);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_ConfigurationVersion = new NodeId(Opc.Ua.Variables.PublishedDataSetType_ConfigurationVersion);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetMetaData = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetMetaData);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_DataSetClassId = new NodeId(Opc.Ua.Variables.PublishedDataSetType_DataSetClassId);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_ExtensionFields_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataSetType_ExtensionFields_AddExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_ExtensionFields_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedDataSetType_ExtensionFields_AddExtensionField_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishedDataSetType_ExtensionFields_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataSetType_ExtensionFields_RemoveExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId ExtensionFieldsType_ExtensionFieldName_Placeholder = new NodeId(Opc.Ua.Variables.ExtensionFieldsType_ExtensionFieldName_Placeholder);

        /// <remarks />
        public static readonly NodeId ExtensionFieldsType_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.ExtensionFieldsType_AddExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId ExtensionFieldsType_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.ExtensionFieldsType_AddExtensionField_OutputArguments);

        /// <remarks />
        public static readonly NodeId ExtensionFieldsType_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.ExtensionFieldsType_RemoveExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetWriterId = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetWriterId);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetFieldContentMask = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetFieldContentMask);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetWriterProperties = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_DataSetWriterProperties);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Status_State);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_ExtensionFields_AddExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_ExtensionFields_AddExtensionField_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_ExtensionFields_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_ExtensionFields_RemoveExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_PublishedData = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_PublishedData);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_AddVariables_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_AddVariables_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_AddVariables_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_AddVariables_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_RemoveVariables_InputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_RemoveVariables_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishedDataItemsType_RemoveVariables_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedDataItemsType_RemoveVariables_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_DataSetWriterId = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_DataSetWriterId);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_DataSetFieldContentMask = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_DataSetFieldContentMask);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_DataSetWriterProperties = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_DataSetWriterProperties);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Status_State);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PublishedEventsType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_ExtensionFields_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ExtensionFields_AddExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_ExtensionFields_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ExtensionFields_AddExtensionField_OutputArguments);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_ExtensionFields_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ExtensionFields_RemoveExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_PubSubEventNotifier = new NodeId(Opc.Ua.Variables.PublishedEventsType_PubSubEventNotifier);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_SelectedFields = new NodeId(Opc.Ua.Variables.PublishedEventsType_SelectedFields);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_Filter = new NodeId(Opc.Ua.Variables.PublishedEventsType_Filter);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_ModifyFieldSelection_InputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ModifyFieldSelection_InputArguments);

        /// <remarks />
        public static readonly NodeId PublishedEventsType_ModifyFieldSelection_OutputArguments = new NodeId(Opc.Ua.Variables.PublishedEventsType_ModifyFieldSelection_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItems_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEvents_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItemsTemplate_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItemsTemplate_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItemsTemplate_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedDataItemsTemplate_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEventsTemplate_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEventsTemplate_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEventsTemplate_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddPublishedEventsTemplate_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_RemovePublishedDataSet_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddDataSetFolder_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddDataSetFolder_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_AddDataSetFolder_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_AddDataSetFolder_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_DataSetFolderName_Placeholder_RemoveDataSetFolder_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_DataSetFolderName_Placeholder_RemoveDataSetFolder_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ConfigurationVersion = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_ConfigurationVersion);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_DataSetMetaData = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_DataSetMetaData);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_AddExtensionField_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_PublishedDataSetName_Placeholder_ExtensionFields_RemoveExtensionField_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedDataItems_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedDataItems_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedDataItems_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedDataItems_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedEvents_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedEvents_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedEvents_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedEvents_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedDataItemsTemplate_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedDataItemsTemplate_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedDataItemsTemplate_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedDataItemsTemplate_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedEventsTemplate_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedEventsTemplate_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddPublishedEventsTemplate_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddPublishedEventsTemplate_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_RemovePublishedDataSet_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_RemovePublishedDataSet_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddDataSetFolder_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddDataSetFolder_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_AddDataSetFolder_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_AddDataSetFolder_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetFolderType_RemoveDataSetFolder_InputArguments = new NodeId(Opc.Ua.Variables.DataSetFolderType_RemoveDataSetFolder_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_PublisherId = new NodeId(Opc.Ua.Variables.PubSubConnectionType_PublisherId);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_TransportProfileUri = new NodeId(Opc.Ua.Variables.PubSubConnectionType_TransportProfileUri);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_TransportProfileUri_Selections = new NodeId(Opc.Ua.Variables.PubSubConnectionType_TransportProfileUri_Selections);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ConnectionProperties = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ConnectionProperties);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Address_NetworkInterface = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Address_NetworkInterface);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Address_NetworkInterface_Selections = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Address_NetworkInterface_Selections);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_SecurityMode = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_SecurityMode);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_MaxNetworkMessageSize = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_MaxNetworkMessageSize);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_GroupProperties = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_GroupProperties);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Status_State);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_WriterGroupId = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_WriterGroupId);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_PublishingInterval = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_PublishingInterval);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_KeepAliveTime = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_KeepAliveTime);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Priority = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Priority);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_LocaleIds = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_LocaleIds);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_HeaderLayoutUri = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_HeaderLayoutUri);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_SentNetworkMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_FailedTransmissions_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_Counters_EncryptionErrors_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetWriters = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetWriters);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetWriters = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetWriters);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_AddDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_AddDataSetWriter_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_AddDataSetWriter_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_AddDataSetWriter_OutputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_WriterGroupName_Placeholder_RemoveDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_WriterGroupName_Placeholder_RemoveDataSetWriter_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_SecurityMode = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_SecurityMode);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_MaxNetworkMessageSize = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_MaxNetworkMessageSize);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_GroupProperties = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_GroupProperties);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Status_State);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedNetworkMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedInvalidNetworkMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_ReceivedInvalidNetworkMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_DecryptionErrors_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_DecryptionErrors_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_DecryptionErrors_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_DecryptionErrors_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetReaders = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetReaders);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetReaders = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetReaders);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_AddDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_AddDataSetReader_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_AddDataSetReader_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_AddDataSetReader_OutputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_ReaderGroupName_Placeholder_RemoveDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_ReaderGroupName_Placeholder_RemoveDataSetReader_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Status_State = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Status_State);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_LiveValues_ResolvedAddress = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_LiveValues_ResolvedAddress);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_Diagnostics_LiveValues_ResolvedAddress_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubConnectionType_Diagnostics_LiveValues_ResolvedAddress_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_AddWriterGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_AddWriterGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_AddWriterGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_AddWriterGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_AddReaderGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_AddReaderGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_AddReaderGroup_OutputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_AddReaderGroup_OutputArguments);

        /// <remarks />
        public static readonly NodeId PubSubConnectionType_RemoveGroup_InputArguments = new NodeId(Opc.Ua.Variables.PubSubConnectionType_RemoveGroup_InputArguments);

        /// <remarks />
        public static readonly NodeId PubSubGroupType_SecurityMode = new NodeId(Opc.Ua.Variables.PubSubGroupType_SecurityMode);

        /// <remarks />
        public static readonly NodeId PubSubGroupType_SecurityGroupId = new NodeId(Opc.Ua.Variables.PubSubGroupType_SecurityGroupId);

        /// <remarks />
        public static readonly NodeId PubSubGroupType_SecurityKeyServices = new NodeId(Opc.Ua.Variables.PubSubGroupType_SecurityKeyServices);

        /// <remarks />
        public static readonly NodeId PubSubGroupType_MaxNetworkMessageSize = new NodeId(Opc.Ua.Variables.PubSubGroupType_MaxNetworkMessageSize);

        /// <remarks />
        public static readonly NodeId PubSubGroupType_GroupProperties = new NodeId(Opc.Ua.Variables.PubSubGroupType_GroupProperties);

        /// <remarks />
        public static readonly NodeId PubSubGroupType_Status_State = new NodeId(Opc.Ua.Variables.PubSubGroupType_Status_State);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Status_State = new NodeId(Opc.Ua.Variables.WriterGroupType_Status_State);

        /// <remarks />
        public static readonly NodeId WriterGroupType_WriterGroupId = new NodeId(Opc.Ua.Variables.WriterGroupType_WriterGroupId);

        /// <remarks />
        public static readonly NodeId WriterGroupType_PublishingInterval = new NodeId(Opc.Ua.Variables.WriterGroupType_PublishingInterval);

        /// <remarks />
        public static readonly NodeId WriterGroupType_KeepAliveTime = new NodeId(Opc.Ua.Variables.WriterGroupType_KeepAliveTime);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Priority = new NodeId(Opc.Ua.Variables.WriterGroupType_Priority);

        /// <remarks />
        public static readonly NodeId WriterGroupType_LocaleIds = new NodeId(Opc.Ua.Variables.WriterGroupType_LocaleIds);

        /// <remarks />
        public static readonly NodeId WriterGroupType_HeaderLayoutUri = new NodeId(Opc.Ua.Variables.WriterGroupType_HeaderLayoutUri);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_DataSetWriterId = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_DataSetWriterId);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_DataSetFieldContentMask = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_DataSetFieldContentMask);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_DataSetWriterProperties = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_DataSetWriterProperties);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Status_State);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_DataSetWriterName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_SentNetworkMessages = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_SentNetworkMessages);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_SentNetworkMessages_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_SentNetworkMessages_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_SentNetworkMessages_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_SentNetworkMessages_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_SentNetworkMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_SentNetworkMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_FailedTransmissions = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_FailedTransmissions);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_FailedTransmissions_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_FailedTransmissions_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_FailedTransmissions_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_FailedTransmissions_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_FailedTransmissions_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_FailedTransmissions_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_EncryptionErrors = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_EncryptionErrors);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_EncryptionErrors_Active = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_EncryptionErrors_Active);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_EncryptionErrors_Classification = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_EncryptionErrors_Classification);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_Counters_EncryptionErrors_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_Counters_EncryptionErrors_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_LiveValues_ConfiguredDataSetWriters = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_LiveValues_ConfiguredDataSetWriters);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_LiveValues_OperationalDataSetWriters = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_LiveValues_OperationalDataSetWriters);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_LiveValues_OperationalDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.WriterGroupType_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId WriterGroupType_AddDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.WriterGroupType_AddDataSetWriter_InputArguments);

        /// <remarks />
        public static readonly NodeId WriterGroupType_AddDataSetWriter_OutputArguments = new NodeId(Opc.Ua.Variables.WriterGroupType_AddDataSetWriter_OutputArguments);

        /// <remarks />
        public static readonly NodeId WriterGroupType_RemoveDataSetWriter_InputArguments = new NodeId(Opc.Ua.Variables.WriterGroupType_RemoveDataSetWriter_InputArguments);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Status_State = new NodeId(Opc.Ua.Variables.ReaderGroupType_Status_State);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_PublisherId = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_PublisherId);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_WriterGroupId = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_WriterGroupId);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_DataSetWriterId = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_DataSetWriterId);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_DataSetMetaData = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_DataSetMetaData);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_DataSetFieldContentMask = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_DataSetFieldContentMask);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_MessageReceiveTimeout = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_MessageReceiveTimeout);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_KeyFrameCount = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_KeyFrameCount);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_HeaderLayoutUri = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_HeaderLayoutUri);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_DataSetReaderProperties = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_DataSetReaderProperties);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Status_State = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Status_State);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_DecryptionErrors_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_DecryptionErrors_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_DecryptionErrors_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_DecryptionErrors_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_CreateTargetVariables_InputArguments = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_CreateTargetVariables_InputArguments);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_CreateTargetVariables_OutputArguments = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_CreateTargetVariables_OutputArguments);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_CreateDataSetMirror_InputArguments = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_CreateDataSetMirror_InputArguments);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_DataSetReaderName_Placeholder_CreateDataSetMirror_OutputArguments = new NodeId(Opc.Ua.Variables.ReaderGroupType_DataSetReaderName_Placeholder_CreateDataSetMirror_OutputArguments);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_ReceivedNetworkMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_ReceivedInvalidNetworkMessages_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_ReceivedInvalidNetworkMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_ReceivedInvalidNetworkMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_DecryptionErrors_Active = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_DecryptionErrors_Active);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_DecryptionErrors_Classification = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_DecryptionErrors_Classification);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_LiveValues_ConfiguredDataSetReaders = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_LiveValues_ConfiguredDataSetReaders);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_LiveValues_OperationalDataSetReaders = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_LiveValues_OperationalDataSetReaders);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.ReaderGroupType_Diagnostics_LiveValues_OperationalDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_AddDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.ReaderGroupType_AddDataSetReader_InputArguments);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_AddDataSetReader_OutputArguments = new NodeId(Opc.Ua.Variables.ReaderGroupType_AddDataSetReader_OutputArguments);

        /// <remarks />
        public static readonly NodeId ReaderGroupType_RemoveDataSetReader_InputArguments = new NodeId(Opc.Ua.Variables.ReaderGroupType_RemoveDataSetReader_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_DataSetWriterId = new NodeId(Opc.Ua.Variables.DataSetWriterType_DataSetWriterId);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_DataSetFieldContentMask = new NodeId(Opc.Ua.Variables.DataSetWriterType_DataSetFieldContentMask);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_KeyFrameCount = new NodeId(Opc.Ua.Variables.DataSetWriterType_KeyFrameCount);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_DataSetWriterProperties = new NodeId(Opc.Ua.Variables.DataSetWriterType_DataSetWriterProperties);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Status_State = new NodeId(Opc.Ua.Variables.DataSetWriterType_Status_State);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages_Active = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages_Active);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages_Classification = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages_Classification);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetWriterType_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetWriterType_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_PublisherId = new NodeId(Opc.Ua.Variables.DataSetReaderType_PublisherId);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_WriterGroupId = new NodeId(Opc.Ua.Variables.DataSetReaderType_WriterGroupId);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_DataSetWriterId = new NodeId(Opc.Ua.Variables.DataSetReaderType_DataSetWriterId);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_DataSetMetaData = new NodeId(Opc.Ua.Variables.DataSetReaderType_DataSetMetaData);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_DataSetFieldContentMask = new NodeId(Opc.Ua.Variables.DataSetReaderType_DataSetFieldContentMask);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_MessageReceiveTimeout = new NodeId(Opc.Ua.Variables.DataSetReaderType_MessageReceiveTimeout);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_KeyFrameCount = new NodeId(Opc.Ua.Variables.DataSetReaderType_KeyFrameCount);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_HeaderLayoutUri = new NodeId(Opc.Ua.Variables.DataSetReaderType_HeaderLayoutUri);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_SecurityMode = new NodeId(Opc.Ua.Variables.DataSetReaderType_SecurityMode);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_SecurityGroupId = new NodeId(Opc.Ua.Variables.DataSetReaderType_SecurityGroupId);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_SecurityKeyServices = new NodeId(Opc.Ua.Variables.DataSetReaderType_SecurityKeyServices);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_DataSetReaderProperties = new NodeId(Opc.Ua.Variables.DataSetReaderType_DataSetReaderProperties);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Status_State = new NodeId(Opc.Ua.Variables.DataSetReaderType_Status_State);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_TotalInformation = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_TotalInformation);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_TotalInformation_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_TotalError = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_TotalError);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_TotalError_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_TotalError_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_TotalError_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_SubError = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_SubError);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateError = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateError);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_FailedDataSetMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_DecryptionErrors_Active = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_DecryptionErrors_Active);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_DecryptionErrors_Classification = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_DecryptionErrors_Classification);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_Counters_DecryptionErrors_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_LiveValues_MessageSequenceNumber_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_LiveValues_StatusCode_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_LiveValues_MajorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_LiveValues_MinorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_LiveValues_SecurityTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.DataSetReaderType_Diagnostics_LiveValues_TimeToNextTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_CreateTargetVariables_InputArguments = new NodeId(Opc.Ua.Variables.DataSetReaderType_CreateTargetVariables_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_CreateTargetVariables_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetReaderType_CreateTargetVariables_OutputArguments);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_CreateDataSetMirror_InputArguments = new NodeId(Opc.Ua.Variables.DataSetReaderType_CreateDataSetMirror_InputArguments);

        /// <remarks />
        public static readonly NodeId DataSetReaderType_CreateDataSetMirror_OutputArguments = new NodeId(Opc.Ua.Variables.DataSetReaderType_CreateDataSetMirror_OutputArguments);

        /// <remarks />
        public static readonly NodeId TargetVariablesType_TargetVariables = new NodeId(Opc.Ua.Variables.TargetVariablesType_TargetVariables);

        /// <remarks />
        public static readonly NodeId TargetVariablesType_AddTargetVariables_InputArguments = new NodeId(Opc.Ua.Variables.TargetVariablesType_AddTargetVariables_InputArguments);

        /// <remarks />
        public static readonly NodeId TargetVariablesType_AddTargetVariables_OutputArguments = new NodeId(Opc.Ua.Variables.TargetVariablesType_AddTargetVariables_OutputArguments);

        /// <remarks />
        public static readonly NodeId TargetVariablesType_RemoveTargetVariables_InputArguments = new NodeId(Opc.Ua.Variables.TargetVariablesType_RemoveTargetVariables_InputArguments);

        /// <remarks />
        public static readonly NodeId TargetVariablesType_RemoveTargetVariables_OutputArguments = new NodeId(Opc.Ua.Variables.TargetVariablesType_RemoveTargetVariables_OutputArguments);

        /// <remarks />
        public static readonly NodeId PubSubStatusType_State = new NodeId(Opc.Ua.Variables.PubSubStatusType_State);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_TotalInformation = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_TotalInformation);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_TotalError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_TotalError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_SubError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_SubError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsType_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsType_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId DiagnosticsLevel_EnumStrings = new NodeId(Opc.Ua.Variables.DiagnosticsLevel_EnumStrings);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsCounterType_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsCounterType_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsCounterType_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsCounterType_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsCounterType_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsCounterType_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsCounterType_TimeFirstChange = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsCounterType_TimeFirstChange);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsCounterClassification_EnumStrings = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsCounterClassification_EnumStrings);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetWriters = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetWriters);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetReaders = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetReaders);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_LiveValues_OperationalDataSetWriters = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_LiveValues_OperationalDataSetWriters);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_LiveValues_OperationalDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_LiveValues_OperationalDataSetReaders = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_LiveValues_OperationalDataSetReaders);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsRootType_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsRootType_LiveValues_OperationalDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_LiveValues_ResolvedAddress = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_LiveValues_ResolvedAddress);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsConnectionType_LiveValues_ResolvedAddress_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsConnectionType_LiveValues_ResolvedAddress_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_SentNetworkMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_FailedTransmissions_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_Counters_EncryptionErrors_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_LiveValues_ConfiguredDataSetWriters = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_LiveValues_ConfiguredDataSetWriters);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_LiveValues_ConfiguredDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_LiveValues_OperationalDataSetWriters = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_LiveValues_OperationalDataSetWriters);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_LiveValues_OperationalDataSetWriters_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_LiveValues_OperationalDataSetWriters_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_LiveValues_SecurityTokenID = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_LiveValues_SecurityTokenID);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_LiveValues_SecurityTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_LiveValues_SecurityTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_LiveValues_TimeToNextTokenID = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_LiveValues_TimeToNextTokenID);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsWriterGroupType_LiveValues_TimeToNextTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsWriterGroupType_LiveValues_TimeToNextTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_ReceivedNetworkMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_ReceivedInvalidNetworkMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_Counters_DecryptionErrors_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_LiveValues_ConfiguredDataSetReaders = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_LiveValues_ConfiguredDataSetReaders);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_LiveValues_ConfiguredDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_LiveValues_OperationalDataSetReaders = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_LiveValues_OperationalDataSetReaders);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsReaderGroupType_LiveValues_OperationalDataSetReaders_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsReaderGroupType_LiveValues_OperationalDataSetReaders_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_Counters_FailedDataSetMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_LiveValues_MessageSequenceNumber = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_LiveValues_MessageSequenceNumber);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_LiveValues_MessageSequenceNumber_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_LiveValues_MessageSequenceNumber_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_LiveValues_StatusCode = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_LiveValues_StatusCode);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_LiveValues_StatusCode_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_LiveValues_StatusCode_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_LiveValues_MajorVersion = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_LiveValues_MajorVersion);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_LiveValues_MajorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_LiveValues_MajorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_LiveValues_MinorVersion = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_LiveValues_MinorVersion);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetWriterType_LiveValues_MinorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetWriterType_LiveValues_MinorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_TotalInformation_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_TotalInformation_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_TotalInformation_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_TotalInformation_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_TotalInformation_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_TotalInformation_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_TotalError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_TotalError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_TotalError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_TotalError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_TotalError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_TotalError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateOperationalFromError_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StatePausedByParent_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_StateDisabledByMethod_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_FailedDataSetMessages_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors_Active = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors_Active);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors_Classification = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors_Classification);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_Counters_DecryptionErrors_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_MessageSequenceNumber = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_MessageSequenceNumber);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_MessageSequenceNumber_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_MessageSequenceNumber_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_StatusCode = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_StatusCode);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_StatusCode_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_StatusCode_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_MajorVersion = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_MajorVersion);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_MajorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_MajorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_MinorVersion = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_MinorVersion);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_MinorVersion_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_MinorVersion_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_SecurityTokenID = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_SecurityTokenID);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_SecurityTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_SecurityTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_TimeToNextTokenID = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_TimeToNextTokenID);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsDataSetReaderType_LiveValues_TimeToNextTokenID_DiagnosticsLevel = new NodeId(Opc.Ua.Variables.PubSubDiagnosticsDataSetReaderType_LiveValues_TimeToNextTokenID_DiagnosticsLevel);

        /// <remarks />
        public static readonly NodeId PubSubStatusEventType_ConnectionId = new NodeId(Opc.Ua.Variables.PubSubStatusEventType_ConnectionId);

        /// <remarks />
        public static readonly NodeId PubSubStatusEventType_GroupId = new NodeId(Opc.Ua.Variables.PubSubStatusEventType_GroupId);

        /// <remarks />
        public static readonly NodeId PubSubStatusEventType_State = new NodeId(Opc.Ua.Variables.PubSubStatusEventType_State);

        /// <remarks />
        public static readonly NodeId PubSubTransportLimitsExceedEventType_Actual = new NodeId(Opc.Ua.Variables.PubSubTransportLimitsExceedEventType_Actual);

        /// <remarks />
        public static readonly NodeId PubSubTransportLimitsExceedEventType_Maximum = new NodeId(Opc.Ua.Variables.PubSubTransportLimitsExceedEventType_Maximum);

        /// <remarks />
        public static readonly NodeId PubSubCommunicationFailureEventType_Error = new NodeId(Opc.Ua.Variables.PubSubCommunicationFailureEventType_Error);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageType_GroupVersion = new NodeId(Opc.Ua.Variables.UadpWriterGroupMessageType_GroupVersion);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageType_DataSetOrdering = new NodeId(Opc.Ua.Variables.UadpWriterGroupMessageType_DataSetOrdering);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageType_NetworkMessageContentMask = new NodeId(Opc.Ua.Variables.UadpWriterGroupMessageType_NetworkMessageContentMask);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageType_SamplingOffset = new NodeId(Opc.Ua.Variables.UadpWriterGroupMessageType_SamplingOffset);

        /// <remarks />
        public static readonly NodeId UadpWriterGroupMessageType_PublishingOffset = new NodeId(Opc.Ua.Variables.UadpWriterGroupMessageType_PublishingOffset);

        /// <remarks />
        public static readonly NodeId UadpDataSetWriterMessageType_DataSetMessageContentMask = new NodeId(Opc.Ua.Variables.UadpDataSetWriterMessageType_DataSetMessageContentMask);

        /// <remarks />
        public static readonly NodeId UadpDataSetWriterMessageType_ConfiguredSize = new NodeId(Opc.Ua.Variables.UadpDataSetWriterMessageType_ConfiguredSize);

        /// <remarks />
        public static readonly NodeId UadpDataSetWriterMessageType_NetworkMessageNumber = new NodeId(Opc.Ua.Variables.UadpDataSetWriterMessageType_NetworkMessageNumber);

        /// <remarks />
        public static readonly NodeId UadpDataSetWriterMessageType_DataSetOffset = new NodeId(Opc.Ua.Variables.UadpDataSetWriterMessageType_DataSetOffset);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType_GroupVersion = new NodeId(Opc.Ua.Variables.UadpDataSetReaderMessageType_GroupVersion);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType_NetworkMessageNumber = new NodeId(Opc.Ua.Variables.UadpDataSetReaderMessageType_NetworkMessageNumber);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType_DataSetOffset = new NodeId(Opc.Ua.Variables.UadpDataSetReaderMessageType_DataSetOffset);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType_DataSetClassId = new NodeId(Opc.Ua.Variables.UadpDataSetReaderMessageType_DataSetClassId);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType_NetworkMessageContentMask = new NodeId(Opc.Ua.Variables.UadpDataSetReaderMessageType_NetworkMessageContentMask);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType_DataSetMessageContentMask = new NodeId(Opc.Ua.Variables.UadpDataSetReaderMessageType_DataSetMessageContentMask);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType_PublishingInterval = new NodeId(Opc.Ua.Variables.UadpDataSetReaderMessageType_PublishingInterval);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType_ProcessingOffset = new NodeId(Opc.Ua.Variables.UadpDataSetReaderMessageType_ProcessingOffset);

        /// <remarks />
        public static readonly NodeId UadpDataSetReaderMessageType_ReceiveOffset = new NodeId(Opc.Ua.Variables.UadpDataSetReaderMessageType_ReceiveOffset);

        /// <remarks />
        public static readonly NodeId JsonWriterGroupMessageType_NetworkMessageContentMask = new NodeId(Opc.Ua.Variables.JsonWriterGroupMessageType_NetworkMessageContentMask);

        /// <remarks />
        public static readonly NodeId JsonDataSetWriterMessageType_DataSetMessageContentMask = new NodeId(Opc.Ua.Variables.JsonDataSetWriterMessageType_DataSetMessageContentMask);

        /// <remarks />
        public static readonly NodeId JsonDataSetReaderMessageType_NetworkMessageContentMask = new NodeId(Opc.Ua.Variables.JsonDataSetReaderMessageType_NetworkMessageContentMask);

        /// <remarks />
        public static readonly NodeId JsonDataSetReaderMessageType_DataSetMessageContentMask = new NodeId(Opc.Ua.Variables.JsonDataSetReaderMessageType_DataSetMessageContentMask);

        /// <remarks />
        public static readonly NodeId DatagramConnectionTransportType_DiscoveryAddress_NetworkInterface = new NodeId(Opc.Ua.Variables.DatagramConnectionTransportType_DiscoveryAddress_NetworkInterface);

        /// <remarks />
        public static readonly NodeId DatagramConnectionTransportType_DiscoveryAddress_NetworkInterface_Selections = new NodeId(Opc.Ua.Variables.DatagramConnectionTransportType_DiscoveryAddress_NetworkInterface_Selections);

        /// <remarks />
        public static readonly NodeId DatagramWriterGroupTransportType_MessageRepeatCount = new NodeId(Opc.Ua.Variables.DatagramWriterGroupTransportType_MessageRepeatCount);

        /// <remarks />
        public static readonly NodeId DatagramWriterGroupTransportType_MessageRepeatDelay = new NodeId(Opc.Ua.Variables.DatagramWriterGroupTransportType_MessageRepeatDelay);

        /// <remarks />
        public static readonly NodeId BrokerConnectionTransportType_ResourceUri = new NodeId(Opc.Ua.Variables.BrokerConnectionTransportType_ResourceUri);

        /// <remarks />
        public static readonly NodeId BrokerConnectionTransportType_AuthenticationProfileUri = new NodeId(Opc.Ua.Variables.BrokerConnectionTransportType_AuthenticationProfileUri);

        /// <remarks />
        public static readonly NodeId BrokerWriterGroupTransportType_QueueName = new NodeId(Opc.Ua.Variables.BrokerWriterGroupTransportType_QueueName);

        /// <remarks />
        public static readonly NodeId BrokerWriterGroupTransportType_ResourceUri = new NodeId(Opc.Ua.Variables.BrokerWriterGroupTransportType_ResourceUri);

        /// <remarks />
        public static readonly NodeId BrokerWriterGroupTransportType_AuthenticationProfileUri = new NodeId(Opc.Ua.Variables.BrokerWriterGroupTransportType_AuthenticationProfileUri);

        /// <remarks />
        public static readonly NodeId BrokerWriterGroupTransportType_RequestedDeliveryGuarantee = new NodeId(Opc.Ua.Variables.BrokerWriterGroupTransportType_RequestedDeliveryGuarantee);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportType_QueueName = new NodeId(Opc.Ua.Variables.BrokerDataSetWriterTransportType_QueueName);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportType_MetaDataQueueName = new NodeId(Opc.Ua.Variables.BrokerDataSetWriterTransportType_MetaDataQueueName);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportType_ResourceUri = new NodeId(Opc.Ua.Variables.BrokerDataSetWriterTransportType_ResourceUri);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportType_AuthenticationProfileUri = new NodeId(Opc.Ua.Variables.BrokerDataSetWriterTransportType_AuthenticationProfileUri);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportType_RequestedDeliveryGuarantee = new NodeId(Opc.Ua.Variables.BrokerDataSetWriterTransportType_RequestedDeliveryGuarantee);

        /// <remarks />
        public static readonly NodeId BrokerDataSetWriterTransportType_MetaDataUpdateTime = new NodeId(Opc.Ua.Variables.BrokerDataSetWriterTransportType_MetaDataUpdateTime);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportType_QueueName = new NodeId(Opc.Ua.Variables.BrokerDataSetReaderTransportType_QueueName);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportType_ResourceUri = new NodeId(Opc.Ua.Variables.BrokerDataSetReaderTransportType_ResourceUri);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportType_AuthenticationProfileUri = new NodeId(Opc.Ua.Variables.BrokerDataSetReaderTransportType_AuthenticationProfileUri);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportType_RequestedDeliveryGuarantee = new NodeId(Opc.Ua.Variables.BrokerDataSetReaderTransportType_RequestedDeliveryGuarantee);

        /// <remarks />
        public static readonly NodeId BrokerDataSetReaderTransportType_MetaDataQueueName = new NodeId(Opc.Ua.Variables.BrokerDataSetReaderTransportType_MetaDataQueueName);

        /// <remarks />
        public static readonly NodeId NetworkAddressType_NetworkInterface = new NodeId(Opc.Ua.Variables.NetworkAddressType_NetworkInterface);

        /// <remarks />
        public static readonly NodeId NetworkAddressType_NetworkInterface_Selections = new NodeId(Opc.Ua.Variables.NetworkAddressType_NetworkInterface_Selections);

        /// <remarks />
        public static readonly NodeId NetworkAddressUrlType_NetworkInterface_Selections = new NodeId(Opc.Ua.Variables.NetworkAddressUrlType_NetworkInterface_Selections);

        /// <remarks />
        public static readonly NodeId NetworkAddressUrlType_Url = new NodeId(Opc.Ua.Variables.NetworkAddressUrlType_Url);

        /// <remarks />
        public static readonly NodeId AliasNameCategoryType_SubAliasNameCategories_Placeholder_FindAlias_InputArguments = new NodeId(Opc.Ua.Variables.AliasNameCategoryType_SubAliasNameCategories_Placeholder_FindAlias_InputArguments);

        /// <remarks />
        public static readonly NodeId AliasNameCategoryType_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments = new NodeId(Opc.Ua.Variables.AliasNameCategoryType_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments);

        /// <remarks />
        public static readonly NodeId AliasNameCategoryType_FindAlias_InputArguments = new NodeId(Opc.Ua.Variables.AliasNameCategoryType_FindAlias_InputArguments);

        /// <remarks />
        public static readonly NodeId AliasNameCategoryType_FindAlias_OutputArguments = new NodeId(Opc.Ua.Variables.AliasNameCategoryType_FindAlias_OutputArguments);

        /// <remarks />
        public static readonly NodeId Aliases_SubAliasNameCategories_Placeholder_FindAlias_InputArguments = new NodeId(Opc.Ua.Variables.Aliases_SubAliasNameCategories_Placeholder_FindAlias_InputArguments);

        /// <remarks />
        public static readonly NodeId Aliases_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments = new NodeId(Opc.Ua.Variables.Aliases_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments);

        /// <remarks />
        public static readonly NodeId Aliases_FindAlias_InputArguments = new NodeId(Opc.Ua.Variables.Aliases_FindAlias_InputArguments);

        /// <remarks />
        public static readonly NodeId Aliases_FindAlias_OutputArguments = new NodeId(Opc.Ua.Variables.Aliases_FindAlias_OutputArguments);

        /// <remarks />
        public static readonly NodeId TagVariables_SubAliasNameCategories_Placeholder_FindAlias_InputArguments = new NodeId(Opc.Ua.Variables.TagVariables_SubAliasNameCategories_Placeholder_FindAlias_InputArguments);

        /// <remarks />
        public static readonly NodeId TagVariables_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments = new NodeId(Opc.Ua.Variables.TagVariables_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments);

        /// <remarks />
        public static readonly NodeId TagVariables_FindAlias_InputArguments = new NodeId(Opc.Ua.Variables.TagVariables_FindAlias_InputArguments);

        /// <remarks />
        public static readonly NodeId TagVariables_FindAlias_OutputArguments = new NodeId(Opc.Ua.Variables.TagVariables_FindAlias_OutputArguments);

        /// <remarks />
        public static readonly NodeId Topics_SubAliasNameCategories_Placeholder_FindAlias_InputArguments = new NodeId(Opc.Ua.Variables.Topics_SubAliasNameCategories_Placeholder_FindAlias_InputArguments);

        /// <remarks />
        public static readonly NodeId Topics_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments = new NodeId(Opc.Ua.Variables.Topics_SubAliasNameCategories_Placeholder_FindAlias_OutputArguments);

        /// <remarks />
        public static readonly NodeId Topics_FindAlias_InputArguments = new NodeId(Opc.Ua.Variables.Topics_FindAlias_InputArguments);

        /// <remarks />
        public static readonly NodeId Topics_FindAlias_OutputArguments = new NodeId(Opc.Ua.Variables.Topics_FindAlias_OutputArguments);

        /// <remarks />
        public static readonly NodeId MultiStateDictionaryEntryDiscreteBaseType_EnumDictionaryEntries = new NodeId(Opc.Ua.Variables.MultiStateDictionaryEntryDiscreteBaseType_EnumDictionaryEntries);

        /// <remarks />
        public static readonly NodeId MultiStateDictionaryEntryDiscreteBaseType_ValueAsDictionaryEntries = new NodeId(Opc.Ua.Variables.MultiStateDictionaryEntryDiscreteBaseType_ValueAsDictionaryEntries);

        /// <remarks />
        public static readonly NodeId MultiStateDictionaryEntryDiscreteType_ValueAsDictionaryEntries = new NodeId(Opc.Ua.Variables.MultiStateDictionaryEntryDiscreteType_ValueAsDictionaryEntries);

        /// <remarks />
        public static readonly NodeId IIetfBaseNetworkInterfaceType_AdminStatus = new NodeId(Opc.Ua.Variables.IIetfBaseNetworkInterfaceType_AdminStatus);

        /// <remarks />
        public static readonly NodeId IIetfBaseNetworkInterfaceType_OperStatus = new NodeId(Opc.Ua.Variables.IIetfBaseNetworkInterfaceType_OperStatus);

        /// <remarks />
        public static readonly NodeId IIetfBaseNetworkInterfaceType_PhysAddress = new NodeId(Opc.Ua.Variables.IIetfBaseNetworkInterfaceType_PhysAddress);

        /// <remarks />
        public static readonly NodeId IIetfBaseNetworkInterfaceType_Speed = new NodeId(Opc.Ua.Variables.IIetfBaseNetworkInterfaceType_Speed);

        /// <remarks />
        public static readonly NodeId IIetfBaseNetworkInterfaceType_Speed_EngineeringUnits = new NodeId(Opc.Ua.Variables.IIetfBaseNetworkInterfaceType_Speed_EngineeringUnits);

        /// <remarks />
        public static readonly NodeId IIeeeBaseEthernetPortType_Speed = new NodeId(Opc.Ua.Variables.IIeeeBaseEthernetPortType_Speed);

        /// <remarks />
        public static readonly NodeId IIeeeBaseEthernetPortType_Speed_EngineeringUnits = new NodeId(Opc.Ua.Variables.IIeeeBaseEthernetPortType_Speed_EngineeringUnits);

        /// <remarks />
        public static readonly NodeId IIeeeBaseEthernetPortType_Duplex = new NodeId(Opc.Ua.Variables.IIeeeBaseEthernetPortType_Duplex);

        /// <remarks />
        public static readonly NodeId IIeeeBaseEthernetPortType_MaxFrameLength = new NodeId(Opc.Ua.Variables.IIeeeBaseEthernetPortType_MaxFrameLength);

        /// <remarks />
        public static readonly NodeId IIeeeAutoNegotiationStatusType_NegotiationStatus = new NodeId(Opc.Ua.Variables.IIeeeAutoNegotiationStatusType_NegotiationStatus);

        /// <remarks />
        public static readonly NodeId IBaseEthernetCapabilitiesType_VlanTagCapable = new NodeId(Opc.Ua.Variables.IBaseEthernetCapabilitiesType_VlanTagCapable);

        /// <remarks />
        public static readonly NodeId ISrClassType_Id = new NodeId(Opc.Ua.Variables.ISrClassType_Id);

        /// <remarks />
        public static readonly NodeId ISrClassType_Priority = new NodeId(Opc.Ua.Variables.ISrClassType_Priority);

        /// <remarks />
        public static readonly NodeId ISrClassType_Vid = new NodeId(Opc.Ua.Variables.ISrClassType_Vid);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStreamType_StreamId = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnStreamType_StreamId);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStreamType_StreamName = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnStreamType_StreamName);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStreamType_State = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnStreamType_State);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStreamType_AccumulatedLatency = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnStreamType_AccumulatedLatency);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStreamType_SrClassId = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnStreamType_SrClassId);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnTrafficSpecificationType_MaxIntervalFrames = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnTrafficSpecificationType_MaxIntervalFrames);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnTrafficSpecificationType_MaxFrameSize = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnTrafficSpecificationType_MaxFrameSize);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnTrafficSpecificationType_Interval = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnTrafficSpecificationType_Interval);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStatusStreamType_TalkerStatus = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnStatusStreamType_TalkerStatus);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStatusStreamType_ListenerStatus = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnStatusStreamType_ListenerStatus);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStatusStreamType_FailureCode = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnStatusStreamType_FailureCode);

        /// <remarks />
        public static readonly NodeId IIeeeBaseTsnStatusStreamType_FailureSystemIdentifier = new NodeId(Opc.Ua.Variables.IIeeeBaseTsnStatusStreamType_FailureSystemIdentifier);

        /// <remarks />
        public static readonly NodeId IIeeeTsnInterfaceConfigurationType_MacAddress = new NodeId(Opc.Ua.Variables.IIeeeTsnInterfaceConfigurationType_MacAddress);

        /// <remarks />
        public static readonly NodeId IIeeeTsnInterfaceConfigurationType_InterfaceName = new NodeId(Opc.Ua.Variables.IIeeeTsnInterfaceConfigurationType_InterfaceName);

        /// <remarks />
        public static readonly NodeId IIeeeTsnInterfaceConfigurationTalkerType_TimeAwareOffset = new NodeId(Opc.Ua.Variables.IIeeeTsnInterfaceConfigurationTalkerType_TimeAwareOffset);

        /// <remarks />
        public static readonly NodeId IIeeeTsnInterfaceConfigurationListenerType_ReceiveOffset = new NodeId(Opc.Ua.Variables.IIeeeTsnInterfaceConfigurationListenerType_ReceiveOffset);

        /// <remarks />
        public static readonly NodeId IIeeeTsnMacAddressType_DestinationAddress = new NodeId(Opc.Ua.Variables.IIeeeTsnMacAddressType_DestinationAddress);

        /// <remarks />
        public static readonly NodeId IIeeeTsnMacAddressType_SourceAddress = new NodeId(Opc.Ua.Variables.IIeeeTsnMacAddressType_SourceAddress);

        /// <remarks />
        public static readonly NodeId IIeeeTsnVlanTagType_VlanId = new NodeId(Opc.Ua.Variables.IIeeeTsnVlanTagType_VlanId);

        /// <remarks />
        public static readonly NodeId IIeeeTsnVlanTagType_PriorityCodePoint = new NodeId(Opc.Ua.Variables.IIeeeTsnVlanTagType_PriorityCodePoint);

        /// <remarks />
        public static readonly NodeId IPriorityMappingEntryType_MappingUri = new NodeId(Opc.Ua.Variables.IPriorityMappingEntryType_MappingUri);

        /// <remarks />
        public static readonly NodeId IPriorityMappingEntryType_PriorityLabel = new NodeId(Opc.Ua.Variables.IPriorityMappingEntryType_PriorityLabel);

        /// <remarks />
        public static readonly NodeId IPriorityMappingEntryType_PriorityValue_PCP = new NodeId(Opc.Ua.Variables.IPriorityMappingEntryType_PriorityValue_PCP);

        /// <remarks />
        public static readonly NodeId IPriorityMappingEntryType_PriorityValue_DSCP = new NodeId(Opc.Ua.Variables.IPriorityMappingEntryType_PriorityValue_DSCP);

        /// <remarks />
        public static readonly NodeId Duplex_EnumValues = new NodeId(Opc.Ua.Variables.Duplex_EnumValues);

        /// <remarks />
        public static readonly NodeId InterfaceAdminStatus_EnumValues = new NodeId(Opc.Ua.Variables.InterfaceAdminStatus_EnumValues);

        /// <remarks />
        public static readonly NodeId InterfaceOperStatus_EnumValues = new NodeId(Opc.Ua.Variables.InterfaceOperStatus_EnumValues);

        /// <remarks />
        public static readonly NodeId NegotiationStatus_EnumValues = new NodeId(Opc.Ua.Variables.NegotiationStatus_EnumValues);

        /// <remarks />
        public static readonly NodeId TsnFailureCode_EnumValues = new NodeId(Opc.Ua.Variables.TsnFailureCode_EnumValues);

        /// <remarks />
        public static readonly NodeId TsnStreamState_EnumValues = new NodeId(Opc.Ua.Variables.TsnStreamState_EnumValues);

        /// <remarks />
        public static readonly NodeId TsnTalkerStatus_EnumValues = new NodeId(Opc.Ua.Variables.TsnTalkerStatus_EnumValues);

        /// <remarks />
        public static readonly NodeId TsnListenerStatus_EnumValues = new NodeId(Opc.Ua.Variables.TsnListenerStatus_EnumValues);

        /// <remarks />
        public static readonly NodeId IdType_EnumStrings = new NodeId(Opc.Ua.Variables.IdType_EnumStrings);

        /// <remarks />
        public static readonly NodeId NodeClass_EnumValues = new NodeId(Opc.Ua.Variables.NodeClass_EnumValues);

        /// <remarks />
        public static readonly NodeId PermissionType_OptionSetValues = new NodeId(Opc.Ua.Variables.PermissionType_OptionSetValues);

        /// <remarks />
        public static readonly NodeId AccessLevelType_OptionSetValues = new NodeId(Opc.Ua.Variables.AccessLevelType_OptionSetValues);

        /// <remarks />
        public static readonly NodeId AccessLevelExType_OptionSetValues = new NodeId(Opc.Ua.Variables.AccessLevelExType_OptionSetValues);

        /// <remarks />
        public static readonly NodeId EventNotifierType_OptionSetValues = new NodeId(Opc.Ua.Variables.EventNotifierType_OptionSetValues);

        /// <remarks />
        public static readonly NodeId AccessRestrictionType_OptionSetValues = new NodeId(Opc.Ua.Variables.AccessRestrictionType_OptionSetValues);

        /// <remarks />
        public static readonly NodeId StructureType_EnumStrings = new NodeId(Opc.Ua.Variables.StructureType_EnumStrings);

        /// <remarks />
        public static readonly NodeId ApplicationType_EnumStrings = new NodeId(Opc.Ua.Variables.ApplicationType_EnumStrings);

        /// <remarks />
        public static readonly NodeId MessageSecurityMode_EnumStrings = new NodeId(Opc.Ua.Variables.MessageSecurityMode_EnumStrings);

        /// <remarks />
        public static readonly NodeId UserTokenType_EnumStrings = new NodeId(Opc.Ua.Variables.UserTokenType_EnumStrings);

        /// <remarks />
        public static readonly NodeId SecurityTokenRequestType_EnumStrings = new NodeId(Opc.Ua.Variables.SecurityTokenRequestType_EnumStrings);

        /// <remarks />
        public static readonly NodeId NodeAttributesMask_EnumValues = new NodeId(Opc.Ua.Variables.NodeAttributesMask_EnumValues);

        /// <remarks />
        public static readonly NodeId AttributeWriteMask_OptionSetValues = new NodeId(Opc.Ua.Variables.AttributeWriteMask_OptionSetValues);

        /// <remarks />
        public static readonly NodeId BrowseDirection_EnumStrings = new NodeId(Opc.Ua.Variables.BrowseDirection_EnumStrings);

        /// <remarks />
        public static readonly NodeId BrowseResultMask_EnumValues = new NodeId(Opc.Ua.Variables.BrowseResultMask_EnumValues);

        /// <remarks />
        public static readonly NodeId FilterOperator_EnumStrings = new NodeId(Opc.Ua.Variables.FilterOperator_EnumStrings);

        /// <remarks />
        public static readonly NodeId TimestampsToReturn_EnumStrings = new NodeId(Opc.Ua.Variables.TimestampsToReturn_EnumStrings);

        /// <remarks />
        public static readonly NodeId HistoryUpdateType_EnumValues = new NodeId(Opc.Ua.Variables.HistoryUpdateType_EnumValues);

        /// <remarks />
        public static readonly NodeId PerformUpdateType_EnumValues = new NodeId(Opc.Ua.Variables.PerformUpdateType_EnumValues);

        /// <remarks />
        public static readonly NodeId MonitoringMode_EnumStrings = new NodeId(Opc.Ua.Variables.MonitoringMode_EnumStrings);

        /// <remarks />
        public static readonly NodeId DataChangeTrigger_EnumStrings = new NodeId(Opc.Ua.Variables.DataChangeTrigger_EnumStrings);

        /// <remarks />
        public static readonly NodeId DeadbandType_EnumStrings = new NodeId(Opc.Ua.Variables.DeadbandType_EnumStrings);

        /// <remarks />
        public static readonly NodeId RedundancySupport_EnumStrings = new NodeId(Opc.Ua.Variables.RedundancySupport_EnumStrings);

        /// <remarks />
        public static readonly NodeId ServerState_EnumStrings = new NodeId(Opc.Ua.Variables.ServerState_EnumStrings);

        /// <remarks />
        public static readonly NodeId ModelChangeStructureVerbMask_EnumValues = new NodeId(Opc.Ua.Variables.ModelChangeStructureVerbMask_EnumValues);

        /// <remarks />
        public static readonly NodeId AxisScaleEnumeration_EnumStrings = new NodeId(Opc.Ua.Variables.AxisScaleEnumeration_EnumStrings);

        /// <remarks />
        public static readonly NodeId ExceptionDeviationFormat_EnumStrings = new NodeId(Opc.Ua.Variables.ExceptionDeviationFormat_EnumStrings);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_NamespaceUri = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_NamespaceUri);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_Deprecated = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Deprecated);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_Union = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Union);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_KeyValuePair = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_KeyValuePair);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_AdditionalParametersType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AdditionalParametersType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EphemeralKeyType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EphemeralKeyType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EndpointType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EndpointType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_RationalNumber = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RationalNumber);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_Vector = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Vector);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ThreeDVector = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ThreeDVector);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_CartesianCoordinates = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_CartesianCoordinates);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ThreeDCartesianCoordinates = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ThreeDCartesianCoordinates);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_Orientation = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Orientation);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ThreeDOrientation = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ThreeDOrientation);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_Frame = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Frame);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ThreeDFrame = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ThreeDFrame);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_IdentityMappingRuleType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_IdentityMappingRuleType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_CurrencyUnitType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_CurrencyUnitType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_TrustListDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_TrustListDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataTypeSchemaHeader = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataTypeSchemaHeader);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataTypeDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataTypeDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_StructureDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_StructureDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EnumDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EnumDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SimpleTypeDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SimpleTypeDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_UABinaryFileDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UABinaryFileDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataSetMetaDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataSetMetaDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_FieldMetaData = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_FieldMetaData);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ConfigurationVersionDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ConfigurationVersionDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_PublishedDataSetDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_PublishedDataSetDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_PublishedDataSetSourceDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_PublishedDataSetSourceDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_PublishedVariableDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_PublishedVariableDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_PublishedDataItemsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_PublishedDataItemsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_PublishedEventsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_PublishedEventsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataSetWriterDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataSetWriterDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataSetWriterTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataSetWriterTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataSetWriterMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataSetWriterMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_PubSubGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_PubSubGroupDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_WriterGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_WriterGroupDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_WriterGroupTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_WriterGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_WriterGroupMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_WriterGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_PubSubConnectionDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_PubSubConnectionDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ConnectionTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ConnectionTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_NetworkAddressDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_NetworkAddressDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_NetworkAddressUrlDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_NetworkAddressUrlDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ReaderGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ReaderGroupDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ReaderGroupTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ReaderGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ReaderGroupMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ReaderGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataSetReaderDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataSetReaderDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataSetReaderTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataSetReaderTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataSetReaderMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataSetReaderMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SubscribedDataSetDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SubscribedDataSetDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_TargetVariablesDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_TargetVariablesDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_FieldTargetDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_FieldTargetDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SubscribedDataSetMirrorDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SubscribedDataSetMirrorDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_PubSubConfigurationDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_PubSubConfigurationDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_UadpWriterGroupMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UadpWriterGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_UadpDataSetWriterMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UadpDataSetWriterMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_UadpDataSetReaderMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UadpDataSetReaderMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_JsonWriterGroupMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_JsonWriterGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_JsonDataSetWriterMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_JsonDataSetWriterMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_JsonDataSetReaderMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_JsonDataSetReaderMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DatagramConnectionTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DatagramConnectionTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DatagramWriterGroupTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DatagramWriterGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_BrokerConnectionTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_BrokerConnectionTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_BrokerWriterGroupTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_BrokerWriterGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_BrokerDataSetWriterTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_BrokerDataSetWriterTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_BrokerDataSetReaderTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_BrokerDataSetReaderTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_AliasNameDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AliasNameDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_UnsignedRationalNumber = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UnsignedRationalNumber);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_RolePermissionType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RolePermissionType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DataTypeDefinition = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DataTypeDefinition);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_StructureField = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_StructureField);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_StructureDefinition = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_StructureDefinition);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EnumDefinition = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EnumDefinition);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_Argument = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Argument);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EnumValueType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EnumValueType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EnumField = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EnumField);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_OptionSet = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_OptionSet);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_TimeZoneDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_TimeZoneDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ApplicationDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ApplicationDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ServerOnNetwork = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ServerOnNetwork);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_UserTokenPolicy = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UserTokenPolicy);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EndpointDescription = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EndpointDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_RegisteredServer = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RegisteredServer);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DiscoveryConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DiscoveryConfiguration);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_MdnsDiscoveryConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_MdnsDiscoveryConfiguration);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SignedSoftwareCertificate = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SignedSoftwareCertificate);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_UserIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UserIdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_AnonymousIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AnonymousIdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_UserNameIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_UserNameIdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_X509IdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_X509IdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_IssuedIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_IssuedIdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_AddNodesItem = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AddNodesItem);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_AddReferencesItem = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AddReferencesItem);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DeleteNodesItem = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DeleteNodesItem);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DeleteReferencesItem = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DeleteReferencesItem);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_RelativePathElement = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RelativePathElement);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_RelativePath = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RelativePath);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EndpointConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EndpointConfiguration);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ContentFilterElement = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ContentFilterElement);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ContentFilter = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ContentFilter);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_FilterOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_FilterOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ElementOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ElementOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_LiteralOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_LiteralOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_AttributeOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AttributeOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SimpleAttributeOperand = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SimpleAttributeOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_HistoryEvent = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_HistoryEvent);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_MonitoringFilter = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_MonitoringFilter);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EventFilter = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EventFilter);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_AggregateConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AggregateConfiguration);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_HistoryEventFieldList = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_HistoryEventFieldList);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_BuildInfo = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_BuildInfo);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_RedundantServerDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_RedundantServerDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EndpointUrlListDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EndpointUrlListDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_NetworkGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_NetworkGroupDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ServerStatusDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ServerStatusDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SessionDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SessionDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ServiceCounterDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ServiceCounterDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_StatusResult = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_StatusResult);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SubscriptionDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SubscriptionDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ModelChangeStructureDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ModelChangeStructureDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_SemanticChangeStructureDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_SemanticChangeStructureDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_Range = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Range);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_EUInformation = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_EUInformation);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ComplexNumberType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ComplexNumberType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_DoubleComplexNumberType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_DoubleComplexNumberType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_AxisInformation = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_AxisInformation);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_XVType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_XVType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ProgramDiagnosticDataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ProgramDiagnosticDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_ProgramDiagnostic2DataType = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_ProgramDiagnostic2DataType);

        /// <remarks />
        public static readonly NodeId OpcUa_BinarySchema_Annotation = new NodeId(Opc.Ua.Variables.OpcUa_BinarySchema_Annotation);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_NamespaceUri = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_NamespaceUri);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_Deprecated = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Deprecated);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_Union = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Union);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_KeyValuePair = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_KeyValuePair);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_AdditionalParametersType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AdditionalParametersType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EphemeralKeyType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EphemeralKeyType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EndpointType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EndpointType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_RationalNumber = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RationalNumber);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_Vector = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Vector);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ThreeDVector = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ThreeDVector);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_CartesianCoordinates = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_CartesianCoordinates);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ThreeDCartesianCoordinates = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ThreeDCartesianCoordinates);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_Orientation = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Orientation);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ThreeDOrientation = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ThreeDOrientation);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_Frame = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Frame);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ThreeDFrame = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ThreeDFrame);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_IdentityMappingRuleType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_IdentityMappingRuleType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_CurrencyUnitType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_CurrencyUnitType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_TrustListDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_TrustListDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataTypeSchemaHeader = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataTypeSchemaHeader);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataTypeDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataTypeDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_StructureDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_StructureDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EnumDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EnumDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SimpleTypeDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SimpleTypeDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_UABinaryFileDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UABinaryFileDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataSetMetaDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataSetMetaDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_FieldMetaData = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_FieldMetaData);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ConfigurationVersionDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ConfigurationVersionDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_PublishedDataSetDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_PublishedDataSetDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_PublishedDataSetSourceDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_PublishedDataSetSourceDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_PublishedVariableDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_PublishedVariableDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_PublishedDataItemsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_PublishedDataItemsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_PublishedEventsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_PublishedEventsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataSetWriterDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataSetWriterDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataSetWriterTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataSetWriterTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataSetWriterMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataSetWriterMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_PubSubGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_PubSubGroupDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_WriterGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_WriterGroupDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_WriterGroupTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_WriterGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_WriterGroupMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_WriterGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_PubSubConnectionDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_PubSubConnectionDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ConnectionTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ConnectionTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_NetworkAddressDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_NetworkAddressDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_NetworkAddressUrlDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_NetworkAddressUrlDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ReaderGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ReaderGroupDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ReaderGroupTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ReaderGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ReaderGroupMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ReaderGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataSetReaderDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataSetReaderDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataSetReaderTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataSetReaderTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataSetReaderMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataSetReaderMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SubscribedDataSetDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SubscribedDataSetDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_TargetVariablesDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_TargetVariablesDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_FieldTargetDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_FieldTargetDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SubscribedDataSetMirrorDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SubscribedDataSetMirrorDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_PubSubConfigurationDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_PubSubConfigurationDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_UadpWriterGroupMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UadpWriterGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_UadpDataSetWriterMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UadpDataSetWriterMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_UadpDataSetReaderMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UadpDataSetReaderMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_JsonWriterGroupMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_JsonWriterGroupMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_JsonDataSetWriterMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_JsonDataSetWriterMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_JsonDataSetReaderMessageDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_JsonDataSetReaderMessageDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DatagramConnectionTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DatagramConnectionTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DatagramWriterGroupTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DatagramWriterGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_BrokerConnectionTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_BrokerConnectionTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_BrokerWriterGroupTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_BrokerWriterGroupTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_BrokerDataSetWriterTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_BrokerDataSetWriterTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_BrokerDataSetReaderTransportDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_BrokerDataSetReaderTransportDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_AliasNameDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AliasNameDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_UnsignedRationalNumber = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UnsignedRationalNumber);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_RolePermissionType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RolePermissionType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DataTypeDefinition = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DataTypeDefinition);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_StructureField = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_StructureField);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_StructureDefinition = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_StructureDefinition);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EnumDefinition = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EnumDefinition);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_Argument = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Argument);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EnumValueType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EnumValueType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EnumField = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EnumField);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_OptionSet = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_OptionSet);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_TimeZoneDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_TimeZoneDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ApplicationDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ApplicationDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ServerOnNetwork = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ServerOnNetwork);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_UserTokenPolicy = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UserTokenPolicy);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EndpointDescription = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EndpointDescription);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_RegisteredServer = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RegisteredServer);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DiscoveryConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DiscoveryConfiguration);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_MdnsDiscoveryConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_MdnsDiscoveryConfiguration);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SignedSoftwareCertificate = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SignedSoftwareCertificate);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_UserIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UserIdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_AnonymousIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AnonymousIdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_UserNameIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_UserNameIdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_X509IdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_X509IdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_IssuedIdentityToken = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_IssuedIdentityToken);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_AddNodesItem = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AddNodesItem);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_AddReferencesItem = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AddReferencesItem);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DeleteNodesItem = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DeleteNodesItem);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DeleteReferencesItem = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DeleteReferencesItem);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_RelativePathElement = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RelativePathElement);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_RelativePath = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RelativePath);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EndpointConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EndpointConfiguration);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ContentFilterElement = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ContentFilterElement);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ContentFilter = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ContentFilter);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_FilterOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_FilterOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ElementOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ElementOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_LiteralOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_LiteralOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_AttributeOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AttributeOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SimpleAttributeOperand = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SimpleAttributeOperand);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_HistoryEvent = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_HistoryEvent);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_MonitoringFilter = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_MonitoringFilter);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EventFilter = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EventFilter);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_AggregateConfiguration = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AggregateConfiguration);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_HistoryEventFieldList = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_HistoryEventFieldList);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_BuildInfo = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_BuildInfo);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_RedundantServerDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_RedundantServerDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EndpointUrlListDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EndpointUrlListDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_NetworkGroupDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_NetworkGroupDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ServerStatusDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ServerStatusDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SessionDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SessionDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ServiceCounterDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ServiceCounterDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_StatusResult = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_StatusResult);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SubscriptionDiagnosticsDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SubscriptionDiagnosticsDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ModelChangeStructureDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ModelChangeStructureDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_SemanticChangeStructureDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_SemanticChangeStructureDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_Range = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Range);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_EUInformation = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_EUInformation);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ComplexNumberType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ComplexNumberType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_DoubleComplexNumberType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_DoubleComplexNumberType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_AxisInformation = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_AxisInformation);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_XVType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_XVType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ProgramDiagnosticDataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ProgramDiagnosticDataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_ProgramDiagnostic2DataType = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_ProgramDiagnostic2DataType);

        /// <remarks />
        public static readonly NodeId OpcUa_XmlSchema_Annotation = new NodeId(Opc.Ua.Variables.OpcUa_XmlSchema_Annotation);
    }
    #endregion

    #region VariableType Node Identifiers
    /// <remarks />
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableTypeIds
    {
        /// <remarks />
        public static readonly NodeId BaseVariableType = new NodeId(Opc.Ua.VariableTypes.BaseVariableType);

        /// <remarks />
        public static readonly NodeId BaseDataVariableType = new NodeId(Opc.Ua.VariableTypes.BaseDataVariableType);

        /// <remarks />
        public static readonly NodeId PropertyType = new NodeId(Opc.Ua.VariableTypes.PropertyType);

        /// <remarks />
        public static readonly NodeId DataTypeDescriptionType = new NodeId(Opc.Ua.VariableTypes.DataTypeDescriptionType);

        /// <remarks />
        public static readonly NodeId DataTypeDictionaryType = new NodeId(Opc.Ua.VariableTypes.DataTypeDictionaryType);

        /// <remarks />
        public static readonly NodeId ServerVendorCapabilityType = new NodeId(Opc.Ua.VariableTypes.ServerVendorCapabilityType);

        /// <remarks />
        public static readonly NodeId ServerStatusType = new NodeId(Opc.Ua.VariableTypes.ServerStatusType);

        /// <remarks />
        public static readonly NodeId BuildInfoType = new NodeId(Opc.Ua.VariableTypes.BuildInfoType);

        /// <remarks />
        public static readonly NodeId ServerDiagnosticsSummaryType = new NodeId(Opc.Ua.VariableTypes.ServerDiagnosticsSummaryType);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType = new NodeId(Opc.Ua.VariableTypes.SamplingIntervalDiagnosticsArrayType);

        /// <remarks />
        public static readonly NodeId SamplingIntervalDiagnosticsType = new NodeId(Opc.Ua.VariableTypes.SamplingIntervalDiagnosticsType);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsArrayType = new NodeId(Opc.Ua.VariableTypes.SubscriptionDiagnosticsArrayType);

        /// <remarks />
        public static readonly NodeId SubscriptionDiagnosticsType = new NodeId(Opc.Ua.VariableTypes.SubscriptionDiagnosticsType);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsArrayType = new NodeId(Opc.Ua.VariableTypes.SessionDiagnosticsArrayType);

        /// <remarks />
        public static readonly NodeId SessionDiagnosticsVariableType = new NodeId(Opc.Ua.VariableTypes.SessionDiagnosticsVariableType);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsArrayType = new NodeId(Opc.Ua.VariableTypes.SessionSecurityDiagnosticsArrayType);

        /// <remarks />
        public static readonly NodeId SessionSecurityDiagnosticsType = new NodeId(Opc.Ua.VariableTypes.SessionSecurityDiagnosticsType);

        /// <remarks />
        public static readonly NodeId OptionSetType = new NodeId(Opc.Ua.VariableTypes.OptionSetType);

        /// <remarks />
        public static readonly NodeId SelectionListType = new NodeId(Opc.Ua.VariableTypes.SelectionListType);

        /// <remarks />
        public static readonly NodeId AudioVariableType = new NodeId(Opc.Ua.VariableTypes.AudioVariableType);

        /// <remarks />
        public static readonly NodeId StateVariableType = new NodeId(Opc.Ua.VariableTypes.StateVariableType);

        /// <remarks />
        public static readonly NodeId TransitionVariableType = new NodeId(Opc.Ua.VariableTypes.TransitionVariableType);

        /// <remarks />
        public static readonly NodeId FiniteStateVariableType = new NodeId(Opc.Ua.VariableTypes.FiniteStateVariableType);

        /// <remarks />
        public static readonly NodeId FiniteTransitionVariableType = new NodeId(Opc.Ua.VariableTypes.FiniteTransitionVariableType);

        /// <remarks />
        public static readonly NodeId GuardVariableType = new NodeId(Opc.Ua.VariableTypes.GuardVariableType);

        /// <remarks />
        public static readonly NodeId ExpressionGuardVariableType = new NodeId(Opc.Ua.VariableTypes.ExpressionGuardVariableType);

        /// <remarks />
        public static readonly NodeId ElseGuardVariableType = new NodeId(Opc.Ua.VariableTypes.ElseGuardVariableType);

        /// <remarks />
        public static readonly NodeId RationalNumberType = new NodeId(Opc.Ua.VariableTypes.RationalNumberType);

        /// <remarks />
        public static readonly NodeId VectorType = new NodeId(Opc.Ua.VariableTypes.VectorType);

        /// <remarks />
        public static readonly NodeId ThreeDVectorType = new NodeId(Opc.Ua.VariableTypes.ThreeDVectorType);

        /// <remarks />
        public static readonly NodeId CartesianCoordinatesType = new NodeId(Opc.Ua.VariableTypes.CartesianCoordinatesType);

        /// <remarks />
        public static readonly NodeId ThreeDCartesianCoordinatesType = new NodeId(Opc.Ua.VariableTypes.ThreeDCartesianCoordinatesType);

        /// <remarks />
        public static readonly NodeId OrientationType = new NodeId(Opc.Ua.VariableTypes.OrientationType);

        /// <remarks />
        public static readonly NodeId ThreeDOrientationType = new NodeId(Opc.Ua.VariableTypes.ThreeDOrientationType);

        /// <remarks />
        public static readonly NodeId FrameType = new NodeId(Opc.Ua.VariableTypes.FrameType);

        /// <remarks />
        public static readonly NodeId ThreeDFrameType = new NodeId(Opc.Ua.VariableTypes.ThreeDFrameType);

        /// <remarks />
        public static readonly NodeId DataItemType = new NodeId(Opc.Ua.VariableTypes.DataItemType);

        /// <remarks />
        public static readonly NodeId BaseAnalogType = new NodeId(Opc.Ua.VariableTypes.BaseAnalogType);

        /// <remarks />
        public static readonly NodeId AnalogItemType = new NodeId(Opc.Ua.VariableTypes.AnalogItemType);

        /// <remarks />
        public static readonly NodeId AnalogUnitType = new NodeId(Opc.Ua.VariableTypes.AnalogUnitType);

        /// <remarks />
        public static readonly NodeId AnalogUnitRangeType = new NodeId(Opc.Ua.VariableTypes.AnalogUnitRangeType);

        /// <remarks />
        public static readonly NodeId DiscreteItemType = new NodeId(Opc.Ua.VariableTypes.DiscreteItemType);

        /// <remarks />
        public static readonly NodeId TwoStateDiscreteType = new NodeId(Opc.Ua.VariableTypes.TwoStateDiscreteType);

        /// <remarks />
        public static readonly NodeId MultiStateDiscreteType = new NodeId(Opc.Ua.VariableTypes.MultiStateDiscreteType);

        /// <remarks />
        public static readonly NodeId MultiStateValueDiscreteType = new NodeId(Opc.Ua.VariableTypes.MultiStateValueDiscreteType);

        /// <remarks />
        public static readonly NodeId ArrayItemType = new NodeId(Opc.Ua.VariableTypes.ArrayItemType);

        /// <remarks />
        public static readonly NodeId YArrayItemType = new NodeId(Opc.Ua.VariableTypes.YArrayItemType);

        /// <remarks />
        public static readonly NodeId XYArrayItemType = new NodeId(Opc.Ua.VariableTypes.XYArrayItemType);

        /// <remarks />
        public static readonly NodeId ImageItemType = new NodeId(Opc.Ua.VariableTypes.ImageItemType);

        /// <remarks />
        public static readonly NodeId CubeItemType = new NodeId(Opc.Ua.VariableTypes.CubeItemType);

        /// <remarks />
        public static readonly NodeId NDimensionArrayItemType = new NodeId(Opc.Ua.VariableTypes.NDimensionArrayItemType);

        /// <remarks />
        public static readonly NodeId TwoStateVariableType = new NodeId(Opc.Ua.VariableTypes.TwoStateVariableType);

        /// <remarks />
        public static readonly NodeId ConditionVariableType = new NodeId(Opc.Ua.VariableTypes.ConditionVariableType);

        /// <remarks />
        public static readonly NodeId AlarmRateVariableType = new NodeId(Opc.Ua.VariableTypes.AlarmRateVariableType);

        /// <remarks />
        public static readonly NodeId ProgramDiagnosticType = new NodeId(Opc.Ua.VariableTypes.ProgramDiagnosticType);

        /// <remarks />
        public static readonly NodeId ProgramDiagnostic2Type = new NodeId(Opc.Ua.VariableTypes.ProgramDiagnostic2Type);

        /// <remarks />
        public static readonly NodeId PubSubDiagnosticsCounterType = new NodeId(Opc.Ua.VariableTypes.PubSubDiagnosticsCounterType);

        /// <remarks />
        public static readonly NodeId MultiStateDictionaryEntryDiscreteBaseType = new NodeId(Opc.Ua.VariableTypes.MultiStateDictionaryEntryDiscreteBaseType);

        /// <remarks />
        public static readonly NodeId MultiStateDictionaryEntryDiscreteType = new NodeId(Opc.Ua.VariableTypes.MultiStateDictionaryEntryDiscreteType);
    }
    #endregion

    #region BrowseName Declarations
    /// <remarks />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class BrowseNames
    {
        /// <remarks />
        public const string A = "A";

        /// <remarks />
        public const string AccessHistoryDataCapability = "AccessHistoryDataCapability";

        /// <remarks />
        public const string AccessHistoryEventsCapability = "AccessHistoryEventsCapability";

        /// <remarks />
        public const string AccessLevelExType = "AccessLevelExType";

        /// <remarks />
        public const string AccessLevelType = "AccessLevelType";

        /// <remarks />
        public const string AccessRestrictionType = "AccessRestrictionType";

        /// <remarks />
        public const string AccumulatedLatency = "AccumulatedLatency";

        /// <remarks />
        public const string AckedState = "AckedState";

        /// <remarks />
        public const string Acknowledge = "Acknowledge";

        /// <remarks />
        public const string AcknowledgeableConditionType = "AcknowledgeableConditionType";

        /// <remarks />
        public const string ActionTimeStamp = "ActionTimeStamp";

        /// <remarks />
        public const string ActivateSessionRequest = "ActivateSessionRequest";

        /// <remarks />
        public const string ActivateSessionResponse = "ActivateSessionResponse";

        /// <remarks />
        public const string Active = "Active";

        /// <remarks />
        public const string ActiveState = "ActiveState";

        /// <remarks />
        public const string Actual = "Actual";

        /// <remarks />
        public const string ActualSessionTimeout = "ActualSessionTimeout";

        /// <remarks />
        public const string AddApplication = "AddApplication";

        /// <remarks />
        public const string AddCertificate = "AddCertificate";

        /// <remarks />
        public const string AddComment = "AddComment";

        /// <remarks />
        public const string AddConnection = "AddConnection";

        /// <remarks />
        public const string AddDataSetFolder = "AddDataSetFolder";

        /// <remarks />
        public const string AddDataSetReader = "AddDataSetReader";

        /// <remarks />
        public const string AddDataSetWriter = "AddDataSetWriter";

        /// <remarks />
        public const string AddEndpoint = "AddEndpoint";

        /// <remarks />
        public const string AddExtensionField = "AddExtensionField";

        /// <remarks />
        public const string AddIdentity = "AddIdentity";

        /// <remarks />
        public const string AdditionalGroup_Placeholder = "<AdditionalGroup>";

        /// <remarks />
        public const string AdditionalParametersType = "AdditionalParametersType";

        /// <remarks />
        public const string AddNodesCount = "AddNodesCount";

        /// <remarks />
        public const string AddNodesItem = "AddNodesItem";

        /// <remarks />
        public const string AddNodesRequest = "AddNodesRequest";

        /// <remarks />
        public const string AddNodesResponse = "AddNodesResponse";

        /// <remarks />
        public const string AddNodesResult = "AddNodesResult";

        /// <remarks />
        public const string AddPublishedDataItems = "AddPublishedDataItems";

        /// <remarks />
        public const string AddPublishedDataItemsTemplate = "AddPublishedDataItemsTemplate";

        /// <remarks />
        public const string AddPublishedEvents = "AddPublishedEvents";

        /// <remarks />
        public const string AddPublishedEventsTemplate = "AddPublishedEventsTemplate";

        /// <remarks />
        public const string AddReaderGroup = "AddReaderGroup";

        /// <remarks />
        public const string AddReferencesCount = "AddReferencesCount";

        /// <remarks />
        public const string AddReferencesItem = "AddReferencesItem";

        /// <remarks />
        public const string AddReferencesRequest = "AddReferencesRequest";

        /// <remarks />
        public const string AddReferencesResponse = "AddReferencesResponse";

        /// <remarks />
        public const string Address = "Address";

        /// <remarks />
        public const string AddressSpaceFileType = "AddressSpaceFileType";

        /// <remarks />
        public const string AddRole = "AddRole";

        /// <remarks />
        public const string AddSecurityGroup = "AddSecurityGroup";

        /// <remarks />
        public const string AddTargetVariables = "AddTargetVariables";

        /// <remarks />
        public const string AddVariables = "AddVariables";

        /// <remarks />
        public const string AddWriterGroup = "AddWriterGroup";

        /// <remarks />
        public const string AdminStatus = "AdminStatus";

        /// <remarks />
        public const string AgencyId = "AgencyId";

        /// <remarks />
        public const string AggregateConfiguration = "AggregateConfiguration";

        /// <remarks />
        public const string AggregateConfigurationType = "AggregateConfigurationType";

        /// <remarks />
        public const string AggregateFilter = "AggregateFilter";

        /// <remarks />
        public const string AggregateFilterResult = "AggregateFilterResult";

        /// <remarks />
        public const string AggregateFunction_AnnotationCount = "AnnotationCount";

        /// <remarks />
        public const string AggregateFunction_Average = "Average";

        /// <remarks />
        public const string AggregateFunction_Count = "Count";

        /// <remarks />
        public const string AggregateFunction_Delta = "Delta";

        /// <remarks />
        public const string AggregateFunction_DeltaBounds = "DeltaBounds";

        /// <remarks />
        public const string AggregateFunction_DurationBad = "DurationBad";

        /// <remarks />
        public const string AggregateFunction_DurationGood = "DurationGood";

        /// <remarks />
        public const string AggregateFunction_DurationInStateNonZero = "DurationInStateNonZero";

        /// <remarks />
        public const string AggregateFunction_DurationInStateZero = "DurationInStateZero";

        /// <remarks />
        public const string AggregateFunction_End = "End";

        /// <remarks />
        public const string AggregateFunction_EndBound = "EndBound";

        /// <remarks />
        public const string AggregateFunction_Interpolative = "Interpolative";

        /// <remarks />
        public const string AggregateFunction_Maximum = "Maximum";

        /// <remarks />
        public const string AggregateFunction_Maximum2 = "Maximum2";

        /// <remarks />
        public const string AggregateFunction_MaximumActualTime = "MaximumActualTime";

        /// <remarks />
        public const string AggregateFunction_MaximumActualTime2 = "MaximumActualTime2";

        /// <remarks />
        public const string AggregateFunction_Minimum = "Minimum";

        /// <remarks />
        public const string AggregateFunction_Minimum2 = "Minimum2";

        /// <remarks />
        public const string AggregateFunction_MinimumActualTime = "MinimumActualTime";

        /// <remarks />
        public const string AggregateFunction_MinimumActualTime2 = "MinimumActualTime2";

        /// <remarks />
        public const string AggregateFunction_NumberOfTransitions = "NumberOfTransitions";

        /// <remarks />
        public const string AggregateFunction_PercentBad = "PercentBad";

        /// <remarks />
        public const string AggregateFunction_PercentGood = "PercentGood";

        /// <remarks />
        public const string AggregateFunction_Range = "Range";

        /// <remarks />
        public const string AggregateFunction_Range2 = "Range2";

        /// <remarks />
        public const string AggregateFunction_StandardDeviationPopulation = "StandardDeviationPopulation";

        /// <remarks />
        public const string AggregateFunction_StandardDeviationSample = "StandardDeviationSample";

        /// <remarks />
        public const string AggregateFunction_Start = "Start";

        /// <remarks />
        public const string AggregateFunction_StartBound = "StartBound";

        /// <remarks />
        public const string AggregateFunction_TimeAverage = "TimeAverage";

        /// <remarks />
        public const string AggregateFunction_TimeAverage2 = "TimeAverage2";

        /// <remarks />
        public const string AggregateFunction_Total = "Total";

        /// <remarks />
        public const string AggregateFunction_Total2 = "Total2";

        /// <remarks />
        public const string AggregateFunction_VariancePopulation = "VariancePopulation";

        /// <remarks />
        public const string AggregateFunction_VarianceSample = "VarianceSample";

        /// <remarks />
        public const string AggregateFunction_WorstQuality = "WorstQuality";

        /// <remarks />
        public const string AggregateFunction_WorstQuality2 = "WorstQuality2";

        /// <remarks />
        public const string AggregateFunctions = "AggregateFunctions";

        /// <remarks />
        public const string AggregateFunctionType = "AggregateFunctionType";

        /// <remarks />
        public const string Aggregates = "Aggregates";

        /// <remarks />
        public const string AlarmConditionInstance_Placeholder = "<AlarmConditionInstance>";

        /// <remarks />
        public const string AlarmConditionType = "AlarmConditionType";

        /// <remarks />
        public const string AlarmCount = "AlarmCount";

        /// <remarks />
        public const string AlarmGroup_Placeholder = "<AlarmGroup>";

        /// <remarks />
        public const string AlarmGroupMember = "AlarmGroupMember";

        /// <remarks />
        public const string AlarmGroupType = "AlarmGroupType";

        /// <remarks />
        public const string AlarmMetricsType = "AlarmMetricsType";

        /// <remarks />
        public const string AlarmRateVariableType = "AlarmRateVariableType";

        /// <remarks />
        public const string Alias_Placeholder = "<Alias>";

        /// <remarks />
        public const string Aliases = "Aliases";

        /// <remarks />
        public const string AliasFor = "AliasFor";

        /// <remarks />
        public const string AliasNameCategoryType = "AliasNameCategoryType";

        /// <remarks />
        public const string AliasNameDataType = "AliasNameDataType";

        /// <remarks />
        public const string AliasNameType = "AliasNameType";

        /// <remarks />
        public const string AllowNulls = "AllowNulls";

        /// <remarks />
        public const string AlwaysGeneratesEvent = "AlwaysGeneratesEvent";

        /// <remarks />
        public const string AnalogItemType = "AnalogItemType";

        /// <remarks />
        public const string AnalogUnitRangeType = "AnalogUnitRangeType";

        /// <remarks />
        public const string AnalogUnitType = "AnalogUnitType";

        /// <remarks />
        public const string AngleUnit = "AngleUnit";

        /// <remarks />
        public const string Annotation = "Annotation";

        /// <remarks />
        public const string Annotations = "Annotations";

        /// <remarks />
        public const string AnonymousIdentityToken = "AnonymousIdentityToken";

        /// <remarks />
        public const string ApplicationCertificateType = "ApplicationCertificateType";

        /// <remarks />
        public const string ApplicationDescription = "ApplicationDescription";

        /// <remarks />
        public const string ApplicationInstanceCertificate = "ApplicationInstanceCertificate";

        /// <remarks />
        public const string Applications = "Applications";

        /// <remarks />
        public const string ApplicationsExclude = "ApplicationsExclude";

        /// <remarks />
        public const string ApplicationType = "ApplicationType";

        /// <remarks />
        public const string ApplyChanges = "ApplyChanges";

        /// <remarks />
        public const string ApplyWrite = "ApplyWrite";

        /// <remarks />
        public const string ApplyWriteToError = "ApplyWriteToError";

        /// <remarks />
        public const string ApplyWriteToIdle = "ApplyWriteToIdle";

        /// <remarks />
        public const string Argument = "Argument";

        /// <remarks />
        public const string ArrayItemType = "ArrayItemType";

        /// <remarks />
        public const string AttributeId = "AttributeId";

        /// <remarks />
        public const string AttributeOperand = "AttributeOperand";

        /// <remarks />
        public const string AttributeWriteMask = "AttributeWriteMask";

        /// <remarks />
        public const string AudibleEnabled = "AudibleEnabled";

        /// <remarks />
        public const string AudibleSound = "AudibleSound";

        /// <remarks />
        public const string AudioDataType = "AudioDataType";

        /// <remarks />
        public const string AudioVariableType = "AudioVariableType";

        /// <remarks />
        public const string AuditActivateSessionEventType = "AuditActivateSessionEventType";

        /// <remarks />
        public const string AuditAddNodesEventType = "AuditAddNodesEventType";

        /// <remarks />
        public const string AuditAddReferencesEventType = "AuditAddReferencesEventType";

        /// <remarks />
        public const string AuditCancelEventType = "AuditCancelEventType";

        /// <remarks />
        public const string AuditCertificateDataMismatchEventType = "AuditCertificateDataMismatchEventType";

        /// <remarks />
        public const string AuditCertificateEventType = "AuditCertificateEventType";

        /// <remarks />
        public const string AuditCertificateExpiredEventType = "AuditCertificateExpiredEventType";

        /// <remarks />
        public const string AuditCertificateInvalidEventType = "AuditCertificateInvalidEventType";

        /// <remarks />
        public const string AuditCertificateMismatchEventType = "AuditCertificateMismatchEventType";

        /// <remarks />
        public const string AuditCertificateRevokedEventType = "AuditCertificateRevokedEventType";

        /// <remarks />
        public const string AuditCertificateUntrustedEventType = "AuditCertificateUntrustedEventType";

        /// <remarks />
        public const string AuditChannelEventType = "AuditChannelEventType";

        /// <remarks />
        public const string AuditConditionAcknowledgeEventType = "AuditConditionAcknowledgeEventType";

        /// <remarks />
        public const string AuditConditionCommentEventType = "AuditConditionCommentEventType";

        /// <remarks />
        public const string AuditConditionConfirmEventType = "AuditConditionConfirmEventType";

        /// <remarks />
        public const string AuditConditionEnableEventType = "AuditConditionEnableEventType";

        /// <remarks />
        public const string AuditConditionEventType = "AuditConditionEventType";

        /// <remarks />
        public const string AuditConditionOutOfServiceEventType = "AuditConditionOutOfServiceEventType";

        /// <remarks />
        public const string AuditConditionResetEventType = "AuditConditionResetEventType";

        /// <remarks />
        public const string AuditConditionRespondEventType = "AuditConditionRespondEventType";

        /// <remarks />
        public const string AuditConditionShelvingEventType = "AuditConditionShelvingEventType";

        /// <remarks />
        public const string AuditConditionSilenceEventType = "AuditConditionSilenceEventType";

        /// <remarks />
        public const string AuditConditionSuppressionEventType = "AuditConditionSuppressionEventType";

        /// <remarks />
        public const string AuditCreateSessionEventType = "AuditCreateSessionEventType";

        /// <remarks />
        public const string AuditDeleteNodesEventType = "AuditDeleteNodesEventType";

        /// <remarks />
        public const string AuditDeleteReferencesEventType = "AuditDeleteReferencesEventType";

        /// <remarks />
        public const string AuditEventType = "AuditEventType";

        /// <remarks />
        public const string AuditHistoryAnnotationUpdateEventType = "AuditHistoryAnnotationUpdateEventType";

        /// <remarks />
        public const string AuditHistoryAtTimeDeleteEventType = "AuditHistoryAtTimeDeleteEventType";

        /// <remarks />
        public const string AuditHistoryDeleteEventType = "AuditHistoryDeleteEventType";

        /// <remarks />
        public const string AuditHistoryEventDeleteEventType = "AuditHistoryEventDeleteEventType";

        /// <remarks />
        public const string AuditHistoryEventUpdateEventType = "AuditHistoryEventUpdateEventType";

        /// <remarks />
        public const string AuditHistoryRawModifyDeleteEventType = "AuditHistoryRawModifyDeleteEventType";

        /// <remarks />
        public const string AuditHistoryUpdateEventType = "AuditHistoryUpdateEventType";

        /// <remarks />
        public const string AuditHistoryValueUpdateEventType = "AuditHistoryValueUpdateEventType";

        /// <remarks />
        public const string Auditing = "Auditing";

        /// <remarks />
        public const string AuditNodeManagementEventType = "AuditNodeManagementEventType";

        /// <remarks />
        public const string AuditOpenSecureChannelEventType = "AuditOpenSecureChannelEventType";

        /// <remarks />
        public const string AuditProgramTransitionEventType = "AuditProgramTransitionEventType";

        /// <remarks />
        public const string AuditSecurityEventType = "AuditSecurityEventType";

        /// <remarks />
        public const string AuditSessionEventType = "AuditSessionEventType";

        /// <remarks />
        public const string AuditUpdateEventType = "AuditUpdateEventType";

        /// <remarks />
        public const string AuditUpdateMethodEventType = "AuditUpdateMethodEventType";

        /// <remarks />
        public const string AuditUpdateStateEventType = "AuditUpdateStateEventType";

        /// <remarks />
        public const string AuditUrlMismatchEventType = "AuditUrlMismatchEventType";

        /// <remarks />
        public const string AuditWriteUpdateEventType = "AuditWriteUpdateEventType";

        /// <remarks />
        public const string AuthenticationMechanism = "AuthenticationMechanism";

        /// <remarks />
        public const string AuthenticationProfileUri = "AuthenticationProfileUri";

        /// <remarks />
        public const string AuthorizationServiceConfigurationType = "AuthorizationServiceConfigurationType";

        /// <remarks />
        public const string AuthorizationServices = "AuthorizationServices";

        /// <remarks />
        public const string AuthorizationServicesConfigurationFolderType = "AuthorizationServicesConfigurationFolderType";

        /// <remarks />
        public const string AutoDelete = "AutoDelete";

        /// <remarks />
        public const string AvailableStates = "AvailableStates";

        /// <remarks />
        public const string AvailableTransitions = "AvailableTransitions";

        /// <remarks />
        public const string AverageAlarmRate = "AverageAlarmRate";

        /// <remarks />
        public const string AxisDefinition = "AxisDefinition";

        /// <remarks />
        public const string AxisInformation = "AxisInformation";

        /// <remarks />
        public const string AxisScaleEnumeration = "AxisScaleEnumeration";

        /// <remarks />
        public const string AxisScaleType = "AxisScaleType";

        /// <remarks />
        public const string B = "B";

        /// <remarks />
        public const string BaseAnalogType = "BaseAnalogType";

        /// <remarks />
        public const string BaseConditionClassType = "BaseConditionClassType";

        /// <remarks />
        public const string BaseDataType = "BaseDataType";

        /// <remarks />
        public const string BaseDataVariableType = "BaseDataVariableType";

        /// <remarks />
        public const string BaseEventType = "BaseEventType";

        /// <remarks />
        public const string BaseFrame = "BaseFrame";

        /// <remarks />
        public const string BaseHighHighLimit = "BaseHighHighLimit";

        /// <remarks />
        public const string BaseHighLimit = "BaseHighLimit";

        /// <remarks />
        public const string BaseInterfaceType = "BaseInterfaceType";

        /// <remarks />
        public const string BaseLowLimit = "BaseLowLimit";

        /// <remarks />
        public const string BaseLowLowLimit = "BaseLowLowLimit";

        /// <remarks />
        public const string BaseModelChangeEventType = "BaseModelChangeEventType";

        /// <remarks />
        public const string BaseObjectType = "BaseObjectType";

        /// <remarks />
        public const string BaseSetpointNode = "BaseSetpointNode";

        /// <remarks />
        public const string BaseVariableType = "BaseVariableType";

        /// <remarks />
        public const string BitFieldMaskDataType = "BitFieldMaskDataType";

        /// <remarks />
        public const string BitMask = "BitMask";

        /// <remarks />
        public const string Boolean = "Boolean";

        /// <remarks />
        public const string BranchId = "BranchId";

        /// <remarks />
        public const string BrokerConnectionTransportDataType = "BrokerConnectionTransportDataType";

        /// <remarks />
        public const string BrokerConnectionTransportType = "BrokerConnectionTransportType";

        /// <remarks />
        public const string BrokerDataSetReaderTransportDataType = "BrokerDataSetReaderTransportDataType";

        /// <remarks />
        public const string BrokerDataSetReaderTransportType = "BrokerDataSetReaderTransportType";

        /// <remarks />
        public const string BrokerDataSetWriterTransportDataType = "BrokerDataSetWriterTransportDataType";

        /// <remarks />
        public const string BrokerDataSetWriterTransportType = "BrokerDataSetWriterTransportType";

        /// <remarks />
        public const string BrokerTransportQualityOfService = "BrokerTransportQualityOfService";

        /// <remarks />
        public const string BrokerWriterGroupTransportDataType = "BrokerWriterGroupTransportDataType";

        /// <remarks />
        public const string BrokerWriterGroupTransportType = "BrokerWriterGroupTransportType";

        /// <remarks />
        public const string BrowseCount = "BrowseCount";

        /// <remarks />
        public const string BrowseDescription = "BrowseDescription";

        /// <remarks />
        public const string BrowseDirection = "BrowseDirection";

        /// <remarks />
        public const string BrowseNextCount = "BrowseNextCount";

        /// <remarks />
        public const string BrowseNextRequest = "BrowseNextRequest";

        /// <remarks />
        public const string BrowseNextResponse = "BrowseNextResponse";

        /// <remarks />
        public const string BrowsePath = "BrowsePath";

        /// <remarks />
        public const string BrowsePathResult = "BrowsePathResult";

        /// <remarks />
        public const string BrowsePathTarget = "BrowsePathTarget";

        /// <remarks />
        public const string BrowseRequest = "BrowseRequest";

        /// <remarks />
        public const string BrowseResponse = "BrowseResponse";

        /// <remarks />
        public const string BrowseResult = "BrowseResult";

        /// <remarks />
        public const string BrowseResultMask = "BrowseResultMask";

        /// <remarks />
        public const string BuildDate = "BuildDate";

        /// <remarks />
        public const string BuildInfo = "BuildInfo";

        /// <remarks />
        public const string BuildInfoType = "BuildInfoType";

        /// <remarks />
        public const string BuildNumber = "BuildNumber";

        /// <remarks />
        public const string Byte = "Byte";

        /// <remarks />
        public const string ByteString = "ByteString";

        /// <remarks />
        public const string C = "C";

        /// <remarks />
        public const string CallCount = "CallCount";

        /// <remarks />
        public const string CallMethodRequest = "CallMethodRequest";

        /// <remarks />
        public const string CallMethodResult = "CallMethodResult";

        /// <remarks />
        public const string CallRequest = "CallRequest";

        /// <remarks />
        public const string CallResponse = "CallResponse";

        /// <remarks />
        public const string CancelRequest = "CancelRequest";

        /// <remarks />
        public const string CancelResponse = "CancelResponse";

        /// <remarks />
        public const string CartesianCoordinates = "CartesianCoordinates";

        /// <remarks />
        public const string CartesianCoordinatesType = "CartesianCoordinatesType";

        /// <remarks />
        public const string Certificate = "Certificate";

        /// <remarks />
        public const string CertificateErrorEventId = "CertificateErrorEventId";

        /// <remarks />
        public const string CertificateExpirationAlarmType = "CertificateExpirationAlarmType";

        /// <remarks />
        public const string CertificateExpired = "CertificateExpired";

        /// <remarks />
        public const string CertificateGroup = "CertificateGroup";

        /// <remarks />
        public const string CertificateGroupFolderType = "CertificateGroupFolderType";

        /// <remarks />
        public const string CertificateGroups = "CertificateGroups";

        /// <remarks />
        public const string CertificateGroupType = "CertificateGroupType";

        /// <remarks />
        public const string CertificateType = "CertificateType";

        /// <remarks />
        public const string CertificateTypes = "CertificateTypes";

        /// <remarks />
        public const string CertificateUpdatedAuditEventType = "CertificateUpdatedAuditEventType";

        /// <remarks />
        public const string Changes = "Changes";

        /// <remarks />
        public const string ChannelSecurityToken = "ChannelSecurityToken";

        /// <remarks />
        public const string ChoiceStateType = "ChoiceStateType";

        /// <remarks />
        public const string Classification = "Classification";

        /// <remarks />
        public const string ClientAuditEntryId = "ClientAuditEntryId";

        /// <remarks />
        public const string ClientCertificate = "ClientCertificate";

        /// <remarks />
        public const string ClientCertificateThumbprint = "ClientCertificateThumbprint";

        /// <remarks />
        public const string ClientConnectionTime = "ClientConnectionTime";

        /// <remarks />
        public const string ClientDescription = "ClientDescription";

        /// <remarks />
        public const string ClientLastContactTime = "ClientLastContactTime";

        /// <remarks />
        public const string ClientName_Placeholder = "<ClientName>";

        /// <remarks />
        public const string ClientProcessingTimeout = "ClientProcessingTimeout";

        /// <remarks />
        public const string ClientSoftwareCertificates = "ClientSoftwareCertificates";

        /// <remarks />
        public const string ClientUserId = "ClientUserId";

        /// <remarks />
        public const string ClientUserIdHistory = "ClientUserIdHistory";

        /// <remarks />
        public const string ClientUserIdOfSession = "ClientUserIdOfSession";

        /// <remarks />
        public const string Close = "Close";

        /// <remarks />
        public const string CloseAndCommit = "CloseAndCommit";

        /// <remarks />
        public const string CloseAndUpdate = "CloseAndUpdate";

        /// <remarks />
        public const string CloseSecureChannelRequest = "CloseSecureChannelRequest";

        /// <remarks />
        public const string CloseSecureChannelResponse = "CloseSecureChannelResponse";

        /// <remarks />
        public const string CloseSessionRequest = "CloseSessionRequest";

        /// <remarks />
        public const string CloseSessionResponse = "CloseSessionResponse";

        /// <remarks />
        public const string Comment = "Comment";

        /// <remarks />
        public const string Communication = "Communication";

        /// <remarks />
        public const string ComplexNumberType = "ComplexNumberType";

        /// <remarks />
        public const string ConditionClassId = "ConditionClassId";

        /// <remarks />
        public const string ConditionClassName = "ConditionClassName";

        /// <remarks />
        public const string ConditionEventId = "ConditionEventId";

        /// <remarks />
        public const string ConditionName = "ConditionName";

        /// <remarks />
        public const string ConditionRefresh = "ConditionRefresh";

        /// <remarks />
        public const string ConditionRefresh2 = "ConditionRefresh2";

        /// <remarks />
        public const string ConditionSubClassId = "ConditionSubClassId";

        /// <remarks />
        public const string ConditionSubClassName = "ConditionSubClassName";

        /// <remarks />
        public const string ConditionType = "ConditionType";

        /// <remarks />
        public const string ConditionVariableType = "ConditionVariableType";

        /// <remarks />
        public const string ConfigurationVersion = "ConfigurationVersion";

        /// <remarks />
        public const string ConfigurationVersionDataType = "ConfigurationVersionDataType";

        /// <remarks />
        public const string ConfiguredSize = "ConfiguredSize";

        /// <remarks />
        public const string Confirm = "Confirm";

        /// <remarks />
        public const string ConfirmedState = "ConfirmedState";

        /// <remarks />
        public const string ConnectionId = "ConnectionId";

        /// <remarks />
        public const string ConnectionName_Placeholder = "<ConnectionName>";

        /// <remarks />
        public const string ConnectionProperties = "ConnectionProperties";

        /// <remarks />
        public const string ConnectionTransportDataType = "ConnectionTransportDataType";

        /// <remarks />
        public const string ConnectionTransportType = "ConnectionTransportType";

        /// <remarks />
        public const string Constant = "Constant";

        /// <remarks />
        public const string ContentFilter = "ContentFilter";

        /// <remarks />
        public const string ContentFilterElement = "ContentFilterElement";

        /// <remarks />
        public const string ContentFilterElementResult = "ContentFilterElementResult";

        /// <remarks />
        public const string ContentFilterResult = "ContentFilterResult";

        /// <remarks />
        public const string Context = "Context";

        /// <remarks />
        public const string ContinuationPoint = "ContinuationPoint";

        /// <remarks />
        public const string Counter = "Counter";

        /// <remarks />
        public const string Counters = "Counters";

        /// <remarks />
        public const string Creatable = "Creatable";

        /// <remarks />
        public const string CreateClientName = "CreateClientName";

        /// <remarks />
        public const string CreateCredential = "CreateCredential";

        /// <remarks />
        public const string CreateDataSetMirror = "CreateDataSetMirror";

        /// <remarks />
        public const string CreateDirectory = "CreateDirectory";

        /// <remarks />
        public const string CreateFile = "CreateFile";

        /// <remarks />
        public const string CreateMonitoredItemsCount = "CreateMonitoredItemsCount";

        /// <remarks />
        public const string CreateMonitoredItemsRequest = "CreateMonitoredItemsRequest";

        /// <remarks />
        public const string CreateMonitoredItemsResponse = "CreateMonitoredItemsResponse";

        /// <remarks />
        public const string CreateSessionId = "CreateSessionId";

        /// <remarks />
        public const string CreateSessionRequest = "CreateSessionRequest";

        /// <remarks />
        public const string CreateSessionResponse = "CreateSessionResponse";

        /// <remarks />
        public const string CreateSigningRequest = "CreateSigningRequest";

        /// <remarks />
        public const string CreateSubscriptionCount = "CreateSubscriptionCount";

        /// <remarks />
        public const string CreateSubscriptionRequest = "CreateSubscriptionRequest";

        /// <remarks />
        public const string CreateSubscriptionResponse = "CreateSubscriptionResponse";

        /// <remarks />
        public const string CreateTargetVariables = "CreateTargetVariables";

        /// <remarks />
        public const string CubeItemType = "CubeItemType";

        /// <remarks />
        public const string CumulatedSessionCount = "CumulatedSessionCount";

        /// <remarks />
        public const string CumulatedSubscriptionCount = "CumulatedSubscriptionCount";

        /// <remarks />
        public const string CurrencyUnit = "CurrencyUnit";

        /// <remarks />
        public const string CurrencyUnitType = "CurrencyUnitType";

        /// <remarks />
        public const string CurrentAlarmRate = "CurrentAlarmRate";

        /// <remarks />
        public const string CurrentKeepAliveCount = "CurrentKeepAliveCount";

        /// <remarks />
        public const string CurrentLifetimeCount = "CurrentLifetimeCount";

        /// <remarks />
        public const string CurrentMonitoredItemsCount = "CurrentMonitoredItemsCount";

        /// <remarks />
        public const string CurrentPublishRequestsInQueue = "CurrentPublishRequestsInQueue";

        /// <remarks />
        public const string CurrentServerId = "CurrentServerId";

        /// <remarks />
        public const string CurrentSessionCount = "CurrentSessionCount";

        /// <remarks />
        public const string CurrentState = "CurrentState";

        /// <remarks />
        public const string CurrentSubscriptionCount = "CurrentSubscriptionCount";

        /// <remarks />
        public const string CurrentSubscriptionsCount = "CurrentSubscriptionsCount";

        /// <remarks />
        public const string CurrentTime = "CurrentTime";

        /// <remarks />
        public const string DataChangeFilter = "DataChangeFilter";

        /// <remarks />
        public const string DataChangeNotification = "DataChangeNotification";

        /// <remarks />
        public const string DataChangeNotificationsCount = "DataChangeNotificationsCount";

        /// <remarks />
        public const string DataChangeTrigger = "DataChangeTrigger";

        /// <remarks />
        public const string DatagramConnectionTransportDataType = "DatagramConnectionTransportDataType";

        /// <remarks />
        public const string DatagramConnectionTransportType = "DatagramConnectionTransportType";

        /// <remarks />
        public const string DatagramWriterGroupTransportDataType = "DatagramWriterGroupTransportDataType";

        /// <remarks />
        public const string DatagramWriterGroupTransportType = "DatagramWriterGroupTransportType";

        /// <remarks />
        public const string DataItemType = "DataItemType";

        /// <remarks />
        public const string DataSetClassId = "DataSetClassId";

        /// <remarks />
        public const string DataSetFieldContentMask = "DataSetFieldContentMask";

        /// <remarks />
        public const string DataSetFieldFlags = "DataSetFieldFlags";

        /// <remarks />
        public const string DataSetFolderName_Placeholder = "<DataSetFolderName>";

        /// <remarks />
        public const string DataSetFolderType = "DataSetFolderType";

        /// <remarks />
        public const string DataSetMessageContentMask = "DataSetMessageContentMask";

        /// <remarks />
        public const string DataSetMetaData = "DataSetMetaData";

        /// <remarks />
        public const string DataSetMetaDataType = "DataSetMetaDataType";

        /// <remarks />
        public const string DataSetOffset = "DataSetOffset";

        /// <remarks />
        public const string DataSetOrdering = "DataSetOrdering";

        /// <remarks />
        public const string DataSetOrderingType = "DataSetOrderingType";

        /// <remarks />
        public const string DataSetReaderDataType = "DataSetReaderDataType";

        /// <remarks />
        public const string DataSetReaderMessageDataType = "DataSetReaderMessageDataType";

        /// <remarks />
        public const string DataSetReaderMessageType = "DataSetReaderMessageType";

        /// <remarks />
        public const string DataSetReaderName_Placeholder = "<DataSetReaderName>";

        /// <remarks />
        public const string DataSetReaderProperties = "DataSetReaderProperties";

        /// <remarks />
        public const string DataSetReaderTransportDataType = "DataSetReaderTransportDataType";

        /// <remarks />
        public const string DataSetReaderTransportType = "DataSetReaderTransportType";

        /// <remarks />
        public const string DataSetReaderType = "DataSetReaderType";

        /// <remarks />
        public const string DataSetToWriter = "DataSetToWriter";

        /// <remarks />
        public const string DataSetWriterDataType = "DataSetWriterDataType";

        /// <remarks />
        public const string DataSetWriterId = "DataSetWriterId";

        /// <remarks />
        public const string DataSetWriterMessageDataType = "DataSetWriterMessageDataType";

        /// <remarks />
        public const string DataSetWriterMessageType = "DataSetWriterMessageType";

        /// <remarks />
        public const string DataSetWriterName_Placeholder = "<DataSetWriterName>";

        /// <remarks />
        public const string DataSetWriterProperties = "DataSetWriterProperties";

        /// <remarks />
        public const string DataSetWriterTransportDataType = "DataSetWriterTransportDataType";

        /// <remarks />
        public const string DataSetWriterTransportType = "DataSetWriterTransportType";

        /// <remarks />
        public const string DataSetWriterType = "DataSetWriterType";

        /// <remarks />
        public const string DataTypeAttributes = "DataTypeAttributes";

        /// <remarks />
        public const string DataTypeDefinition = "DataTypeDefinition";

        /// <remarks />
        public const string DataTypeDescription = "DataTypeDescription";

        /// <remarks />
        public const string DataTypeDescriptionType = "DataTypeDescriptionType";

        /// <remarks />
        public const string DataTypeDictionaryType = "DataTypeDictionaryType";

        /// <remarks />
        public const string DataTypeEncodingType = "DataTypeEncodingType";

        /// <remarks />
        public const string DataTypeNode = "DataTypeNode";

        /// <remarks />
        public const string DataTypeSchemaHeader = "DataTypeSchemaHeader";

        /// <remarks />
        public const string DataTypesFolder = "DataTypes";

        /// <remarks />
        public const string DataTypeSystemType = "DataTypeSystemType";

        /// <remarks />
        public const string DataTypeVersion = "DataTypeVersion";

        /// <remarks />
        public const string DataValue = "DataValue";

        /// <remarks />
        public const string Date = "Date";

        /// <remarks />
        public const string DateString = "DateString";

        /// <remarks />
        public const string DateTime = "DateTime";

        /// <remarks />
        public const string DeadbandType = "DeadbandType";

        /// <remarks />
        public const string Decimal = "Decimal";

        /// <remarks />
        public const string DecimalDataType = "DecimalDataType";

        /// <remarks />
        public const string DecimalString = "DecimalString";

        /// <remarks />
        public const string DefaultAccessRestrictions = "DefaultAccessRestrictions";

        /// <remarks />
        public const string DefaultApplicationGroup = "DefaultApplicationGroup";

        /// <remarks />
        public const string DefaultBinary = "Default Binary";

        /// <remarks />
        public const string DefaultHttpsGroup = "DefaultHttpsGroup";

        /// <remarks />
        public const string DefaultInstanceBrowseName = "DefaultInstanceBrowseName";

        /// <remarks />
        public const string DefaultJson = "Default JSON";

        /// <remarks />
        public const string DefaultResponse = "DefaultResponse";

        /// <remarks />
        public const string DefaultRolePermissions = "DefaultRolePermissions";

        /// <remarks />
        public const string DefaultUserRolePermissions = "DefaultUserRolePermissions";

        /// <remarks />
        public const string DefaultUserTokenGroup = "DefaultUserTokenGroup";

        /// <remarks />
        public const string DefaultXml = "Default XML";

        /// <remarks />
        public const string Definition = "Definition";

        /// <remarks />
        public const string Deletable = "Deletable";

        /// <remarks />
        public const string DeleteAtTimeCapability = "DeleteAtTimeCapability";

        /// <remarks />
        public const string DeleteAtTimeDetails = "DeleteAtTimeDetails";

        /// <remarks />
        public const string DeleteCredential = "DeleteCredential";

        /// <remarks />
        public const string DeleteEventCapability = "DeleteEventCapability";

        /// <remarks />
        public const string DeleteEventDetails = "DeleteEventDetails";

        /// <remarks />
        public const string DeleteFileSystemObject = "Delete";

        /// <remarks />
        public const string DeleteMonitoredItemsCount = "DeleteMonitoredItemsCount";

        /// <remarks />
        public const string DeleteMonitoredItemsRequest = "DeleteMonitoredItemsRequest";

        /// <remarks />
        public const string DeleteMonitoredItemsResponse = "DeleteMonitoredItemsResponse";

        /// <remarks />
        public const string DeleteNodesCount = "DeleteNodesCount";

        /// <remarks />
        public const string DeleteNodesItem = "DeleteNodesItem";

        /// <remarks />
        public const string DeleteNodesRequest = "DeleteNodesRequest";

        /// <remarks />
        public const string DeleteNodesResponse = "DeleteNodesResponse";

        /// <remarks />
        public const string DeleteRawCapability = "DeleteRawCapability";

        /// <remarks />
        public const string DeleteRawModifiedDetails = "DeleteRawModifiedDetails";

        /// <remarks />
        public const string DeleteReferencesCount = "DeleteReferencesCount";

        /// <remarks />
        public const string DeleteReferencesItem = "DeleteReferencesItem";

        /// <remarks />
        public const string DeleteReferencesRequest = "DeleteReferencesRequest";

        /// <remarks />
        public const string DeleteReferencesResponse = "DeleteReferencesResponse";

        /// <remarks />
        public const string DeleteSubscriptionsCount = "DeleteSubscriptionsCount";

        /// <remarks />
        public const string DeleteSubscriptionsRequest = "DeleteSubscriptionsRequest";

        /// <remarks />
        public const string DeleteSubscriptionsResponse = "DeleteSubscriptionsResponse";

        /// <remarks />
        public const string Denominator = "Denominator";

        /// <remarks />
        public const string Deprecated = "Deprecated";

        /// <remarks />
        public const string DestinationAddress = "DestinationAddress";

        /// <remarks />
        public const string DeviceFailureEventType = "DeviceFailureEventType";

        /// <remarks />
        public const string DiagnosticInfo = "DiagnosticInfo";

        /// <remarks />
        public const string Diagnostics = "Diagnostics";

        /// <remarks />
        public const string DiagnosticsLevel = "DiagnosticsLevel";

        /// <remarks />
        public const string DialogConditionType = "DialogConditionType";

        /// <remarks />
        public const string DialogState = "DialogState";

        /// <remarks />
        public const string Dictionaries = "Dictionaries";

        /// <remarks />
        public const string DictionaryEntryName_Placeholder = "<DictionaryEntryName>";

        /// <remarks />
        public const string DictionaryEntryType = "DictionaryEntryType";

        /// <remarks />
        public const string DictionaryFolderName_Placeholder = "<DictionaryFolderName>";

        /// <remarks />
        public const string DictionaryFolderType = "DictionaryFolderType";

        /// <remarks />
        public const string DictionaryFragment = "DictionaryFragment";

        /// <remarks />
        public const string Disable = "Disable";

        /// <remarks />
        public const string DisableCount = "DisableCount";

        /// <remarks />
        public const string DisabledMonitoredItemCount = "DisabledMonitoredItemCount";

        /// <remarks />
        public const string DisabledMonitoredItemsSamplingCount = "DisabledMonitoredItemsSamplingCount";

        /// <remarks />
        public const string DiscardedMessageCount = "DiscardedMessageCount";

        /// <remarks />
        public const string DiscoveryAddress = "DiscoveryAddress";

        /// <remarks />
        public const string DiscoveryConfiguration = "DiscoveryConfiguration";

        /// <remarks />
        public const string DiscrepancyAlarmType = "DiscrepancyAlarmType";

        /// <remarks />
        public const string DiscreteAlarmType = "DiscreteAlarmType";

        /// <remarks />
        public const string DiscreteItemType = "DiscreteItemType";

        /// <remarks />
        public const string Double = "Double";

        /// <remarks />
        public const string DoubleComplexNumberType = "DoubleComplexNumberType";

        /// <remarks />
        public const string Duplex = "Duplex";

        /// <remarks />
        public const string Duration = "Duration";

        /// <remarks />
        public const string DurationString = "DurationString";

        /// <remarks />
        public const string EccApplicationCertificateType = "EccApplicationCertificateType";

        /// <remarks />
        public const string EccBrainpoolP256r1ApplicationCertificateType = "EccBrainpoolP256r1ApplicationCertificateType";

        /// <remarks />
        public const string EccBrainpoolP384r1ApplicationCertificateType = "EccBrainpoolP384r1ApplicationCertificateType";

        /// <remarks />
        public const string EccCurve25519ApplicationCertificateType = "EccCurve25519ApplicationCertificateType";

        /// <remarks />
        public const string EccCurve448ApplicationCertificateType = "EccCurve448ApplicationCertificateType";

        /// <remarks />
        public const string EccEncryptedSecret = "EccEncryptedSecret";

        /// <remarks />
        public const string EccNistP256ApplicationCertificateType = "EccNistP256ApplicationCertificateType";

        /// <remarks />
        public const string EccNistP384ApplicationCertificateType = "EccNistP384ApplicationCertificateType";

        /// <remarks />
        public const string EffectiveDisplayName = "EffectiveDisplayName";

        /// <remarks />
        public const string EffectiveTransitionTime = "EffectiveTransitionTime";

        /// <remarks />
        public const string ElementOperand = "ElementOperand";

        /// <remarks />
        public const string ElseGuardVariableType = "ElseGuardVariableType";

        /// <remarks />
        public const string Enable = "Enable";

        /// <remarks />
        public const string EnableCount = "EnableCount";

        /// <remarks />
        public const string EnabledFlag = "EnabledFlag";

        /// <remarks />
        public const string EnabledState = "EnabledState";

        /// <remarks />
        public const string Encoding = "Encoding";

        /// <remarks />
        public const string EndpointConfiguration = "EndpointConfiguration";

        /// <remarks />
        public const string EndpointDescription = "EndpointDescription";

        /// <remarks />
        public const string Endpoints = "Endpoints";

        /// <remarks />
        public const string EndpointsExclude = "EndpointsExclude";

        /// <remarks />
        public const string EndpointType = "EndpointType";

        /// <remarks />
        public const string EndpointUrl = "EndpointUrl";

        /// <remarks />
        public const string EndpointUrlListDataType = "EndpointUrlListDataType";

        /// <remarks />
        public const string EndpointUrls = "EndpointUrls";

        /// <remarks />
        public const string EndTime = "EndTime";

        /// <remarks />
        public const string EngineeringUnits = "EngineeringUnits";

        /// <remarks />
        public const string EnumDefinition = "EnumDefinition";

        /// <remarks />
        public const string EnumDescription = "EnumDescription";

        /// <remarks />
        public const string EnumDictionaryEntries = "EnumDictionaryEntries";

        /// <remarks />
        public const string Enumeration = "Enumeration";

        /// <remarks />
        public const string EnumField = "EnumField";

        /// <remarks />
        public const string EnumStrings = "EnumStrings";

        /// <remarks />
        public const string EnumValues = "EnumValues";

        /// <remarks />
        public const string EnumValueType = "EnumValueType";

        /// <remarks />
        public const string EphemeralKeyType = "EphemeralKeyType";

        /// <remarks />
        public const string Error = "Error";

        /// <remarks />
        public const string ErrorToIdle = "ErrorToIdle";

        /// <remarks />
        public const string EstimatedReturnTime = "EstimatedReturnTime";

        /// <remarks />
        public const string EUInformation = "EUInformation";

        /// <remarks />
        public const string EURange = "EURange";

        /// <remarks />
        public const string EventFieldList = "EventFieldList";

        /// <remarks />
        public const string EventFilter = "EventFilter";

        /// <remarks />
        public const string EventFilterResult = "EventFilterResult";

        /// <remarks />
        public const string EventId = "EventId";

        /// <remarks />
        public const string EventIds = "EventIds";

        /// <remarks />
        public const string EventNotificationList = "EventNotificationList";

        /// <remarks />
        public const string EventNotificationsCount = "EventNotificationsCount";

        /// <remarks />
        public const string EventNotifierType = "EventNotifierType";

        /// <remarks />
        public const string EventQueueOverflowCount = "EventQueueOverflowCount";

        /// <remarks />
        public const string EventQueueOverflowEventType = "EventQueueOverflowEventType";

        /// <remarks />
        public const string EventType = "EventType";

        /// <remarks />
        public const string EventTypesFolder = "EventTypes";

        /// <remarks />
        public const string ExceptionDeviation = "ExceptionDeviation";

        /// <remarks />
        public const string ExceptionDeviationFormat = "ExceptionDeviationFormat";

        /// <remarks />
        public const string ExclusiveDeviationAlarmType = "ExclusiveDeviationAlarmType";

        /// <remarks />
        public const string ExclusiveLevelAlarmType = "ExclusiveLevelAlarmType";

        /// <remarks />
        public const string ExclusiveLimitAlarmType = "ExclusiveLimitAlarmType";

        /// <remarks />
        public const string ExclusiveLimitStateMachineType = "ExclusiveLimitStateMachineType";

        /// <remarks />
        public const string ExclusiveRateOfChangeAlarmType = "ExclusiveRateOfChangeAlarmType";

        /// <remarks />
        public const string ExpandedNodeId = "ExpandedNodeId";

        /// <remarks />
        public const string ExpectedTime = "ExpectedTime";

        /// <remarks />
        public const string ExpirationDate = "ExpirationDate";

        /// <remarks />
        public const string ExpirationLimit = "ExpirationLimit";

        /// <remarks />
        public const string ExportNamespace = "ExportNamespace";

        /// <remarks />
        public const string Expression = "Expression";

        /// <remarks />
        public const string ExpressionGuardVariableType = "ExpressionGuardVariableType";

        /// <remarks />
        public const string ExtensionFieldName_Placeholder = "<ExtensionFieldName>";

        /// <remarks />
        public const string ExtensionFields = "ExtensionFields";

        /// <remarks />
        public const string ExtensionFieldsType = "ExtensionFieldsType";

        /// <remarks />
        public const string FailureCode = "FailureCode";

        /// <remarks />
        public const string FailureSystemIdentifier = "FailureSystemIdentifier";

        /// <remarks />
        public const string FalseState = "FalseState";

        /// <remarks />
        public const string FieldMetaData = "FieldMetaData";

        /// <remarks />
        public const string FieldTargetDataType = "FieldTargetDataType";

        /// <remarks />
        public const string FileDirectoryName_Placeholder = "<FileDirectoryName>";

        /// <remarks />
        public const string FileDirectoryType = "FileDirectoryType";

        /// <remarks />
        public const string FileName_Placeholder = "<FileName>";

        /// <remarks />
        public const string FileSystem = "FileSystem";

        /// <remarks />
        public const string FileTransferStateMachineType = "FileTransferStateMachineType";

        /// <remarks />
        public const string FileType = "FileType";

        /// <remarks />
        public const string Filter = "Filter";

        /// <remarks />
        public const string FilterOperand = "FilterOperand";

        /// <remarks />
        public const string FilterOperator = "FilterOperator";

        /// <remarks />
        public const string FinalResultData = "FinalResultData";

        /// <remarks />
        public const string FindAlias = "FindAlias";

        /// <remarks />
        public const string FindServersOnNetworkRequest = "FindServersOnNetworkRequest";

        /// <remarks />
        public const string FindServersOnNetworkResponse = "FindServersOnNetworkResponse";

        /// <remarks />
        public const string FindServersRequest = "FindServersRequest";

        /// <remarks />
        public const string FindServersResponse = "FindServersResponse";

        /// <remarks />
        public const string FiniteStateMachineType = "FiniteStateMachineType";

        /// <remarks />
        public const string FiniteStateVariableType = "FiniteStateVariableType";

        /// <remarks />
        public const string FiniteTransitionVariableType = "FiniteTransitionVariableType";

        /// <remarks />
        public const string FirstInGroup = "FirstInGroup";

        /// <remarks />
        public const string FirstInGroupFlag = "FirstInGroupFlag";

        /// <remarks />
        public const string FixedBase = "FixedBase";

        /// <remarks />
        public const string Float = "Float";

        /// <remarks />
        public const string FolderType = "FolderType";

        /// <remarks />
        public const string Frame = "Frame";

        /// <remarks />
        public const string FrameType = "FrameType";

        /// <remarks />
        public const string FromState = "FromState";

        /// <remarks />
        public const string GeneralModelChangeEventType = "GeneralModelChangeEventType";

        /// <remarks />
        public const string GenerateFileForRead = "GenerateFileForRead";

        /// <remarks />
        public const string GenerateFileForWrite = "GenerateFileForWrite";

        /// <remarks />
        public const string GeneratesEvent = "GeneratesEvent";

        /// <remarks />
        public const string GenericAttributes = "GenericAttributes";

        /// <remarks />
        public const string GenericAttributeValue = "GenericAttributeValue";

        /// <remarks />
        public const string GetEncryptingKey = "GetEncryptingKey";

        /// <remarks />
        public const string GetEndpointsRequest = "GetEndpointsRequest";

        /// <remarks />
        public const string GetEndpointsResponse = "GetEndpointsResponse";

        /// <remarks />
        public const string GetMonitoredItems = "GetMonitoredItems";

        /// <remarks />
        public const string GetPosition = "GetPosition";

        /// <remarks />
        public const string GetRejectedList = "GetRejectedList";

        /// <remarks />
        public const string GetSecurityGroup = "GetSecurityGroup";

        /// <remarks />
        public const string GetSecurityKeys = "GetSecurityKeys";

        /// <remarks />
        public const string GroupId = "GroupId";

        /// <remarks />
        public const string GroupProperties = "GroupProperties";

        /// <remarks />
        public const string GroupVersion = "GroupVersion";

        /// <remarks />
        public const string GuardVariableType = "GuardVariableType";

        /// <remarks />
        public const string Guid = "Guid";

        /// <remarks />
        public const string HAConfiguration = "HA Configuration";

        /// <remarks />
        public const string Halt = "Halt";

        /// <remarks />
        public const string Halted = "Halted";

        /// <remarks />
        public const string HaltedToReady = "HaltedToReady";

        /// <remarks />
        public const string HasAddIn = "HasAddIn";

        /// <remarks />
        public const string HasAlarmSuppressionGroup = "HasAlarmSuppressionGroup";

        /// <remarks />
        public const string HasArgumentDescription = "HasArgumentDescription";

        /// <remarks />
        public const string HasCause = "HasCause";

        /// <remarks />
        public const string HasChild = "HasChild";

        /// <remarks />
        public const string HasComponent = "HasComponent";

        /// <remarks />
        public const string HasCondition = "HasCondition";

        /// <remarks />
        public const string HasDataSetReader = "HasDataSetReader";

        /// <remarks />
        public const string HasDataSetWriter = "HasDataSetWriter";

        /// <remarks />
        public const string HasDescription = "HasDescription";

        /// <remarks />
        public const string HasDictionaryEntry = "HasDictionaryEntry";

        /// <remarks />
        public const string HasEffect = "HasEffect";

        /// <remarks />
        public const string HasEffectDisable = "HasEffectDisable";

        /// <remarks />
        public const string HasEffectEnable = "HasEffectEnable";

        /// <remarks />
        public const string HasEffectSuppressed = "HasEffectSuppressed";

        /// <remarks />
        public const string HasEffectUnsuppressed = "HasEffectUnsuppressed";

        /// <remarks />
        public const string HasEncoding = "HasEncoding";

        /// <remarks />
        public const string HasEventSource = "HasEventSource";

        /// <remarks />
        public const string HasFalseSubState = "HasFalseSubState";

        /// <remarks />
        public const string HasGuard = "HasGuard";

        /// <remarks />
        public const string HasHistoricalConfiguration = "HasHistoricalConfiguration";

        /// <remarks />
        public const string HasInterface = "HasInterface";

        /// <remarks />
        public const string HasModellingRule = "HasModellingRule";

        /// <remarks />
        public const string HasNotifier = "HasNotifier";

        /// <remarks />
        public const string HasOptionalInputArgumentDescription = "HasOptionalInputArgumentDescription";

        /// <remarks />
        public const string HasOrderedComponent = "HasOrderedComponent";

        /// <remarks />
        public const string HasProperty = "HasProperty";

        /// <remarks />
        public const string HasPubSubConnection = "HasPubSubConnection";

        /// <remarks />
        public const string HasReaderGroup = "HasReaderGroup";

        /// <remarks />
        public const string HasSubStateMachine = "HasSubStateMachine";

        /// <remarks />
        public const string HasSubtype = "HasSubtype";

        /// <remarks />
        public const string HasTrueSubState = "HasTrueSubState";

        /// <remarks />
        public const string HasTypeDefinition = "HasTypeDefinition";

        /// <remarks />
        public const string HasWriterGroup = "HasWriterGroup";

        /// <remarks />
        public const string HeaderLayoutUri = "HeaderLayoutUri";

        /// <remarks />
        public const string HierarchicalReferences = "HierarchicalReferences";

        /// <remarks />
        public const string High = "High";

        /// <remarks />
        public const string HighHigh = "HighHigh";

        /// <remarks />
        public const string HighHighLimit = "HighHighLimit";

        /// <remarks />
        public const string HighHighState = "HighHighState";

        /// <remarks />
        public const string HighHighToHigh = "HighHighToHigh";

        /// <remarks />
        public const string HighLimit = "HighLimit";

        /// <remarks />
        public const string HighlyManagedAlarmConditionClassType = "HighlyManagedAlarmConditionClassType";

        /// <remarks />
        public const string HighState = "HighState";

        /// <remarks />
        public const string HighToHighHigh = "HighToHighHigh";

        /// <remarks />
        public const string HistoricalDataConfigurationType = "HistoricalDataConfigurationType";

        /// <remarks />
        public const string HistoricalEventFilter = "HistoricalEventFilter";

        /// <remarks />
        public const string HistoryData = "HistoryData";

        /// <remarks />
        public const string HistoryEvent = "HistoryEvent";

        /// <remarks />
        public const string HistoryEventFieldList = "HistoryEventFieldList";

        /// <remarks />
        public const string HistoryModifiedData = "HistoryModifiedData";

        /// <remarks />
        public const string HistoryReadCount = "HistoryReadCount";

        /// <remarks />
        public const string HistoryReadDetails = "HistoryReadDetails";

        /// <remarks />
        public const string HistoryReadRequest = "HistoryReadRequest";

        /// <remarks />
        public const string HistoryReadResponse = "HistoryReadResponse";

        /// <remarks />
        public const string HistoryReadResult = "HistoryReadResult";

        /// <remarks />
        public const string HistoryReadValueId = "HistoryReadValueId";

        /// <remarks />
        public const string HistoryServerCapabilities = "HistoryServerCapabilities";

        /// <remarks />
        public const string HistoryServerCapabilitiesType = "HistoryServerCapabilitiesType";

        /// <remarks />
        public const string HistoryUpdateCount = "HistoryUpdateCount";

        /// <remarks />
        public const string HistoryUpdateDetails = "HistoryUpdateDetails";

        /// <remarks />
        public const string HistoryUpdateRequest = "HistoryUpdateRequest";

        /// <remarks />
        public const string HistoryUpdateResponse = "HistoryUpdateResponse";

        /// <remarks />
        public const string HistoryUpdateResult = "HistoryUpdateResult";

        /// <remarks />
        public const string HistoryUpdateType = "HistoryUpdateType";

        /// <remarks />
        public const string HttpsCertificateType = "HttpsCertificateType";

        /// <remarks />
        public const string IBaseEthernetCapabilitiesType = "IBaseEthernetCapabilitiesType";

        /// <remarks />
        public const string Icon = "Icon";

        /// <remarks />
        public const string Id = "Id";

        /// <remarks />
        public const string Identities = "Identities";

        /// <remarks />
        public const string IdentityCriteriaType = "IdentityCriteriaType";

        /// <remarks />
        public const string IdentityMappingRuleType = "IdentityMappingRuleType";

        /// <remarks />
        public const string Idle = "Idle";

        /// <remarks />
        public const string IdleToApplyWrite = "IdleToApplyWrite";

        /// <remarks />
        public const string IdleToReadPrepare = "IdleToReadPrepare";

        /// <remarks />
        public const string IdType = "IdType";

        /// <remarks />
        public const string IIeeeAutoNegotiationStatusType = "IIeeeAutoNegotiationStatusType";

        /// <remarks />
        public const string IIeeeBaseEthernetPortType = "IIeeeBaseEthernetPortType";

        /// <remarks />
        public const string IIeeeBaseTsnStatusStreamType = "IIeeeBaseTsnStatusStreamType";

        /// <remarks />
        public const string IIeeeBaseTsnStreamType = "IIeeeBaseTsnStreamType";

        /// <remarks />
        public const string IIeeeBaseTsnTrafficSpecificationType = "IIeeeBaseTsnTrafficSpecificationType";

        /// <remarks />
        public const string IIeeeTsnInterfaceConfigurationListenerType = "IIeeeTsnInterfaceConfigurationListenerType";

        /// <remarks />
        public const string IIeeeTsnInterfaceConfigurationTalkerType = "IIeeeTsnInterfaceConfigurationTalkerType";

        /// <remarks />
        public const string IIeeeTsnInterfaceConfigurationType = "IIeeeTsnInterfaceConfigurationType";

        /// <remarks />
        public const string IIeeeTsnMacAddressType = "IIeeeTsnMacAddressType";

        /// <remarks />
        public const string IIeeeTsnVlanTagType = "IIeeeTsnVlanTagType";

        /// <remarks />
        public const string IIetfBaseNetworkInterfaceType = "IIetfBaseNetworkInterfaceType";

        /// <remarks />
        public const string Image = "Image";

        /// <remarks />
        public const string ImageBMP = "ImageBMP";

        /// <remarks />
        public const string ImageGIF = "ImageGIF";

        /// <remarks />
        public const string ImageItemType = "ImageItemType";

        /// <remarks />
        public const string ImageJPG = "ImageJPG";

        /// <remarks />
        public const string ImagePNG = "ImagePNG";

        /// <remarks />
        public const string Index = "Index";

        /// <remarks />
        public const string IndexRange = "IndexRange";

        /// <remarks />
        public const string InitialStateType = "InitialStateType";

        /// <remarks />
        public const string InputArguments = "InputArguments";

        /// <remarks />
        public const string InputNode = "InputNode";

        /// <remarks />
        public const string InsertAnnotationCapability = "InsertAnnotationCapability";

        /// <remarks />
        public const string InsertDataCapability = "InsertDataCapability";

        /// <remarks />
        public const string InsertEventCapability = "InsertEventCapability";

        /// <remarks />
        public const string InstanceCount = "InstanceCount";

        /// <remarks />
        public const string InstanceNode = "InstanceNode";

        /// <remarks />
        public const string InstrumentDiagnosticAlarmType = "InstrumentDiagnosticAlarmType";

        /// <remarks />
        public const string InstrumentRange = "InstrumentRange";

        /// <remarks />
        public const string Int16 = "Int16";

        /// <remarks />
        public const string Int32 = "Int32";

        /// <remarks />
        public const string Int64 = "Int64";

        /// <remarks />
        public const string Integer = "Integer";

        /// <remarks />
        public const string IntegerId = "IntegerId";

        /// <remarks />
        public const string InterfaceAdminStatus = "InterfaceAdminStatus";

        /// <remarks />
        public const string InterfaceName = "InterfaceName";

        /// <remarks />
        public const string InterfaceOperStatus = "InterfaceOperStatus";

        /// <remarks />
        public const string InterfaceTypes = "InterfaceTypes";

        /// <remarks />
        public const string IntermediateResult = "IntermediateResult";

        /// <remarks />
        public const string Interval = "Interval";

        /// <remarks />
        public const string InvalidHostname = "InvalidHostname";

        /// <remarks />
        public const string InvalidUri = "InvalidUri";

        /// <remarks />
        public const string InvocationCreationTime = "InvocationCreationTime";

        /// <remarks />
        public const string IOrderedObjectType = "IOrderedObjectType";

        /// <remarks />
        public const string IPriorityMappingEntryType = "IPriorityMappingEntryType";

        /// <remarks />
        public const string IrdiDictionaryEntryType = "IrdiDictionaryEntryType";

        /// <remarks />
        public const string IsDeleteModified = "IsDeleteModified";

        /// <remarks />
        public const string IsNamespaceSubset = "IsNamespaceSubset";

        /// <remarks />
        public const string ISrClassType = "ISrClassType";

        /// <remarks />
        public const string IssuedIdentityToken = "IssuedIdentityToken";

        /// <remarks />
        public const string IssuerEndpointUrl = "IssuerEndpointUrl";

        /// <remarks />
        public const string JsonDataSetMessageContentMask = "JsonDataSetMessageContentMask";

        /// <remarks />
        public const string JsonDataSetReaderMessageDataType = "JsonDataSetReaderMessageDataType";

        /// <remarks />
        public const string JsonDataSetReaderMessageType = "JsonDataSetReaderMessageType";

        /// <remarks />
        public const string JsonDataSetWriterMessageDataType = "JsonDataSetWriterMessageDataType";

        /// <remarks />
        public const string JsonDataSetWriterMessageType = "JsonDataSetWriterMessageType";

        /// <remarks />
        public const string JsonNetworkMessageContentMask = "JsonNetworkMessageContentMask";

        /// <remarks />
        public const string JsonWriterGroupMessageDataType = "JsonWriterGroupMessageDataType";

        /// <remarks />
        public const string JsonWriterGroupMessageType = "JsonWriterGroupMessageType";

        /// <remarks />
        public const string KeepAliveTime = "KeepAliveTime";

        /// <remarks />
        public const string KeyCredentialAuditEventType = "KeyCredentialAuditEventType";

        /// <remarks />
        public const string KeyCredentialConfiguration = "KeyCredentialConfiguration";

        /// <remarks />
        public const string KeyCredentialConfigurationFolderType = "KeyCredentialConfigurationFolderType";

        /// <remarks />
        public const string KeyCredentialConfigurationType = "KeyCredentialConfigurationType";

        /// <remarks />
        public const string KeyCredentialDeletedAuditEventType = "KeyCredentialDeletedAuditEventType";

        /// <remarks />
        public const string KeyCredentialUpdatedAuditEventType = "KeyCredentialUpdatedAuditEventType";

        /// <remarks />
        public const string KeyFrameCount = "KeyFrameCount";

        /// <remarks />
        public const string KeyLifetime = "KeyLifetime";

        /// <remarks />
        public const string KeyValuePair = "KeyValuePair";

        /// <remarks />
        public const string LastMethodCall = "LastMethodCall";

        /// <remarks />
        public const string LastMethodCallTime = "LastMethodCallTime";

        /// <remarks />
        public const string LastMethodInputArguments = "LastMethodInputArguments";

        /// <remarks />
        public const string LastMethodInputValues = "LastMethodInputValues";

        /// <remarks />
        public const string LastMethodOutputArguments = "LastMethodOutputArguments";

        /// <remarks />
        public const string LastMethodOutputValues = "LastMethodOutputValues";

        /// <remarks />
        public const string LastMethodReturnStatus = "LastMethodReturnStatus";

        /// <remarks />
        public const string LastMethodSessionId = "LastMethodSessionId";

        /// <remarks />
        public const string LastResponse = "LastResponse";

        /// <remarks />
        public const string LastSeverity = "LastSeverity";

        /// <remarks />
        public const string LastTransition = "LastTransition";

        /// <remarks />
        public const string LastTransitionTime = "LastTransitionTime";

        /// <remarks />
        public const string LastUpdateTime = "LastUpdateTime";

        /// <remarks />
        public const string LatchedState = "LatchedState";

        /// <remarks />
        public const string LatePublishRequestCount = "LatePublishRequestCount";

        /// <remarks />
        public const string LengthUnit = "LengthUnit";

        /// <remarks />
        public const string LimitAlarmType = "LimitAlarmType";

        /// <remarks />
        public const string LimitState = "LimitState";

        /// <remarks />
        public const string ListenerStatus = "ListenerStatus";

        /// <remarks />
        public const string ListenerStreams = "ListenerStreams";

        /// <remarks />
        public const string ListId = "ListId";

        /// <remarks />
        public const string LiteralOperand = "LiteralOperand";

        /// <remarks />
        public const string LiveValues = "LiveValues";

        /// <remarks />
        public const string LocaleId = "LocaleId";

        /// <remarks />
        public const string LocaleIdArray = "LocaleIdArray";

        /// <remarks />
        public const string LocaleIds = "LocaleIds";

        /// <remarks />
        public const string LocalizedText = "LocalizedText";

        /// <remarks />
        public const string LocalTime = "LocalTime";

        /// <remarks />
        public const string Low = "Low";

        /// <remarks />
        public const string LowLimit = "LowLimit";

        /// <remarks />
        public const string LowLow = "LowLow";

        /// <remarks />
        public const string LowLowLimit = "LowLowLimit";

        /// <remarks />
        public const string LowLowState = "LowLowState";

        /// <remarks />
        public const string LowLowToLow = "LowLowToLow";

        /// <remarks />
        public const string LowState = "LowState";

        /// <remarks />
        public const string LowToLowLow = "LowToLowLow";

        /// <remarks />
        public const string MacAddress = "MacAddress";

        /// <remarks />
        public const string MaintenanceConditionClassType = "MaintenanceConditionClassType";

        /// <remarks />
        public const string ManufacturerName = "ManufacturerName";

        /// <remarks />
        public const string MappingTables = "MappingTables";

        /// <remarks />
        public const string MappingUri = "MappingUri";

        /// <remarks />
        public const string MaxArrayLength = "MaxArrayLength";

        /// <remarks />
        public const string MaxBrowseContinuationPoints = "MaxBrowseContinuationPoints";

        /// <remarks />
        public const string MaxByteStringLength = "MaxByteStringLength";

        /// <remarks />
        public const string MaxCharacters = "MaxCharacters";

        /// <remarks />
        public const string MaxFrameLength = "MaxFrameLength";

        /// <remarks />
        public const string MaxFrameSize = "MaxFrameSize";

        /// <remarks />
        public const string MaxFutureKeyCount = "MaxFutureKeyCount";

        /// <remarks />
        public const string MaxHistoryContinuationPoints = "MaxHistoryContinuationPoints";

        /// <remarks />
        public const string Maximum = "Maximum";

        /// <remarks />
        public const string MaximumActiveState = "MaximumActiveState";

        /// <remarks />
        public const string MaximumAlarmRate = "MaximumAlarmRate";

        /// <remarks />
        public const string MaximumReAlarmCount = "MaximumReAlarmCount";

        /// <remarks />
        public const string MaximumUnAck = "MaximumUnAck";

        /// <remarks />
        public const string MaxInstanceCount = "MaxInstanceCount";

        /// <remarks />
        public const string MaxIntervalFrames = "MaxIntervalFrames";

        /// <remarks />
        public const string MaxKeepAliveCount = "MaxKeepAliveCount";

        /// <remarks />
        public const string MaxLifetimeCount = "MaxLifetimeCount";

        /// <remarks />
        public const string MaxMonitoredItemsPerCall = "MaxMonitoredItemsPerCall";

        /// <remarks />
        public const string MaxNetworkMessageSize = "MaxNetworkMessageSize";

        /// <remarks />
        public const string MaxNodesPerBrowse = "MaxNodesPerBrowse";

        /// <remarks />
        public const string MaxNodesPerHistoryReadData = "MaxNodesPerHistoryReadData";

        /// <remarks />
        public const string MaxNodesPerHistoryReadEvents = "MaxNodesPerHistoryReadEvents";

        /// <remarks />
        public const string MaxNodesPerHistoryUpdateData = "MaxNodesPerHistoryUpdateData";

        /// <remarks />
        public const string MaxNodesPerHistoryUpdateEvents = "MaxNodesPerHistoryUpdateEvents";

        /// <remarks />
        public const string MaxNodesPerMethodCall = "MaxNodesPerMethodCall";

        /// <remarks />
        public const string MaxNodesPerNodeManagement = "MaxNodesPerNodeManagement";

        /// <remarks />
        public const string MaxNodesPerRead = "MaxNodesPerRead";

        /// <remarks />
        public const string MaxNodesPerRegisterNodes = "MaxNodesPerRegisterNodes";

        /// <remarks />
        public const string MaxNodesPerTranslateBrowsePathsToNodeIds = "MaxNodesPerTranslateBrowsePathsToNodeIds";

        /// <remarks />
        public const string MaxNodesPerWrite = "MaxNodesPerWrite";

        /// <remarks />
        public const string MaxNotificationsPerPublish = "MaxNotificationsPerPublish";

        /// <remarks />
        public const string MaxPastKeyCount = "MaxPastKeyCount";

        /// <remarks />
        public const string MaxQueryContinuationPoints = "MaxQueryContinuationPoints";

        /// <remarks />
        public const string MaxRecycleCount = "MaxRecycleCount";

        /// <remarks />
        public const string MaxResponseMessageSize = "MaxResponseMessageSize";

        /// <remarks />
        public const string MaxReturnDataValues = "MaxReturnDataValues";

        /// <remarks />
        public const string MaxReturnEventValues = "MaxReturnEventValues";

        /// <remarks />
        public const string MaxSampledMonitoredItemsCount = "MaxSampledMonitoredItemsCount";

        /// <remarks />
        public const string MaxStringLength = "MaxStringLength";

        /// <remarks />
        public const string MaxTimeInterval = "MaxTimeInterval";

        /// <remarks />
        public const string MaxTimeShelved = "MaxTimeShelved";

        /// <remarks />
        public const string MaxTrustListSize = "MaxTrustListSize";

        /// <remarks />
        public const string MdnsDiscoveryConfiguration = "MdnsDiscoveryConfiguration";

        /// <remarks />
        public const string Message = "Message";

        /// <remarks />
        public const string MessageReceiveTimeout = "MessageReceiveTimeout";

        /// <remarks />
        public const string MessageRepeatCount = "MessageRepeatCount";

        /// <remarks />
        public const string MessageRepeatDelay = "MessageRepeatDelay";

        /// <remarks />
        public const string MessageSecurityMode = "MessageSecurityMode";

        /// <remarks />
        public const string MessageSettings = "MessageSettings";

        /// <remarks />
        public const string MetaDataQueueName = "MetaDataQueueName";

        /// <remarks />
        public const string MetaDataUpdateTime = "MetaDataUpdateTime";

        /// <remarks />
        public const string MethodAttributes = "MethodAttributes";

        /// <remarks />
        public const string MethodId = "MethodId";

        /// <remarks />
        public const string MethodNode = "MethodNode";

        /// <remarks />
        public const string MimeType = "MimeType";

        /// <remarks />
        public const string MinSupportedSampleRate = "MinSupportedSampleRate";

        /// <remarks />
        public const string MinTimeInterval = "MinTimeInterval";

        /// <remarks />
        public const string ModelChangeStructureDataType = "ModelChangeStructureDataType";

        /// <remarks />
        public const string ModelChangeStructureVerbMask = "ModelChangeStructureVerbMask";

        /// <remarks />
        public const string ModellingRule_ExposesItsArray = "ExposesItsArray";

        /// <remarks />
        public const string ModellingRule_Mandatory = "Mandatory";

        /// <remarks />
        public const string ModellingRule_MandatoryPlaceholder = "MandatoryPlaceholder";

        /// <remarks />
        public const string ModellingRule_Optional = "Optional";

        /// <remarks />
        public const string ModellingRule_OptionalPlaceholder = "OptionalPlaceholder";

        /// <remarks />
        public const string ModellingRules = "ModellingRules";

        /// <remarks />
        public const string ModellingRuleType = "ModellingRuleType";

        /// <remarks />
        public const string ModificationInfo = "ModificationInfo";

        /// <remarks />
        public const string ModifyCount = "ModifyCount";

        /// <remarks />
        public const string ModifyFieldSelection = "ModifyFieldSelection";

        /// <remarks />
        public const string ModifyMonitoredItemsCount = "ModifyMonitoredItemsCount";

        /// <remarks />
        public const string ModifyMonitoredItemsRequest = "ModifyMonitoredItemsRequest";

        /// <remarks />
        public const string ModifyMonitoredItemsResponse = "ModifyMonitoredItemsResponse";

        /// <remarks />
        public const string ModifySubscriptionCount = "ModifySubscriptionCount";

        /// <remarks />
        public const string ModifySubscriptionRequest = "ModifySubscriptionRequest";

        /// <remarks />
        public const string ModifySubscriptionResponse = "ModifySubscriptionResponse";

        /// <remarks />
        public const string MonitoredItemCount = "MonitoredItemCount";

        /// <remarks />
        public const string MonitoredItemCreateRequest = "MonitoredItemCreateRequest";

        /// <remarks />
        public const string MonitoredItemCreateResult = "MonitoredItemCreateResult";

        /// <remarks />
        public const string MonitoredItemModifyRequest = "MonitoredItemModifyRequest";

        /// <remarks />
        public const string MonitoredItemModifyResult = "MonitoredItemModifyResult";

        /// <remarks />
        public const string MonitoredItemNotification = "MonitoredItemNotification";

        /// <remarks />
        public const string MonitoringFilter = "MonitoringFilter";

        /// <remarks />
        public const string MonitoringFilterResult = "MonitoringFilterResult";

        /// <remarks />
        public const string MonitoringMode = "MonitoringMode";

        /// <remarks />
        public const string MonitoringParameters = "MonitoringParameters";

        /// <remarks />
        public const string MonitoringQueueOverflowCount = "MonitoringQueueOverflowCount";

        /// <remarks />
        public const string MoveOrCopy = "MoveOrCopy";

        /// <remarks />
        public const string MulticastDnsEnabled = "MulticastDnsEnabled";

        /// <remarks />
        public const string MultiStateDictionaryEntryDiscreteBaseType = "MultiStateDictionaryEntryDiscreteBaseType";

        /// <remarks />
        public const string MultiStateDictionaryEntryDiscreteType = "MultiStateDictionaryEntryDiscreteType";

        /// <remarks />
        public const string MultiStateDiscreteType = "MultiStateDiscreteType";

        /// <remarks />
        public const string MultiStateValueDiscreteType = "MultiStateValueDiscreteType";

        /// <remarks />
        public const string Name = "Name";

        /// <remarks />
        public const string NamespaceArray = "NamespaceArray";

        /// <remarks />
        public const string NamespaceFile = "NamespaceFile";

        /// <remarks />
        public const string NamespaceIdentifier_Placeholder = "<NamespaceIdentifier>";

        /// <remarks />
        public const string NamespaceMetadataType = "NamespaceMetadataType";

        /// <remarks />
        public const string NamespacePublicationDate = "NamespacePublicationDate";

        /// <remarks />
        public const string Namespaces = "Namespaces";

        /// <remarks />
        public const string NamespacesType = "NamespacesType";

        /// <remarks />
        public const string NamespaceUri = "NamespaceUri";

        /// <remarks />
        public const string NamespaceVersion = "NamespaceVersion";

        /// <remarks />
        public const string NamingRuleType = "NamingRuleType";

        /// <remarks />
        public const string NDimensionArrayItemType = "NDimensionArrayItemType";

        /// <remarks />
        public const string NegotiationStatus = "NegotiationStatus";

        /// <remarks />
        public const string NetworkAddressDataType = "NetworkAddressDataType";

        /// <remarks />
        public const string NetworkAddressType = "NetworkAddressType";

        /// <remarks />
        public const string NetworkAddressUrlDataType = "NetworkAddressUrlDataType";

        /// <remarks />
        public const string NetworkAddressUrlType = "NetworkAddressUrlType";

        /// <remarks />
        public const string NetworkGroupDataType = "NetworkGroupDataType";

        /// <remarks />
        public const string NetworkInterface = "NetworkInterface";

        /// <remarks />
        public const string NetworkInterfaces = "NetworkInterfaces";

        /// <remarks />
        public const string NetworkMessageContentMask = "NetworkMessageContentMask";

        /// <remarks />
        public const string NetworkMessageNumber = "NetworkMessageNumber";

        /// <remarks />
        public const string NewStateId = "NewStateId";

        /// <remarks />
        public const string NewValue = "NewValue";

        /// <remarks />
        public const string NewValues = "NewValues";

        /// <remarks />
        public const string NextSequenceNumber = "NextSequenceNumber";

        /// <remarks />
        public const string Node = "Node";

        /// <remarks />
        public const string NodeAttributes = "NodeAttributes";

        /// <remarks />
        public const string NodeAttributesMask = "NodeAttributesMask";

        /// <remarks />
        public const string NodeClass = "NodeClass";

        /// <remarks />
        public const string NodeId = "NodeId";

        /// <remarks />
        public const string NodeReference = "NodeReference";

        /// <remarks />
        public const string NodesToAdd = "NodesToAdd";

        /// <remarks />
        public const string NodesToDelete = "NodesToDelete";

        /// <remarks />
        public const string NodeTypeDescription = "NodeTypeDescription";

        /// <remarks />
        public const string NodeVersion = "NodeVersion";

        /// <remarks />
        public const string NonExclusiveDeviationAlarmType = "NonExclusiveDeviationAlarmType";

        /// <remarks />
        public const string NonExclusiveLevelAlarmType = "NonExclusiveLevelAlarmType";

        /// <remarks />
        public const string NonExclusiveLimitAlarmType = "NonExclusiveLimitAlarmType";

        /// <remarks />
        public const string NonExclusiveRateOfChangeAlarmType = "NonExclusiveRateOfChangeAlarmType";

        /// <remarks />
        public const string NonHierarchicalReferences = "NonHierarchicalReferences";

        /// <remarks />
        public const string NonTransparentNetworkRedundancyType = "NonTransparentNetworkRedundancyType";

        /// <remarks />
        public const string NonTransparentRedundancyType = "NonTransparentRedundancyType";

        /// <remarks />
        public const string NormalizedString = "NormalizedString";

        /// <remarks />
        public const string NormalState = "NormalState";

        /// <remarks />
        public const string NotificationData = "NotificationData";

        /// <remarks />
        public const string NotificationMessage = "NotificationMessage";

        /// <remarks />
        public const string NotificationsCount = "NotificationsCount";

        /// <remarks />
        public const string Number = "Number";

        /// <remarks />
        public const string NumberInList = "NumberInList";

        /// <remarks />
        public const string Numerator = "Numerator";

        /// <remarks />
        public const string NumericRange = "NumericRange";

        /// <remarks />
        public const string ObjectAttributes = "ObjectAttributes";

        /// <remarks />
        public const string ObjectNode = "ObjectNode";

        /// <remarks />
        public const string ObjectsFolder = "Objects";

        /// <remarks />
        public const string ObjectTypeAttributes = "ObjectTypeAttributes";

        /// <remarks />
        public const string ObjectTypeNode = "ObjectTypeNode";

        /// <remarks />
        public const string ObjectTypesFolder = "ObjectTypes";

        /// <remarks />
        public const string OffDelay = "OffDelay";

        /// <remarks />
        public const string OffNormalAlarmType = "OffNormalAlarmType";

        /// <remarks />
        public const string OkResponse = "OkResponse";

        /// <remarks />
        public const string OldStateId = "OldStateId";

        /// <remarks />
        public const string OldValue = "OldValue";

        /// <remarks />
        public const string OldValues = "OldValues";

        /// <remarks />
        public const string OnDelay = "OnDelay";

        /// <remarks />
        public const string OneShotShelve = "OneShotShelve";

        /// <remarks />
        public const string OneShotShelved = "OneShotShelved";

        /// <remarks />
        public const string OneShotShelvedToTimedShelved = "OneShotShelvedToTimedShelved";

        /// <remarks />
        public const string OneShotShelvedToUnshelved = "OneShotShelvedToUnshelved";

        /// <remarks />
        public const string OPCBinarySchema_TypeSystem = "OPC Binary";

        /// <remarks />
        public const string OpcUa_BinarySchema = "Opc.Ua";

        /// <remarks />
        public const string OpcUa_XmlSchema = "Opc.Ua";

        /// <remarks />
        public const string OPCUANamespaceMetadata = "http://opcfoundation.org/UA/";

        /// <remarks />
        public const string Open = "Open";

        /// <remarks />
        public const string OpenCount = "OpenCount";

        /// <remarks />
        public const string OpenFileMode = "OpenFileMode";

        /// <remarks />
        public const string OpenSecureChannelRequest = "OpenSecureChannelRequest";

        /// <remarks />
        public const string OpenSecureChannelResponse = "OpenSecureChannelResponse";

        /// <remarks />
        public const string OpenWithMasks = "OpenWithMasks";

        /// <remarks />
        public const string OperationLimits = "OperationLimits";

        /// <remarks />
        public const string OperationLimitsType = "OperationLimitsType";

        /// <remarks />
        public const string OperStatus = "OperStatus";

        /// <remarks />
        public const string OptionSet = "OptionSet";

        /// <remarks />
        public const string OptionSetType = "OptionSetType";

        /// <remarks />
        public const string OptionSetValues = "OptionSetValues";

        /// <remarks />
        public const string OrderedListType = "OrderedListType";

        /// <remarks />
        public const string OrderedObject_Placeholder = "<OrderedObject>";

        /// <remarks />
        public const string Organizes = "Organizes";

        /// <remarks />
        public const string Orientation = "Orientation";

        /// <remarks />
        public const string OrientationType = "OrientationType";

        /// <remarks />
        public const string OutOfServiceState = "OutOfServiceState";

        /// <remarks />
        public const string OutputArguments = "OutputArguments";

        /// <remarks />
        public const string OverrideValueHandling = "OverrideValueHandling";

        /// <remarks />
        public const string ParameterDataTypeId = "ParameterDataTypeId";

        /// <remarks />
        public const string ParsingResult = "ParsingResult";

        /// <remarks />
        public const string PercentDataBad = "PercentDataBad";

        /// <remarks />
        public const string PercentDataGood = "PercentDataGood";

        /// <remarks />
        public const string PerformInsertReplace = "PerformInsertReplace";

        /// <remarks />
        public const string PerformUpdateType = "PerformUpdateType";

        /// <remarks />
        public const string PermissionType = "PermissionType";

        /// <remarks />
        public const string PhysAddress = "PhysAddress";

        /// <remarks />
        public const string PlaceInService = "PlaceInService";

        /// <remarks />
        public const string Priority = "Priority";

        /// <remarks />
        public const string PriorityCodePoint = "PriorityCodePoint";

        /// <remarks />
        public const string PriorityLabel = "PriorityLabel";

        /// <remarks />
        public const string PriorityValue_DSCP = "PriorityValue_DSCP";

        /// <remarks />
        public const string PriorityValue_PCP = "PriorityValue_PCP";

        /// <remarks />
        public const string ProcessConditionClassType = "ProcessConditionClassType";

        /// <remarks />
        public const string ProcessingOffset = "ProcessingOffset";

        /// <remarks />
        public const string ProductName = "ProductName";

        /// <remarks />
        public const string ProductUri = "ProductUri";

        /// <remarks />
        public const string ProfileUri = "ProfileUri";

        /// <remarks />
        public const string ProgramDiagnostic = "ProgramDiagnostic";

        /// <remarks />
        public const string ProgramDiagnostic2DataType = "ProgramDiagnostic2DataType";

        /// <remarks />
        public const string ProgramDiagnostic2Type = "ProgramDiagnostic2Type";

        /// <remarks />
        public const string ProgramDiagnosticDataType = "ProgramDiagnosticDataType";

        /// <remarks />
        public const string ProgramDiagnosticType = "ProgramDiagnosticType";

        /// <remarks />
        public const string ProgramStateMachineType = "ProgramStateMachineType";

        /// <remarks />
        public const string ProgramTransitionAuditEventType = "ProgramTransitionAuditEventType";

        /// <remarks />
        public const string ProgramTransitionEventType = "ProgramTransitionEventType";

        /// <remarks />
        public const string Progress = "Progress";

        /// <remarks />
        public const string ProgressEventType = "ProgressEventType";

        /// <remarks />
        public const string Prompt = "Prompt";

        /// <remarks />
        public const string PropertyType = "PropertyType";

        /// <remarks />
        public const string PublishCount = "PublishCount";

        /// <remarks />
        public const string PublishedData = "PublishedData";

        /// <remarks />
        public const string PublishedDataItemsDataType = "PublishedDataItemsDataType";

        /// <remarks />
        public const string PublishedDataItemsType = "PublishedDataItemsType";

        /// <remarks />
        public const string PublishedDataSetDataType = "PublishedDataSetDataType";

        /// <remarks />
        public const string PublishedDataSetName_Placeholder = "<PublishedDataSetName>";

        /// <remarks />
        public const string PublishedDataSets = "PublishedDataSets";

        /// <remarks />
        public const string PublishedDataSetSourceDataType = "PublishedDataSetSourceDataType";

        /// <remarks />
        public const string PublishedDataSetType = "PublishedDataSetType";

        /// <remarks />
        public const string PublishedEventsDataType = "PublishedEventsDataType";

        /// <remarks />
        public const string PublishedEventsType = "PublishedEventsType";

        /// <remarks />
        public const string PublishedVariableDataType = "PublishedVariableDataType";

        /// <remarks />
        public const string PublisherId = "PublisherId";

        /// <remarks />
        public const string PublishingEnabled = "PublishingEnabled";

        /// <remarks />
        public const string PublishingInterval = "PublishingInterval";

        /// <remarks />
        public const string PublishingIntervalCount = "PublishingIntervalCount";

        /// <remarks />
        public const string PublishingOffset = "PublishingOffset";

        /// <remarks />
        public const string PublishRequest = "PublishRequest";

        /// <remarks />
        public const string PublishRequestCount = "PublishRequestCount";

        /// <remarks />
        public const string PublishResponse = "PublishResponse";

        /// <remarks />
        public const string PublishSubscribe = "PublishSubscribe";

        /// <remarks />
        public const string PublishSubscribeType = "PublishSubscribeType";

        /// <remarks />
        public const string PubSubCommunicationFailureEventType = "PubSubCommunicationFailureEventType";

        /// <remarks />
        public const string PubSubConfigurationDataType = "PubSubConfigurationDataType";

        /// <remarks />
        public const string PubSubConnectionDataType = "PubSubConnectionDataType";

        /// <remarks />
        public const string PubSubConnectionType = "PubSubConnectionType";

        /// <remarks />
        public const string PubSubDiagnosticsConnectionType = "PubSubDiagnosticsConnectionType";

        /// <remarks />
        public const string PubSubDiagnosticsCounterClassification = "PubSubDiagnosticsCounterClassification";

        /// <remarks />
        public const string PubSubDiagnosticsCounterType = "PubSubDiagnosticsCounterType";

        /// <remarks />
        public const string PubSubDiagnosticsDataSetReaderType = "PubSubDiagnosticsDataSetReaderType";

        /// <remarks />
        public const string PubSubDiagnosticsDataSetWriterType = "PubSubDiagnosticsDataSetWriterType";

        /// <remarks />
        public const string PubSubDiagnosticsReaderGroupType = "PubSubDiagnosticsReaderGroupType";

        /// <remarks />
        public const string PubSubDiagnosticsRootType = "PubSubDiagnosticsRootType";

        /// <remarks />
        public const string PubSubDiagnosticsType = "PubSubDiagnosticsType";

        /// <remarks />
        public const string PubSubDiagnosticsWriterGroupType = "PubSubDiagnosticsWriterGroupType";

        /// <remarks />
        public const string PubSubEventNotifier = "EventNotifier";

        /// <remarks />
        public const string PubSubGroupDataType = "PubSubGroupDataType";

        /// <remarks />
        public const string PubSubGroupType = "PubSubGroupType";

        /// <remarks />
        public const string PubSubKeyServiceType = "PubSubKeyServiceType";

        /// <remarks />
        public const string PubSubState = "PubSubState";

        /// <remarks />
        public const string PubSubStatusEventType = "PubSubStatusEventType";

        /// <remarks />
        public const string PubSubStatusType = "PubSubStatusType";

        /// <remarks />
        public const string PubSubTransportLimitsExceedEventType = "PubSubTransportLimitsExceedEventType";

        /// <remarks />
        public const string QualifiedName = "QualifiedName";

        /// <remarks />
        public const string Quality = "Quality";

        /// <remarks />
        public const string QueryDataDescription = "QueryDataDescription";

        /// <remarks />
        public const string QueryDataSet = "QueryDataSet";

        /// <remarks />
        public const string QueryFirstCount = "QueryFirstCount";

        /// <remarks />
        public const string QueryFirstRequest = "QueryFirstRequest";

        /// <remarks />
        public const string QueryFirstResponse = "QueryFirstResponse";

        /// <remarks />
        public const string QueryNextCount = "QueryNextCount";

        /// <remarks />
        public const string QueryNextRequest = "QueryNextRequest";

        /// <remarks />
        public const string QueryNextResponse = "QueryNextResponse";

        /// <remarks />
        public const string QueueName = "QueueName";

        /// <remarks />
        public const string Range = "Range";

        /// <remarks />
        public const string Rate = "Rate";

        /// <remarks />
        public const string RationalNumber = "RationalNumber";

        /// <remarks />
        public const string RationalNumberType = "RationalNumberType";

        /// <remarks />
        public const string Read = "Read";

        /// <remarks />
        public const string ReadAnnotationDataDetails = "ReadAnnotationDataDetails";

        /// <remarks />
        public const string ReadAtTimeDetails = "ReadAtTimeDetails";

        /// <remarks />
        public const string ReadCount = "ReadCount";

        /// <remarks />
        public const string ReaderGroupDataType = "ReaderGroupDataType";

        /// <remarks />
        public const string ReaderGroupMessageDataType = "ReaderGroupMessageDataType";

        /// <remarks />
        public const string ReaderGroupMessageType = "ReaderGroupMessageType";

        /// <remarks />
        public const string ReaderGroupName_Placeholder = "<ReaderGroupName>";

        /// <remarks />
        public const string ReaderGroupTransportDataType = "ReaderGroupTransportDataType";

        /// <remarks />
        public const string ReaderGroupTransportType = "ReaderGroupTransportType";

        /// <remarks />
        public const string ReaderGroupType = "ReaderGroupType";

        /// <remarks />
        public const string ReadEventDetails = "ReadEventDetails";

        /// <remarks />
        public const string ReadPrepare = "ReadPrepare";

        /// <remarks />
        public const string ReadPrepareToError = "ReadPrepareToError";

        /// <remarks />
        public const string ReadPrepareToReadTransfer = "ReadPrepareToReadTransfer";

        /// <remarks />
        public const string ReadProcessedDetails = "ReadProcessedDetails";

        /// <remarks />
        public const string ReadRawModifiedDetails = "ReadRawModifiedDetails";

        /// <remarks />
        public const string ReadRequest = "ReadRequest";

        /// <remarks />
        public const string ReadResponse = "ReadResponse";

        /// <remarks />
        public const string ReadTransfer = "ReadTransfer";

        /// <remarks />
        public const string ReadTransferToError = "ReadTransferToError";

        /// <remarks />
        public const string ReadTransferToIdle = "ReadTransferToIdle";

        /// <remarks />
        public const string ReadValueId = "ReadValueId";

        /// <remarks />
        public const string Ready = "Ready";

        /// <remarks />
        public const string ReadyToHalted = "ReadyToHalted";

        /// <remarks />
        public const string ReadyToRunning = "ReadyToRunning";

        /// <remarks />
        public const string ReAlarmRepeatCount = "ReAlarmRepeatCount";

        /// <remarks />
        public const string ReAlarmTime = "ReAlarmTime";

        /// <remarks />
        public const string ReceiveOffset = "ReceiveOffset";

        /// <remarks />
        public const string ReceiveTime = "ReceiveTime";

        /// <remarks />
        public const string RecycleCount = "RecycleCount";

        /// <remarks />
        public const string RedundancySupport = "RedundancySupport";

        /// <remarks />
        public const string RedundantServerArray = "RedundantServerArray";

        /// <remarks />
        public const string RedundantServerDataType = "RedundantServerDataType";

        /// <remarks />
        public const string ReferenceDescription = "ReferenceDescription";

        /// <remarks />
        public const string ReferenceNode = "ReferenceNode";

        /// <remarks />
        public const string References = "References";

        /// <remarks />
        public const string ReferencesToAdd = "ReferencesToAdd";

        /// <remarks />
        public const string ReferencesToDelete = "ReferencesToDelete";

        /// <remarks />
        public const string ReferenceTypeAttributes = "ReferenceTypeAttributes";

        /// <remarks />
        public const string ReferenceTypeNode = "ReferenceTypeNode";

        /// <remarks />
        public const string ReferenceTypesFolder = "ReferenceTypes";

        /// <remarks />
        public const string RefreshEndEventType = "RefreshEndEventType";

        /// <remarks />
        public const string RefreshRequiredEventType = "RefreshRequiredEventType";

        /// <remarks />
        public const string RefreshStartEventType = "RefreshStartEventType";

        /// <remarks />
        public const string RegisteredServer = "RegisteredServer";

        /// <remarks />
        public const string RegisterNodesCount = "RegisterNodesCount";

        /// <remarks />
        public const string RegisterNodesRequest = "RegisterNodesRequest";

        /// <remarks />
        public const string RegisterNodesResponse = "RegisterNodesResponse";

        /// <remarks />
        public const string RegisterServer2Request = "RegisterServer2Request";

        /// <remarks />
        public const string RegisterServer2Response = "RegisterServer2Response";

        /// <remarks />
        public const string RegisterServerRequest = "RegisterServerRequest";

        /// <remarks />
        public const string RegisterServerResponse = "RegisterServerResponse";

        /// <remarks />
        public const string RejectedRequestsCount = "RejectedRequestsCount";

        /// <remarks />
        public const string RejectedSessionCount = "RejectedSessionCount";

        /// <remarks />
        public const string RelativePath = "RelativePath";

        /// <remarks />
        public const string RelativePathElement = "RelativePathElement";

        /// <remarks />
        public const string RemoveApplication = "RemoveApplication";

        /// <remarks />
        public const string RemoveCertificate = "RemoveCertificate";

        /// <remarks />
        public const string RemoveConnection = "RemoveConnection";

        /// <remarks />
        public const string RemoveDataSetFolder = "RemoveDataSetFolder";

        /// <remarks />
        public const string RemoveDataSetReader = "RemoveDataSetReader";

        /// <remarks />
        public const string RemoveDataSetWriter = "RemoveDataSetWriter";

        /// <remarks />
        public const string RemoveEndpoint = "RemoveEndpoint";

        /// <remarks />
        public const string RemoveExtensionField = "RemoveExtensionField";

        /// <remarks />
        public const string RemoveFromService = "RemoveFromService";

        /// <remarks />
        public const string RemoveGroup = "RemoveGroup";

        /// <remarks />
        public const string RemoveIdentity = "RemoveIdentity";

        /// <remarks />
        public const string RemovePublishedDataSet = "RemovePublishedDataSet";

        /// <remarks />
        public const string RemoveRole = "RemoveRole";

        /// <remarks />
        public const string RemoveSecurityGroup = "RemoveSecurityGroup";

        /// <remarks />
        public const string RemoveTargetVariables = "RemoveTargetVariables";

        /// <remarks />
        public const string RemoveVariables = "RemoveVariables";

        /// <remarks />
        public const string ReplaceDataCapability = "ReplaceDataCapability";

        /// <remarks />
        public const string ReplaceEventCapability = "ReplaceEventCapability";

        /// <remarks />
        public const string RepublishCount = "RepublishCount";

        /// <remarks />
        public const string RepublishMessageCount = "RepublishMessageCount";

        /// <remarks />
        public const string RepublishMessageRequestCount = "RepublishMessageRequestCount";

        /// <remarks />
        public const string RepublishRequest = "RepublishRequest";

        /// <remarks />
        public const string RepublishRequestCount = "RepublishRequestCount";

        /// <remarks />
        public const string RepublishResponse = "RepublishResponse";

        /// <remarks />
        public const string ReqTimes = "ReqTimes";

        /// <remarks />
        public const string RequestedDeliveryGuarantee = "RequestedDeliveryGuarantee";

        /// <remarks />
        public const string RequestedLifetime = "RequestedLifetime";

        /// <remarks />
        public const string RequestHandle = "RequestHandle";

        /// <remarks />
        public const string RequestHeader = "RequestHeader";

        /// <remarks />
        public const string RequestServerStateChange = "RequestServerStateChange";

        /// <remarks />
        public const string RequestType = "RequestType";

        /// <remarks />
        public const string ResendData = "ResendData";

        /// <remarks />
        public const string Reset = "Reset";

        /// <remarks />
        public const string Resources = "Resources";

        /// <remarks />
        public const string ResourceUri = "ResourceUri";

        /// <remarks />
        public const string Respond = "Respond";

        /// <remarks />
        public const string ResponseHeader = "ResponseHeader";

        /// <remarks />
        public const string ResponseOptionSet = "ResponseOptionSet";

        /// <remarks />
        public const string RestrictToList = "RestrictToList";

        /// <remarks />
        public const string Resume = "Resume";

        /// <remarks />
        public const string Retain = "Retain";

        /// <remarks />
        public const string RevisedSessionTimeout = "RevisedSessionTimeout";

        /// <remarks />
        public const string RoleMappingRuleChangedAuditEventType = "RoleMappingRuleChangedAuditEventType";

        /// <remarks />
        public const string RoleName_Placeholder = "<RoleName>";

        /// <remarks />
        public const string RolePermissionType = "RolePermissionType";

        /// <remarks />
        public const string RoleSet = "RoleSet";

        /// <remarks />
        public const string RoleSetType = "RoleSetType";

        /// <remarks />
        public const string RoleType = "RoleType";

        /// <remarks />
        public const string RootFolder = "Root";

        /// <remarks />
        public const string RsaEncryptedSecret = "RsaEncryptedSecret";

        /// <remarks />
        public const string RsaMinApplicationCertificateType = "RsaMinApplicationCertificateType";

        /// <remarks />
        public const string RsaSha256ApplicationCertificateType = "RsaSha256ApplicationCertificateType";

        /// <remarks />
        public const string Running = "Running";

        /// <remarks />
        public const string RunningToHalted = "RunningToHalted";

        /// <remarks />
        public const string RunningToReady = "RunningToReady";

        /// <remarks />
        public const string RunningToSuspended = "RunningToSuspended";

        /// <remarks />
        public const string SafetyConditionClassType = "SafetyConditionClassType";

        /// <remarks />
        public const string SampledMonitoredItemsCount = "SampledMonitoredItemsCount";

        /// <remarks />
        public const string SamplingInterval = "SamplingInterval";

        /// <remarks />
        public const string SamplingIntervalDiagnostics = "SamplingIntervalDiagnostics";

        /// <remarks />
        public const string SamplingIntervalDiagnosticsArray = "SamplingIntervalDiagnosticsArray";

        /// <remarks />
        public const string SamplingIntervalDiagnosticsArrayType = "SamplingIntervalDiagnosticsArrayType";

        /// <remarks />
        public const string SamplingIntervalDiagnosticsDataType = "SamplingIntervalDiagnosticsDataType";

        /// <remarks />
        public const string SamplingIntervalDiagnosticsType = "SamplingIntervalDiagnosticsType";

        /// <remarks />
        public const string SamplingOffset = "SamplingOffset";

        /// <remarks />
        public const string SByte = "SByte";

        /// <remarks />
        public const string SecondsTillShutdown = "SecondsTillShutdown";

        /// <remarks />
        public const string SecureChannelId = "SecureChannelId";

        /// <remarks />
        public const string SecurityGroupFolderName_Placeholder = "<SecurityGroupFolderName>";

        /// <remarks />
        public const string SecurityGroupFolderType = "SecurityGroupFolderType";

        /// <remarks />
        public const string SecurityGroupId = "SecurityGroupId";

        /// <remarks />
        public const string SecurityGroupName_Placeholder = "<SecurityGroupName>";

        /// <remarks />
        public const string SecurityGroups = "SecurityGroups";

        /// <remarks />
        public const string SecurityGroupType = "SecurityGroupType";

        /// <remarks />
        public const string SecurityKeyServices = "SecurityKeyServices";

        /// <remarks />
        public const string SecurityMode = "SecurityMode";

        /// <remarks />
        public const string SecurityPolicyUri = "SecurityPolicyUri";

        /// <remarks />
        public const string SecurityRejectedRequestsCount = "SecurityRejectedRequestsCount";

        /// <remarks />
        public const string SecurityRejectedSessionCount = "SecurityRejectedSessionCount";

        /// <remarks />
        public const string SecurityTokenRequestType = "SecurityTokenRequestType";

        /// <remarks />
        public const string SelectedFields = "SelectedFields";

        /// <remarks />
        public const string SelectedResponse = "SelectedResponse";

        /// <remarks />
        public const string SelectionDescriptions = "SelectionDescriptions";

        /// <remarks />
        public const string SelectionListType = "SelectionListType";

        /// <remarks />
        public const string Selections = "Selections";

        /// <remarks />
        public const string SemanticChangeEventType = "SemanticChangeEventType";

        /// <remarks />
        public const string SemanticChangeStructureDataType = "SemanticChangeStructureDataType";

        /// <remarks />
        public const string Server = "Server";

        /// <remarks />
        public const string Server_ServerRedundancy_CurrentServerId = "CurrentServerId";

        /// <remarks />
        public const string Server_ServerRedundancy_RedundantServerArray = "RedundantServerArray";

        /// <remarks />
        public const string Server_ServerRedundancy_ServerNetworkGroups = "ServerNetworkGroups";

        /// <remarks />
        public const string Server_ServerRedundancy_ServerUriArray = "ServerUriArray";

        /// <remarks />
        public const string ServerArray = "ServerArray";

        /// <remarks />
        public const string ServerCapabilities = "ServerCapabilities";

        /// <remarks />
        public const string ServerCapabilitiesType = "ServerCapabilitiesType";

        /// <remarks />
        public const string ServerConfiguration = "ServerConfiguration";

        /// <remarks />
        public const string ServerConfigurationType = "ServerConfigurationType";

        /// <remarks />
        public const string ServerDiagnostics = "ServerDiagnostics";

        /// <remarks />
        public const string ServerDiagnosticsSummary = "ServerDiagnosticsSummary";

        /// <remarks />
        public const string ServerDiagnosticsSummaryDataType = "ServerDiagnosticsSummaryDataType";

        /// <remarks />
        public const string ServerDiagnosticsSummaryType = "ServerDiagnosticsSummaryType";

        /// <remarks />
        public const string ServerDiagnosticsType = "ServerDiagnosticsType";

        /// <remarks />
        public const string ServerId = "ServerId";

        /// <remarks />
        public const string ServerNetworkGroups = "ServerNetworkGroups";

        /// <remarks />
        public const string ServerOnNetwork = "ServerOnNetwork";

        /// <remarks />
        public const string ServerProfileArray = "ServerProfileArray";

        /// <remarks />
        public const string ServerRedundancy = "ServerRedundancy";

        /// <remarks />
        public const string ServerRedundancyType = "ServerRedundancyType";

        /// <remarks />
        public const string ServerState = "ServerState";

        /// <remarks />
        public const string ServerStatus = "ServerStatus";

        /// <remarks />
        public const string ServerStatusDataType = "ServerStatusDataType";

        /// <remarks />
        public const string ServerStatusType = "ServerStatusType";

        /// <remarks />
        public const string ServerTimestampSupported = "ServerTimestampSupported";

        /// <remarks />
        public const string ServerType = "ServerType";

        /// <remarks />
        public const string ServerUri = "ServerUri";

        /// <remarks />
        public const string ServerUriArray = "ServerUriArray";

        /// <remarks />
        public const string ServerVendorCapabilityType = "ServerVendorCapabilityType";

        /// <remarks />
        public const string ServerViewCount = "ServerViewCount";

        /// <remarks />
        public const string ServiceCertificate = "ServiceCertificate";

        /// <remarks />
        public const string ServiceCounterDataType = "ServiceCounterDataType";

        /// <remarks />
        public const string ServiceFault = "ServiceFault";

        /// <remarks />
        public const string ServiceLevel = "ServiceLevel";

        /// <remarks />
        public const string ServiceName_Placeholder = "<ServiceName>";

        /// <remarks />
        public const string ServiceStatus = "ServiceStatus";

        /// <remarks />
        public const string ServiceUri = "ServiceUri";

        /// <remarks />
        public const string SessionAbortCount = "SessionAbortCount";

        /// <remarks />
        public const string SessionAuthenticationToken = "SessionAuthenticationToken";

        /// <remarks />
        public const string SessionDiagnostics = "SessionDiagnostics";

        /// <remarks />
        public const string SessionDiagnosticsArray = "SessionDiagnosticsArray";

        /// <remarks />
        public const string SessionDiagnosticsArrayType = "SessionDiagnosticsArrayType";

        /// <remarks />
        public const string SessionDiagnosticsDataType = "SessionDiagnosticsDataType";

        /// <remarks />
        public const string SessionDiagnosticsObjectType = "SessionDiagnosticsObjectType";

        /// <remarks />
        public const string SessionDiagnosticsVariableType = "SessionDiagnosticsVariableType";

        /// <remarks />
        public const string SessionId = "SessionId";

        /// <remarks />
        public const string SessionlessInvokeRequestType = "SessionlessInvokeRequestType";

        /// <remarks />
        public const string SessionlessInvokeResponseType = "SessionlessInvokeResponseType";

        /// <remarks />
        public const string SessionName = "SessionName";

        /// <remarks />
        public const string SessionsDiagnosticsSummary = "SessionsDiagnosticsSummary";

        /// <remarks />
        public const string SessionsDiagnosticsSummaryType = "SessionsDiagnosticsSummaryType";

        /// <remarks />
        public const string SessionSecurityDiagnostics = "SessionSecurityDiagnostics";

        /// <remarks />
        public const string SessionSecurityDiagnosticsArray = "SessionSecurityDiagnosticsArray";

        /// <remarks />
        public const string SessionSecurityDiagnosticsArrayType = "SessionSecurityDiagnosticsArrayType";

        /// <remarks />
        public const string SessionSecurityDiagnosticsDataType = "SessionSecurityDiagnosticsDataType";

        /// <remarks />
        public const string SessionSecurityDiagnosticsType = "SessionSecurityDiagnosticsType";

        /// <remarks />
        public const string SessionTimeoutCount = "SessionTimeoutCount";

        /// <remarks />
        public const string SetMonitoringModeCount = "SetMonitoringModeCount";

        /// <remarks />
        public const string SetMonitoringModeRequest = "SetMonitoringModeRequest";

        /// <remarks />
        public const string SetMonitoringModeResponse = "SetMonitoringModeResponse";

        /// <remarks />
        public const string SetpointNode = "SetpointNode";

        /// <remarks />
        public const string SetPosition = "SetPosition";

        /// <remarks />
        public const string SetPublishingModeCount = "SetPublishingModeCount";

        /// <remarks />
        public const string SetPublishingModeRequest = "SetPublishingModeRequest";

        /// <remarks />
        public const string SetPublishingModeResponse = "SetPublishingModeResponse";

        /// <remarks />
        public const string SetSecurityKeys = "SetSecurityKeys";

        /// <remarks />
        public const string SetSubscriptionDurable = "SetSubscriptionDurable";

        /// <remarks />
        public const string SetTriggeringCount = "SetTriggeringCount";

        /// <remarks />
        public const string SetTriggeringRequest = "SetTriggeringRequest";

        /// <remarks />
        public const string SetTriggeringResponse = "SetTriggeringResponse";

        /// <remarks />
        public const string Severity = "Severity";

        /// <remarks />
        public const string ShelvedStateMachineType = "ShelvedStateMachineType";

        /// <remarks />
        public const string ShelvingState = "ShelvingState";

        /// <remarks />
        public const string ShelvingTime = "ShelvingTime";

        /// <remarks />
        public const string ShutdownReason = "ShutdownReason";

        /// <remarks />
        public const string SignatureData = "SignatureData";

        /// <remarks />
        public const string SignedSoftwareCertificate = "SignedSoftwareCertificate";

        /// <remarks />
        public const string Silence = "Silence";

        /// <remarks />
        public const string SilenceState = "SilenceState";

        /// <remarks />
        public const string SimpleAttributeOperand = "SimpleAttributeOperand";

        /// <remarks />
        public const string SimpleTypeDescription = "SimpleTypeDescription";

        /// <remarks />
        public const string Size = "Size";

        /// <remarks />
        public const string SoftwareCertificates = "SoftwareCertificates";

        /// <remarks />
        public const string SoftwareVersion = "SoftwareVersion";

        /// <remarks />
        public const string SourceAddress = "SourceAddress";

        /// <remarks />
        public const string SourceName = "SourceName";

        /// <remarks />
        public const string SourceNode = "SourceNode";

        /// <remarks />
        public const string SourceTimestamp = "SourceTimestamp";

        /// <remarks />
        public const string Speed = "Speed";

        /// <remarks />
        public const string SrClassId = "SrClassId";

        /// <remarks />
        public const string Start = "Start";

        /// <remarks />
        public const string StartOfArchive = "StartOfArchive";

        /// <remarks />
        public const string StartOfOnlineArchive = "StartOfOnlineArchive";

        /// <remarks />
        public const string StartTime = "StartTime";

        /// <remarks />
        public const string State = "State";

        /// <remarks />
        public const string StateMachineType = "StateMachineType";

        /// <remarks />
        public const string StateNumber = "StateNumber";

        /// <remarks />
        public const string StateType = "StateType";

        /// <remarks />
        public const string StateVariableType = "StateVariableType";

        /// <remarks />
        public const string StaticNodeIdTypes = "StaticNodeIdTypes";

        /// <remarks />
        public const string StaticNumericNodeIdRange = "StaticNumericNodeIdRange";

        /// <remarks />
        public const string StaticStringNodeIdPattern = "StaticStringNodeIdPattern";

        /// <remarks />
        public const string StatisticalConditionClassType = "StatisticalConditionClassType";

        /// <remarks />
        public const string Status = "Status";

        /// <remarks />
        public const string StatusChangeNotification = "StatusChangeNotification";

        /// <remarks />
        public const string StatusCode = "StatusCode";

        /// <remarks />
        public const string StatusCodeId = "StatusCodeId";

        /// <remarks />
        public const string StatusResult = "StatusResult";

        /// <remarks />
        public const string Stepped = "Stepped";

        /// <remarks />
        public const string StreamId = "StreamId";

        /// <remarks />
        public const string StreamName = "StreamName";

        /// <remarks />
        public const string Streams = "Streams";

        /// <remarks />
        public const string String = "String";

        /// <remarks />
        public const string Structure = "Structure";

        /// <remarks />
        public const string StructureDefinition = "StructureDefinition";

        /// <remarks />
        public const string StructureDescription = "StructureDescription";

        /// <remarks />
        public const string StructureField = "StructureField";

        /// <remarks />
        public const string StructureType = "StructureType";

        /// <remarks />
        public const string SubAliasNameCategories_Placeholder = "<SubAliasNameCategories>";

        /// <remarks />
        public const string SubError = "SubError";

        /// <remarks />
        public const string SubscribedDataSet = "SubscribedDataSet";

        /// <remarks />
        public const string SubscribedDataSetDataType = "SubscribedDataSetDataType";

        /// <remarks />
        public const string SubscribedDataSetMirrorDataType = "SubscribedDataSetMirrorDataType";

        /// <remarks />
        public const string SubscribedDataSetMirrorType = "SubscribedDataSetMirrorType";

        /// <remarks />
        public const string SubscribedDataSetType = "SubscribedDataSetType";

        /// <remarks />
        public const string SubscriptionAcknowledgement = "SubscriptionAcknowledgement";

        /// <remarks />
        public const string SubscriptionDiagnostics = "SubscriptionDiagnostics";

        /// <remarks />
        public const string SubscriptionDiagnosticsArray = "SubscriptionDiagnosticsArray";

        /// <remarks />
        public const string SubscriptionDiagnosticsArrayType = "SubscriptionDiagnosticsArrayType";

        /// <remarks />
        public const string SubscriptionDiagnosticsDataType = "SubscriptionDiagnosticsDataType";

        /// <remarks />
        public const string SubscriptionDiagnosticsType = "SubscriptionDiagnosticsType";

        /// <remarks />
        public const string SubscriptionId = "SubscriptionId";

        /// <remarks />
        public const string SupportedPrivateKeyFormats = "SupportedPrivateKeyFormats";

        /// <remarks />
        public const string SupportedTransportProfiles = "SupportedTransportProfiles";

        /// <remarks />
        public const string Suppress = "Suppress";

        /// <remarks />
        public const string SuppressedOrShelved = "SuppressedOrShelved";

        /// <remarks />
        public const string SuppressedState = "SuppressedState";

        /// <remarks />
        public const string Suspend = "Suspend";

        /// <remarks />
        public const string Suspended = "Suspended";

        /// <remarks />
        public const string SuspendedToHalted = "SuspendedToHalted";

        /// <remarks />
        public const string SuspendedToReady = "SuspendedToReady";

        /// <remarks />
        public const string SuspendedToRunning = "SuspendedToRunning";

        /// <remarks />
        public const string SystemConditionClassType = "SystemConditionClassType";

        /// <remarks />
        public const string SystemDiagnosticAlarmType = "SystemDiagnosticAlarmType";

        /// <remarks />
        public const string SystemEventType = "SystemEventType";

        /// <remarks />
        public const string SystemOffNormalAlarmType = "SystemOffNormalAlarmType";

        /// <remarks />
        public const string SystemState = "SystemState";

        /// <remarks />
        public const string SystemStatusChangeEventType = "SystemStatusChangeEventType";

        /// <remarks />
        public const string TagVariables = "TagVariables";

        /// <remarks />
        public const string TalkerStatus = "TalkerStatus";

        /// <remarks />
        public const string TalkerStreams = "TalkerStreams";

        /// <remarks />
        public const string TargetValueNode = "TargetValueNode";

        /// <remarks />
        public const string TargetVariables = "TargetVariables";

        /// <remarks />
        public const string TargetVariablesDataType = "TargetVariablesDataType";

        /// <remarks />
        public const string TargetVariablesType = "TargetVariablesType";

        /// <remarks />
        public const string TemporaryFileTransferType = "TemporaryFileTransferType";

        /// <remarks />
        public const string TestingConditionClassType = "TestingConditionClassType";

        /// <remarks />
        public const string ThreeDCartesianCoordinates = "3DCartesianCoordinates";

        /// <remarks />
        public const string ThreeDCartesianCoordinatesType = "3DCartesianCoordinatesType";

        /// <remarks />
        public const string ThreeDFrame = "3DFrame";

        /// <remarks />
        public const string ThreeDFrameType = "3DFrameType";

        /// <remarks />
        public const string ThreeDOrientation = "3DOrientation";

        /// <remarks />
        public const string ThreeDOrientationType = "3DOrientationType";

        /// <remarks />
        public const string ThreeDVector = "3DVector";

        /// <remarks />
        public const string ThreeDVectorType = "3DVectorType";

        /// <remarks />
        public const string Time = "Time";

        /// <remarks />
        public const string TimeAwareOffset = "TimeAwareOffset";

        /// <remarks />
        public const string TimedShelve = "TimedShelve";

        /// <remarks />
        public const string TimedShelved = "TimedShelved";

        /// <remarks />
        public const string TimedShelvedToOneShotShelved = "TimedShelvedToOneShotShelved";

        /// <remarks />
        public const string TimedShelvedToUnshelved = "TimedShelvedToUnshelved";

        /// <remarks />
        public const string TimeFirstChange = "TimeFirstChange";

        /// <remarks />
        public const string TimestampsToReturn = "TimestampsToReturn";

        /// <remarks />
        public const string TimeString = "TimeString";

        /// <remarks />
        public const string TimeZoneDataType = "TimeZoneDataType";

        /// <remarks />
        public const string Title = "Title";

        /// <remarks />
        public const string Tolerance = "Tolerance";

        /// <remarks />
        public const string Topics = "Topics";

        /// <remarks />
        public const string ToState = "ToState";

        /// <remarks />
        public const string TotalError = "TotalError";

        /// <remarks />
        public const string TotalInformation = "TotalInformation";

        /// <remarks />
        public const string TotalRequestCount = "TotalRequestCount";

        /// <remarks />
        public const string TrainingConditionClassType = "TrainingConditionClassType";

        /// <remarks />
        public const string TransferredToAltClientCount = "TransferredToAltClientCount";

        /// <remarks />
        public const string TransferredToSameClientCount = "TransferredToSameClientCount";

        /// <remarks />
        public const string TransferRequestCount = "TransferRequestCount";

        /// <remarks />
        public const string TransferResult = "TransferResult";

        /// <remarks />
        public const string TransferState_Placeholder = "<TransferState>";

        /// <remarks />
        public const string TransferSubscriptionsCount = "TransferSubscriptionsCount";

        /// <remarks />
        public const string TransferSubscriptionsRequest = "TransferSubscriptionsRequest";

        /// <remarks />
        public const string TransferSubscriptionsResponse = "TransferSubscriptionsResponse";

        /// <remarks />
        public const string Transition = "Transition";

        /// <remarks />
        public const string TransitionEventType = "TransitionEventType";

        /// <remarks />
        public const string TransitionNumber = "TransitionNumber";

        /// <remarks />
        public const string TransitionTime = "TransitionTime";

        /// <remarks />
        public const string TransitionType = "TransitionType";

        /// <remarks />
        public const string TransitionVariableType = "TransitionVariableType";

        /// <remarks />
        public const string TranslateBrowsePathsToNodeIdsCount = "TranslateBrowsePathsToNodeIdsCount";

        /// <remarks />
        public const string TranslateBrowsePathsToNodeIdsRequest = "TranslateBrowsePathsToNodeIdsRequest";

        /// <remarks />
        public const string TranslateBrowsePathsToNodeIdsResponse = "TranslateBrowsePathsToNodeIdsResponse";

        /// <remarks />
        public const string TransparentRedundancyType = "TransparentRedundancyType";

        /// <remarks />
        public const string TransportProfileUri = "TransportProfileUri";

        /// <remarks />
        public const string TransportProtocol = "TransportProtocol";

        /// <remarks />
        public const string TransportSettings = "TransportSettings";

        /// <remarks />
        public const string TreatUncertainAsBad = "TreatUncertainAsBad";

        /// <remarks />
        public const string TripAlarmType = "TripAlarmType";

        /// <remarks />
        public const string TrueState = "TrueState";

        /// <remarks />
        public const string TrustList = "TrustList";

        /// <remarks />
        public const string TrustListDataType = "TrustListDataType";

        /// <remarks />
        public const string TrustListId = "TrustListId";

        /// <remarks />
        public const string TrustListMasks = "TrustListMasks";

        /// <remarks />
        public const string TrustListOutOfDate = "TrustListOutOfDate";

        /// <remarks />
        public const string TrustListOutOfDateAlarmType = "TrustListOutOfDateAlarmType";

        /// <remarks />
        public const string TrustListType = "TrustListType";

        /// <remarks />
        public const string TrustListUpdatedAuditEventType = "TrustListUpdatedAuditEventType";

        /// <remarks />
        public const string TsnFailureCode = "TsnFailureCode";

        /// <remarks />
        public const string TsnListenerStatus = "TsnListenerStatus";

        /// <remarks />
        public const string TsnStreamState = "TsnStreamState";

        /// <remarks />
        public const string TsnTalkerStatus = "TsnTalkerStatus";

        /// <remarks />
        public const string TwoStateDiscreteType = "TwoStateDiscreteType";

        /// <remarks />
        public const string TwoStateVariableType = "TwoStateVariableType";

        /// <remarks />
        public const string TypeNode = "TypeNode";

        /// <remarks />
        public const string TypesFolder = "Types";

        /// <remarks />
        public const string UABinaryFileDataType = "UABinaryFileDataType";

        /// <remarks />
        public const string UadpDataSetMessageContentMask = "UadpDataSetMessageContentMask";

        /// <remarks />
        public const string UadpDataSetReaderMessageDataType = "UadpDataSetReaderMessageDataType";

        /// <remarks />
        public const string UadpDataSetReaderMessageType = "UadpDataSetReaderMessageType";

        /// <remarks />
        public const string UadpDataSetWriterMessageDataType = "UadpDataSetWriterMessageDataType";

        /// <remarks />
        public const string UadpDataSetWriterMessageType = "UadpDataSetWriterMessageType";

        /// <remarks />
        public const string UadpNetworkMessageContentMask = "UadpNetworkMessageContentMask";

        /// <remarks />
        public const string UadpWriterGroupMessageDataType = "UadpWriterGroupMessageDataType";

        /// <remarks />
        public const string UadpWriterGroupMessageType = "UadpWriterGroupMessageType";

        /// <remarks />
        public const string UInt16 = "UInt16";

        /// <remarks />
        public const string UInt32 = "UInt32";

        /// <remarks />
        public const string UInt64 = "UInt64";

        /// <remarks />
        public const string UInteger = "UInteger";

        /// <remarks />
        public const string UnacknowledgedMessageCount = "UnacknowledgedMessageCount";

        /// <remarks />
        public const string UnauthorizedRequestCount = "UnauthorizedRequestCount";

        /// <remarks />
        public const string Union = "Union";

        /// <remarks />
        public const string UnregisterNodesCount = "UnregisterNodesCount";

        /// <remarks />
        public const string UnregisterNodesRequest = "UnregisterNodesRequest";

        /// <remarks />
        public const string UnregisterNodesResponse = "UnregisterNodesResponse";

        /// <remarks />
        public const string Unshelve = "Unshelve";

        /// <remarks />
        public const string Unshelved = "Unshelved";

        /// <remarks />
        public const string UnshelvedToOneShotShelved = "UnshelvedToOneShotShelved";

        /// <remarks />
        public const string UnshelvedToTimedShelved = "UnshelvedToTimedShelved";

        /// <remarks />
        public const string UnshelveTime = "UnshelveTime";

        /// <remarks />
        public const string UnsignedRationalNumber = "UnsignedRationalNumber";

        /// <remarks />
        public const string Unsuppress = "Unsuppress";

        /// <remarks />
        public const string UpdateCertificate = "UpdateCertificate";

        /// <remarks />
        public const string UpdateCredential = "UpdateCredential";

        /// <remarks />
        public const string UpdateDataCapability = "UpdateDataCapability";

        /// <remarks />
        public const string UpdateDataDetails = "UpdateDataDetails";

        /// <remarks />
        public const string UpdatedNode = "UpdatedNode";

        /// <remarks />
        public const string UpdateEventCapability = "UpdateEventCapability";

        /// <remarks />
        public const string UpdateEventDetails = "UpdateEventDetails";

        /// <remarks />
        public const string UpdateFrequency = "UpdateFrequency";

        /// <remarks />
        public const string UpdateStructureDataDetails = "UpdateStructureDataDetails";

        /// <remarks />
        public const string UriDictionaryEntryType = "UriDictionaryEntryType";

        /// <remarks />
        public const string UrisVersion = "UrisVersion";

        /// <remarks />
        public const string Url = "Url";

        /// <remarks />
        public const string UserCredentialCertificateType = "UserCredentialCertificateType";

        /// <remarks />
        public const string UserIdentityToken = "UserIdentityToken";

        /// <remarks />
        public const string UserNameIdentityToken = "UserNameIdentityToken";

        /// <remarks />
        public const string UserTokenPolicy = "UserTokenPolicy";

        /// <remarks />
        public const string UserTokenType = "UserTokenType";

        /// <remarks />
        public const string UserWritable = "UserWritable";

        /// <remarks />
        public const string UseSlopedExtrapolation = "UseSlopedExtrapolation";

        /// <remarks />
        public const string UtcTime = "UtcTime";

        /// <remarks />
        public const string ValueAsDictionaryEntries = "ValueAsDictionaryEntries";

        /// <remarks />
        public const string ValueAsText = "ValueAsText";

        /// <remarks />
        public const string ValuePrecision = "ValuePrecision";

        /// <remarks />
        public const string VariableAttributes = "VariableAttributes";

        /// <remarks />
        public const string VariableNode = "VariableNode";

        /// <remarks />
        public const string VariableTypeAttributes = "VariableTypeAttributes";

        /// <remarks />
        public const string VariableTypeNode = "VariableTypeNode";

        /// <remarks />
        public const string VariableTypesFolder = "VariableTypes";

        /// <remarks />
        public const string Vector = "Vector";

        /// <remarks />
        public const string VectorType = "VectorType";

        /// <remarks />
        public const string VectorUnit = "VectorUnit";

        /// <remarks />
        public const string VendorCapability_Placeholder = "<VendorCapability>";

        /// <remarks />
        public const string VendorServerInfo = "VendorServerInfo";

        /// <remarks />
        public const string VendorServerInfoType = "VendorServerInfoType";

        /// <remarks />
        public const string VersionId = "VersionId";

        /// <remarks />
        public const string VersionTime = "VersionTime";

        /// <remarks />
        public const string Vid = "Vid";

        /// <remarks />
        public const string ViewAttributes = "ViewAttributes";

        /// <remarks />
        public const string ViewDescription = "ViewDescription";

        /// <remarks />
        public const string ViewNode = "ViewNode";

        /// <remarks />
        public const string ViewsFolder = "Views";

        /// <remarks />
        public const string ViewVersion = "ViewVersion";

        /// <remarks />
        public const string VlanId = "VlanId";

        /// <remarks />
        public const string VlanTagCapable = "VlanTagCapable";

        /// <remarks />
        public const string WellKnownRole_Anonymous = "Anonymous";

        /// <remarks />
        public const string WellKnownRole_AuthenticatedUser = "AuthenticatedUser";

        /// <remarks />
        public const string WellKnownRole_ConfigureAdmin = "ConfigureAdmin";

        /// <remarks />
        public const string WellKnownRole_Engineer = "Engineer";

        /// <remarks />
        public const string WellKnownRole_Observer = "Observer";

        /// <remarks />
        public const string WellKnownRole_Operator = "Operator";

        /// <remarks />
        public const string WellKnownRole_SecurityAdmin = "SecurityAdmin";

        /// <remarks />
        public const string WellKnownRole_Supervisor = "Supervisor";

        /// <remarks />
        public const string Writable = "Writable";

        /// <remarks />
        public const string Write = "Write";

        /// <remarks />
        public const string WriteCount = "WriteCount";

        /// <remarks />
        public const string WriteRequest = "WriteRequest";

        /// <remarks />
        public const string WriteResponse = "WriteResponse";

        /// <remarks />
        public const string WriterGroupDataType = "WriterGroupDataType";

        /// <remarks />
        public const string WriterGroupId = "WriterGroupId";

        /// <remarks />
        public const string WriterGroupMessageDataType = "WriterGroupMessageDataType";

        /// <remarks />
        public const string WriterGroupMessageType = "WriterGroupMessageType";

        /// <remarks />
        public const string WriterGroupName_Placeholder = "<WriterGroupName>";

        /// <remarks />
        public const string WriterGroupTransportDataType = "WriterGroupTransportDataType";

        /// <remarks />
        public const string WriterGroupTransportType = "WriterGroupTransportType";

        /// <remarks />
        public const string WriterGroupType = "WriterGroupType";

        /// <remarks />
        public const string WriteValue = "WriteValue";

        /// <remarks />
        public const string X = "X";

        /// <remarks />
        public const string X509IdentityToken = "X509IdentityToken";

        /// <remarks />
        public const string XAxisDefinition = "XAxisDefinition";

        /// <remarks />
        public const string XmlElement = "XmlElement";

        /// <remarks />
        public const string XmlSchema_TypeSystem = "XML Schema";

        /// <remarks />
        public const string XVType = "XVType";

        /// <remarks />
        public const string XYArrayItemType = "XYArrayItemType";

        /// <remarks />
        public const string Y = "Y";

        /// <remarks />
        public const string YArrayItemType = "YArrayItemType";

        /// <remarks />
        public const string YAxisDefinition = "YAxisDefinition";

        /// <remarks />
        public const string Z = "Z";

        /// <remarks />
        public const string ZAxisDefinition = "ZAxisDefinition";
    }
    #endregion

    #region Namespace Declarations
    /// <remarks />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the OpcUaXsd namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUaXsd = "http://opcfoundation.org/UA/2008/02/Types.xsd";
    }
    #endregion
}
