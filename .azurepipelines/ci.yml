#
# Build all .Net Core projects on all platforms
#
parameters:
  buildoption: ''
  framework: netcoreapp3.1
  jobnamesuffix: ''
  agents: '@{}'
jobs:
- job: buildprep${{ parameters.jobnamesuffix }}
  displayName: Prepare Build Jobs
  pool:
    vmImage: 'windows-2019'
  variables:
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  steps:
  - task: PowerShell@2
    name: buildmatrix
    displayName: Prepare Solutions
    inputs:
      targetType: filePath
      filePath: ./.azurepipelines/get-matrix.ps1
      arguments: -FileName azure-pipelines.yml -AgentTable ${{ parameters.agents }}
- job: buildall${{ parameters.jobnamesuffix }}
  displayName: Build
  dependsOn: buildprep${{ parameters.jobnamesuffix }}
  strategy:
    matrix: $[dependencies.buildprep${{ parameters.jobnamesuffix }}.outputs['buildmatrix.jobMatrix'] ]
  pool:
    vmImage: $(poolImage)
  steps:
  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: '>=5.8.x'
  - task: PowerShell@2
    displayName: Versioning
    inputs:
      targetType: filePath
      filePath: ./.azurepipelines/set-version.ps1
  - task: DotNetCoreCLI@2
    displayName: Release Build
    inputs:
      command: build
      projects: '**/@(Console|NetCore)*.csproj'
      arguments: '--framework ${{ parameters.framework }} --configuration Release ${{ parameters.buildoption }} /p:RCS=true'
  - task: DotNetCoreCLI@2
    displayName: Release Pack 
    condition: eq(variables['poolImage'], 'windows-2022')
    inputs:
      command: pack
      packagesToPack:  '**/Opc.Ua.*.csproj'
      configuration: Release
      configurationToPack: Release
  - task: DotNetCoreCLI@2
    displayName: Debug Build
    inputs:
      command: build
      projects: '**/@(Console|NetCore)*.csproj'
      arguments: '--framework ${{ parameters.framework }} --configuration Debug ${{ parameters.buildoption }} /p:RCS=true'
  - task: DotNetCoreCLI@2
    displayName: Debug Pack 
    condition: eq(variables['poolImage'], 'windows-2022')
    inputs:
      command: pack
      packagesToPack:  '**/Opc.Ua.*.csproj'
      configuration: Debug
      configurationToPack: Debug
