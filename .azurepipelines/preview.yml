#
# Build preview packages for internal feed
#
parameters:
  upload: false
jobs:
- job: buildnuget
  displayName: Build Nuget Preview Packages
  pool:
    vmImage: 'windows-2019'
  variables:
  - group: codesign
  - name: msbuildversion
    value: '/p:Version=$(NUGETVERSION) /p:AssemblyVersion=$(NUGETVERSION) /p:FileVersion=$(NUGETVERSION)'
  - name: msbuildsign
    value: '/p:AssemblyOriginatorKeyFile=$(strongnamefile.secureFilePath) /p:SignAssembly=true'
  - name: nugetpreviewversion
    value: '$(NUGETVERSION)-$(Build.BuildNumber)-$(Build.SourceBranchName)-preview'
  steps:
  - task: DownloadSecureFile@1
    name: strongnamefile
    displayName: 'Download Strong Name Key'
    inputs:
      secureFile: 'OPCFoundation.NetStandard.Key.snk'
  - task: DownloadSecureFile@1
    name: strongnamefile
    displayName: 'Download NugetKeyVaultSignTool'
    inputs:
      secureFile: 'NuGetKeyVaultSignTool.3.0.44-g4b67deaa33.nupkg'
  - task: DotNetCoreCLI@2
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'install --global azuresigntool'
    displayName: Install AzureSignTool
  - task: DotNetCoreCLI@2
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'install -v diag --add-source . --version 3.0.44-g4b67deaa33 --tool-path . NuGetKeyVaultSignTool'
    displayName: Install NuGetKeyVaultSignTool
  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: '>=5.4.x'
  - task: DotNetCoreCLI@2
    displayName: Release Restore
    inputs:
      command: restore
      projects: '**/Opc.Ua.*.csproj'
      arguments: '--configuration Release'
  - task: DotNetCoreCLI@2
    displayName: Release Build
    inputs:
      command: build
      projects: '**/Opc.Ua.*.csproj'
      arguments: '--no-restore --configuration Release ${{ variables.msbuildversion }} ${{ variables.msbuildsign }}'
  - task: DotNetCoreCLI@2
    displayName: Debug Build
    inputs:
      command: build
      projects: '**/Opc.Ua.*.csproj'
      arguments: '--no-restore --configuration Debug ${{ variables.msbuildversion }} ${{ variables.msbuildsign }}'
  - task: CmdLine@2
    displayName: 'List of files to sign'
    inputs:
      script: |
        dir /b /s Opc.Ua.*.dll > .\signlist.txt
        type .\signlist.txt
  - task: CmdLine@2
    displayName: 'Sign Assemblies'
    inputs:
      script: |
        azuresigntool sign -du "$(SigningURL)" -kvu "$(SigningVaultURL)" -kvi "$(SigningClientId)" -tr http://timestamp.digicert.com -td sha384 -kvs "$(SigningClientSecret)" -kvc "$(SigningCertName)" -v -ifl .azurepipelines/signlist.txt
  - task: NuGetCommand@2
    displayName: Pack Nuget Preview
    continueOnError: true
    inputs:
      command: 'pack'
      packagesToPack: '**/*.nuspec'
      versioningScheme: 'byEnvVar'
      versionEnvVar: 'nugetpreviewversion'
  - task: CmdLine@2
    displayName: 'List of nuget packages to sign'
    inputs:
      script: |
        dir /b /s $(Build.ArtifactStagingDirectory)\OPCFoundation.*.nupkg > .\nupkglist.txt
        type .\nupkglist.txt
  - task: CmdLine@2
    displayName: Sign Nuget packages
    continueOnError: true
    inputs:
      script: |
        NuGetKeyVaultSignTool sign **/OPCFoundation.*.nupkg --file-digest sha256 --timestamp-rfc3161 http://timestamp.digicert.com --timestamp-digest sha256 --azure-key-vault-url "$(SigningVaultURL)" --azure-key-vault-client-id "$(SigningClientId)" --azure-key-vault-tenant-id "$(SigningTenantId)" --azure-key-vault-client-secret "$(SigningClientSecret)" --azure-key-vault-certificate "$(SigningCertName)" 
  - task: NuGetCommand@2
    displayName: Upload Nuget Preview
    condition: ${{ variables.upload }}
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '$(VSTSFEED)'
      allowPackageConflicts: true