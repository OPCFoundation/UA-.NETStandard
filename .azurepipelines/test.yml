#
# Test all .Net Core projects on all platforms
#
parameters:
  configuration: 'Release'
  framework: net6.0
  agents: '@{}'
  jobnamesuffix: ''
  customtestarget: ''
jobs:
- job: testprep${{ parameters.jobnamesuffix }}
  displayName: Prepare Test Jobs ${{ parameters.configuration }} (${{ parameters.framework }})
  pool:
    vmImage: 'windows-2022'
  variables:
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  steps:
  - task: PowerShell@2
    name: testmatrix
    displayName: Prepare Tests
    inputs:
      targetType: filePath
      filePath: ./.azurepipelines/get-matrix.ps1
      arguments: -FileName *.Tests.csproj -AgentTable ${{ parameters.agents }}
- job: testall${{ parameters.jobnamesuffix }}
  displayName: Tests (${{ parameters.framework }})
  dependsOn: testprep${{ parameters.jobnamesuffix }}
  timeoutInMinutes: 120
  strategy:
    matrix: $[dependencies.testprep${{ parameters.jobnamesuffix }}.outputs['testmatrix.jobMatrix'] ]
  variables:
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    CustomTestTarget: ${{ parameters.customtestarget }}
    ${{ if eq( parameters.customtestarget, '' ) }}: 
      DotCliCommandline: '--framework ${{ parameters.framework }}'
    ${{ else }}: 
      DotCliCommandline: '/p:CustomTestTarget=${{ parameters.customtestarget }}'
  pool:
    vmImage: $(poolImage)
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 6.0'
    condition: eq('${{parameters.framework}}', 'net6.0')
    inputs:
      packageType: 'sdk'
      version: '6.0.x'
  - task: UseDotNet@2
    displayName: 'Install .NET 8.0'
    inputs:
      packageType: 'sdk'
      version: '8.0.x'
  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: '>=5.8.x'
  - task: PowerShell@2
    displayName: Versioning
    inputs:
      targetType: filePath
      filePath: ./.azurepipelines/set-version.ps1
  - task: DotNetCoreCLI@2
    displayName: Restore ${{ parameters.configuration }}
    inputs:
      command: restore
      projects: $(file)
      arguments: '${{ variables.DotCliCommandline }} --configuration ${{ parameters.configuration }}'
  - task: DotNetCoreCLI@2
    displayName: Test ${{ parameters.configuration }}
    timeoutInMinutes: 30
    inputs:
      command: test
      projects: $(file)
      arguments: '--no-restore ${{ variables.DotCliCommandline }} --configuration ${{ parameters.configuration }}'
