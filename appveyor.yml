
#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.4.360.{build}-{branch}


# branches to build
branches:
  # blacklist
  except:
    - gh-pages

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: c:\projects\UA-.NetStandard

# set clone depth
clone_depth: 5                      # clone entire repository history if not defined

environment:
  matrix:
  - solution_name: "UA Core Library.sln"
    test_name: "Tests/Opc.Ua.Core.Tests/Opc.Ua.Core.Tests.csproj"
    param: ""
  - solution_name: "UA-NetStandard.sln"
    test_name: "Tests/Opc.Ua.Client.ComplexTypes.Tests/Opc.Ua.Client.ComplexTypes.Tests.csproj"
    param: ""
  - solution_name: "UA-NetStandard.sln"
    test_name: "void"
    param: "/p:NoHttps=true"

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: false     # set this flag to immediately finish build once one of the jobs fails.

# scripts to run before build
before_build:
  - nuget restore "%solution_name%"

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:
  - msbuild "%solution_name%" %param% /p:Configuration=Debug /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  - msbuild "%solution_name%" %param% /p:Configuration=Release /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

# test 
test:

test_script:
  - if NOT "%test_name%" == "void" ( dotnet test "%test_name%" )
# TODO nunit3-console v3.6 cannot load csproj, enable when newer version is available
#  - if NOT "%test_name%" == "void" ( nunit3-console "%test_name%" --result=./myresults.xml;format=AppVeyor )
#  - $wc = New-Object 'System.Net.WebClient'
#  - $wc.UploadFile("https://ci.appveyor.com/api/testresults/nunit3/$($env:APPVEYOR_JOB_ID)", (Resolve-Path ./myresults.xml))

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:
  - echo on_success

# on build failure
on_failure:
  - echo on_failure

# after build failure or success
on_finish:
  - echo on_finish


